This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 07:14:36,189 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 07:14:36,190 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 07:14:36,202 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 07:14:36,203 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 07:14:36,203 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 07:14:36,204 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 07:14:36,206 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 07:14:36,207 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 07:14:36,208 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 07:14:36,209 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 07:14:36,209 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 07:14:36,210 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 07:14:36,211 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 07:14:36,212 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 07:14:36,212 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 07:14:36,213 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 07:14:36,214 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 07:14:36,215 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 07:14:36,216 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 07:14:36,217 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 07:14:36,218 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 07:14:36,220 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 07:14:36,220 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 07:14:36,220 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 07:14:36,221 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 07:14:36,221 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 07:14:36,222 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 07:14:36,222 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 07:14:36,222 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 07:14:36,222 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 07:14:36,223 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 07:14:36,223 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 07:14:36,224 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 07:14:36,225 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 07:14:36,225 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 07:14:36,225 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 07:14:36,226 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 07:14:36,226 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 07:14:36,226 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 07:14:36,227 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 07:14:36,227 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 07:14:36,235 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 07:14:36,235 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 07:14:36,236 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 07:14:36,236 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 07:14:36,236 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 07:14:36,236 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 07:14:36,236 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 07:14:36,236 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 07:14:36,236 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 07:14:36,237 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 07:14:36,237 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 07:14:36,237 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 07:14:36,238 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 07:14:36,238 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 07:14:36,238 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 07:14:36,238 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 07:14:36,238 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 07:14:36,238 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 07:14:36,238 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 07:14:36,262 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 07:14:36,274 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 07:14:36,277 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 07:14:36,278 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 07:14:36,279 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 07:14:36,279 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl
[2020-11-25 07:14:36,279 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl'
[2020-11-25 07:14:36,366 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 07:14:36,367 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 07:14:36,368 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 07:14:36,368 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 07:14:36,368 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 07:14:36,385 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,386 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,418 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,419 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,439 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,455 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,463 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,472 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 07:14:36,473 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 07:14:36,473 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 07:14:36,475 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 07:14:36,479 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/1) ...
[2020-11-25 07:14:36,498 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 07:14:36,504 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 07:14:36,511 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 07:14:36,518 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( sender_s377!=recipient_s377 && ( ( amount_s377>_balances_ERC20[this][sender_s377] || amount_s377>_allowances_ERC20[this][sender_s377][msg.sender] ) || ( _balances_ERC20[this][recipient_s377] + amount_s377 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && amount_s377>=0 ) && amount_s377<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s377]>=0 ) && _balances_ERC20[this][recipient_s377]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s377]>=0 ) && _balances_ERC20[this][sender_s377]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s377][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s377][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[amount_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPGT,IdentifierExpression[amount_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[amount_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s377,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 07:14:36,524 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), from != to && (value > _balances_ERC20[this][from] || value > _allowances_ERC20[this][from][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transferFrom)))
[2020-11-25 07:14:36,524 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(fail_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 07:14:36,534 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:14:36 PropertyContainer
[2020-11-25 07:14:36,534 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 07:14:36,535 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 07:14:36,535 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 07:14:36,535 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 07:14:36,536 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/2) ...
[2020-11-25 07:14:36,537 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 07:14:36,537 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 07:14:36,557 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:14:36" (2/2) ...
[2020-11-25 07:14:36,557 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 07:14:36,557 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 07:14:36,557 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 07:14:36,557 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 07:14:36,558 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/2) ...
[2020-11-25 07:14:36,609 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 07:14:36,609 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:14:36,609 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 07:14:36,609 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 07:14:36,609 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 07:14:36,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,610 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,611 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,611 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,611 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,611 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:14:36,612 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 07:14:36,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 07:14:36,612 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20
[2020-11-25 07:14:36,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20
[2020-11-25 07:14:36,612 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20
[2020-11-25 07:14:36,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20
[2020-11-25 07:14:36,612 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20
[2020-11-25 07:14:36,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20
[2020-11-25 07:14:36,612 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 07:14:36,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 07:14:36,613 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 07:14:36,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 07:14:36,613 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 07:14:36,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 07:14:36,613 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 07:14:36,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 07:14:36,613 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 07:14:36,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 07:14:36,613 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:14:36,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 07:14:36,613 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:14:36,614 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:14:36,614 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable_NoBaseCtor__success
[2020-11-25 07:14:36,614 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable
[2020-11-25 07:14:36,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure checkOwner_MultOwnable__success
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure checkNewOwner~address_MultOwnable__success
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_MultOwnable
[2020-11-25 07:14:36,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_MultOwnable
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwners_MultOwnable
[2020-11-25 07:14:36,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwners_MultOwnable
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwnerShip~address_MultOwnable
[2020-11-25 07:14:36,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwnerShip~address_MultOwnable
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure _addOwnerShip~address_MultOwnable__success
[2020-11-25 07:14:36,615 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken_NoBaseCtor__success
[2020-11-25 07:14:36,616 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken
[2020-11-25 07:14:36,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken
[2020-11-25 07:14:36,616 INFO  L130     BoogieDeclarations]: Found specification of procedure contractMint~address~uint256_TulipToken
[2020-11-25 07:14:36,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractMint~address~uint256_TulipToken
[2020-11-25 07:14:36,616 INFO  L130     BoogieDeclarations]: Found specification of procedure contractBurn~address~uint256_TulipToken
[2020-11-25 07:14:36,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractBurn~address~uint256_TulipToken
[2020-11-25 07:14:36,616 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwner~address_TulipToken
[2020-11-25 07:14:36,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwner~address_TulipToken
[2020-11-25 07:14:36,616 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_TulipToken
[2020-11-25 07:14:36,616 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_TulipToken
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwner_TulipToken
[2020-11-25 07:14:36,617 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwner_TulipToken
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure isAnOwner_pre__success
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 07:14:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MultOwnable
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MultOwnable
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TulipToken
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:14:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:14:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20__success
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20__fail
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20__success
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20__fail
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20__success
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20__fail
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 07:14:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:14:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable_NoBaseCtor__fail
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable__success
[2020-11-25 07:14:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure MultOwnable_MultOwnable__fail
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure checkOwner_MultOwnable__fail
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure checkNewOwner~address_MultOwnable__fail
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_MultOwnable__success
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwnership_MultOwnable__fail
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwners_MultOwnable__success
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwners_MultOwnable__fail
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwnerShip~address_MultOwnable__success
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:14:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure _addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken_NoBaseCtor__fail
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken__success
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure TulipToken_TulipToken__fail
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure contractMint~address~uint256_TulipToken__success
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure contractMint~address~uint256_TulipToken__fail
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure contractBurn~address~uint256_TulipToken__success
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure contractBurn~address~uint256_TulipToken__fail
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwner~address_TulipToken__success
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure addOwner~address_TulipToken__fail
[2020-11-25 07:14:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_TulipToken__success
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure getOwner_TulipToken__fail
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwner_TulipToken__success
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceOwner_TulipToken__fail
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 07:14:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure isAnOwner_pre__fail
[2020-11-25 07:14:36,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 07:14:36,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 07:14:36,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20__fail
[2020-11-25 07:14:36,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20__success
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20__fail
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20__success
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20__fail
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20__success
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 07:14:36,628 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 07:14:36,629 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable_NoBaseCtor__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable_NoBaseCtor__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure MultOwnable_MultOwnable__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkOwner_MultOwnable__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkOwner_MultOwnable__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkNewOwner~address_MultOwnable__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkNewOwner~address_MultOwnable__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_MultOwnable__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwnership_MultOwnable__success
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwners_MultOwnable__fail
[2020-11-25 07:14:36,630 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwners_MultOwnable__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwnerShip~address_MultOwnable__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addOwnerShip~address_MultOwnable__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addOwnerShip~address_MultOwnable__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken_NoBaseCtor__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken_NoBaseCtor__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure TulipToken_TulipToken__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractMint~address~uint256_TulipToken__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractMint~address~uint256_TulipToken__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractBurn~address~uint256_TulipToken__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure contractBurn~address~uint256_TulipToken__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwner~address_TulipToken__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure addOwner~address_TulipToken__success
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_TulipToken__fail
[2020-11-25 07:14:36,631 INFO  L138     BoogieDeclarations]: Found implementation of procedure getOwner_TulipToken__success
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwner_TulipToken__fail
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceOwner_TulipToken__success
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAnOwner_pre__fail
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure isAnOwner_pre__success
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 07:14:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MultOwnable
[2020-11-25 07:14:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MultOwnable
[2020-11-25 07:14:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TulipToken
[2020-11-25 07:14:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 07:14:36,633 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 07:14:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 07:14:36,985 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:14:36,986 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 07:14:37,317 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 07:14:37,318 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 07:14:37,319 INFO  L202        PluginConnector]: Adding new model TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:14:37 BoogieIcfgContainer
[2020-11-25 07:14:37,320 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:14:36" (2/2) ...
[2020-11-25 07:14:37,320 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 07:14:37,320 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@67b3e0c8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:14:37, skipping insertion in model container
[2020-11-25 07:14:37,320 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 07:14:37,320 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 07:14:37,320 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 07:14:37,322 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 07:14:37,322 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/3) ...
[2020-11-25 07:14:37,323 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@561a76d8 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:14:37, skipping insertion in model container
[2020-11-25 07:14:37,323 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:14:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 07:14:37,359 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:14:37 NWAContainer
[2020-11-25 07:14:37,359 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 07:14:37,359 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 07:14:37,359 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 07:14:37,360 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 07:14:37,361 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:14:37" (3/4) ...
[2020-11-25 07:14:37,361 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@69cfe6c3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:14:37, skipping insertion in model container
[2020-11-25 07:14:37,362 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:14:37" (4/4) ...
[2020-11-25 07:14:37,364 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 07:14:37,368 INFO  L110   BuchiProductObserver]: Initial RCFG 1824 locations, 2509 edges
[2020-11-25 07:14:37,368 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 07:14:37,379 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 07:14:38,706 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 07:14:38,712 INFO  L110   BuchiProductObserver]: BuchiProgram size 4556 locations, 8189 edges
[2020-11-25 07:14:38,712 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:14:38 BoogieIcfgContainer
[2020-11-25 07:14:38,712 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 07:14:38,713 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 07:14:38,713 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 07:14:38,714 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 07:14:38,715 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:14:38" (1/1) ...
[2020-11-25 07:14:38,803 INFO  L313           BlockEncoder]: Initial Icfg 4556 locations, 8189 edges
[2020-11-25 07:14:38,804 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 07:14:38,804 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 07:14:38,804 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 07:14:38,805 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 07:14:38,817 INFO  L70    emoveInfeasibleEdges]: Removed 135 edges and 13 locations because of local infeasibility
[2020-11-25 07:14:38,829 INFO  L70        RemoveSinkStates]: Removed 124 edges and 75 locations by removing sink states
[2020-11-25 07:14:38,841 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 07:14:38,845 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 07:14:38,848 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 07:14:38,849 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 07:14:38,853 INFO  L313           BlockEncoder]: Encoded RCFG 4444 locations, 7895 edges
[2020-11-25 07:14:38,854 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:14:38 BasicIcfg
[2020-11-25 07:14:38,854 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 07:14:38,854 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 07:14:38,854 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 07:14:38,856 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 07:14:38,856 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:14:38,856 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 07:14:36" (1/6) ...
[2020-11-25 07:14:38,858 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@23221d5a and model type TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:14:38, skipping insertion in model container
[2020-11-25 07:14:38,858 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:14:38,858 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 07:14:36" (2/6) ...
[2020-11-25 07:14:38,858 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@23221d5a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:14:38, skipping insertion in model container
[2020-11-25 07:14:38,858 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:14:38,858 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 07:14:37" (3/6) ...
[2020-11-25 07:14:38,858 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@23221d5a and model type TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:14:38, skipping insertion in model container
[2020-11-25 07:14:38,858 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:14:38,859 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 07:14:37" (4/6) ...
[2020-11-25 07:14:38,859 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@23221d5a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 07:14:38, skipping insertion in model container
[2020-11-25 07:14:38,859 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:14:38,859 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 07:14:38" (5/6) ...
[2020-11-25 07:14:38,859 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@23221d5a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 07:14:38, skipping insertion in model container
[2020-11-25 07:14:38,859 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 07:14:38,859 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 07:14:38" (6/6) ...
[2020-11-25 07:14:38,860 INFO  L404   chiAutomizerObserver]: Analyzing ICFG TulipToken_0x3D1BE3fEf769399CcE7e504E85324d622F23Cf85_transferfrom-fail.bpl_BEv2
[2020-11-25 07:14:38,894 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 07:14:38,895 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 07:14:38,895 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 07:14:38,895 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 07:14:38,895 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 07:14:38,895 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 07:14:38,895 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 07:14:38,895 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 07:14:38,895 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 07:14:38,927 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4444 states.
[2020-11-25 07:14:38,980 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:38,980 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:38,980 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:38,989 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:38,989 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:38,989 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 07:14:38,989 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4444 states.
[2020-11-25 07:14:39,010 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:39,010 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:39,010 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:39,011 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:39,012 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND TRUE   __exception
[L1200]              __tmp__Balance := Balance;
[L1201]              __tmp__DType := DType;
[L1202]              __tmp__Alloc := Alloc;
[L1203]              __tmp__balance_ADDR := balance_ADDR;
[L1204]              __tmp__M_Ref_int := M_Ref_int;
[L1205]              __tmp__sum__balances0 := sum__balances0;
[L1206]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1207]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1208]              __tmp__sum__allowances1 := sum__allowances1;
[L1209]              __tmp__M_int_Ref := M_int_Ref;
[L1210]              __tmp__sum := sum;
[L1211]              __tmp__Length := Length;
[L1212]              __tmp__now := now;
[L1213]              __tmp___balances_ERC20 := _balances_ERC20;
[L1214]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1215]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1216]              __tmp___name_ERC20 := _name_ERC20;
[L1217]              __tmp___symbol_ERC20 := _symbol_ERC20;
[L1218]              __tmp___decimals_ERC20 := _decimals_ERC20;
[L1219]              __tmp___owner_MultOwnable := _owner_MultOwnable;
[L1220]  CALL        call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3245]  CALL        call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2989]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2949]              assume msgsender_MSG != null;
[L2950]              __tmp__Balance[this] := 0;
[L2952]  CALL        call __var_18 := FreshRefGenerator__fail();
[L2090]              havoc newRef;
[L2091]              assume __tmp__Alloc[newRef] == false;
[L2092]              __tmp__Alloc[newRef] := true;
[L2093]              assume newRef != null;
[L2952]  RET         call __var_18 := FreshRefGenerator__fail();
[L2953]  COND TRUE   revert
[L2989]  RET         call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2990]  COND FALSE  !(revert)
[L3245]  RET         call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3246]  COND TRUE   revert
[L1220]  RET         call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1221]              assume revert || gas < 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:39,025 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:39,026 INFO  L82        PathProgramCache]: Analyzing trace with hash -451005438, now seen corresponding path program 1 times
[2020-11-25 07:14:39,030 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:39,049 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:39,098 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:14:39,101 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:14:39,101 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:14:39,363 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:39,371 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:14:39,372 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:14:39,373 INFO  L87              Difference]: Start difference. First operand 4444 states. Second operand 4 states.
[2020-11-25 07:14:39,776 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:39,776 INFO  L93              Difference]: Finished difference Result 3083 states and 3575 transitions.
[2020-11-25 07:14:39,776 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:14:39,778 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3083 states and 3575 transitions.
[2020-11-25 07:14:39,795 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:39,819 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3083 states to 3083 states and 3575 transitions.
[2020-11-25 07:14:39,819 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 07:14:39,821 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 722
[2020-11-25 07:14:39,822 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3083 states and 3575 transitions.
[2020-11-25 07:14:39,829 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:39,829 INFO  L728         BuchiCegarLoop]: Abstraction has 3083 states and 3575 transitions.
[2020-11-25 07:14:39,842 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3083 states and 3575 transitions.
[2020-11-25 07:14:39,897 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3083 to 3083.
[2020-11-25 07:14:39,897 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3083 states.
[2020-11-25 07:14:39,904 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3083 states to 3083 states and 3575 transitions.
[2020-11-25 07:14:39,905 INFO  L751         BuchiCegarLoop]: Abstraction has 3083 states and 3575 transitions.
[2020-11-25 07:14:39,905 INFO  L631         BuchiCegarLoop]: Abstraction has 3083 states and 3575 transitions.
[2020-11-25 07:14:39,905 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 07:14:39,905 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3083 states and 3575 transitions.
[2020-11-25 07:14:39,914 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:39,914 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:39,915 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:39,917 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:39,917 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND TRUE   __exception
[L1200]              __tmp__Balance := Balance;
[L1201]              __tmp__DType := DType;
[L1202]              __tmp__Alloc := Alloc;
[L1203]              __tmp__balance_ADDR := balance_ADDR;
[L1204]              __tmp__M_Ref_int := M_Ref_int;
[L1205]              __tmp__sum__balances0 := sum__balances0;
[L1206]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1207]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1208]              __tmp__sum__allowances1 := sum__allowances1;
[L1209]              __tmp__M_int_Ref := M_int_Ref;
[L1210]              __tmp__sum := sum;
[L1211]              __tmp__Length := Length;
[L1212]              __tmp__now := now;
[L1213]              __tmp___balances_ERC20 := _balances_ERC20;
[L1214]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1215]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1216]              __tmp___name_ERC20 := _name_ERC20;
[L1217]              __tmp___symbol_ERC20 := _symbol_ERC20;
[L1218]              __tmp___decimals_ERC20 := _decimals_ERC20;
[L1219]              __tmp___owner_MultOwnable := _owner_MultOwnable;
[L1220]  CALL        call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3245]  CALL        call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2989]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2949]              assume msgsender_MSG != null;
[L2950]              __tmp__Balance[this] := 0;
[L2952]  CALL        call __var_18 := FreshRefGenerator__fail();
[L2090]              havoc newRef;
[L2091]              assume __tmp__Alloc[newRef] == false;
[L2092]              __tmp__Alloc[newRef] := true;
[L2093]              assume newRef != null;
[L2952]  RET         call __var_18 := FreshRefGenerator__fail();
[L2953]  COND TRUE   revert
[L2989]  RET         call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2990]  COND FALSE  !(revert)
[L3245]  RET         call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3246]  COND TRUE   revert
[L1220]  RET         call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1221]              assume revert || gas < 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND TRUE   !(sender_s487 != null)
[L2712]              revert := true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND TRUE   revert
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND TRUE   !(sender_s487 != null)
[L2712]              revert := true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND TRUE   revert
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:39,922 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:39,922 INFO  L82        PathProgramCache]: Analyzing trace with hash -1448880859, now seen corresponding path program 1 times
[2020-11-25 07:14:39,923 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:39,936 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:39,968 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 07:14:39,968 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:14:39,968 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:14:39,970 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:39,970 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:14:39,970 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:14:39,971 INFO  L87              Difference]: Start difference. First operand 3083 states and 3575 transitions. cyclomatic complexity: 506 Second operand 4 states.
[2020-11-25 07:14:40,781 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:40,781 INFO  L93              Difference]: Finished difference Result 4120 states and 4673 transitions.
[2020-11-25 07:14:40,781 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:14:40,782 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4120 states and 4673 transitions.
[2020-11-25 07:14:40,799 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:14:40,814 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4120 states to 3834 states and 4337 transitions.
[2020-11-25 07:14:40,814 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 912
[2020-11-25 07:14:40,815 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 939
[2020-11-25 07:14:40,815 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3834 states and 4337 transitions.
[2020-11-25 07:14:40,821 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:40,821 INFO  L728         BuchiCegarLoop]: Abstraction has 3834 states and 4337 transitions.
[2020-11-25 07:14:40,824 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3834 states and 4337 transitions.
[2020-11-25 07:14:40,855 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3834 to 3433.
[2020-11-25 07:14:40,855 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3433 states.
[2020-11-25 07:14:40,860 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3433 states to 3433 states and 3833 transitions.
[2020-11-25 07:14:40,860 INFO  L751         BuchiCegarLoop]: Abstraction has 3433 states and 3833 transitions.
[2020-11-25 07:14:40,860 INFO  L631         BuchiCegarLoop]: Abstraction has 3433 states and 3833 transitions.
[2020-11-25 07:14:40,860 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 07:14:40,860 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3433 states and 3833 transitions.
[2020-11-25 07:14:40,867 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:14:40,867 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:40,868 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:40,870 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:40,870 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:40,874 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:40,874 INFO  L82        PathProgramCache]: Analyzing trace with hash -1093729120, now seen corresponding path program 1 times
[2020-11-25 07:14:40,875 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:40,893 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:41,103 INFO  L134       CoverageAnalysis]: Checked inductivity of 21 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 17 trivial. 0 not checked.
[2020-11-25 07:14:41,103 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:14:41,103 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 07:14:41,104 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:41,104 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 07:14:41,104 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=32, Invalid=208, Unknown=0, NotChecked=0, Total=240
[2020-11-25 07:14:41,104 INFO  L87              Difference]: Start difference. First operand 3433 states and 3833 transitions. cyclomatic complexity: 414 Second operand 16 states.
[2020-11-25 07:14:43,316 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:43,317 INFO  L93              Difference]: Finished difference Result 3544 states and 3964 transitions.
[2020-11-25 07:14:43,317 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 07:14:43,317 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3544 states and 3964 transitions.
[2020-11-25 07:14:43,324 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 07:14:43,337 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3544 states to 3544 states and 3964 transitions.
[2020-11-25 07:14:43,337 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 922
[2020-11-25 07:14:43,338 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 922
[2020-11-25 07:14:43,338 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3544 states and 3964 transitions.
[2020-11-25 07:14:43,342 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:43,342 INFO  L728         BuchiCegarLoop]: Abstraction has 3544 states and 3964 transitions.
[2020-11-25 07:14:43,345 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3544 states and 3964 transitions.
[2020-11-25 07:14:43,366 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3544 to 3299.
[2020-11-25 07:14:43,366 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3299 states.
[2020-11-25 07:14:43,369 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3299 states to 3299 states and 3664 transitions.
[2020-11-25 07:14:43,369 INFO  L751         BuchiCegarLoop]: Abstraction has 3299 states and 3664 transitions.
[2020-11-25 07:14:43,369 INFO  L631         BuchiCegarLoop]: Abstraction has 3299 states and 3664 transitions.
[2020-11-25 07:14:43,370 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 07:14:43,370 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3299 states and 3664 transitions.
[2020-11-25 07:14:43,373 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:43,373 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:43,373 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:43,375 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:43,376 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND TRUE   choice == 15
[L4818]              gas := gas - 21000;
[L4819]  COND TRUE   gas >= 0
[L4820]              assume value_s342 >= 0 && value_s342 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4821]              assume msgvalue_MSG == 0;
[L4822]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s342, value_s342);
[L680]               havoc __exception;
[L681]               revert := false;
[L682]   COND FALSE  !(__exception)
[L706]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s342, value_s342);
[L2485]  COND TRUE   DType[this] == TulipToken
[L2486]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s342, value_s342);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2486]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s342, value_s342);
[L2487]  COND FALSE  !(revert)
[L2498]              __ret_0_ := true;
[L706]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s342, value_s342);
[L707]               assume !revert && gas >= 0;
[L4822]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s342, value_s342);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:43,379 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:43,379 INFO  L82        PathProgramCache]: Analyzing trace with hash -793556175, now seen corresponding path program 1 times
[2020-11-25 07:14:43,380 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:43,392 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:43,504 INFO  L134       CoverageAnalysis]: Checked inductivity of 80 backedges. 0 proven. 4 refuted. 0 times theorem prover too weak. 76 trivial. 0 not checked.
[2020-11-25 07:14:43,504 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 07:14:43,504 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [14] total 14
[2020-11-25 07:14:43,505 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:43,505 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 07:14:43,505 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 07:14:43,505 INFO  L87              Difference]: Start difference. First operand 3299 states and 3664 transitions. cyclomatic complexity: 380 Second operand 15 states.
[2020-11-25 07:14:45,016 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:45,016 INFO  L93              Difference]: Finished difference Result 3346 states and 3721 transitions.
[2020-11-25 07:14:45,017 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 07:14:45,017 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3346 states and 3721 transitions.
[2020-11-25 07:14:45,022 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:45,030 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3346 states to 3346 states and 3721 transitions.
[2020-11-25 07:14:45,030 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 816
[2020-11-25 07:14:45,030 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 816
[2020-11-25 07:14:45,030 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3346 states and 3721 transitions.
[2020-11-25 07:14:45,034 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:45,034 INFO  L728         BuchiCegarLoop]: Abstraction has 3346 states and 3721 transitions.
[2020-11-25 07:14:45,036 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3346 states and 3721 transitions.
[2020-11-25 07:14:45,056 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3346 to 3290.
[2020-11-25 07:14:45,056 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3290 states.
[2020-11-25 07:14:45,059 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3290 states to 3290 states and 3655 transitions.
[2020-11-25 07:14:45,059 INFO  L751         BuchiCegarLoop]: Abstraction has 3290 states and 3655 transitions.
[2020-11-25 07:14:45,059 INFO  L631         BuchiCegarLoop]: Abstraction has 3290 states and 3655 transitions.
[2020-11-25 07:14:45,059 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 07:14:45,059 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3290 states and 3655 transitions.
[2020-11-25 07:14:45,062 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:45,062 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:45,063 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:45,064 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:45,064 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND TRUE   __exception
[L1200]              __tmp__Balance := Balance;
[L1201]              __tmp__DType := DType;
[L1202]              __tmp__Alloc := Alloc;
[L1203]              __tmp__balance_ADDR := balance_ADDR;
[L1204]              __tmp__M_Ref_int := M_Ref_int;
[L1205]              __tmp__sum__balances0 := sum__balances0;
[L1206]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L1207]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1208]              __tmp__sum__allowances1 := sum__allowances1;
[L1209]              __tmp__M_int_Ref := M_int_Ref;
[L1210]              __tmp__sum := sum;
[L1211]              __tmp__Length := Length;
[L1212]              __tmp__now := now;
[L1213]              __tmp___balances_ERC20 := _balances_ERC20;
[L1214]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1215]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1216]              __tmp___name_ERC20 := _name_ERC20;
[L1217]              __tmp___symbol_ERC20 := _symbol_ERC20;
[L1218]              __tmp___decimals_ERC20 := _decimals_ERC20;
[L1219]              __tmp___owner_MultOwnable := _owner_MultOwnable;
[L1220]  CALL        call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3245]  CALL        call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L2989]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2949]              assume msgsender_MSG != null;
[L2950]              __tmp__Balance[this] := 0;
[L2952]  CALL        call __var_18 := FreshRefGenerator__fail();
[L2090]              havoc newRef;
[L2091]              assume __tmp__Alloc[newRef] == false;
[L2092]              __tmp__Alloc[newRef] := true;
[L2093]              assume newRef != null;
[L2952]  RET         call __var_18 := FreshRefGenerator__fail();
[L2953]  COND FALSE  !(revert)
[L2956]              __tmp___owner_MultOwnable[this] := __var_18;
[L2957]              assume __tmp__Length[__tmp___owner_MultOwnable[this]] == 0;
[L2959]              __var_17 := __tmp__Length[__tmp___owner_MultOwnable[this]];
[L2960]              __tmp__M_int_Ref[__tmp___owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2961]              __tmp__Length[__tmp___owner_MultOwnable[this]] := __var_17 + 1;
[L2989]  RET         call MultOwnable_MultOwnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2990]  COND FALSE  !(revert)
[L3245]  RET         call MultOwnable_MultOwnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3246]  COND FALSE  !(revert)
[L3249]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2122]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2107]              assume msgsender_MSG != null;
[L2108]              __tmp__Balance[this] := 0;
[L2122]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2123]  COND FALSE  !(revert)
[L3249]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3250]  COND FALSE  !(revert)
[L3253]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2332]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2122]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2107]              assume msgsender_MSG != null;
[L2108]              __tmp__Balance[this] := 0;
[L2122]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2123]  COND FALSE  !(revert)
[L2332]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2333]  COND FALSE  !(revert)
[L2336]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2295]              assume msgsender_MSG != null;
[L2296]              __tmp__Balance[this] := 0;
[L2297]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L2298]              __tmp__sum__balances0[this] := 0;
[L2299]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L2300]              __tmp__sum__allowances1[this] := 0;
[L2301]              __tmp___totalSupply_ERC20[this] := 0;
[L2302]              __tmp___name_ERC20[this] := 214025342;
[L2303]              __tmp___symbol_ERC20[this] := 214025342;
[L2304]              __tmp___decimals_ERC20[this] := 0;
[L2306]              __tmp___name_ERC20[this] := name_s244;
[L2307]              __tmp___symbol_ERC20[this] := symbol_s244;
[L2308]              __tmp___decimals_ERC20[this] := 9;
[L2336]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2337]  COND FALSE  !(revert)
[L3253]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3254]  COND FALSE  !(revert)
[L3257]  CALL        call TulipToken_TulipToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3230]              assume msgsender_MSG != null;
[L3231]              __tmp__Balance[this] := 0;
[L3257]  RET         call TulipToken_TulipToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3258]  COND FALSE  !(revert)
[L1220]  RET         call TulipToken_TulipToken__fail(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1221]              assume revert || gas < 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:45,067 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:45,067 INFO  L82        PathProgramCache]: Analyzing trace with hash 1450357241, now seen corresponding path program 1 times
[2020-11-25 07:14:45,067 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:45,075 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:45,104 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 07:14:45,104 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:14:45,104 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 07:14:45,105 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:45,105 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 07:14:45,105 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 07:14:45,105 INFO  L87              Difference]: Start difference. First operand 3290 states and 3655 transitions. cyclomatic complexity: 380 Second operand 4 states.
[2020-11-25 07:14:45,434 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:45,434 INFO  L93              Difference]: Finished difference Result 4775 states and 5474 transitions.
[2020-11-25 07:14:45,434 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 07:14:45,434 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4775 states and 5474 transitions.
[2020-11-25 07:14:45,445 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 07:14:45,456 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4775 states to 4317 states and 4971 transitions.
[2020-11-25 07:14:45,457 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1088
[2020-11-25 07:14:45,457 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1114
[2020-11-25 07:14:45,457 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4317 states and 4971 transitions.
[2020-11-25 07:14:45,461 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:45,461 INFO  L728         BuchiCegarLoop]: Abstraction has 4317 states and 4971 transitions.
[2020-11-25 07:14:45,463 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4317 states and 4971 transitions.
[2020-11-25 07:14:45,484 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4317 to 3452.
[2020-11-25 07:14:45,484 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3452 states.
[2020-11-25 07:14:45,487 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3452 states to 3452 states and 3899 transitions.
[2020-11-25 07:14:45,487 INFO  L751         BuchiCegarLoop]: Abstraction has 3452 states and 3899 transitions.
[2020-11-25 07:14:45,487 INFO  L631         BuchiCegarLoop]: Abstraction has 3452 states and 3899 transitions.
[2020-11-25 07:14:45,487 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 07:14:45,487 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3452 states and 3899 transitions.
[2020-11-25 07:14:45,491 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:45,491 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:45,491 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:45,492 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:45,492 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND TRUE   choice == 17
[L4805]              gas := gas - 21000;
[L4806]  COND TRUE   gas >= 0
[L4807]              assume amount_s307 >= 0 && amount_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4808]              assume msgvalue_MSG == 0;
[L4809]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L566]               havoc __exception;
[L567]               revert := false;
[L568]   COND FALSE  !(__exception)
[L592]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L2435]  COND TRUE   DType[this] == TulipToken
[L2436]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2436]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, recipient_s307, amount_s307);
[L2437]  COND FALSE  !(revert)
[L2448]              __ret_0_ := true;
[L592]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L593]               assume !revert && gas >= 0;
[L4809]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s307, amount_s307);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:45,496 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:45,496 INFO  L82        PathProgramCache]: Analyzing trace with hash -500977769, now seen corresponding path program 1 times
[2020-11-25 07:14:45,496 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:45,509 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:45,601 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 74 trivial. 0 not checked.
[2020-11-25 07:14:45,601 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:14:45,601 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 07:14:45,601 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:45,601 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 07:14:45,601 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 07:14:45,602 INFO  L87              Difference]: Start difference. First operand 3452 states and 3899 transitions. cyclomatic complexity: 462 Second operand 14 states.
[2020-11-25 07:14:46,834 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:46,834 INFO  L93              Difference]: Finished difference Result 3510 states and 3968 transitions.
[2020-11-25 07:14:46,834 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 07:14:46,834 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3510 states and 3968 transitions.
[2020-11-25 07:14:46,840 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:46,849 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3510 states to 3510 states and 3968 transitions.
[2020-11-25 07:14:46,849 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 884
[2020-11-25 07:14:46,849 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 884
[2020-11-25 07:14:46,849 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3510 states and 3968 transitions.
[2020-11-25 07:14:46,852 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:46,853 INFO  L728         BuchiCegarLoop]: Abstraction has 3510 states and 3968 transitions.
[2020-11-25 07:14:46,855 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3510 states and 3968 transitions.
[2020-11-25 07:14:46,873 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3510 to 3469.
[2020-11-25 07:14:46,874 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3469 states.
[2020-11-25 07:14:46,877 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3469 states to 3469 states and 3926 transitions.
[2020-11-25 07:14:46,877 INFO  L751         BuchiCegarLoop]: Abstraction has 3469 states and 3926 transitions.
[2020-11-25 07:14:46,877 INFO  L631         BuchiCegarLoop]: Abstraction has 3469 states and 3926 transitions.
[2020-11-25 07:14:46,877 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 07:14:46,877 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3469 states and 3926 transitions.
[2020-11-25 07:14:46,880 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 07:14:46,880 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 07:14:46,880 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 07:14:46,882 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 07:14:46,882 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ERC200 := false;
[L2]                 call_transferFrom_ERC200 := false;
[L2]     CALL        call main();
[L4923]              assume null == 0;
[L4924]  CALL        call this := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L4924]  RET         call this := FreshRefGenerator__success();
[L4925]              assume now >= 0;
[L4926]              assume DType[this] == TulipToken;
[L4927]              assume msgvalue_MSG == 0;
[L4928]              gas := gas - 53000;
[L4929]  CALL        call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1197]              havoc __exception;
[L1198]              revert := false;
[L1199]  COND FALSE  !(__exception)
[L1223]  CALL        call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3265]  CALL        call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2999]  CALL        call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2969]              assume msgsender_MSG != null;
[L2970]              Balance[this] := 0;
[L2972]  CALL        call __var_18 := FreshRefGenerator__success();
[L2098]              havoc newRef;
[L2099]              assume Alloc[newRef] == false;
[L2100]              Alloc[newRef] := true;
[L2101]              assume newRef != null;
[L2972]  RET         call __var_18 := FreshRefGenerator__success();
[L2973]  COND FALSE  !(revert)
[L2976]              _owner_MultOwnable[this] := __var_18;
[L2977]              assume Length[_owner_MultOwnable[this]] == 0;
[L2979]              __var_17 := Length[_owner_MultOwnable[this]];
[L2980]              M_int_Ref[_owner_MultOwnable[this]][__var_17] := msgsender_MSG;
[L2981]              Length[_owner_MultOwnable[this]] := __var_17 + 1;
[L2982]              assert { :EventEmitted "OwnershipTransferred_MultOwnable" } true;
[L2999]  RET         call MultOwnable_MultOwnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3000]  COND FALSE  !(revert)
[L3265]  RET         call MultOwnable_MultOwnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3266]  COND FALSE  !(revert)
[L3269]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L3269]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3270]  COND FALSE  !(revert)
[L3273]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L2344]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2130]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2115]              assume msgsender_MSG != null;
[L2116]              Balance[this] := 0;
[L2130]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2131]  COND FALSE  !(revert)
[L2344]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2345]  COND FALSE  !(revert)
[L2348]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2314]              assume msgsender_MSG != null;
[L2315]              Balance[this] := 0;
[L2316]              _balances_ERC20[this] := zeroRefintArr();
[L2317]              sum__balances0[this] := 0;
[L2318]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2319]              sum__allowances1[this] := 0;
[L2320]              _totalSupply_ERC20[this] := 0;
[L2321]              _name_ERC20[this] := 214025342;
[L2322]              _symbol_ERC20[this] := 214025342;
[L2323]              _decimals_ERC20[this] := 0;
[L2325]              _name_ERC20[this] := name_s244;
[L2326]              _symbol_ERC20[this] := symbol_s244;
[L2327]              _decimals_ERC20[this] := 9;
[L2348]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s244, symbol_s244);
[L2349]  COND FALSE  !(revert)
[L3273]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3274]  COND FALSE  !(revert)
[L3277]  CALL        call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3238]              assume msgsender_MSG != null;
[L3239]              Balance[this] := 0;
[L3277]  RET         call TulipToken_TulipToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L3278]  COND FALSE  !(revert)
[L1223]  RET         call TulipToken_TulipToken__success(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L1224]              assume !revert && gas >= 0;
[L4929]  RET         call TulipToken_TulipToken(this, msgsender_MSG, msgvalue_MSG, name_s869, symbol_s869);
[L4930]              assume !revert && gas >= 0;
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND FALSE  !(choice == 19)
[L4798]  COND FALSE  !(choice == 18)
[L4804]  COND FALSE  !(choice == 17)
[L4811]  COND FALSE  !(choice == 16)
[L4817]  COND FALSE  !(choice == 15)
[L4824]  COND TRUE   choice == 14
[L4825]              gas := gas - 21000;
[L4826]  COND TRUE   gas >= 0
[L4827]              assume amount_s377 >= 0 && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4828]              assume msgvalue_MSG == 0;
[L4829]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s377 != recipient_s377 && ((amount_s377 > _balances_ERC20[this][sender_s377] || amount_s377 > _allowances_ERC20[this][sender_s377][msgsender_MSG]) || _balances_ERC20[this][recipient_s377] + amount_s377 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && amount_s377 >= 0) && amount_s377 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s377] >= 0) && _balances_ERC20[this][recipient_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s377] >= 0) && _balances_ERC20[this][sender_s377] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s377][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s377][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ERC200 := true;
[L2]                 call_transferFrom_ERC200 := false;
[L2]                 revert := revert_hold;
[L740]               havoc __exception;
[L741]               revert := false;
[L742]   COND FALSE  !(__exception)
[L766]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2542]  COND TRUE   DType[this] == TulipToken
[L2543]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2710]              __var_4 := null;
[L2711]  COND FALSE  !(!(sender_s487 != null))
[L2715]              __var_5 := null;
[L2716]  COND FALSE  !(!(recipient_s487 != null))
[L2720]  CALL        call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2720]  RET         call __var_6 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s487], amount_s487);
[L2721]  COND FALSE  !(revert)
[L2724]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s487];
[L2725]              _balances_ERC20[this][sender_s487] := __var_6;
[L2726]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s487];
[L2727]  CALL        call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2183]              c_s94 := (a_s94 + b_s94) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2184]  COND FALSE  !(!(c_s94 >= a_s94))
[L2188]              __ret_0_ := c_s94;
[L2727]  RET         call __var_7 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s487], amount_s487);
[L2728]  COND FALSE  !(revert)
[L2731]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s487];
[L2732]              _balances_ERC20[this][recipient_s487] := __var_7;
[L2733]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s487];
[L2734]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2543]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L2544]  COND FALSE  !(revert)
[L2555]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2207]  COND FALSE  !(!(b_s119 <= a_s119))
[L2211]              c_s119 := (a_s119 - b_s119) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2212]              __ret_0_ := c_s119;
[L2555]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowances_ERC20[this][sender_s377][msgsender_MSG], amount_s377);
[L2556]  COND FALSE  !(revert)
[L2559]  COND TRUE   DType[this] == TulipToken
[L2560]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2858]              __var_14 := null;
[L2859]  COND FALSE  !(!(owner_s615 != null))
[L2863]              __var_15 := null;
[L2864]  COND FALSE  !(!(spender_s615 != null))
[L2868]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] - _allowances_ERC20[this][owner_s615][spender_s615];
[L2869]              _allowances_ERC20[this][owner_s615][spender_s615] := value_s615;
[L2870]              sum__allowances1[owner_s615] := sum__allowances1[owner_s615] + _allowances_ERC20[this][owner_s615][spender_s615];
[L2871]              assert { :EventEmitted "Approval_ERC20" } true;
[L2560]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, msgsender_MSG, __var_1);
[L2561]  COND FALSE  !(revert)
[L2572]              __ret_0_ := true;
[L766]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L767]               assume !revert && gas >= 0;
[L4829]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s377, recipient_s377, amount_s377);
[L4933]  RET         call CorralChoice_TulipToken(this);

Loop:
[L4933]  CALL        call CorralChoice_TulipToken(this);
[L4740]              havoc msgsender_MSG;
[L4741]              havoc msgvalue_MSG;
[L4742]              havoc choice;
[L4743]              havoc __ret_0_totalSupply;
[L4744]              havoc account_s288;
[L4745]              havoc __ret_0_balanceOf;
[L4746]              havoc recipient_s307;
[L4747]              havoc amount_s307;
[L4748]              havoc __ret_0_transfer;
[L4749]              havoc owner_s323;
[L4750]              havoc spender_s323;
[L4751]              havoc __ret_0_allowance;
[L4752]              havoc spender_s342;
[L4753]              havoc value_s342;
[L4754]              havoc __ret_0_approve;
[L4755]              havoc sender_s377;
[L4756]              havoc recipient_s377;
[L4757]              havoc amount_s377;
[L4758]              havoc __ret_0_transferFrom;
[L4759]              havoc name_s244;
[L4760]              havoc symbol_s244;
[L4761]              havoc __ret_0_name;
[L4762]              havoc __ret_0_symbol;
[L4763]              havoc __ret_0_decimals;
[L4764]              havoc spender_s404;
[L4765]              havoc addedValue_s404;
[L4766]              havoc __ret_0_increaseAllowance;
[L4767]              havoc spender_s431;
[L4768]              havoc subtractedValue_s431;
[L4769]              havoc __ret_0_decreaseAllowance;
[L4770]              havoc __ret_0_getOwners;
[L4771]              havoc newOwner_s811;
[L4772]              havoc name_s869;
[L4773]              havoc symbol_s869;
[L4774]              havoc account_s884;
[L4775]              havoc amount_s884;
[L4776]              havoc account_s899;
[L4777]              havoc amount_s899;
[L4778]              havoc _newOwner_s911;
[L4779]              havoc tmpNow;
[L4780]              havoc gas;
[L4781]              assume gas > 4000000 && gas <= 8000000;
[L4782]              tmpNow := now;
[L4783]              havoc now;
[L4784]              assume now > tmpNow;
[L4785]              assume msgsender_MSG != null;
[L4786]              assume DType[msgsender_MSG] != IERC20;
[L4787]              assume DType[msgsender_MSG] != SafeMath;
[L4788]              assume DType[msgsender_MSG] != ERC20;
[L4789]              assume DType[msgsender_MSG] != MultOwnable;
[L4790]              assume DType[msgsender_MSG] != TulipToken;
[L4791]              Alloc[msgsender_MSG] := true;
[L4792]  COND TRUE   choice == 19
[L4793]              gas := gas - 21000;
[L4794]  COND FALSE  !(gas >= 0)
[L4933]  RET         call CorralChoice_TulipToken(this);

[2020-11-25 07:14:46,885 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 07:14:46,885 INFO  L82        PathProgramCache]: Analyzing trace with hash 263795439, now seen corresponding path program 1 times
[2020-11-25 07:14:46,885 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 07:14:46,915 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 07:14:47,132 INFO  L134       CoverageAnalysis]: Checked inductivity of 95 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 95 trivial. 0 not checked.
[2020-11-25 07:14:47,132 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 07:14:47,132 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 07:14:47,132 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 07:14:47,133 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 07:14:47,133 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=34, Invalid=176, Unknown=0, NotChecked=0, Total=210
[2020-11-25 07:14:47,133 INFO  L87              Difference]: Start difference. First operand 3469 states and 3926 transitions. cyclomatic complexity: 474 Second operand 15 states.
[2020-11-25 07:14:48,630 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 07:14:48,630 INFO  L93              Difference]: Finished difference Result 1945 states and 2193 transitions.
[2020-11-25 07:14:48,630 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 07:14:48,630 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1945 states and 2193 transitions.
[2020-11-25 07:14:48,634 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:14:48,634 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1945 states to 0 states and 0 transitions.
[2020-11-25 07:14:48,634 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 07:14:48,634 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 07:14:48,634 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 07:14:48,634 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 07:14:48,634 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:14:48,634 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:14:48,634 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 07:14:48,634 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 07:14:48,634 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 07:14:48,634 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 07:14:48,634 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 07:14:48,637 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 07:14:48 BasicIcfg
[2020-11-25 07:14:48,637 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 07:14:48,637 INFO  L168              Benchmark]: Toolchain (without parser) took 12270.61 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 989.3 MB). Free memory was 935.2 MB in the beginning and 1.6 GB in the end (delta: -673.1 MB). Peak memory consumption was 316.3 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,638 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,638 INFO  L168              Benchmark]: Boogie Preprocessor took 104.57 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,638 INFO  L168              Benchmark]: UtopiaSpecLang took 61.62 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.0 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,639 INFO  L168              Benchmark]: Boogie Printer took 22.49 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,639 INFO  L168              Benchmark]: RCFGBuilder took 763.00 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 779.3 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,640 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.78 ms. Allocated memory is still 1.0 GB. Free memory was 779.3 MB in the beginning and 775.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,640 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1353.24 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 199.8 MB). Free memory was 775.7 MB in the beginning and 937.1 MB in the end (delta: -161.3 MB). Peak memory consumption was 165.5 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,641 INFO  L168              Benchmark]: BlockEncodingV2 took 141.00 ms. Allocated memory is still 1.2 GB. Free memory was 937.1 MB in the beginning and 871.2 MB in the end (delta: 65.9 MB). Peak memory consumption was 65.9 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,641 INFO  L168              Benchmark]: BuchiAutomizer took 9783.00 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 789.6 MB). Free memory was 862.8 MB in the beginning and 1.6 GB in the end (delta: -745.4 MB). Peak memory consumption was 44.1 MB. Max. memory is 15.3 GB.
[2020-11-25 07:14:48,643 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4556 locations, 8189 edges
  - StatisticsResult: Encoded RCFG
    4444 locations, 7895 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 104.57 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 61.62 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.0 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.49 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 763.00 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 779.3 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.78 ms. Allocated memory is still 1.0 GB. Free memory was 779.3 MB in the beginning and 775.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1353.24 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 199.8 MB). Free memory was 775.7 MB in the beginning and 937.1 MB in the end (delta: -161.3 MB). Peak memory consumption was 165.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 141.00 ms. Allocated memory is still 1.2 GB. Free memory was 937.1 MB in the beginning and 871.2 MB in the end (delta: 65.9 MB). Peak memory consumption was 65.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9783.00 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 789.6 MB). Free memory was 862.8 MB in the beginning and 1.6 GB in the end (delta: -745.4 MB). Peak memory consumption was 44.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1824 locations, 2509 edges
  - StatisticsResult: BuchiProgram size
    4556 locations, 8189 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 16 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.7s and 8 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.1s. Construction of modules took 6.1s. BÃ¼chi inclusion checks took 1.8s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 6 MinimizatonAttempts, 1608 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3469 states and ocurred in iteration 6.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 22985 SDtfs, 22364 SDslu, 40460 SDs, 0 SdLazy, 108284 SolverSat, 3342 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 6.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ERC200) ==> ( <>(fail_transferFrom_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
