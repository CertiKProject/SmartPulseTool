This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:10:15,197 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:10:15,198 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:10:15,209 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:10:15,209 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:10:15,209 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:10:15,211 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:10:15,212 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:10:15,214 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:10:15,214 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:10:15,215 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:10:15,215 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:10:15,216 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:10:15,217 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:10:15,218 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:10:15,218 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:10:15,219 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:10:15,221 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:10:15,223 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:10:15,224 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:10:15,225 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:10:15,226 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:10:15,228 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:10:15,228 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:10:15,228 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:10:15,229 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:10:15,229 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:10:15,230 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:10:15,230 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:10:15,230 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:10:15,231 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:10:15,231 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:10:15,232 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:10:15,233 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:10:15,233 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:10:15,234 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:10:15,234 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:10:15,234 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:10:15,234 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:10:15,235 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:10:15,236 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:10:15,236 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:10:15,243 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:10:15,244 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:10:15,244 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:10:15,245 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:10:15,245 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:10:15,245 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:10:15,245 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:10:15,245 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:10:15,245 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:10:15,245 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:10:15,245 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:10:15,246 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:10:15,246 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:10:15,247 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:10:15,247 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:10:15,247 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:10:15,247 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:10:15,247 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:10:15,247 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:10:15,278 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:10:15,297 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:10:15,301 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:10:15,303 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:10:15,304 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:10:15,304 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl
[2020-11-25 15:10:15,305 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl'
[2020-11-25 15:10:15,389 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:10:15,390 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:10:15,390 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:10:15,390 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:10:15,390 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:10:15,407 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,408 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,436 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,437 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,459 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,470 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,478 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,486 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:10:15,487 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:10:15,487 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:10:15,489 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:10:15,492 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/1) ...
[2020-11-25 15:10:15,510 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.allowance(owner, spender), _allowances_ERC20[this][owner][spender] >= 0 && _allowances_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowances_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:15,515 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.allowance(owner, spender), _allowances_ERC20[this][owner][spender] >= 0 && _allowances_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowances_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:15,522 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.allowance(owner, spender), _allowances_ERC20[this][owner][spender] >= 0 && _allowances_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowances_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:15,528 INFO  L636   opiaSpecLangObserver]: Parsed ( _allowances_ERC20[this][owner_s352][spender_s352]>=0 && _allowances_ERC20[this][owner_s352][spender_s352]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s352,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s352,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s352,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s352,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:10:15,530 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==_allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[owner_s352,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],[IdentifierExpression[spender_s352,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_ERC20>]]]]]]
[2020-11-25 15:10:15,535 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.allowance(owner, spender), _allowances_ERC20[this][owner][spender] >= 0 && _allowances_ERC20[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.allowance(owner, spender), return == _allowances_ERC20[this][owner][spender] &&  _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 15:10:15,535 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_ERC200) ==> ( <>AP(success_allowance_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:10:15,543 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:15 PropertyContainer
[2020-11-25 15:10:15,543 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:10:15,544 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:10:15,544 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:10:15,544 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:10:15,545 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/2) ...
[2020-11-25 15:10:15,545 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:10:15,545 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:10:15,558 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:15" (2/2) ...
[2020-11-25 15:10:15,559 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:10:15,559 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:10:15,559 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:10:15,559 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:10:15,560 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/2) ...
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 15:10:15,610 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 15:10:15,610 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 15:10:15,611 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 15:10:15,611 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:10:15,611 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:10:15,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 15:10:15,611 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 15:10:15,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 15:10:15,611 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 15:10:15,611 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 15:10:15,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 15:10:15,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:10:15,612 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:15,612 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 15:10:15,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 15:10:15,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 15:10:15,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 15:10:15,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 15:10:15,613 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 15:10:15,613 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:10:15,614 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE
[2020-11-25 15:10:15,615 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:10:15,615 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ETE
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 15:10:15,616 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:15,617 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 15:10:15,618 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:10:15,619 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:10:15,620 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:10:15,620 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__success
[2020-11-25 15:10:15,620 INFO  L130     BoogieDeclarations]: Found specification of procedure ETE_ETE__fail
[2020-11-25 15:10:15,620 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:10:15,620 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:10:15,620 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 15:10:15,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 15:10:15,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:15,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 15:10:15,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 15:10:15,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__fail
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE_NoBaseCtor__success
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__fail
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure ETE_ETE__success
[2020-11-25 15:10:15,625 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 15:10:15,626 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:10:15,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:10:15,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 15:10:15,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 15:10:15,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ETE
[2020-11-25 15:10:15,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:10:15,627 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:10:15,627 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:10:16,030 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:16,031 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:16,031 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:10:16,243 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:10:16,244 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 15:10:16,245 INFO  L202        PluginConnector]: Adding new model ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:16 BoogieIcfgContainer
[2020-11-25 15:10:16,246 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:15" (2/2) ...
[2020-11-25 15:10:16,246 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:10:16,246 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@61251ae2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:16, skipping insertion in model container
[2020-11-25 15:10:16,246 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:10:16,246 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:10:16,246 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:10:16,248 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:10:16,248 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/3) ...
[2020-11-25 15:10:16,248 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2ddb83f0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:16, skipping insertion in model container
[2020-11-25 15:10:16,248 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:15" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:10:16,284 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:16 NWAContainer
[2020-11-25 15:10:16,285 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:10:16,285 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:10:16,285 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:10:16,286 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:10:16,286 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:16" (3/4) ...
[2020-11-25 15:10:16,287 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3e04f8b5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:16, skipping insertion in model container
[2020-11-25 15:10:16,287 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:16" (4/4) ...
[2020-11-25 15:10:16,290 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:10:16,294 INFO  L110   BuchiProductObserver]: Initial RCFG 1502 locations, 2160 edges
[2020-11-25 15:10:16,294 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:10:16,304 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:10:17,415 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:10:17,420 INFO  L110   BuchiProductObserver]: BuchiProgram size 3842 locations, 7070 edges
[2020-11-25 15:10:17,420 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:17 BoogieIcfgContainer
[2020-11-25 15:10:17,420 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:10:17,421 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:10:17,421 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:10:17,422 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:10:17,422 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:17" (1/1) ...
[2020-11-25 15:10:17,502 INFO  L313           BlockEncoder]: Initial Icfg 3842 locations, 7070 edges
[2020-11-25 15:10:17,502 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:10:17,503 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:10:17,503 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:10:17,503 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:10:17,516 INFO  L70    emoveInfeasibleEdges]: Removed 168 edges and 15 locations because of local infeasibility
[2020-11-25 15:10:17,527 INFO  L70        RemoveSinkStates]: Removed 116 edges and 77 locations by removing sink states
[2020-11-25 15:10:17,539 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:10:17,543 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:10:17,546 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:10:17,547 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:10:17,551 INFO  L313           BlockEncoder]: Encoded RCFG 3730 locations, 6757 edges
[2020-11-25 15:10:17,552 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:10:17 BasicIcfg
[2020-11-25 15:10:17,552 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:10:17,552 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:10:17,552 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:10:17,554 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:10:17,554 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:17,554 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:10:15" (1/6) ...
[2020-11-25 15:10:17,556 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@75f4e5dc and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:17, skipping insertion in model container
[2020-11-25 15:10:17,556 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:17,556 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:10:15" (2/6) ...
[2020-11-25 15:10:17,556 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@75f4e5dc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:17, skipping insertion in model container
[2020-11-25 15:10:17,556 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:17,557 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:10:16" (3/6) ...
[2020-11-25 15:10:17,557 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@75f4e5dc and model type ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:10:17, skipping insertion in model container
[2020-11-25 15:10:17,557 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:17,557 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:10:16" (4/6) ...
[2020-11-25 15:10:17,557 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@75f4e5dc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:10:17, skipping insertion in model container
[2020-11-25 15:10:17,557 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:17,557 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:10:17" (5/6) ...
[2020-11-25 15:10:17,557 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@75f4e5dc and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:10:17, skipping insertion in model container
[2020-11-25 15:10:17,557 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:10:17,557 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:10:17" (6/6) ...
[2020-11-25 15:10:17,558 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ETE_0x5ef7634582ad5d5b86eab4c719ea8e58d1a3789a_allowance.bpl_BEv2
[2020-11-25 15:10:17,594 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:10:17,594 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:10:17,594 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:10:17,594 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:10:17,594 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:10:17,594 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:10:17,594 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:10:17,594 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:10:17,594 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:10:17,624 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3730 states.
[2020-11-25 15:10:17,669 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:17,669 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:17,669 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:17,678 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:17,678 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:17,678 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:10:17,679 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3730 states.
[2020-11-25 15:10:17,695 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:17,695 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:17,695 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:17,696 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:17,696 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND TRUE   revert
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND TRUE   choice == 11
[L4085]              gas := gas - 21000;
[L4086]  COND FALSE  !(gas >= 0)
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:17,709 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:17,709 INFO  L82        PathProgramCache]: Analyzing trace with hash 1518339961, now seen corresponding path program 1 times
[2020-11-25 15:10:17,713 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:17,733 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:17,772 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:17,773 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:17,773 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:10:17,776 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:17,963 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:10:17,964 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:10:17,965 INFO  L87              Difference]: Start difference. First operand 3730 states. Second operand 4 states.
[2020-11-25 15:10:18,284 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:18,285 INFO  L93              Difference]: Finished difference Result 2168 states and 2611 transitions.
[2020-11-25 15:10:18,285 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:10:18,286 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2168 states and 2611 transitions.
[2020-11-25 15:10:18,297 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:18,314 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2168 states to 2168 states and 2611 transitions.
[2020-11-25 15:10:18,315 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 15:10:18,317 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 462
[2020-11-25 15:10:18,318 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2168 states and 2611 transitions.
[2020-11-25 15:10:18,324 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:18,324 INFO  L728         BuchiCegarLoop]: Abstraction has 2168 states and 2611 transitions.
[2020-11-25 15:10:18,338 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2168 states and 2611 transitions.
[2020-11-25 15:10:18,379 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2168 to 2168.
[2020-11-25 15:10:18,380 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2168 states.
[2020-11-25 15:10:18,384 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2168 states to 2168 states and 2611 transitions.
[2020-11-25 15:10:18,385 INFO  L751         BuchiCegarLoop]: Abstraction has 2168 states and 2611 transitions.
[2020-11-25 15:10:18,385 INFO  L631         BuchiCegarLoop]: Abstraction has 2168 states and 2611 transitions.
[2020-11-25 15:10:18,385 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:10:18,385 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2168 states and 2611 transitions.
[2020-11-25 15:10:18,390 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:18,391 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:18,391 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:18,392 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:18,392 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND TRUE   revert
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:18,396 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:18,396 INFO  L82        PathProgramCache]: Analyzing trace with hash -375193921, now seen corresponding path program 1 times
[2020-11-25 15:10:18,397 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:18,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:18,422 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:10:18,422 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:18,422 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:10:18,423 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:18,423 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:10:18,423 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:10:18,424 INFO  L87              Difference]: Start difference. First operand 2168 states and 2611 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 15:10:18,479 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:18,479 INFO  L93              Difference]: Finished difference Result 2774 states and 3273 transitions.
[2020-11-25 15:10:18,479 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:10:18,480 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2774 states and 3273 transitions.
[2020-11-25 15:10:18,490 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:18,501 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2774 states to 2774 states and 3273 transitions.
[2020-11-25 15:10:18,501 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 622
[2020-11-25 15:10:18,502 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 622
[2020-11-25 15:10:18,502 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2774 states and 3273 transitions.
[2020-11-25 15:10:18,506 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:18,506 INFO  L728         BuchiCegarLoop]: Abstraction has 2774 states and 3273 transitions.
[2020-11-25 15:10:18,509 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2774 states and 3273 transitions.
[2020-11-25 15:10:18,532 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2774 to 2360.
[2020-11-25 15:10:18,532 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2360 states.
[2020-11-25 15:10:18,536 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2360 states to 2360 states and 2771 transitions.
[2020-11-25 15:10:18,537 INFO  L751         BuchiCegarLoop]: Abstraction has 2360 states and 2771 transitions.
[2020-11-25 15:10:18,537 INFO  L631         BuchiCegarLoop]: Abstraction has 2360 states and 2771 transitions.
[2020-11-25 15:10:18,537 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:10:18,537 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2360 states and 2771 transitions.
[2020-11-25 15:10:18,541 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:18,541 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:18,541 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:18,543 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:18,543 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND TRUE   !(account_s562 != null)
[L2468]              revert := true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND TRUE   revert
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND TRUE   revert
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:18,547 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:18,547 INFO  L82        PathProgramCache]: Analyzing trace with hash -522566569, now seen corresponding path program 1 times
[2020-11-25 15:10:18,547 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:18,557 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:18,602 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 15:10:18,602 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 15:10:18,602 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 15:10:18,602 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:18,603 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 15:10:18,603 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 15:10:18,603 INFO  L87              Difference]: Start difference. First operand 2360 states and 2771 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 15:10:18,645 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:18,645 INFO  L93              Difference]: Finished difference Result 2368 states and 2778 transitions.
[2020-11-25 15:10:18,645 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:10:18,645 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2368 states and 2778 transitions.
[2020-11-25 15:10:18,653 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:18,661 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2368 states to 2359 states and 2769 transitions.
[2020-11-25 15:10:18,662 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 518
[2020-11-25 15:10:18,662 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 518
[2020-11-25 15:10:18,662 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2359 states and 2769 transitions.
[2020-11-25 15:10:18,664 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:18,665 INFO  L728         BuchiCegarLoop]: Abstraction has 2359 states and 2769 transitions.
[2020-11-25 15:10:18,667 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2359 states and 2769 transitions.
[2020-11-25 15:10:18,687 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2359 to 2359.
[2020-11-25 15:10:18,687 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2359 states.
[2020-11-25 15:10:18,691 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2359 states to 2359 states and 2769 transitions.
[2020-11-25 15:10:18,691 INFO  L751         BuchiCegarLoop]: Abstraction has 2359 states and 2769 transitions.
[2020-11-25 15:10:18,691 INFO  L631         BuchiCegarLoop]: Abstraction has 2359 states and 2769 transitions.
[2020-11-25 15:10:18,691 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:10:18,691 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2359 states and 2769 transitions.
[2020-11-25 15:10:18,696 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:10:18,696 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:18,696 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:18,698 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:18,698 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND TRUE   !(c_s165 >= a_s165)
[L1701]              revert := true;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND TRUE   revert
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND TRUE   revert
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND TRUE   revert
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:18,701 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:18,701 INFO  L82        PathProgramCache]: Analyzing trace with hash -1609490144, now seen corresponding path program 1 times
[2020-11-25 15:10:18,702 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:18,711 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:18,756 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 15:10:18,756 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:18,756 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 15:10:18,757 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:18,757 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 15:10:18,757 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 15:10:18,757 INFO  L87              Difference]: Start difference. First operand 2359 states and 2769 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 15:10:18,813 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:18,813 INFO  L93              Difference]: Finished difference Result 2767 states and 3171 transitions.
[2020-11-25 15:10:18,813 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 15:10:18,814 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2767 states and 3171 transitions.
[2020-11-25 15:10:18,823 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:18,833 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2767 states to 2594 states and 2967 transitions.
[2020-11-25 15:10:18,833 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 569
[2020-11-25 15:10:18,834 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 587
[2020-11-25 15:10:18,834 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2594 states and 2967 transitions.
[2020-11-25 15:10:18,837 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:18,838 INFO  L728         BuchiCegarLoop]: Abstraction has 2594 states and 2967 transitions.
[2020-11-25 15:10:18,840 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2594 states and 2967 transitions.
[2020-11-25 15:10:18,862 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2594 to 2356.
[2020-11-25 15:10:18,862 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2356 states.
[2020-11-25 15:10:18,866 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2356 states to 2356 states and 2671 transitions.
[2020-11-25 15:10:18,866 INFO  L751         BuchiCegarLoop]: Abstraction has 2356 states and 2671 transitions.
[2020-11-25 15:10:18,866 INFO  L631         BuchiCegarLoop]: Abstraction has 2356 states and 2671 transitions.
[2020-11-25 15:10:18,866 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:10:18,866 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2356 states and 2671 transitions.
[2020-11-25 15:10:18,870 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:18,870 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:18,870 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:18,871 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:18,872 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND FALSE  !(revert)
[L2475]              _totalSupply_ERC20[this] := __var_17;
[L2476]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2476]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2477]  COND FALSE  !(revert)
[L2480]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2481]              _balances_ERC20[this][account_s562] := __var_18;
[L2482]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2483]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND FALSE  !(revert)
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L693]   CALL        call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1964]              __ret_0_ := _allowances_ERC20[this][owner_s352][spender_s352];
[L693]   RET         call __ret_0_ := allowance~address~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L694]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _allowances_ERC20[this][owner_s352][spender_s352] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:18,875 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:18,875 INFO  L82        PathProgramCache]: Analyzing trace with hash 235033994, now seen corresponding path program 1 times
[2020-11-25 15:10:18,876 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:18,889 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:18,945 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 15:10:18,945 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:18,945 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:10:18,946 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:18,946 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:10:18,946 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:10:18,946 INFO  L87              Difference]: Start difference. First operand 2356 states and 2671 transitions. cyclomatic complexity: 317 Second operand 4 states.
[2020-11-25 15:10:18,972 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:18,972 INFO  L93              Difference]: Finished difference Result 2357 states and 2670 transitions.
[2020-11-25 15:10:18,972 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:10:18,972 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2357 states and 2670 transitions.
[2020-11-25 15:10:18,977 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:18,982 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2357 states to 2347 states and 2660 transitions.
[2020-11-25 15:10:18,982 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 546
[2020-11-25 15:10:18,983 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 546
[2020-11-25 15:10:18,983 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2347 states and 2660 transitions.
[2020-11-25 15:10:18,985 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:18,985 INFO  L728         BuchiCegarLoop]: Abstraction has 2347 states and 2660 transitions.
[2020-11-25 15:10:18,987 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2347 states and 2660 transitions.
[2020-11-25 15:10:19,002 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2347 to 2345.
[2020-11-25 15:10:19,002 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2345 states.
[2020-11-25 15:10:19,006 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2345 states to 2345 states and 2658 transitions.
[2020-11-25 15:10:19,006 INFO  L751         BuchiCegarLoop]: Abstraction has 2345 states and 2658 transitions.
[2020-11-25 15:10:19,006 INFO  L631         BuchiCegarLoop]: Abstraction has 2345 states and 2658 transitions.
[2020-11-25 15:10:19,006 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 15:10:19,006 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2345 states and 2658 transitions.
[2020-11-25 15:10:19,009 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:10:19,009 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:10:19,009 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:10:19,010 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:10:19,010 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_ERC200 := false;
[L2]                 call_allowance_ERC200 := false;
[L2]     CALL        call main();
[L4163]              assume null == 0;
[L4164]  CALL        call this := FreshRefGenerator__success();
[L1482]              havoc newRef;
[L1483]              assume Alloc[newRef] == false;
[L1484]              Alloc[newRef] := true;
[L1485]              assume newRef != null;
[L4164]  RET         call this := FreshRefGenerator__success();
[L4165]              assume now >= 0;
[L4166]              assume DType[this] == ETE;
[L4167]              assume msgvalue_MSG == 0;
[L4168]              gas := gas - 53000;
[L4169]  CALL        call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L970]               havoc __exception;
[L971]               revert := false;
[L972]   COND FALSE  !(__exception)
[L993]   CALL        call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L2784]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L2784]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2785]  COND FALSE  !(revert)
[L2788]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L2788]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2789]  COND FALSE  !(revert)
[L2792]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1852]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1634]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1619]              assume msgsender_MSG != null;
[L1620]              Balance[this] := 0;
[L1634]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1635]  COND FALSE  !(revert)
[L1852]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1853]  COND FALSE  !(revert)
[L1856]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1856]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1857]  COND FALSE  !(revert)
[L1860]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1824]              assume msgsender_MSG != null;
[L1825]              Balance[this] := 0;
[L1826]              _balances_ERC20[this] := zeroRefintArr();
[L1827]              sum__balances0[this] := 0;
[L1828]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1829]              sum__allowances1[this] := 0;
[L1830]              _totalSupply_ERC20[this] := 0;
[L1860]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1861]  COND FALSE  !(revert)
[L2792]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2793]  COND FALSE  !(revert)
[L2796]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L1562]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1499]              assume msgsender_MSG != null;
[L1500]              Balance[this] := 0;
[L1514]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1515]  COND FALSE  !(revert)
[L1562]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1563]  COND FALSE  !(revert)
[L1566]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1537]              assume msgsender_MSG != null;
[L1538]              Balance[this] := 0;
[L1539]              _name_ERC20Detailed[this] := 284814211;
[L1540]              _symbol_ERC20Detailed[this] := 284814211;
[L1541]              _decimals_ERC20Detailed[this] := 0;
[L1543]              _name_ERC20Detailed[this] := name_s99;
[L1544]              _symbol_ERC20Detailed[this] := symbol_s99;
[L1545]              _decimals_ERC20Detailed[this] := decimals_s99;
[L1566]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s99, symbol_s99, decimals_s99);
[L1567]  COND FALSE  !(revert)
[L2796]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -2042089454, -1962300938, 18);
[L2797]  COND FALSE  !(revert)
[L2800]  CALL        call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2732]              assume msgsender_MSG != null;
[L2733]              Balance[this] := 0;
[L2735]  COND TRUE   DType[this] == ETE
[L2736]  CALL        call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L1604]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2736]  RET         call __var_28 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2737]  COND FALSE  !(revert)
[L2743]              __var_27 := __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2744]  COND TRUE   DType[this] == ETE
[L2745]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2466]              __var_16 := null;
[L2467]  COND FALSE  !(!(account_s562 != null))
[L2471]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2471]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s562);
[L2472]  COND FALSE  !(revert)
[L2475]              _totalSupply_ERC20[this] := __var_17;
[L2476]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L1699]              c_s165 := (a_s165 + b_s165) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1700]  COND FALSE  !(!(c_s165 >= a_s165))
[L1704]              __ret_0_ := c_s165;
[L2476]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s562], amount_s562);
[L2477]  COND FALSE  !(revert)
[L2480]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s562];
[L2481]              _balances_ERC20[this][account_s562] := __var_18;
[L2482]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s562];
[L2483]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2745]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 1000000000 * (nonlinearPow(10, __var_28 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2746]  COND FALSE  !(revert)
[L2800]  RET         call ETE_ETE_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2801]  COND FALSE  !(revert)
[L993]   RET         call ETE_ETE__success(this, msgsender_MSG, msgvalue_MSG);
[L994]               assume !revert && gas >= 0;
[L4169]  RET         call ETE_ETE(this, msgsender_MSG, msgvalue_MSG);
[L4170]              assume !revert && gas >= 0;
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum__balances0 := sum__balances0;
[L679]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum__allowances1 := sum__allowances1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L685]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L686]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L687]               __tmp___balances_ERC20 := _balances_ERC20;
[L688]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L689]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L690]   CALL        call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1958]              __ret_0_ := __tmp___allowances_ERC20[this][owner_s352][spender_s352];
[L690]   RET         call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L691]               assume revert || gas < 0;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

Loop:
[L4173]  CALL        call CorralChoice_ETE(this);
[L4039]              havoc msgsender_MSG;
[L4040]              havoc msgvalue_MSG;
[L4041]              havoc choice;
[L4042]              havoc __ret_0_totalSupply;
[L4043]              havoc account_s317;
[L4044]              havoc __ret_0_balanceOf;
[L4045]              havoc recipient_s336;
[L4046]              havoc amount_s336;
[L4047]              havoc __ret_0_transfer;
[L4048]              havoc owner_s352;
[L4049]              havoc spender_s352;
[L4050]              havoc __ret_0_allowance;
[L4051]              havoc spender_s371;
[L4052]              havoc amount_s371;
[L4053]              havoc __ret_0_approve;
[L4054]              havoc sender_s407;
[L4055]              havoc recipient_s407;
[L4056]              havoc amount_s407;
[L4057]              havoc __ret_0_transferFrom;
[L4058]              havoc name_s99;
[L4059]              havoc symbol_s99;
[L4060]              havoc decimals_s99;
[L4061]              havoc __ret_0_name;
[L4062]              havoc __ret_0_symbol;
[L4063]              havoc __ret_0_decimals;
[L4064]              havoc spender_s434;
[L4065]              havoc addedValue_s434;
[L4066]              havoc __ret_0_increaseAllowance;
[L4067]              havoc spender_s462;
[L4068]              havoc subtractedValue_s462;
[L4069]              havoc __ret_0_decreaseAllowance;
[L4070]              havoc tmpNow;
[L4071]              havoc gas;
[L4072]              assume gas > 4000000 && gas <= 8000000;
[L4073]              tmpNow := now;
[L4074]              havoc now;
[L4075]              assume now > tmpNow;
[L4076]              assume msgsender_MSG != null;
[L4077]              assume DType[msgsender_MSG] != IERC20;
[L4078]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4079]              assume DType[msgsender_MSG] != Context;
[L4080]              assume DType[msgsender_MSG] != SafeMath;
[L4081]              assume DType[msgsender_MSG] != ERC20;
[L4082]              assume DType[msgsender_MSG] != ETE;
[L4083]              Alloc[msgsender_MSG] := true;
[L4084]  COND FALSE  !(choice == 11)
[L4090]  COND FALSE  !(choice == 10)
[L4096]  COND FALSE  !(choice == 9)
[L4103]  COND TRUE   choice == 8
[L4104]              gas := gas - 21000;
[L4105]  COND TRUE   gas >= 0
[L4106]              assume msgvalue_MSG == 0;
[L4107]  CALL        call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _allowances_ERC20[this][owner_s352][spender_s352] >= 0 && _allowances_ERC20[this][owner_s352][spender_s352] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_ERC200 := true;
[L2]                 call_allowance_ERC200 := false;
[L2]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum__balances0 := sum__balances0;
[L679]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum__allowances1 := sum__allowances1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L685]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L686]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L687]               __tmp___balances_ERC20 := _balances_ERC20;
[L688]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L689]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L690]   CALL        call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L1958]              __ret_0_ := __tmp___allowances_ERC20[this][owner_s352][spender_s352];
[L690]   RET         call __ret_0_ := allowance~address~address_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L691]               assume revert || gas < 0;
[L4107]  RET         call __ret_0_allowance := allowance~address~address_ERC20(this, msgsender_MSG, msgvalue_MSG, owner_s352, spender_s352);
[L4173]  RET         call CorralChoice_ETE(this);

[2020-11-25 15:10:19,013 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:10:19,013 INFO  L82        PathProgramCache]: Analyzing trace with hash 1070183965, now seen corresponding path program 1 times
[2020-11-25 15:10:19,014 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:10:19,023 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:10:19,056 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 15:10:19,057 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:10:19,057 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 15:10:19,057 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:10:19,057 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 15:10:19,057 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 15:10:19,058 INFO  L87              Difference]: Start difference. First operand 2345 states and 2658 transitions. cyclomatic complexity: 315 Second operand 5 states.
[2020-11-25 15:10:19,203 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:10:19,203 INFO  L93              Difference]: Finished difference Result 1568 states and 1748 transitions.
[2020-11-25 15:10:19,203 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:10:19,203 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1568 states and 1748 transitions.
[2020-11-25 15:10:19,206 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:10:19,206 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1568 states to 0 states and 0 transitions.
[2020-11-25 15:10:19,207 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 15:10:19,207 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 15:10:19,207 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 15:10:19,207 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:10:19,207 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:10:19,207 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:10:19,207 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:10:19,207 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 15:10:19,207 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 15:10:19,207 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:10:19,207 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 15:10:19,210 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:10:19 BasicIcfg
[2020-11-25 15:10:19,210 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:10:19,210 INFO  L168              Benchmark]: Toolchain (without parser) took 3821.25 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 426.8 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -121.8 MB). Peak memory consumption was 304.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,211 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.25 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,211 INFO  L168              Benchmark]: Boogie Preprocessor took 96.24 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,212 INFO  L168              Benchmark]: UtopiaSpecLang took 56.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,212 INFO  L168              Benchmark]: Boogie Printer took 15.02 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,212 INFO  L168              Benchmark]: RCFGBuilder took 687.22 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 806.4 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,212 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.43 ms. Allocated memory is still 1.0 GB. Free memory was 806.4 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,213 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1135.53 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 167.8 MB). Free memory was 802.8 MB in the beginning and 977.0 MB in the end (delta: -174.3 MB). Peak memory consumption was 165.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,213 INFO  L168              Benchmark]: BlockEncodingV2 took 131.06 ms. Allocated memory is still 1.2 GB. Free memory was 977.0 MB in the beginning and 911.3 MB in the end (delta: 65.7 MB). Peak memory consumption was 65.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,213 INFO  L168              Benchmark]: BuchiAutomizer took 1658.29 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 259.0 MB). Free memory was 911.3 MB in the beginning and 1.1 GB in the end (delta: -151.1 MB). Peak memory consumption was 107.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:10:19,216 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3842 locations, 7070 edges
  - StatisticsResult: Encoded RCFG
    3730 locations, 6757 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.25 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.24 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.61 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.02 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 687.22 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 806.4 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.43 ms. Allocated memory is still 1.0 GB. Free memory was 806.4 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1135.53 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 167.8 MB). Free memory was 802.8 MB in the beginning and 977.0 MB in the end (delta: -174.3 MB). Peak memory consumption was 165.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 131.06 ms. Allocated memory is still 1.2 GB. Free memory was 977.0 MB in the beginning and 911.3 MB in the end (delta: 65.7 MB). Peak memory consumption was 65.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1658.29 ms. Allocated memory was 1.2 GB in the beginning and 1.5 GB in the end (delta: 259.0 MB). Free memory was 911.3 MB in the beginning and 1.1 GB in the end (delta: -151.1 MB). Peak memory consumption was 107.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1502 locations, 2160 edges
  - StatisticsResult: BuchiProgram size
    3842 locations, 7070 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.6s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.3s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 654 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2360 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14596 SDtfs, 7822 SDslu, 23972 SDs, 0 SdLazy, 1974 SolverSat, 1960 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_ERC200) ==> ( <>(success_allowance_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
