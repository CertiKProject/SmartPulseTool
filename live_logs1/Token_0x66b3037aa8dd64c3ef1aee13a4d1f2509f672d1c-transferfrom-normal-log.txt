This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:58:17,667 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:58:17,667 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:58:17,675 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:58:17,675 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:58:17,676 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:58:17,676 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:58:17,678 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:58:17,679 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:58:17,680 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:58:17,680 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:58:17,681 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:58:17,681 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:58:17,682 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:58:17,683 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:58:17,683 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:58:17,684 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:58:17,685 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:58:17,686 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:58:17,687 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:58:17,688 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:58:17,688 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:58:17,690 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:58:17,690 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:58:17,690 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:58:17,690 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:58:17,690 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:58:17,691 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:58:17,691 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:58:17,691 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:58:17,691 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:58:17,692 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:58:17,692 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:58:17,692 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:58:17,693 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:58:17,693 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:58:17,693 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:58:17,693 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:58:17,693 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:58:17,694 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:58:17,694 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:58:17,694 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:58:17,700 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:58:17,700 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:58:17,700 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:58:17,701 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:58:17,701 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:58:17,701 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:58:17,701 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:58:17,702 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:58:17,702 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:58:17,718 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:58:17,727 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:58:17,729 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:58:17,730 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:58:17,730 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:58:17,731 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl
[2020-11-25 05:58:17,731 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl'
[2020-11-25 05:58:17,825 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:58:17,827 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:58:17,828 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:58:17,828 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:58:17,828 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:58:17,846 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,848 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,879 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,880 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,901 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,913 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,926 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,936 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:58:17,937 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:58:17,937 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:58:17,939 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:58:17,942 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/1) ...
[2020-11-25 05:58:17,960 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:58:17,965 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:58:17,973 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:58:17,980 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s271 && p1!=recipient_s271 ) && ( p2!=sender_s271 || p3!=msg.sender ) ) && sender_s271!=recipient_s271 ) && amount_s271<=_balances_ERC20[this][sender_s271] ) && amount_s271<=_allowances_ERC20[this][sender_s271][msg.sender] ) && ( _balances_ERC20[this][recipient_s271] + amount_s271 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s271>=0 ) && amount_s271<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s271]>=0 ) && _balances_ERC20[this][recipient_s271]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s271]>=0 ) && _balances_ERC20[this][sender_s271]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s271][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s271][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:58:17,987 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][sender_s271]==( ( old(_balances_ERC20[this][sender_s271]) ) - amount_s271 ) ) && _balances_ERC20[this][recipient_s271]==( ( old(_balances_ERC20[this][recipient_s271]) ) + amount_s271 ) ) && _allowances_ERC20[this][sender_s271][msg.sender]==( ( old(_allowances_ERC20[this][sender_s271][msg.sender]) ) - amount_s271 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _allowances_ERC20[this][p2][p3]==( old(_allowances_ERC20[this][p2][p3]) ) ) && governance_Token[this]==( old(governance_Token[this]) ) ) && minters_Token[this]==( old(minters_Token[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && exceptions_ERC20[this]==( old(exceptions_ERC20[this]) ) ) && uniswap_ERC20[this]==( old(uniswap_ERC20[this]) ) ) && _owner_ERC20[this]==( old(_owner_ERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s271,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_Token,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 05:58:17,997 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && governance_Token[this] == old(governance_Token[this]) && minters_Token[this] == old(minters_Token[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]))))
[2020-11-25 05:58:17,997 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:58:18,007 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:58:18 PropertyContainer
[2020-11-25 05:58:18,007 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:58:18,007 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:58:18,008 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:58:18,008 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:58:18,008 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/2) ...
[2020-11-25 05:58:18,009 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:58:18,009 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:58:18,028 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:58:18" (2/2) ...
[2020-11-25 05:58:18,029 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:58:18,029 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:58:18,029 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:58:18,029 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:58:18,030 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/2) ...
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:58:18,085 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:58:18,085 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:58:18,086 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:58:18,086 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:58:18,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:58:18,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:58:18,086 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:58:18,086 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:58:18,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:58:18,087 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20
[2020-11-25 05:58:18,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20
[2020-11-25 05:58:18,087 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20
[2020-11-25 05:58:18,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20
[2020-11-25 05:58:18,087 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20
[2020-11-25 05:58:18,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20
[2020-11-25 05:58:18,087 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:58:18,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:58:18,087 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:58:18,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:58:18,087 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:58:18,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:58:18,088 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:58:18,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:58:18,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token
[2020-11-25 05:58:18,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token
[2020-11-25 05:58:18,090 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token
[2020-11-25 05:58:18,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token
[2020-11-25 05:58:18,091 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token
[2020-11-25 05:58:18,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token
[2020-11-25 05:58:18,091 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token
[2020-11-25 05:58:18,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token
[2020-11-25 05:58:18,091 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token
[2020-11-25 05:58:18,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token
[2020-11-25 05:58:18,091 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token
[2020-11-25 05:58:18,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token
[2020-11-25 05:58:18,091 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token
[2020-11-25 05:58:18,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:58:18,092 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Token
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:58:18,093 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__success
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__fail
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__success
[2020-11-25 05:58:18,094 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__fail
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__success
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__fail
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:58:18,095 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:58:18,096 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:58:18,097 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:58:18,098 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__success
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure Token_Token__fail
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token__success
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_Token__fail
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token__success
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_Token__fail
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token__success
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_Token__fail
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token__success
[2020-11-25 05:58:18,099 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_Token__fail
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token__success
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_Token__fail
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token__success
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_Token__fail
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:58:18,100 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:58:18,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:58:18,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:58:18,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:58:18,100 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:58:18,101 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__fail
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__success
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__fail
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__success
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__fail
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__success
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:58:18,102 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:58:18,103 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:58:18,104 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:58:18,105 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__fail
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token_NoBaseCtor__success
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__fail
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure Token_Token__success
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token__fail
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_Token__success
[2020-11-25 05:58:18,106 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token__fail
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_Token__success
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token__fail
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_Token__success
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token__fail
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_Token__success
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token__fail
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_Token__success
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token__fail
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_Token__success
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:58:18,107 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:58:18,108 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:58:18,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:58:18,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Token
[2020-11-25 05:58:18,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:58:18,109 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:58:18,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:58:18,454 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:58:18,454 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:58:18,454 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:58:18,554 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:58:18,845 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:58:18,845 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:58:18,847 INFO  L202        PluginConnector]: Adding new model Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:58:18 BoogieIcfgContainer
[2020-11-25 05:58:18,847 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:58:18" (2/2) ...
[2020-11-25 05:58:18,847 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:58:18,848 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@34056dc8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:58:18, skipping insertion in model container
[2020-11-25 05:58:18,848 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:58:18,848 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:58:18,848 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:58:18,850 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:58:18,850 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/3) ...
[2020-11-25 05:58:18,850 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5457b99 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:58:18, skipping insertion in model container
[2020-11-25 05:58:18,851 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:58:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:58:18,885 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:58:18 NWAContainer
[2020-11-25 05:58:18,886 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:58:18,886 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:58:18,886 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:58:18,887 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:58:18,887 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:58:18" (3/4) ...
[2020-11-25 05:58:18,888 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@75b6076f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:58:18, skipping insertion in model container
[2020-11-25 05:58:18,888 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:58:18" (4/4) ...
[2020-11-25 05:58:18,891 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:58:18,895 INFO  L110   BuchiProductObserver]: Initial RCFG 2129 locations, 2892 edges
[2020-11-25 05:58:18,895 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:58:18,907 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:58:20,465 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:58:20,475 INFO  L110   BuchiProductObserver]: BuchiProgram size 5244 locations, 9373 edges
[2020-11-25 05:58:20,476 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:58:20 BoogieIcfgContainer
[2020-11-25 05:58:20,476 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:58:20,476 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:58:20,476 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:58:20,478 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:58:20,479 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:58:20" (1/1) ...
[2020-11-25 05:58:20,655 INFO  L313           BlockEncoder]: Initial Icfg 5244 locations, 9373 edges
[2020-11-25 05:58:20,655 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:58:20,656 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:58:20,656 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:58:20,657 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:58:20,670 INFO  L70    emoveInfeasibleEdges]: Removed 156 edges and 15 locations because of local infeasibility
[2020-11-25 05:58:20,682 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-25 05:58:20,695 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:58:20,699 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:58:20,705 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:58:20,705 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:58:20,709 INFO  L313           BlockEncoder]: Encoded RCFG 5140 locations, 9084 edges
[2020-11-25 05:58:20,709 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:58:20 BasicIcfg
[2020-11-25 05:58:20,710 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:58:20,710 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:58:20,710 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:58:20,712 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:58:20,713 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:58:20,713 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:58:17" (1/6) ...
[2020-11-25 05:58:20,715 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@304643de and model type Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:58:20, skipping insertion in model container
[2020-11-25 05:58:20,715 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:58:20,715 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:58:18" (2/6) ...
[2020-11-25 05:58:20,715 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@304643de and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:58:20, skipping insertion in model container
[2020-11-25 05:58:20,715 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:58:20,715 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:58:18" (3/6) ...
[2020-11-25 05:58:20,715 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@304643de and model type Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:58:20, skipping insertion in model container
[2020-11-25 05:58:20,716 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:58:20,716 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:58:18" (4/6) ...
[2020-11-25 05:58:20,716 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@304643de and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:58:20, skipping insertion in model container
[2020-11-25 05:58:20,716 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:58:20,716 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:58:20" (5/6) ...
[2020-11-25 05:58:20,716 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@304643de and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:58:20, skipping insertion in model container
[2020-11-25 05:58:20,717 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:58:20,717 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:58:20" (6/6) ...
[2020-11-25 05:58:20,718 INFO  L404   chiAutomizerObserver]: Analyzing ICFG Token_0x66b3037aa8dd64c3ef1aee13a4d1f2509f672d1c_transferfrom-normal.bpl_BEv2
[2020-11-25 05:58:20,755 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:58:20,756 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:58:20,756 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:58:20,756 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:58:20,756 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:58:20,756 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:58:20,756 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:58:20,756 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:58:20,756 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:58:20,805 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5140 states.
[2020-11-25 05:58:20,868 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:58:20,868 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:58:20,868 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:58:20,878 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:58:20,878 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:58:20,878 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:58:20,878 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5140 states.
[2020-11-25 05:58:20,908 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:58:20,908 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:58:20,908 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:58:20,910 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:58:20,910 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND TRUE   revert
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND TRUE   choice == 20
[L5556]              gas := gas - 21000;
[L5557]  COND FALSE  !(gas >= 0)
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:58:20,928 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:58:20,928 INFO  L82        PathProgramCache]: Analyzing trace with hash -390857721, now seen corresponding path program 1 times
[2020-11-25 05:58:20,933 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:58:20,959 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:58:21,000 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:58:21,003 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:58:21,003 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:58:21,274 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:58:21,286 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:58:21,287 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:58:21,288 INFO  L87              Difference]: Start difference. First operand 5140 states. Second operand 3 states.
[2020-11-25 05:58:21,545 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:58:21,546 INFO  L93              Difference]: Finished difference Result 4722 states and 7685 transitions.
[2020-11-25 05:58:21,546 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:58:21,547 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4722 states and 7685 transitions.
[2020-11-25 05:58:21,580 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:58:21,616 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4722 states to 4722 states and 7685 transitions.
[2020-11-25 05:58:21,617 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2020-11-25 05:58:21,621 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1206
[2020-11-25 05:58:21,622 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4722 states and 7685 transitions.
[2020-11-25 05:58:21,636 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:58:21,637 INFO  L728         BuchiCegarLoop]: Abstraction has 4722 states and 7685 transitions.
[2020-11-25 05:58:21,652 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4722 states and 7685 transitions.
[2020-11-25 05:58:21,725 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4722 to 4014.
[2020-11-25 05:58:21,726 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4014 states.
[2020-11-25 05:58:21,735 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4014 states to 4014 states and 6462 transitions.
[2020-11-25 05:58:21,736 INFO  L751         BuchiCegarLoop]: Abstraction has 4014 states and 6462 transitions.
[2020-11-25 05:58:21,736 INFO  L631         BuchiCegarLoop]: Abstraction has 4014 states and 6462 transitions.
[2020-11-25 05:58:21,736 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:58:21,736 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4014 states and 6462 transitions.
[2020-11-25 05:58:21,747 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:58:21,747 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:58:21,747 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:58:21,749 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:58:21,749 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND TRUE   !(msgsender_MSG == governance_Token[this])
[L3904]              revert := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND TRUE   revert
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND TRUE   choice == 20
[L5556]              gas := gas - 21000;
[L5557]  COND FALSE  !(gas >= 0)
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:58:21,752 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:58:21,752 INFO  L82        PathProgramCache]: Analyzing trace with hash -1634011944, now seen corresponding path program 1 times
[2020-11-25 05:58:21,753 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:58:21,765 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:58:21,791 INFO  L134       CoverageAnalysis]: Checked inductivity of 19 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 19 trivial. 0 not checked.
[2020-11-25 05:58:21,791 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:58:21,792 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:58:21,793 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:58:21,793 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:58:21,793 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:58:21,793 INFO  L87              Difference]: Start difference. First operand 4014 states and 6462 transitions. cyclomatic complexity: 2450 Second operand 4 states.
[2020-11-25 05:58:22,127 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:58:22,128 INFO  L93              Difference]: Finished difference Result 3726 states and 4265 transitions.
[2020-11-25 05:58:22,128 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:58:22,128 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3726 states and 4265 transitions.
[2020-11-25 05:58:22,139 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:58:22,151 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3726 states to 3726 states and 4265 transitions.
[2020-11-25 05:58:22,152 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 938
[2020-11-25 05:58:22,152 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 991
[2020-11-25 05:58:22,152 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3726 states and 4265 transitions.
[2020-11-25 05:58:22,155 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:58:22,155 INFO  L728         BuchiCegarLoop]: Abstraction has 3726 states and 4265 transitions.
[2020-11-25 05:58:22,158 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3726 states and 4265 transitions.
[2020-11-25 05:58:22,186 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3726 to 3718.
[2020-11-25 05:58:22,186 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3718 states.
[2020-11-25 05:58:22,192 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3718 states to 3718 states and 4257 transitions.
[2020-11-25 05:58:22,192 INFO  L751         BuchiCegarLoop]: Abstraction has 3718 states and 4257 transitions.
[2020-11-25 05:58:22,192 INFO  L631         BuchiCegarLoop]: Abstraction has 3718 states and 4257 transitions.
[2020-11-25 05:58:22,192 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:58:22,192 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3718 states and 4257 transitions.
[2020-11-25 05:58:22,198 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:58:22,198 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:58:22,198 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:58:22,200 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:58:22,200 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND TRUE   !(msgsender_MSG == governance_Token[this])
[L3904]              revert := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND TRUE   revert
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND FALSE  !(choice == 16)
[L5587]  COND TRUE   choice == 15
[L5588]              gas := gas - 21000;
[L5589]  COND TRUE   gas >= 0
[L5590]              assume amount_s271 >= 0 && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5591]              assume msgvalue_MSG == 0;
[L5592]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s271 && p1 != recipient_s271) && (p2 != sender_s271 || p3 != msgsender_MSG)) && sender_s271 != recipient_s271) && amount_s271 <= _balances_ERC20[this][sender_s271]) && amount_s271 <= _allowances_ERC20[this][sender_s271][msgsender_MSG]) && _balances_ERC20[this][recipient_s271] + amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s271 >= 0) && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s271] >= 0) && _balances_ERC20[this][recipient_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s271] >= 0) && _balances_ERC20[this][sender_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s271][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s271][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L851]               havoc __exception;
[L852]               revert := false;
[L853]   COND FALSE  !(__exception)
[L882]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3038]  COND TRUE   DType[this] == Token
[L3039]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3344]              __var_15 := null;
[L3345]  COND TRUE   !(sender_s383 != null)
[L3346]              revert := true;
[L3039]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3040]  COND TRUE   revert
[L882]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L883]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s271] == old(_balances_ERC20[this][sender_s271]) - amount_s271) && _balances_ERC20[this][recipient_s271] == old(_balances_ERC20[this][recipient_s271]) + amount_s271) && _allowances_ERC20[this][sender_s271][msgsender_MSG] == old(_allowances_ERC20[this][sender_s271][msgsender_MSG]) - amount_s271) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L3]                 revert := revert_hold;
[L5592]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L5702]  RET         call CorralChoice_Token(this);

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND FALSE  !(choice == 16)
[L5587]  COND TRUE   choice == 15
[L5588]              gas := gas - 21000;
[L5589]  COND TRUE   gas >= 0
[L5590]              assume amount_s271 >= 0 && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5591]              assume msgvalue_MSG == 0;
[L5592]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s271 && p1 != recipient_s271) && (p2 != sender_s271 || p3 != msgsender_MSG)) && sender_s271 != recipient_s271) && amount_s271 <= _balances_ERC20[this][sender_s271]) && amount_s271 <= _allowances_ERC20[this][sender_s271][msgsender_MSG]) && _balances_ERC20[this][recipient_s271] + amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s271 >= 0) && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s271] >= 0) && _balances_ERC20[this][recipient_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s271] >= 0) && _balances_ERC20[this][sender_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s271][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s271][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L851]               havoc __exception;
[L852]               revert := false;
[L853]   COND FALSE  !(__exception)
[L882]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3038]  COND TRUE   DType[this] == Token
[L3039]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3344]              __var_15 := null;
[L3345]  COND TRUE   !(sender_s383 != null)
[L3346]              revert := true;
[L3039]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3040]  COND TRUE   revert
[L882]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L883]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s271] == old(_balances_ERC20[this][sender_s271]) - amount_s271) && _balances_ERC20[this][recipient_s271] == old(_balances_ERC20[this][recipient_s271]) + amount_s271) && _allowances_ERC20[this][sender_s271][msgsender_MSG] == old(_allowances_ERC20[this][sender_s271][msgsender_MSG]) - amount_s271) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && governance_Token[this] == old(governance_Token[this])) && minters_Token[this] == old(minters_Token[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this]));
[L3]                 revert := revert_hold;
[L5592]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:58:22,204 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:58:22,204 INFO  L82        PathProgramCache]: Analyzing trace with hash -363840773, now seen corresponding path program 1 times
[2020-11-25 05:58:22,205 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:58:22,215 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:58:22,264 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:58:22,265 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:58:22,265 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:58:22,265 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:58:22,265 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:58:22,266 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:58:22,266 INFO  L87              Difference]: Start difference. First operand 3718 states and 4257 transitions. cyclomatic complexity: 541 Second operand 3 states.
[2020-11-25 05:58:22,320 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:58:22,320 INFO  L93              Difference]: Finished difference Result 4422 states and 5003 transitions.
[2020-11-25 05:58:22,320 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:58:22,320 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4422 states and 5003 transitions.
[2020-11-25 05:58:22,334 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:58:22,350 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4422 states to 4180 states and 4725 transitions.
[2020-11-25 05:58:22,350 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1116
[2020-11-25 05:58:22,366 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1136
[2020-11-25 05:58:22,366 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4180 states and 4725 transitions.
[2020-11-25 05:58:22,370 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:58:22,370 INFO  L728         BuchiCegarLoop]: Abstraction has 4180 states and 4725 transitions.
[2020-11-25 05:58:22,373 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4180 states and 4725 transitions.
[2020-11-25 05:58:22,395 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4180 to 3572.
[2020-11-25 05:58:22,395 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3572 states.
[2020-11-25 05:58:22,400 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3572 states to 3572 states and 3965 transitions.
[2020-11-25 05:58:22,400 INFO  L751         BuchiCegarLoop]: Abstraction has 3572 states and 3965 transitions.
[2020-11-25 05:58:22,400 INFO  L631         BuchiCegarLoop]: Abstraction has 3572 states and 3965 transitions.
[2020-11-25 05:58:22,400 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:58:22,400 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3572 states and 3965 transitions.
[2020-11-25 05:58:22,404 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:58:22,404 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:58:22,404 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:58:22,406 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:58:22,406 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5692]              assume null == 0;
[L5693]  CALL        call this := FreshRefGenerator__success();
[L2548]              havoc newRef;
[L2549]              assume Alloc[newRef] == false;
[L2550]              Alloc[newRef] := true;
[L2551]              assume newRef != null;
[L5693]  RET         call this := FreshRefGenerator__success();
[L5694]              assume now >= 0;
[L5695]              assume DType[this] == Token;
[L5696]              assume msgvalue_MSG == 0;
[L5697]              gas := gas - 53000;
[L5698]  CALL        call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3907]              minters_Token[this][_minter_s789] := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND FALSE  !(revert)
[L3778]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3860]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3864]  COND TRUE   DType[this] == Token
[L3865]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3400]              __var_19 := null;
[L3401]  COND FALSE  !(!(account_s426 != null))
[L3405]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3405]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3406]  COND FALSE  !(revert)
[L3409]              _totalSupply_ERC20[this] := __var_20;
[L3410]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3410]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3411]  COND FALSE  !(revert)
[L3414]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3415]              _balances_ERC20[this][account_s426] := __var_21;
[L3416]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3417]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3865]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3866]  COND FALSE  !(revert)
[L3778]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3779]  COND FALSE  !(revert)
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L5699]              assume !revert && gas >= 0;
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND FALSE  !(choice == 16)
[L5587]  COND TRUE   choice == 15
[L5588]              gas := gas - 21000;
[L5589]  COND TRUE   gas >= 0
[L5590]              assume amount_s271 >= 0 && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5591]              assume msgvalue_MSG == 0;
[L5592]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s271 && p1 != recipient_s271) && (p2 != sender_s271 || p3 != msgsender_MSG)) && sender_s271 != recipient_s271) && amount_s271 <= _balances_ERC20[this][sender_s271]) && amount_s271 <= _allowances_ERC20[this][sender_s271][msgsender_MSG]) && _balances_ERC20[this][recipient_s271] + amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s271 >= 0) && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s271] >= 0) && _balances_ERC20[this][recipient_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s271] >= 0) && _balances_ERC20[this][sender_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s271][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s271][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L851]               havoc __exception;
[L852]               revert := false;
[L853]   COND TRUE   __exception
[L854]               __tmp__Balance := Balance;
[L855]               __tmp__DType := DType;
[L856]               __tmp__Alloc := Alloc;
[L857]               __tmp__balance_ADDR := balance_ADDR;
[L858]               __tmp__M_Ref_int := M_Ref_int;
[L859]               __tmp__sum__balances0 := sum__balances0;
[L860]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L861]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L862]               __tmp__sum__allowances1 := sum__allowances1;
[L863]               __tmp__M_Ref_bool := M_Ref_bool;
[L864]               __tmp__sum_exceptions2 := sum_exceptions2;
[L865]               __tmp__sum_minters3 := sum_minters3;
[L866]               __tmp__Length := Length;
[L867]               __tmp__now := now;
[L868]               __tmp___balances_ERC20 := _balances_ERC20;
[L869]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L870]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L871]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L872]               __tmp___owner_ERC20 := _owner_ERC20;
[L873]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L874]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L875]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L876]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L877]               __tmp__governance_Token := governance_Token;
[L878]               __tmp__minters_Token := minters_Token;
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2973]  COND TRUE   __tmp__DType[this] == Token
[L2974]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3312]              __var_15 := null;
[L3313]  COND TRUE   !(sender_s383 != null)
[L3314]              revert := true;
[L2974]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2975]  COND TRUE   revert
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L880]               assume revert || gas < 0;
[L5592]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L5702]  RET         call CorralChoice_Token(this);

Loop:
[L5702]  CALL        call CorralChoice_Token(this);
[L5497]              havoc msgsender_MSG;
[L5498]              havoc msgvalue_MSG;
[L5499]              havoc choice;
[L5500]              havoc __ret_0_totalSupply;
[L5501]              havoc account_s181;
[L5502]              havoc __ret_0_balanceOf;
[L5503]              havoc recipient_s200;
[L5504]              havoc amount_s200;
[L5505]              havoc __ret_0_transfer;
[L5506]              havoc owner_s216;
[L5507]              havoc spender_s216;
[L5508]              havoc __ret_0_allowance;
[L5509]              havoc spender_s235;
[L5510]              havoc amount_s235;
[L5511]              havoc __ret_0_approve;
[L5512]              havoc sender_s271;
[L5513]              havoc recipient_s271;
[L5514]              havoc amount_s271;
[L5515]              havoc __ret_0_transferFrom;
[L5516]              havoc owner_s119;
[L5517]              havoc someAddress_s143;
[L5518]              havoc spender_s298;
[L5519]              havoc addedValue_s298;
[L5520]              havoc __ret_0_increaseAllowance;
[L5521]              havoc spender_s326;
[L5522]              havoc subtractedValue_s326;
[L5523]              havoc __ret_0_decreaseAllowance;
[L5524]              havoc name_s544;
[L5525]              havoc symbol_s544;
[L5526]              havoc decimals_s544;
[L5527]              havoc __ret_0_name;
[L5528]              havoc __ret_0_symbol;
[L5529]              havoc __ret_0_decimals;
[L5530]              havoc __ret_0_governance;
[L5531]              havoc arg812_s0;
[L5532]              havoc __ret_0_minters;
[L5533]              havoc name_s730;
[L5534]              havoc ticker_s730;
[L5535]              havoc amount_s730;
[L5536]              havoc account_s751;
[L5537]              havoc amount_s751;
[L5538]              havoc _governance_s769;
[L5539]              havoc _minter_s789;
[L5540]              havoc _minter_s809;
[L5541]              havoc tmpNow;
[L5542]              havoc gas;
[L5543]              assume gas > 4000000 && gas <= 8000000;
[L5544]              tmpNow := now;
[L5545]              havoc now;
[L5546]              assume now > tmpNow;
[L5547]              assume msgsender_MSG != null;
[L5548]              assume DType[msgsender_MSG] != IERC20;
[L5549]              assume DType[msgsender_MSG] != Context;
[L5550]              assume DType[msgsender_MSG] != ERC20;
[L5551]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5552]              assume DType[msgsender_MSG] != SafeMath;
[L5553]              assume DType[msgsender_MSG] != Token;
[L5554]              Alloc[msgsender_MSG] := true;
[L5555]  COND FALSE  !(choice == 20)
[L5561]  COND FALSE  !(choice == 19)
[L5567]  COND FALSE  !(choice == 18)
[L5574]  COND FALSE  !(choice == 17)
[L5580]  COND FALSE  !(choice == 16)
[L5587]  COND TRUE   choice == 15
[L5588]              gas := gas - 21000;
[L5589]  COND TRUE   gas >= 0
[L5590]              assume amount_s271 >= 0 && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5591]              assume msgvalue_MSG == 0;
[L5592]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s271 && p1 != recipient_s271) && (p2 != sender_s271 || p3 != msgsender_MSG)) && sender_s271 != recipient_s271) && amount_s271 <= _balances_ERC20[this][sender_s271]) && amount_s271 <= _allowances_ERC20[this][sender_s271][msgsender_MSG]) && _balances_ERC20[this][recipient_s271] + amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s271 >= 0) && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s271] >= 0) && _balances_ERC20[this][recipient_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s271] >= 0) && _balances_ERC20[this][sender_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s271][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s271][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L851]               havoc __exception;
[L852]               revert := false;
[L853]   COND TRUE   __exception
[L854]               __tmp__Balance := Balance;
[L855]               __tmp__DType := DType;
[L856]               __tmp__Alloc := Alloc;
[L857]               __tmp__balance_ADDR := balance_ADDR;
[L858]               __tmp__M_Ref_int := M_Ref_int;
[L859]               __tmp__sum__balances0 := sum__balances0;
[L860]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L861]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L862]               __tmp__sum__allowances1 := sum__allowances1;
[L863]               __tmp__M_Ref_bool := M_Ref_bool;
[L864]               __tmp__sum_exceptions2 := sum_exceptions2;
[L865]               __tmp__sum_minters3 := sum_minters3;
[L866]               __tmp__Length := Length;
[L867]               __tmp__now := now;
[L868]               __tmp___balances_ERC20 := _balances_ERC20;
[L869]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L870]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L871]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L872]               __tmp___owner_ERC20 := _owner_ERC20;
[L873]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L874]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L875]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L876]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L877]               __tmp__governance_Token := governance_Token;
[L878]               __tmp__minters_Token := minters_Token;
[L879]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2973]  COND TRUE   __tmp__DType[this] == Token
[L2974]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3312]              __var_15 := null;
[L3313]  COND TRUE   !(sender_s383 != null)
[L3314]              revert := true;
[L2974]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2975]  COND TRUE   revert
[L879]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L880]               assume revert || gas < 0;
[L5592]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L5702]  RET         call CorralChoice_Token(this);

[2020-11-25 05:58:22,413 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:58:22,413 INFO  L82        PathProgramCache]: Analyzing trace with hash 1842704330, now seen corresponding path program 1 times
[2020-11-25 05:58:22,414 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:58:22,454 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:22,483 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:22,574 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:58:22,574 INFO  L82        PathProgramCache]: Analyzing trace with hash 1201963387, now seen corresponding path program 1 times
[2020-11-25 05:58:22,575 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:58:22,589 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:22,596 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:22,612 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:58:22,612 INFO  L82        PathProgramCache]: Analyzing trace with hash 7627076, now seen corresponding path program 1 times
[2020-11-25 05:58:22,613 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:58:22,642 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:22,674 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 05:58:22,952 WARN  L188               SmtUtils]: Spent 149.00 ms on a formula simplification. DAG size of input: 184 DAG size of output: 177
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.003s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-25 05:58:23,230 WARN  L188               SmtUtils]: Spent 228.00 ms on a formula simplification. DAG size of input: 135 DAG size of output: 129
[2020-11-25 05:58:23,399 WARN  L188               SmtUtils]: Spent 167.00 ms on a formula simplification that was a NOOP. DAG size: 309
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.006s / 0.01s total
Resizing node table from 15859 to 31699
[2020-11-25 05:58:24,192 WARN  L188               SmtUtils]: Spent 759.00 ms on a formula simplification. DAG size of input: 253 DAG size of output: 253
[2020-11-25 05:58:25,172 WARN  L188               SmtUtils]: Spent 976.00 ms on a formula simplification. DAG size of input: 314 DAG size of output: 295
Garbage collection #1: 109 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.0s / 0.004s total
Resizing node table from 26597 to 53189
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 05:58:25,415 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification. DAG size of input: 182 DAG size of output: 176
[2020-11-25 05:58:25,713 WARN  L188               SmtUtils]: Spent 296.00 ms on a formula simplification that was a NOOP. DAG size: 371
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-25 05:58:26,270 WARN  L188               SmtUtils]: Spent 546.00 ms on a formula simplification. DAG size of input: 298 DAG size of output: 298
[2020-11-25 05:58:26,526 WARN  L188               SmtUtils]: Spent 253.00 ms on a formula simplification that was a NOOP. DAG size: 298
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 05:58:27,108 WARN  L188               SmtUtils]: Spent 567.00 ms on a formula simplification. DAG size of input: 197 DAG size of output: 186
[2020-11-25 05:58:27,119 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-25 05:58:27,760 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 217
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
[2020-11-25 05:58:28,006 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification. DAG size of input: 152 DAG size of output: 150
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 05:58:28,162 WARN  L188               SmtUtils]: Spent 135.00 ms on a formula simplification that was a NOOP. DAG size: 304
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 05:58:28,597 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification that was a NOOP. DAG size: 309
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 05:58:29,222 WARN  L188               SmtUtils]: Spent 615.00 ms on a formula simplification. DAG size of input: 253 DAG size of output: 253
[2020-11-25 05:58:30,097 WARN  L188               SmtUtils]: Spent 873.00 ms on a formula simplification. DAG size of input: 313 DAG size of output: 295
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 05:58:30,319 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification. DAG size of input: 182 DAG size of output: 176
[2020-11-25 05:58:30,534 WARN  L188               SmtUtils]: Spent 214.00 ms on a formula simplification that was a NOOP. DAG size: 371
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 05:58:31,144 WARN  L188               SmtUtils]: Spent 601.00 ms on a formula simplification. DAG size of input: 298 DAG size of output: 298
[2020-11-25 05:58:32,845 WARN  L188               SmtUtils]: Spent 1.70 s on a formula simplification. DAG size of input: 544 DAG size of output: 528
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 05:58:33,204 WARN  L188               SmtUtils]: Spent 339.00 ms on a formula simplification. DAG size of input: 229 DAG size of output: 222
[2020-11-25 05:58:33,426 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification that was a NOOP. DAG size: 352
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 05:58:34,556 WARN  L188               SmtUtils]: Spent 1.12 s on a formula simplification. DAG size of input: 250 DAG size of output: 240
[2020-11-25 05:58:35,318 WARN  L188               SmtUtils]: Spent 760.00 ms on a formula simplification. DAG size of input: 372 DAG size of output: 371
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
Garbage collection #8: 16103 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 16103 to 32203
Garbage collection #9: 32203 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 32203 to 64403
Garbage collection #10: 64403 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 64403 to 114377
[2020-11-25 05:58:37,143 WARN  L188               SmtUtils]: Spent 1.80 s on a formula simplification. DAG size of input: 392 DAG size of output: 366
[2020-11-25 05:58:37,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:37,177 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:58:37,187 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:58:37 BasicIcfg
[2020-11-25 05:58:37,187 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:58:37,187 INFO  L168              Benchmark]: Toolchain (without parser) took 19361.92 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.4 GB). Free memory was 935.2 MB in the beginning and 1.7 GB in the end (delta: -747.4 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,187 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,188 INFO  L168              Benchmark]: Boogie Preprocessor took 108.85 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,188 INFO  L168              Benchmark]: UtopiaSpecLang took 70.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.3 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,188 INFO  L168              Benchmark]: Boogie Printer took 21.24 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,189 INFO  L168              Benchmark]: RCFGBuilder took 818.79 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 752.4 MB in the end (delta: 150.6 MB). Peak memory consumption was 150.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,189 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.50 ms. Allocated memory is still 1.0 GB. Free memory was 752.4 MB in the beginning and 748.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,189 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1589.97 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 172.5 MB). Free memory was 748.8 MB in the beginning and 743.1 MB in the end (delta: 5.7 MB). Peak memory consumption was 178.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,189 INFO  L168              Benchmark]: BlockEncodingV2 took 233.64 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 51.9 MB). Free memory was 743.1 MB in the beginning and 1.1 GB in the end (delta: -360.8 MB). Peak memory consumption was 128.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,190 INFO  L168              Benchmark]: BuchiAutomizer took 16476.79 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: -578.8 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 05:58:37,192 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5244 locations, 9373 edges
  - StatisticsResult: Encoded RCFG
    5140 locations, 9084 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 108.85 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.56 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.3 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.24 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 818.79 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 752.4 MB in the end (delta: 150.6 MB). Peak memory consumption was 150.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.50 ms. Allocated memory is still 1.0 GB. Free memory was 752.4 MB in the beginning and 748.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1589.97 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 172.5 MB). Free memory was 748.8 MB in the beginning and 743.1 MB in the end (delta: 5.7 MB). Peak memory consumption was 178.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 233.64 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 51.9 MB). Free memory was 743.1 MB in the beginning and 1.1 GB in the end (delta: -360.8 MB). Peak memory consumption was 128.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 16476.79 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 1.1 GB in the beginning and 1.7 GB in the end (delta: -578.8 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2129 locations, 2892 edges
  - StatisticsResult: BuchiProgram size
    5244 locations, 9373 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 4 locations. The remainder module has 3572 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 16.4s and 4 iterations.  TraceHistogramMax:3. Analysis of lassos took 15.2s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 1324 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4014 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14521 SDtfs, 10550 SDslu, 8258 SDs, 0 SdLazy, 1812 SolverSat, 2399 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639955) = (new Token)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639950, name : 115792089237316195423570985008687907853269984665640564039457584007913129639951, ticker : 115792089237316195423570985008687907853269984665640564039457584007913129639948, amount : 115792089237316195423570985008687907853269984665640564039457584007913129639937});
[L1448]              havoc __exception;
[L1449]              revert := false;
[L1450]  COND FALSE  !(__exception)
[L1479]  CALL        call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3818]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L3818]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3819]  COND FALSE  !(revert)
[L3822]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3822]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3823]  COND FALSE  !(revert)
[L3827]              havoc __var_29;
[L3828]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L2682]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2612]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2597]              assume msgsender_MSG != null;
[L2598]              Balance[this] := 0;
[L2612]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2613]  COND FALSE  !(revert)
[L2682]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2683]  COND FALSE  !(revert)
[L2686]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L2686]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2687]  COND FALSE  !(revert)
[L2690]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2650]              assume msgsender_MSG != null;
[L2651]              Balance[this] := 0;
[L2652]              _balances_ERC20[this] := zeroRefintArr();
[L2653]              sum__balances0[this] := 0;
[L2654]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2655]              sum__allowances1[this] := 0;
[L2656]              exceptions_ERC20[this] := zeroRefboolArr();
[L2657]              uniswap_ERC20[this] := null;
[L2658]              _owner_ERC20[this] := null;
[L2659]              _totalSupply_ERC20[this] := 0;
[L2661]              _owner_ERC20[this] := owner_s119;
[L2690]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s119);
[L2691]  COND FALSE  !(revert)
[L3828]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_29);
[L3829]  COND FALSE  !(revert)
[L3832]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3550]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2580]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2565]              assume msgsender_MSG != null;
[L2566]              Balance[this] := 0;
[L2580]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2581]  COND FALSE  !(revert)
[L3550]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3551]  COND FALSE  !(revert)
[L3554]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3525]              assume msgsender_MSG != null;
[L3526]              Balance[this] := 0;
[L3527]              _name_ERC20Detailed[this] := -1081022691;
[L3528]              _symbol_ERC20Detailed[this] := -1081022691;
[L3529]              _decimals_ERC20Detailed[this] := 0;
[L3531]              _name_ERC20Detailed[this] := name_s544;
[L3532]              _symbol_ERC20Detailed[this] := symbol_s544;
[L3533]              _decimals_ERC20Detailed[this] := decimals_s544;
[L3554]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s544, symbol_s544, decimals_s544);
[L3555]  COND FALSE  !(revert)
[L3832]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, 18);
[L3833]  COND FALSE  !(revert)
[L3836]  CALL        call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3764]              assume msgsender_MSG != null;
[L3765]              Balance[this] := 0;
[L3766]              governance_Token[this] := null;
[L3767]              minters_Token[this] := zeroRefboolArr();
[L3770]              havoc __var_27;
[L3771]              governance_Token[this] := __var_27;
[L3773]              havoc __var_28;
[L3774]  CALL        call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3903]  COND FALSE  !(!(msgsender_MSG == governance_Token[this]))
[L3907]              minters_Token[this][_minter_s789] := true;
[L3774]  RET         call addMinter~address_Token__success(this, msgsender_MSG, msgvalue_MSG, __var_28);
[L3775]  COND FALSE  !(revert)
[L3778]  CALL        call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3860]  COND FALSE  !(!minters_Token[this][msgsender_MSG])
[L3864]  COND TRUE   DType[this] == Token
[L3865]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3400]              __var_19 := null;
[L3401]  COND FALSE  !(!(account_s426 != null))
[L3405]  CALL        call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3405]  RET         call __var_20 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s426);
[L3406]  COND FALSE  !(revert)
[L3409]              _totalSupply_ERC20[this] := __var_20;
[L3410]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3643]              c_s594 := (a_s594 + b_s594) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3644]  COND FALSE  !(!(c_s594 >= a_s594))
[L3648]              __ret_0_ := c_s594;
[L3410]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s426], amount_s426);
[L3411]  COND FALSE  !(revert)
[L3414]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s426];
[L3415]              _balances_ERC20[this][account_s426] := __var_21;
[L3416]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s426];
[L3417]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3865]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s751, amount_s751);
[L3866]  COND FALSE  !(revert)
[L3778]  RET         call mint~address~uint256_Token__success(this, msgsender_MSG, msgvalue_MSG, governance_Token[this], amount_s730);
[L3779]  COND FALSE  !(revert)
[L3836]  RET         call Token_Token_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L3837]  COND FALSE  !(revert)
[L1479]  RET         call Token_Token__success(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
[L1480]              assume !revert && gas >= 0;
[L5698]  RET         call Token_Token(this, msgsender_MSG, msgvalue_MSG, name_s730, ticker_s730, amount_s730);
ERC20(115792089237316195423570985008687907853269984665640564039457584007913129639955).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639939, sender : 0, recipient : 115792089237316195423570985008687907853269984665640564039457584007913129639950, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s271 && p1 != recipient_s271) && (p2 != sender_s271 || p3 != msgsender_MSG)) && sender_s271 != recipient_s271) && amount_s271 <= _balances_ERC20[this][sender_s271]) && amount_s271 <= _allowances_ERC20[this][sender_s271][msgsender_MSG]) && _balances_ERC20[this][recipient_s271] + amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s271 >= 0) && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s271] >= 0) && _balances_ERC20[this][recipient_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s271] >= 0) && _balances_ERC20[this][sender_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s271][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s271][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L851]              havoc __exception;
[L852]              revert := false;
[L853]   COND TRUE  __exception
[L854]              __tmp__Balance := Balance;
[L855]              __tmp__DType := DType;
[L856]              __tmp__Alloc := Alloc;
[L857]              __tmp__balance_ADDR := balance_ADDR;
[L858]              __tmp__M_Ref_int := M_Ref_int;
[L859]              __tmp__sum__balances0 := sum__balances0;
[L860]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L861]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L862]              __tmp__sum__allowances1 := sum__allowances1;
[L863]              __tmp__M_Ref_bool := M_Ref_bool;
[L864]              __tmp__sum_exceptions2 := sum_exceptions2;
[L865]              __tmp__sum_minters3 := sum_minters3;
[L866]              __tmp__Length := Length;
[L867]              __tmp__now := now;
[L868]              __tmp___balances_ERC20 := _balances_ERC20;
[L869]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L870]              __tmp__exceptions_ERC20 := exceptions_ERC20;
[L871]              __tmp__uniswap_ERC20 := uniswap_ERC20;
[L872]              __tmp___owner_ERC20 := _owner_ERC20;
[L873]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L874]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L875]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L876]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L877]              __tmp__governance_Token := governance_Token;
[L878]              __tmp__minters_Token := minters_Token;
[L879]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2973]  COND TRUE  __tmp__DType[this] == Token
[L2974]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3312]             __var_15 := null;
[L3313]  COND TRUE  !(sender_s383 != null)
[L3314]             revert := true;
[L2974]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2975]  COND TRUE  revert
[L879]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L880]              assume revert || gas < 0;
[L5592]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);

Loop:
ERC20(115792089237316195423570985008687907853269984665640564039457584007913129639955).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639961, sender : 0, recipient : 115792089237316195423570985008687907853269984665640564039457584007913129639950, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s271 && p1 != recipient_s271) && (p2 != sender_s271 || p3 != msgsender_MSG)) && sender_s271 != recipient_s271) && amount_s271 <= _balances_ERC20[this][sender_s271]) && amount_s271 <= _allowances_ERC20[this][sender_s271][msgsender_MSG]) && _balances_ERC20[this][recipient_s271] + amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s271 >= 0) && amount_s271 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s271] >= 0) && _balances_ERC20[this][recipient_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s271] >= 0) && _balances_ERC20[this][sender_s271] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s271][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s271][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L851]              havoc __exception;
[L852]              revert := false;
[L853]   COND TRUE  __exception
[L854]              __tmp__Balance := Balance;
[L855]              __tmp__DType := DType;
[L856]              __tmp__Alloc := Alloc;
[L857]              __tmp__balance_ADDR := balance_ADDR;
[L858]              __tmp__M_Ref_int := M_Ref_int;
[L859]              __tmp__sum__balances0 := sum__balances0;
[L860]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L861]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L862]              __tmp__sum__allowances1 := sum__allowances1;
[L863]              __tmp__M_Ref_bool := M_Ref_bool;
[L864]              __tmp__sum_exceptions2 := sum_exceptions2;
[L865]              __tmp__sum_minters3 := sum_minters3;
[L866]              __tmp__Length := Length;
[L867]              __tmp__now := now;
[L868]              __tmp___balances_ERC20 := _balances_ERC20;
[L869]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L870]              __tmp__exceptions_ERC20 := exceptions_ERC20;
[L871]              __tmp__uniswap_ERC20 := uniswap_ERC20;
[L872]              __tmp___owner_ERC20 := _owner_ERC20;
[L873]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L874]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L875]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L876]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L877]              __tmp__governance_Token := governance_Token;
[L878]              __tmp__minters_Token := minters_Token;
[L879]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2973]  COND TRUE  __tmp__DType[this] == Token
[L2974]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L3312]             __var_15 := null;
[L3313]  COND TRUE  !(sender_s383 != null)
[L3314]             revert := true;
[L2974]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L2975]  COND TRUE  revert
[L879]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);
[L880]              assume revert || gas < 0;
[L5592]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s271, recipient_s271, amount_s271);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
