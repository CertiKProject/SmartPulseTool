This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 02:25:51,955 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 02:25:51,957 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 02:25:51,967 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 02:25:51,967 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 02:25:51,968 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 02:25:51,969 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 02:25:51,970 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 02:25:51,971 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 02:25:51,972 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 02:25:51,973 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 02:25:51,973 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 02:25:51,973 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 02:25:51,974 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 02:25:51,975 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 02:25:51,975 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 02:25:51,976 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 02:25:51,977 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 02:25:51,979 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 02:25:51,980 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 02:25:51,981 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 02:25:51,981 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 02:25:51,983 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 02:25:51,983 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 02:25:51,983 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 02:25:51,984 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 02:25:51,984 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 02:25:51,985 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 02:25:51,985 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 02:25:51,985 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 02:25:51,985 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 02:25:51,986 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 02:25:51,986 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 02:25:51,987 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 02:25:51,987 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 02:25:51,988 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 02:25:51,988 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 02:25:51,988 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 02:25:51,988 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 02:25:51,989 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 02:25:51,989 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 02:25:51,990 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 02:25:51,997 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 02:25:51,997 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 02:25:51,998 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 02:25:51,998 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 02:25:51,998 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 02:25:51,998 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 02:25:51,998 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 02:25:51,998 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 02:25:51,998 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 02:25:51,999 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 02:25:51,999 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 02:25:51,999 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 02:25:51,999 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 02:25:51,999 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 02:25:51,999 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 02:25:51,999 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 02:25:51,999 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 02:25:52,000 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 02:25:52,000 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 02:25:52,001 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 02:25:52,020 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 02:25:52,029 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 02:25:52,031 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 02:25:52,032 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 02:25:52,033 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 02:25:52,033 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl
[2020-11-25 02:25:52,034 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl'
[2020-11-25 02:25:52,121 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 02:25:52,123 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 02:25:52,123 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 02:25:52,123 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 02:25:52,123 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 02:25:52,140 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,142 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,172 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,173 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,193 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,203 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,210 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,219 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 02:25:52,219 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 02:25:52,220 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 02:25:52,222 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 02:25:52,225 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/1) ...
[2020-11-25 02:25:52,247 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(OMAToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_OMAToken[this][msg.sender] && balanceOf_OMAToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][msg.sender] >= 0 &&  balanceOf_OMAToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(OMAToken.transfer(to, value), return == true && balanceOf_OMAToken[this][msg.sender] == old(balanceOf_OMAToken[this][msg.sender]) - value && balanceOf_OMAToken[this][to] == old(balanceOf_OMAToken[this][to]) + value && totalSupply_OMAToken[this] == old(totalSupply_OMAToken[this]) && allowance_OMAToken[this] == old(allowance_OMAToken[this]) && balanceOf_OMAToken[this][p1] == old(balanceOf_OMAToken[this][p1]) && symbol_OMAToken[this] == old(symbol_OMAToken[this]) && name_OMAToken[this] == old(name_OMAToken[this]) && decimals_OMAToken[this] == old(decimals_OMAToken[this]) && frozenAccount_OMAToken[this] == old(frozenAccount_OMAToken[this]) && frozenAmount_OMAToken[this] == old(frozenAmount_OMAToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 02:25:52,252 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(OMAToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_OMAToken[this][msg.sender] && balanceOf_OMAToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][msg.sender] >= 0 &&  balanceOf_OMAToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(OMAToken.transfer(to, value), return == true && balanceOf_OMAToken[this][msg.sender] == old(balanceOf_OMAToken[this][msg.sender]) - value && balanceOf_OMAToken[this][to] == old(balanceOf_OMAToken[this][to]) + value && totalSupply_OMAToken[this] == old(totalSupply_OMAToken[this]) && allowance_OMAToken[this] == old(allowance_OMAToken[this]) && balanceOf_OMAToken[this][p1] == old(balanceOf_OMAToken[this][p1]) && symbol_OMAToken[this] == old(symbol_OMAToken[this]) && name_OMAToken[this] == old(name_OMAToken[this]) && decimals_OMAToken[this] == old(decimals_OMAToken[this]) && frozenAccount_OMAToken[this] == old(frozenAccount_OMAToken[this]) && frozenAmount_OMAToken[this] == old(frozenAmount_OMAToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 02:25:52,261 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(OMAToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_OMAToken[this][msg.sender] && balanceOf_OMAToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][msg.sender] >= 0 &&  balanceOf_OMAToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(OMAToken.transfer(to, value), return == true && balanceOf_OMAToken[this][msg.sender] == old(balanceOf_OMAToken[this][msg.sender]) - value && balanceOf_OMAToken[this][to] == old(balanceOf_OMAToken[this][to]) + value && totalSupply_OMAToken[this] == old(totalSupply_OMAToken[this]) && allowance_OMAToken[this] == old(allowance_OMAToken[this]) && balanceOf_OMAToken[this][p1] == old(balanceOf_OMAToken[this][p1]) && symbol_OMAToken[this] == old(symbol_OMAToken[this]) && name_OMAToken[this] == old(name_OMAToken[this]) && decimals_OMAToken[this] == old(decimals_OMAToken[this]) && frozenAccount_OMAToken[this] == old(frozenAccount_OMAToken[this]) && frozenAmount_OMAToken[this] == old(frozenAmount_OMAToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 02:25:52,268 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s401 ) && msg.sender!=_to_s401 ) && _value_s401<=balanceOf_OMAToken[this][msg.sender] ) && ( balanceOf_OMAToken[this][_to_s401] + _value_s401 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s401>=0 ) && _value_s401<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_OMAToken[this][_to_s401]>=0 ) && balanceOf_OMAToken[this][_to_s401]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_OMAToken[this][msg.sender]>=0 ) && balanceOf_OMAToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>],IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],IdentifierExpression[_value_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 02:25:52,271 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( success_s401==true && balanceOf_OMAToken[this][msg.sender]==( ( old(balanceOf_OMAToken[this][msg.sender]) ) - _value_s401 ) ) && balanceOf_OMAToken[this][_to_s401]==( ( old(balanceOf_OMAToken[this][_to_s401]) ) + _value_s401 ) ) && totalSupply_OMAToken[this]==( old(totalSupply_OMAToken[this]) ) ) && allowance_OMAToken[this]==( old(allowance_OMAToken[this]) ) ) && balanceOf_OMAToken[this][p1]==( old(balanceOf_OMAToken[this][p1]) ) ) && symbol_OMAToken[this]==( old(symbol_OMAToken[this]) ) ) && name_OMAToken[this]==( old(name_OMAToken[this]) ) ) && decimals_OMAToken[this]==( old(decimals_OMAToken[this]) ) ) && frozenAccount_OMAToken[this]==( old(frozenAccount_OMAToken[this]) ) ) && frozenAmount_OMAToken[this]==( old(frozenAmount_OMAToken[this]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s401,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_OMAToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]],IdentifierExpression[_value_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[_to_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]],IdentifierExpression[_value_s401,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAmount_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAmount_OMAToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_OMAToken>]]]]]]
[2020-11-25 02:25:52,278 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(OMAToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_OMAToken[this][msg.sender] && balanceOf_OMAToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][to] >= 0 && balanceOf_OMAToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_OMAToken[this][msg.sender] >= 0 &&  balanceOf_OMAToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(OMAToken.transfer(to, value), return == true && balanceOf_OMAToken[this][msg.sender] == old(balanceOf_OMAToken[this][msg.sender]) - value && balanceOf_OMAToken[this][to] == old(balanceOf_OMAToken[this][to]) + value && totalSupply_OMAToken[this] == old(totalSupply_OMAToken[this]) && allowance_OMAToken[this] == old(allowance_OMAToken[this]) && balanceOf_OMAToken[this][p1] == old(balanceOf_OMAToken[this][p1]) && symbol_OMAToken[this] == old(symbol_OMAToken[this]) && name_OMAToken[this] == old(name_OMAToken[this]) && decimals_OMAToken[this] == old(decimals_OMAToken[this]) && frozenAccount_OMAToken[this] == old(frozenAccount_OMAToken[this]) && frozenAmount_OMAToken[this] == old(frozenAmount_OMAToken[this]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 02:25:52,278 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_OMAToken0) ==> ( <>AP(success_transfer_OMAToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 02:25:52,287 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:52 PropertyContainer
[2020-11-25 02:25:52,287 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 02:25:52,288 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 02:25:52,288 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 02:25:52,288 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 02:25:52,289 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/2) ...
[2020-11-25 02:25:52,289 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 02:25:52,289 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 02:25:52,303 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:52" (2/2) ...
[2020-11-25 02:25:52,303 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 02:25:52,303 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 02:25:52,304 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 02:25:52,304 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 02:25:52,304 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/2) ...
[2020-11-25 02:25:52,357 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 02:25:52,357 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 02:25:52,357 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 02:25:52,357 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 02:25:52,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 02:25:52,358 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 02:25:52,358 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 02:25:52,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 02:25:52,359 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 02:25:52,359 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-25 02:25:52,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-25 02:25:52,359 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-25 02:25:52,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-25 02:25:52,359 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-25 02:25:52,359 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-25 02:25:52,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:25:52,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken_NoBaseCtor__success
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken
[2020-11-25 02:25:52,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_OMAToken__success
[2020-11-25 02:25:52,360 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_OMAToken
[2020-11-25 02:25:52,360 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_OMAToken
[2020-11-25 02:25:52,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_OMAToken
[2020-11-25 02:25:52,361 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_OMAToken
[2020-11-25 02:25:52,361 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_OMAToken
[2020-11-25 02:25:52,361 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_OMAToken
[2020-11-25 02:25:52,362 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAmount~address~uint256_OMAToken
[2020-11-25 02:25:52,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAmount~address~uint256_OMAToken
[2020-11-25 02:25:52,362 INFO  L130     BoogieDeclarations]: Found specification of procedure unfreezeAmount~address_OMAToken
[2020-11-25 02:25:52,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure unfreezeAmount~address_OMAToken
[2020-11-25 02:25:52,362 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_OMAToken
[2020-11-25 02:25:52,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_OMAToken
[2020-11-25 02:25:52,362 INFO  L130     BoogieDeclarations]: Found specification of procedure name_OMAToken
[2020-11-25 02:25:52,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_OMAToken
[2020-11-25 02:25:52,362 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_OMAToken
[2020-11-25 02:25:52,362 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_OMAToken
[2020-11-25 02:25:52,362 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_OMAToken
[2020-11-25 02:25:52,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_OMAToken
[2020-11-25 02:25:52,363 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAmount~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAmount~address_OMAToken
[2020-11-25 02:25:52,363 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 02:25:52,364 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_OMAToken
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 02:25:52,365 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 02:25:52,366 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:25:52,367 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken_NoBaseCtor__fail
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken__success
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure OMAToken_OMAToken__fail
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_OMAToken__success
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_OMAToken__success
[2020-11-25 02:25:52,368 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_OMAToken__success
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_OMAToken__success
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_OMAToken__fail
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_OMAToken__success
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_OMAToken__fail
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_OMAToken__success
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_OMAToken__fail
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAmount~address~uint256_OMAToken__success
[2020-11-25 02:25:52,369 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAmount~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure unfreezeAmount~address_OMAToken__success
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure unfreezeAmount~address_OMAToken__fail
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_OMAToken__success
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_OMAToken__fail
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure name_OMAToken__success
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure name_OMAToken__fail
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_OMAToken__success
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_OMAToken__fail
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_OMAToken__success
[2020-11-25 02:25:52,370 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_OMAToken__fail
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_OMAToken__success
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_OMAToken__fail
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_OMAToken__success
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_OMAToken__fail
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_OMAToken__success
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_OMAToken__fail
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAmount~address_OMAToken__success
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAmount~address_OMAToken__fail
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 02:25:52,371 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 02:25:52,372 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 02:25:52,372 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 02:25:52,372 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-25 02:25:52,372 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-25 02:25:52,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 02:25:52,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 02:25:52,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 02:25:52,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 02:25:52,372 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 02:25:52,373 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-25 02:25:52,374 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken_NoBaseCtor__fail
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken_NoBaseCtor__success
[2020-11-25 02:25:52,375 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure OMAToken_OMAToken__success
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_OMAToken__success
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_OMAToken__success
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_OMAToken__success
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_OMAToken__success
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_OMAToken__success
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_OMAToken__fail
[2020-11-25 02:25:52,376 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_OMAToken__success
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_OMAToken__fail
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_OMAToken__success
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAmount~address~uint256_OMAToken__fail
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAmount~address~uint256_OMAToken__success
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure unfreezeAmount~address_OMAToken__fail
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure unfreezeAmount~address_OMAToken__success
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_OMAToken__fail
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_OMAToken__success
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_OMAToken__fail
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_OMAToken__success
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_OMAToken__fail
[2020-11-25 02:25:52,377 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_OMAToken__success
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_OMAToken__fail
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_OMAToken__success
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_OMAToken__fail
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_OMAToken__success
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_OMAToken__fail
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_OMAToken__success
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_OMAToken__fail
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_OMAToken__success
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAmount~address_OMAToken__fail
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAmount~address_OMAToken__success
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 02:25:52,378 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-25 02:25:52,379 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-25 02:25:52,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 02:25:52,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 02:25:52,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_OMAToken
[2020-11-25 02:25:52,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 02:25:52,380 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 02:25:52,380 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 02:25:52,858 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:25:52,887 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:25:52,887 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:25:52,888 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:25:53,075 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 02:25:53,075 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 02:25:53,077 INFO  L202        PluginConnector]: Adding new model OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:53 BoogieIcfgContainer
[2020-11-25 02:25:53,077 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:52" (2/2) ...
[2020-11-25 02:25:53,077 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 02:25:53,078 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@15a28dcd and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:53, skipping insertion in model container
[2020-11-25 02:25:53,078 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 02:25:53,078 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 02:25:53,078 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 02:25:53,080 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 02:25:53,080 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/3) ...
[2020-11-25 02:25:53,080 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4f8c5d2f and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:53, skipping insertion in model container
[2020-11-25 02:25:53,080 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 02:25:53,119 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:53 NWAContainer
[2020-11-25 02:25:53,119 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 02:25:53,119 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 02:25:53,120 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 02:25:53,120 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 02:25:53,122 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:53" (3/4) ...
[2020-11-25 02:25:53,122 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@34d7479c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:53, skipping insertion in model container
[2020-11-25 02:25:53,122 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:53" (4/4) ...
[2020-11-25 02:25:53,126 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 02:25:53,130 INFO  L110   BuchiProductObserver]: Initial RCFG 1681 locations, 2127 edges
[2020-11-25 02:25:53,131 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 02:25:53,147 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 02:25:54,542 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 02:25:54,547 INFO  L110   BuchiProductObserver]: BuchiProgram size 4044 locations, 6910 edges
[2020-11-25 02:25:54,547 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:54 BoogieIcfgContainer
[2020-11-25 02:25:54,547 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 02:25:54,548 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 02:25:54,548 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 02:25:54,549 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 02:25:54,549 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:54" (1/1) ...
[2020-11-25 02:25:54,629 INFO  L313           BlockEncoder]: Initial Icfg 4044 locations, 6910 edges
[2020-11-25 02:25:54,629 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 02:25:54,629 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 02:25:54,630 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 02:25:54,630 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 02:25:54,642 INFO  L70    emoveInfeasibleEdges]: Removed 60 edges and 13 locations because of local infeasibility
[2020-11-25 02:25:54,650 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 02:25:54,665 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 02:25:54,670 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 02:25:54,674 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 02:25:54,675 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 02:25:54,680 INFO  L313           BlockEncoder]: Encoded RCFG 4004 locations, 6810 edges
[2020-11-25 02:25:54,680 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:25:54 BasicIcfg
[2020-11-25 02:25:54,680 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 02:25:54,680 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 02:25:54,680 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 02:25:54,682 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 02:25:54,683 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:25:54,683 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:52" (1/6) ...
[2020-11-25 02:25:54,685 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@431c9246 and model type OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:25:54, skipping insertion in model container
[2020-11-25 02:25:54,685 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:25:54,685 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:52" (2/6) ...
[2020-11-25 02:25:54,685 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@431c9246 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:25:54, skipping insertion in model container
[2020-11-25 02:25:54,685 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:25:54,685 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:53" (3/6) ...
[2020-11-25 02:25:54,685 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@431c9246 and model type OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:25:54, skipping insertion in model container
[2020-11-25 02:25:54,685 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:25:54,685 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:53" (4/6) ...
[2020-11-25 02:25:54,686 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@431c9246 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:25:54, skipping insertion in model container
[2020-11-25 02:25:54,686 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:25:54,686 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:54" (5/6) ...
[2020-11-25 02:25:54,686 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@431c9246 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:25:54, skipping insertion in model container
[2020-11-25 02:25:54,686 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:25:54,686 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:25:54" (6/6) ...
[2020-11-25 02:25:54,687 INFO  L404   chiAutomizerObserver]: Analyzing ICFG OMAToken_0xade84da51b67cbe9002c85b7422c86d78a52f0d2_transfer-normal.bpl_BEv2
[2020-11-25 02:25:54,725 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 02:25:54,726 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 02:25:54,726 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 02:25:54,726 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 02:25:54,726 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 02:25:54,726 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 02:25:54,726 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 02:25:54,726 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 02:25:54,726 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 02:25:54,759 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4004 states.
[2020-11-25 02:25:54,811 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:25:54,811 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:25:54,811 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:25:54,818 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:25:54,820 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:25:54,820 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 02:25:54,820 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4004 states.
[2020-11-25 02:25:54,851 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:25:54,851 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:25:54,851 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:25:54,854 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:25:54,854 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_OMAToken0 := false;
[L3]                 call_transfer_OMAToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4542]              assume null == 0;
[L4543]  CALL        call this := FreshRefGenerator__success();
[L2374]              havoc newRef;
[L2375]              assume Alloc[newRef] == false;
[L2376]              Alloc[newRef] := true;
[L2377]              assume newRef != null;
[L4543]  RET         call this := FreshRefGenerator__success();
[L4544]              assume now >= 0;
[L4545]              assume DType[this] == OMAToken;
[L4546]              assume msgvalue_MSG == 0;
[L4547]              gas := gas - 53000;
[L4548]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L713]               havoc __exception;
[L714]               revert := false;
[L715]   COND FALSE  !(__exception)
[L743]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2755]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2755]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2756]  COND TRUE   revert
[L743]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L744]               assume !revert && gas >= 0;
[L4548]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4549]              assume !revert && gas >= 0;

Loop:
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND TRUE   choice == 21
[L4400]              gas := gas - 21000;
[L4401]  COND FALSE  !(gas >= 0)
[L4552]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:25:54,872 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:25:54,872 INFO  L82        PathProgramCache]: Analyzing trace with hash -274548533, now seen corresponding path program 1 times
[2020-11-25 02:25:54,877 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:25:54,899 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:25:54,937 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:25:54,940 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:25:54,940 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:25:55,125 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:25:55,137 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:25:55,138 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:25:55,139 INFO  L87              Difference]: Start difference. First operand 4004 states. Second operand 4 states.
[2020-11-25 02:25:55,527 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:25:55,528 INFO  L93              Difference]: Finished difference Result 3001 states and 3316 transitions.
[2020-11-25 02:25:55,528 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:25:55,530 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3001 states and 3316 transitions.
[2020-11-25 02:25:55,543 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:25:55,563 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3001 states to 2997 states and 3308 transitions.
[2020-11-25 02:25:55,563 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 02:25:55,566 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 796
[2020-11-25 02:25:55,566 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2997 states and 3308 transitions.
[2020-11-25 02:25:55,577 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:25:55,577 INFO  L728         BuchiCegarLoop]: Abstraction has 2997 states and 3308 transitions.
[2020-11-25 02:25:55,608 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2997 states and 3308 transitions.
[2020-11-25 02:25:55,665 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2997 to 2997.
[2020-11-25 02:25:55,665 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2997 states.
[2020-11-25 02:25:55,670 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2997 states to 2997 states and 3308 transitions.
[2020-11-25 02:25:55,671 INFO  L751         BuchiCegarLoop]: Abstraction has 2997 states and 3308 transitions.
[2020-11-25 02:25:55,671 INFO  L631         BuchiCegarLoop]: Abstraction has 2997 states and 3308 transitions.
[2020-11-25 02:25:55,671 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 02:25:55,671 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2997 states and 3308 transitions.
[2020-11-25 02:25:55,677 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:25:55,677 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:25:55,678 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:25:55,680 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:25:55,680 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_OMAToken0 := false;
[L3]                 call_transfer_OMAToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4542]              assume null == 0;
[L4543]  CALL        call this := FreshRefGenerator__success();
[L2374]              havoc newRef;
[L2375]              assume Alloc[newRef] == false;
[L2376]              Alloc[newRef] := true;
[L2377]              assume newRef != null;
[L4543]  RET         call this := FreshRefGenerator__success();
[L4544]              assume now >= 0;
[L4545]              assume DType[this] == OMAToken;
[L4546]              assume msgvalue_MSG == 0;
[L4547]              gas := gas - 53000;
[L4548]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L713]               havoc __exception;
[L714]               revert := false;
[L715]   COND FALSE  !(__exception)
[L743]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2755]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND TRUE   revert
[L2755]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2756]  COND TRUE   revert
[L743]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L744]               assume !revert && gas >= 0;
[L4548]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4549]              assume !revert && gas >= 0;
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND FALSE  !(choice == 21)
[L4405]  COND FALSE  !(choice == 20)
[L4411]  COND FALSE  !(choice == 19)
[L4417]  COND FALSE  !(choice == 18)
[L4423]  COND FALSE  !(choice == 17)
[L4429]  COND FALSE  !(choice == 16)
[L4435]  COND FALSE  !(choice == 15)
[L4441]  COND FALSE  !(choice == 14)
[L4447]  COND FALSE  !(choice == 13)
[L4453]  COND FALSE  !(choice == 12)
[L4459]  COND FALSE  !(choice == 11)
[L4465]  COND FALSE  !(choice == 10)
[L4471]  COND FALSE  !(choice == 9)
[L4477]  COND TRUE   choice == 8
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume _value_s401 >= 0 && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4481]              assume msgvalue_MSG == 0;
[L4482]  CALL        call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L813]   CALL        call success_s401 := transfer~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2868]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2817]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]  COND FALSE  !(!!paused_Pausable[this])
[L2817]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2818]  COND TRUE   revert
[L2868]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2869]  COND TRUE   revert
[L813]   RET         call success_s401 := transfer~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L814]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((success_s401 == true && balanceOf_OMAToken[this][msgsender_MSG] == old(balanceOf_OMAToken[this][msgsender_MSG]) - _value_s401) && balanceOf_OMAToken[this][_to_s401] == old(balanceOf_OMAToken[this][_to_s401]) + _value_s401) && totalSupply_OMAToken[this] == old(totalSupply_OMAToken[this])) && allowance_OMAToken[this] == old(allowance_OMAToken[this])) && balanceOf_OMAToken[this][p1] == old(balanceOf_OMAToken[this][p1])) && symbol_OMAToken[this] == old(symbol_OMAToken[this])) && name_OMAToken[this] == old(name_OMAToken[this])) && decimals_OMAToken[this] == old(decimals_OMAToken[this])) && frozenAccount_OMAToken[this] == old(frozenAccount_OMAToken[this])) && frozenAmount_OMAToken[this] == old(frozenAmount_OMAToken[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L4552]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND FALSE  !(choice == 21)
[L4405]  COND FALSE  !(choice == 20)
[L4411]  COND FALSE  !(choice == 19)
[L4417]  COND FALSE  !(choice == 18)
[L4423]  COND FALSE  !(choice == 17)
[L4429]  COND FALSE  !(choice == 16)
[L4435]  COND FALSE  !(choice == 15)
[L4441]  COND FALSE  !(choice == 14)
[L4447]  COND FALSE  !(choice == 13)
[L4453]  COND FALSE  !(choice == 12)
[L4459]  COND FALSE  !(choice == 11)
[L4465]  COND FALSE  !(choice == 10)
[L4471]  COND FALSE  !(choice == 9)
[L4477]  COND TRUE   choice == 8
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume _value_s401 >= 0 && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4481]              assume msgvalue_MSG == 0;
[L4482]  CALL        call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L813]   CALL        call success_s401 := transfer~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2868]  CALL        call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2817]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4049]  COND FALSE  !(!!paused_Pausable[this])
[L2817]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2818]  COND TRUE   revert
[L2868]  RET         call _transfer~address~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2869]  COND TRUE   revert
[L813]   RET         call success_s401 := transfer~address~uint256_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L814]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((success_s401 == true && balanceOf_OMAToken[this][msgsender_MSG] == old(balanceOf_OMAToken[this][msgsender_MSG]) - _value_s401) && balanceOf_OMAToken[this][_to_s401] == old(balanceOf_OMAToken[this][_to_s401]) + _value_s401) && totalSupply_OMAToken[this] == old(totalSupply_OMAToken[this])) && allowance_OMAToken[this] == old(allowance_OMAToken[this])) && balanceOf_OMAToken[this][p1] == old(balanceOf_OMAToken[this][p1])) && symbol_OMAToken[this] == old(symbol_OMAToken[this])) && name_OMAToken[this] == old(name_OMAToken[this])) && decimals_OMAToken[this] == old(decimals_OMAToken[this])) && frozenAccount_OMAToken[this] == old(frozenAccount_OMAToken[this])) && frozenAmount_OMAToken[this] == old(frozenAmount_OMAToken[this])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L4552]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:25:55,684 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:25:55,684 INFO  L82        PathProgramCache]: Analyzing trace with hash -1782396296, now seen corresponding path program 1 times
[2020-11-25 02:25:55,685 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:25:55,695 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:25:55,718 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:25:55,718 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:25:55,718 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:25:55,719 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:25:55,719 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:25:55,719 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:25:55,719 INFO  L87              Difference]: Start difference. First operand 2997 states and 3308 transitions. cyclomatic complexity: 313 Second operand 4 states.
[2020-11-25 02:25:56,334 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:25:56,334 INFO  L93              Difference]: Finished difference Result 4307 states and 4874 transitions.
[2020-11-25 02:25:56,334 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:25:56,335 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4307 states and 4874 transitions.
[2020-11-25 02:25:56,350 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 02:25:56,368 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4307 states to 4139 states and 4690 transitions.
[2020-11-25 02:25:56,368 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1053
[2020-11-25 02:25:56,369 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1065
[2020-11-25 02:25:56,369 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4139 states and 4690 transitions.
[2020-11-25 02:25:56,376 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:25:56,376 INFO  L728         BuchiCegarLoop]: Abstraction has 4139 states and 4690 transitions.
[2020-11-25 02:25:56,379 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4139 states and 4690 transitions.
[2020-11-25 02:25:56,422 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4139 to 3057.
[2020-11-25 02:25:56,423 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3057 states.
[2020-11-25 02:25:56,428 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3057 states to 3057 states and 3284 transitions.
[2020-11-25 02:25:56,428 INFO  L751         BuchiCegarLoop]: Abstraction has 3057 states and 3284 transitions.
[2020-11-25 02:25:56,428 INFO  L631         BuchiCegarLoop]: Abstraction has 3057 states and 3284 transitions.
[2020-11-25 02:25:56,428 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 02:25:56,429 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3057 states and 3284 transitions.
[2020-11-25 02:25:56,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:25:56,438 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:25:56,438 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:25:56,441 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:25:56,442 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_OMAToken0 := false;
[L3]                 call_transfer_OMAToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4542]              assume null == 0;
[L4543]  CALL        call this := FreshRefGenerator__success();
[L2374]              havoc newRef;
[L2375]              assume Alloc[newRef] == false;
[L2376]              Alloc[newRef] := true;
[L2377]              assume newRef != null;
[L4543]  RET         call this := FreshRefGenerator__success();
[L4544]              assume now >= 0;
[L4545]              assume DType[this] == OMAToken;
[L4546]              assume msgvalue_MSG == 0;
[L4547]              gas := gas - 53000;
[L4548]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L713]               havoc __exception;
[L714]               revert := false;
[L715]   COND FALSE  !(__exception)
[L743]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2755]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2755]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2756]  COND FALSE  !(revert)
[L2759]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2573]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2573]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]  COND FALSE  !(revert)
[L2577]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]              assume msgsender_MSG != null;
[L2554]              Balance[this] := 0;
[L2555]              paused_Pausable[this] := false;
[L2577]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2578]  COND FALSE  !(revert)
[L2759]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2712]              assume msgsender_MSG != null;
[L2713]              Balance[this] := 0;
[L2714]              symbol_OMAToken[this] := -641797033;
[L2715]              name_OMAToken[this] := -641797033;
[L2716]              decimals_OMAToken[this] := 18;
[L2717]              totalSupply_OMAToken[this] := 0;
[L2718]              balanceOf_OMAToken[this] := zeroRefintArr();
[L2719]              sum_balanceOf0[this] := 0;
[L2720]              allowance_OMAToken[this] := zeroRefRefintArr();
[L2721]              sum_allowance1[this] := 0;
[L2722]              frozenAccount_OMAToken[this] := zeroRefboolArr();
[L2723]              frozenAmount_OMAToken[this] := zeroRefintArr();
[L2724]              sum_frozenAmount3[this] := 0;
[L2726]              __var_1 := decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2727]              totalSupply_OMAToken[this] := nonlinearMul(initialSupply_s302, nonlinearPow(10, decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2728]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][msgsender_MSG];
[L2729]              balanceOf_OMAToken[this][msgsender_MSG] := totalSupply_OMAToken[this];
[L2730]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][msgsender_MSG];
[L2731]              name_OMAToken[this] := tokenName_s302;
[L2732]              symbol_OMAToken[this] := tokenSymbol_s302;
[L2763]  RET         call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2764]  COND FALSE  !(revert)
[L743]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L744]               assume !revert && gas >= 0;
[L4548]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4549]              assume !revert && gas >= 0;
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND FALSE  !(choice == 21)
[L4405]  COND FALSE  !(choice == 20)
[L4411]  COND FALSE  !(choice == 19)
[L4417]  COND FALSE  !(choice == 18)
[L4423]  COND FALSE  !(choice == 17)
[L4429]  COND FALSE  !(choice == 16)
[L4435]  COND FALSE  !(choice == 15)
[L4441]  COND FALSE  !(choice == 14)
[L4447]  COND FALSE  !(choice == 13)
[L4453]  COND FALSE  !(choice == 12)
[L4459]  COND FALSE  !(choice == 11)
[L4465]  COND FALSE  !(choice == 10)
[L4471]  COND FALSE  !(choice == 9)
[L4477]  COND TRUE   choice == 8
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume _value_s401 >= 0 && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4481]              assume msgvalue_MSG == 0;
[L4482]  CALL        call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L792]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowance1 := sum_allowance1;
[L795]               __tmp__M_Ref_bool := M_Ref_bool;
[L796]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L797]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L798]               __tmp__Length := Length;
[L799]               __tmp__now := now;
[L800]               __tmp__owner_Owned := owner_Owned;
[L801]               __tmp__paused_Pausable := paused_Pausable;
[L802]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L803]               __tmp__name_OMAToken := name_OMAToken;
[L804]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L805]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L806]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L807]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L808]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L809]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L810]   CALL        call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2858]  CALL        call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2774]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND TRUE   !!__tmp__paused_Pausable[this]
[L4042]              revert := true;
[L2774]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND TRUE   revert
[L2858]  RET         call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2859]  COND TRUE   revert
[L810]   RET         call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L811]               assume revert || gas < 0;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L4552]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND FALSE  !(choice == 21)
[L4405]  COND FALSE  !(choice == 20)
[L4411]  COND FALSE  !(choice == 19)
[L4417]  COND FALSE  !(choice == 18)
[L4423]  COND FALSE  !(choice == 17)
[L4429]  COND FALSE  !(choice == 16)
[L4435]  COND FALSE  !(choice == 15)
[L4441]  COND FALSE  !(choice == 14)
[L4447]  COND FALSE  !(choice == 13)
[L4453]  COND FALSE  !(choice == 12)
[L4459]  COND FALSE  !(choice == 11)
[L4465]  COND FALSE  !(choice == 10)
[L4471]  COND FALSE  !(choice == 9)
[L4477]  COND TRUE   choice == 8
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume _value_s401 >= 0 && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4481]              assume msgvalue_MSG == 0;
[L4482]  CALL        call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L792]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowance1 := sum_allowance1;
[L795]               __tmp__M_Ref_bool := M_Ref_bool;
[L796]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L797]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L798]               __tmp__Length := Length;
[L799]               __tmp__now := now;
[L800]               __tmp__owner_Owned := owner_Owned;
[L801]               __tmp__paused_Pausable := paused_Pausable;
[L802]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L803]               __tmp__name_OMAToken := name_OMAToken;
[L804]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L805]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L806]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L807]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L808]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L809]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L810]   CALL        call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2858]  CALL        call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2774]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND TRUE   !!__tmp__paused_Pausable[this]
[L4042]              revert := true;
[L2774]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND TRUE   revert
[L2858]  RET         call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2859]  COND TRUE   revert
[L810]   RET         call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L811]               assume revert || gas < 0;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L4552]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:25:56,447 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:25:56,447 INFO  L82        PathProgramCache]: Analyzing trace with hash -149484081, now seen corresponding path program 1 times
[2020-11-25 02:25:56,448 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:25:56,469 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:25:56,588 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 02:25:56,588 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:25:56,588 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 02:25:56,589 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:25:56,589 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 02:25:56,589 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=157, Unknown=0, NotChecked=0, Total=182
[2020-11-25 02:25:56,590 INFO  L87              Difference]: Start difference. First operand 3057 states and 3284 transitions. cyclomatic complexity: 229 Second operand 14 states.
[2020-11-25 02:25:58,753 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:25:58,753 INFO  L93              Difference]: Finished difference Result 5013 states and 5508 transitions.
[2020-11-25 02:25:58,754 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 02:25:58,754 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5013 states and 5508 transitions.
[2020-11-25 02:25:58,769 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 02:25:58,787 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5013 states to 5013 states and 5508 transitions.
[2020-11-25 02:25:58,787 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1375
[2020-11-25 02:25:58,789 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1375
[2020-11-25 02:25:58,789 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5013 states and 5508 transitions.
[2020-11-25 02:25:58,793 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:25:58,793 INFO  L728         BuchiCegarLoop]: Abstraction has 5013 states and 5508 transitions.
[2020-11-25 02:25:58,796 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5013 states and 5508 transitions.
[2020-11-25 02:25:58,825 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5013 to 3107.
[2020-11-25 02:25:58,825 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3107 states.
[2020-11-25 02:25:58,829 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3107 states to 3107 states and 3343 transitions.
[2020-11-25 02:25:58,829 INFO  L751         BuchiCegarLoop]: Abstraction has 3107 states and 3343 transitions.
[2020-11-25 02:25:58,829 INFO  L631         BuchiCegarLoop]: Abstraction has 3107 states and 3343 transitions.
[2020-11-25 02:25:58,829 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 02:25:58,829 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3107 states and 3343 transitions.
[2020-11-25 02:25:58,833 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 02:25:58,833 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:25:58,833 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:25:58,835 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:25:58,835 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_OMAToken0 := false;
[L3]                 call_transfer_OMAToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4542]              assume null == 0;
[L4543]  CALL        call this := FreshRefGenerator__success();
[L2374]              havoc newRef;
[L2375]              assume Alloc[newRef] == false;
[L2376]              Alloc[newRef] := true;
[L2377]              assume newRef != null;
[L4543]  RET         call this := FreshRefGenerator__success();
[L4544]              assume now >= 0;
[L4545]              assume DType[this] == OMAToken;
[L4546]              assume msgvalue_MSG == 0;
[L4547]              gas := gas - 53000;
[L4548]  CALL        call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L713]               havoc __exception;
[L714]               revert := false;
[L715]   COND FALSE  !(__exception)
[L743]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2755]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2755]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2756]  COND FALSE  !(revert)
[L2759]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2573]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2573]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]  COND FALSE  !(revert)
[L2577]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]              assume msgsender_MSG != null;
[L2554]              Balance[this] := 0;
[L2555]              paused_Pausable[this] := false;
[L2577]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2578]  COND FALSE  !(revert)
[L2759]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2712]              assume msgsender_MSG != null;
[L2713]              Balance[this] := 0;
[L2714]              symbol_OMAToken[this] := -641797033;
[L2715]              name_OMAToken[this] := -641797033;
[L2716]              decimals_OMAToken[this] := 18;
[L2717]              totalSupply_OMAToken[this] := 0;
[L2718]              balanceOf_OMAToken[this] := zeroRefintArr();
[L2719]              sum_balanceOf0[this] := 0;
[L2720]              allowance_OMAToken[this] := zeroRefRefintArr();
[L2721]              sum_allowance1[this] := 0;
[L2722]              frozenAccount_OMAToken[this] := zeroRefboolArr();
[L2723]              frozenAmount_OMAToken[this] := zeroRefintArr();
[L2724]              sum_frozenAmount3[this] := 0;
[L2726]              __var_1 := decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2727]              totalSupply_OMAToken[this] := nonlinearMul(initialSupply_s302, nonlinearPow(10, decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2728]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][msgsender_MSG];
[L2729]              balanceOf_OMAToken[this][msgsender_MSG] := totalSupply_OMAToken[this];
[L2730]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][msgsender_MSG];
[L2731]              name_OMAToken[this] := tokenName_s302;
[L2732]              symbol_OMAToken[this] := tokenSymbol_s302;
[L2763]  RET         call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2764]  COND FALSE  !(revert)
[L743]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L744]               assume !revert && gas >= 0;
[L4548]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L4549]              assume !revert && gas >= 0;
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND FALSE  !(choice == 21)
[L4405]  COND FALSE  !(choice == 20)
[L4411]  COND FALSE  !(choice == 19)
[L4417]  COND FALSE  !(choice == 18)
[L4423]  COND FALSE  !(choice == 17)
[L4429]  COND FALSE  !(choice == 16)
[L4435]  COND FALSE  !(choice == 15)
[L4441]  COND FALSE  !(choice == 14)
[L4447]  COND FALSE  !(choice == 13)
[L4453]  COND FALSE  !(choice == 12)
[L4459]  COND FALSE  !(choice == 11)
[L4465]  COND FALSE  !(choice == 10)
[L4471]  COND FALSE  !(choice == 9)
[L4477]  COND TRUE   choice == 8
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume _value_s401 >= 0 && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4481]              assume msgvalue_MSG == 0;
[L4482]  CALL        call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L792]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowance1 := sum_allowance1;
[L795]               __tmp__M_Ref_bool := M_Ref_bool;
[L796]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L797]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L798]               __tmp__Length := Length;
[L799]               __tmp__now := now;
[L800]               __tmp__owner_Owned := owner_Owned;
[L801]               __tmp__paused_Pausable := paused_Pausable;
[L802]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L803]               __tmp__name_OMAToken := name_OMAToken;
[L804]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L805]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L806]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L807]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L808]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L809]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L810]   CALL        call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2858]  CALL        call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2774]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L2774]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND FALSE  !(revert)
[L2778]              __var_2 := null;
[L2779]  COND TRUE   !(_to_s382 != null)
[L2780]              revert := true;
[L2858]  RET         call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2859]  COND TRUE   revert
[L810]   RET         call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L811]               assume revert || gas < 0;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L4552]  RET         call CorralChoice_OMAToken(this);

Loop:
[L4552]  CALL        call CorralChoice_OMAToken(this);
[L4343]              havoc msgsender_MSG;
[L4344]              havoc msgvalue_MSG;
[L4345]              havoc choice;
[L4346]              havoc __ret_0_owner;
[L4347]              havoc newOwner_s127;
[L4348]              havoc __ret_0_paused;
[L4349]              havoc __ret_0_symbol;
[L4350]              havoc __ret_0_name;
[L4351]              havoc __ret_0_decimals;
[L4352]              havoc __ret_0_totalSupply;
[L4353]              havoc arg613_s0;
[L4354]              havoc __ret_0_balanceOf;
[L4355]              havoc arg614_s0;
[L4356]              havoc arg615_s0;
[L4357]              havoc __ret_0_allowance;
[L4358]              havoc arg616_s0;
[L4359]              havoc __ret_0_frozenAccount;
[L4360]              havoc arg617_s0;
[L4361]              havoc __ret_0_frozenAmount;
[L4362]              havoc initialSupply_s302;
[L4363]              havoc tokenName_s302;
[L4364]              havoc tokenSymbol_s302;
[L4365]              havoc _to_s401;
[L4366]              havoc _value_s401;
[L4367]              havoc success_s401;
[L4368]              havoc _from_s438;
[L4369]              havoc _to_s438;
[L4370]              havoc _value_s438;
[L4371]              havoc success_s438;
[L4372]              havoc _spender_s468;
[L4373]              havoc _value_s468;
[L4374]              havoc success_s468;
[L4375]              havoc _spender_s508;
[L4376]              havoc _value_s508;
[L4377]              havoc _extraData_s508;
[L4378]              havoc success_s508;
[L4379]              havoc _value_s544;
[L4380]              havoc success_s544;
[L4381]              havoc target_s565;
[L4382]              havoc freeze_s565;
[L4383]              havoc target_s592;
[L4384]              havoc _value_s592;
[L4385]              havoc target_s610;
[L4386]              havoc tmpNow;
[L4387]              havoc gas;
[L4388]              assume gas > 4000000 && gas <= 8000000;
[L4389]              tmpNow := now;
[L4390]              havoc now;
[L4391]              assume now > tmpNow;
[L4392]              assume msgsender_MSG != null;
[L4393]              assume DType[msgsender_MSG] != SafeMath;
[L4394]              assume DType[msgsender_MSG] != Owned;
[L4395]              assume DType[msgsender_MSG] != Pausable;
[L4396]              assume DType[msgsender_MSG] != tokenRecipient;
[L4397]              assume DType[msgsender_MSG] != OMAToken;
[L4398]              Alloc[msgsender_MSG] := true;
[L4399]  COND FALSE  !(choice == 21)
[L4405]  COND FALSE  !(choice == 20)
[L4411]  COND FALSE  !(choice == 19)
[L4417]  COND FALSE  !(choice == 18)
[L4423]  COND FALSE  !(choice == 17)
[L4429]  COND FALSE  !(choice == 16)
[L4435]  COND FALSE  !(choice == 15)
[L4441]  COND FALSE  !(choice == 14)
[L4447]  COND FALSE  !(choice == 13)
[L4453]  COND FALSE  !(choice == 12)
[L4459]  COND FALSE  !(choice == 11)
[L4465]  COND FALSE  !(choice == 10)
[L4471]  COND FALSE  !(choice == 9)
[L4477]  COND TRUE   choice == 8
[L4478]              gas := gas - 21000;
[L4479]  COND TRUE   gas >= 0
[L4480]              assume _value_s401 >= 0 && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4481]              assume msgvalue_MSG == 0;
[L4482]  CALL        call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L792]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowance1 := sum_allowance1;
[L795]               __tmp__M_Ref_bool := M_Ref_bool;
[L796]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L797]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L798]               __tmp__Length := Length;
[L799]               __tmp__now := now;
[L800]               __tmp__owner_Owned := owner_Owned;
[L801]               __tmp__paused_Pausable := paused_Pausable;
[L802]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L803]               __tmp__name_OMAToken := name_OMAToken;
[L804]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L805]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L806]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L807]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L808]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L809]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L810]   CALL        call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2858]  CALL        call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2774]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L2774]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND FALSE  !(revert)
[L2778]              __var_2 := null;
[L2779]  COND TRUE   !(_to_s382 != null)
[L2780]              revert := true;
[L2858]  RET         call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2859]  COND TRUE   revert
[L810]   RET         call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L811]               assume revert || gas < 0;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L4552]  RET         call CorralChoice_OMAToken(this);

[2020-11-25 02:25:58,838 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:25:58,838 INFO  L82        PathProgramCache]: Analyzing trace with hash -581387461, now seen corresponding path program 1 times
[2020-11-25 02:25:58,839 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:25:58,853 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:25:58,867 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:25:58,925 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:25:58,925 INFO  L82        PathProgramCache]: Analyzing trace with hash -525768516, now seen corresponding path program 1 times
[2020-11-25 02:25:58,925 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:25:58,930 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:25:58,935 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:25:58,946 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:25:58,946 INFO  L82        PathProgramCache]: Analyzing trace with hash 1519314242, now seen corresponding path program 1 times
[2020-11-25 02:25:58,947 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:25:58,961 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:25:58,978 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 02:25:59,397 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 276
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-25 02:25:59,583 WARN  L188               SmtUtils]: Spent 175.00 ms on a formula simplification that was a NOOP. DAG size: 220
[2020-11-25 02:26:00,030 WARN  L188               SmtUtils]: Spent 443.00 ms on a formula simplification. DAG size of input: 303 DAG size of output: 258
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.003s / 0.005s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.007s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.007s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 02:26:00,276 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification that was a NOOP. DAG size: 344
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 02:26:00,406 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification that was a NOOP. DAG size: 277
[2020-11-25 02:26:00,567 WARN  L188               SmtUtils]: Spent 159.00 ms on a formula simplification that was a NOOP. DAG size: 277
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 02:26:00,652 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-25 02:26:00,892 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification. DAG size of input: 163 DAG size of output: 159
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-25 02:26:01,137 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification that was a NOOP. DAG size: 287
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 02:26:01,559 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 220
[2020-11-25 02:26:01,901 WARN  L188               SmtUtils]: Spent 339.00 ms on a formula simplification. DAG size of input: 302 DAG size of output: 258
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 02:26:02,124 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 344
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 02:26:02,250 WARN  L188               SmtUtils]: Spent 121.00 ms on a formula simplification that was a NOOP. DAG size: 277
[2020-11-25 02:26:03,173 WARN  L188               SmtUtils]: Spent 920.00 ms on a formula simplification. DAG size of input: 510 DAG size of output: 500
Garbage collection #1: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #2: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #3: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #4: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #5: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #6: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 02:26:03,303 WARN  L188               SmtUtils]: Spent 120.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 203
[2020-11-25 02:26:03,455 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification that was a NOOP. DAG size: 323
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 02:26:03,784 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification. DAG size of input: 325 DAG size of output: 324
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 02:26:03,904 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 320
[2020-11-25 02:26:03,919 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:26:03,937 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 02:26:03,945 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:26:03 BasicIcfg
[2020-11-25 02:26:03,945 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 02:26:03,946 INFO  L168              Benchmark]: Toolchain (without parser) took 11823.74 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 935.2 MB in the beginning and 1.5 GB in the end (delta: -571.3 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,946 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,946 INFO  L168              Benchmark]: Boogie Preprocessor took 96.27 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,946 INFO  L168              Benchmark]: UtopiaSpecLang took 68.11 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,947 INFO  L168              Benchmark]: Boogie Printer took 15.34 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,947 INFO  L168              Benchmark]: RCFGBuilder took 774.48 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 800.9 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,947 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.26 ms. Allocated memory is still 1.0 GB. Free memory was 800.9 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,948 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1427.80 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 222.3 MB). Free memory was 792.0 MB in the beginning and 1.0 GB in the end (delta: -249.7 MB). Peak memory consumption was 179.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,948 INFO  L168              Benchmark]: BlockEncodingV2 took 132.65 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 972.4 MB in the end (delta: 60.4 MB). Peak memory consumption was 60.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,948 INFO  L168              Benchmark]: BuchiAutomizer took 9264.73 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 813.2 MB). Free memory was 972.4 MB in the beginning and 1.5 GB in the end (delta: -534.1 MB). Peak memory consumption was 845.2 MB. Max. memory is 15.3 GB.
[2020-11-25 02:26:03,951 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4044 locations, 6910 edges
  - StatisticsResult: Encoded RCFG
    4004 locations, 6810 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.27 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.11 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.34 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 774.48 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 800.9 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.26 ms. Allocated memory is still 1.0 GB. Free memory was 800.9 MB in the beginning and 792.0 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1427.80 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 222.3 MB). Free memory was 792.0 MB in the beginning and 1.0 GB in the end (delta: -249.7 MB). Peak memory consumption was 179.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 132.65 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 972.4 MB in the end (delta: 60.4 MB). Peak memory consumption was 60.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 9264.73 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 813.2 MB). Free memory was 972.4 MB in the beginning and 1.5 GB in the end (delta: -534.1 MB). Peak memory consumption was 845.2 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1681 locations, 2127 edges
  - StatisticsResult: BuchiProgram size
    4044 locations, 6910 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 3107 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 9.2s and 4 iterations.  TraceHistogramMax:2. Analysis of lassos took 5.5s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 2988 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3107 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11323 SDtfs, 13573 SDslu, 16509 SDs, 0 SdLazy, 39054 SolverSat, 2813 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979018) = (new OMAToken)({from : 3979007, initialSupply : 3979004, tokenName : 3979014, tokenSymbol : 3979021});
[L713]               havoc __exception;
[L714]               revert := false;
[L715]   COND FALSE  !(__exception)
[L743]   CALL        call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2755]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2755]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2756]  COND FALSE  !(revert)
[L2759]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2573]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2505]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2488]              assume msgsender_MSG != null;
[L2489]              Balance[this] := 0;
[L2490]              owner_Owned[this] := null;
[L2492]              owner_Owned[this] := msgsender_MSG;
[L2505]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2573]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2574]  COND FALSE  !(revert)
[L2577]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]              assume msgsender_MSG != null;
[L2554]              Balance[this] := 0;
[L2555]              paused_Pausable[this] := false;
[L2577]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2578]  COND FALSE  !(revert)
[L2759]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2712]              assume msgsender_MSG != null;
[L2713]              Balance[this] := 0;
[L2714]              symbol_OMAToken[this] := -641797033;
[L2715]              name_OMAToken[this] := -641797033;
[L2716]              decimals_OMAToken[this] := 18;
[L2717]              totalSupply_OMAToken[this] := 0;
[L2718]              balanceOf_OMAToken[this] := zeroRefintArr();
[L2719]              sum_balanceOf0[this] := 0;
[L2720]              allowance_OMAToken[this] := zeroRefRefintArr();
[L2721]              sum_allowance1[this] := 0;
[L2722]              frozenAccount_OMAToken[this] := zeroRefboolArr();
[L2723]              frozenAmount_OMAToken[this] := zeroRefintArr();
[L2724]              sum_frozenAmount3[this] := 0;
[L2726]              __var_1 := decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2727]              totalSupply_OMAToken[this] := nonlinearMul(initialSupply_s302, nonlinearPow(10, decimals_OMAToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2728]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_OMAToken[this][msgsender_MSG];
[L2729]              balanceOf_OMAToken[this][msgsender_MSG] := totalSupply_OMAToken[this];
[L2730]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_OMAToken[this][msgsender_MSG];
[L2731]              name_OMAToken[this] := tokenName_s302;
[L2732]              symbol_OMAToken[this] := tokenSymbol_s302;
[L2763]  RET         call OMAToken_OMAToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L2764]  COND FALSE  !(revert)
[L743]   RET         call OMAToken_OMAToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
[L744]               assume !revert && gas >= 0;
[L4548]  RET         call OMAToken_OMAToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s302, tokenName_s302, tokenSymbol_s302);
OMAToken(3979018).transfer~address~uint256.gas(3979002)({from : 3979013, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L792]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowance1 := sum_allowance1;
[L795]               __tmp__M_Ref_bool := M_Ref_bool;
[L796]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L797]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L798]               __tmp__Length := Length;
[L799]               __tmp__now := now;
[L800]               __tmp__owner_Owned := owner_Owned;
[L801]               __tmp__paused_Pausable := paused_Pausable;
[L802]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L803]               __tmp__name_OMAToken := name_OMAToken;
[L804]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L805]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L806]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L807]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L808]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L809]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L810]   CALL        call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2858]  CALL        call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2774]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L2774]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND FALSE  !(revert)
[L2778]              __var_2 := null;
[L2779]  COND TRUE   !(_to_s382 != null)
[L2780]              revert := true;
[L2858]  RET         call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2859]  COND TRUE   revert
[L810]   RET         call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L811]               assume revert || gas < 0;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);

Loop:
OMAToken(3979018).transfer~address~uint256.gas(3979001)({from : 3979009, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s401) && msgsender_MSG != _to_s401) && _value_s401 <= balanceOf_OMAToken[this][msgsender_MSG]) && balanceOf_OMAToken[this][_to_s401] + _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s401 >= 0) && _value_s401 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][_to_s401] >= 0) && balanceOf_OMAToken[this][_to_s401] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_OMAToken[this][msgsender_MSG] >= 0) && balanceOf_OMAToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_OMAToken0 := true;
[L3]                 call_transfer_OMAToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L792]               __tmp__alloc_allowance_OMAToken_lvl0 := alloc_allowance_OMAToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowance1 := sum_allowance1;
[L795]               __tmp__M_Ref_bool := M_Ref_bool;
[L796]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L797]               __tmp__sum_frozenAmount3 := sum_frozenAmount3;
[L798]               __tmp__Length := Length;
[L799]               __tmp__now := now;
[L800]               __tmp__owner_Owned := owner_Owned;
[L801]               __tmp__paused_Pausable := paused_Pausable;
[L802]               __tmp__symbol_OMAToken := symbol_OMAToken;
[L803]               __tmp__name_OMAToken := name_OMAToken;
[L804]               __tmp__decimals_OMAToken := decimals_OMAToken;
[L805]               __tmp__totalSupply_OMAToken := totalSupply_OMAToken;
[L806]               __tmp__balanceOf_OMAToken := balanceOf_OMAToken;
[L807]               __tmp__allowance_OMAToken := allowance_OMAToken;
[L808]               __tmp__frozenAccount_OMAToken := frozenAccount_OMAToken;
[L809]               __tmp__frozenAmount_OMAToken := frozenAmount_OMAToken;
[L810]   CALL        call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L2858]  CALL        call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2774]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L2774]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2775]  COND FALSE  !(revert)
[L2778]              __var_2 := null;
[L2779]  COND TRUE   !(_to_s382 != null)
[L2780]              revert := true;
[L2858]  RET         call _transfer~address~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s401, _value_s401);
[L2859]  COND TRUE   revert
[L810]   RET         call success_s401 := transfer~address~uint256_OMAToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);
[L811]               assume revert || gas < 0;
[L4482]  RET         call success_s401 := transfer~address~uint256_OMAToken(this, msgsender_MSG, msgvalue_MSG, _to_s401, _value_s401);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
