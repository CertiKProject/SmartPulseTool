This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:11:14,371 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:11:14,373 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:11:14,384 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:11:14,384 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:11:14,385 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:11:14,386 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:11:14,387 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:11:14,388 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:11:14,389 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:11:14,390 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:11:14,390 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:11:14,391 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:11:14,392 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:11:14,393 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:11:14,393 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:11:14,394 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:11:14,396 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:11:14,397 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:11:14,398 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:11:14,399 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:11:14,400 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:11:14,401 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:11:14,402 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:11:14,402 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:11:14,402 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:11:14,403 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:11:14,403 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:11:14,403 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:11:14,404 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:11:14,404 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:11:14,405 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:11:14,405 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:11:14,406 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:11:14,406 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:11:14,407 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:11:14,407 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:11:14,407 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:11:14,407 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:11:14,408 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:11:14,409 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:11:14,409 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:11:14,417 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:11:14,417 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:11:14,417 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:11:14,418 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:11:14,418 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:11:14,418 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:11:14,418 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:11:14,418 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:11:14,418 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:11:14,418 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:11:14,418 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:11:14,419 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:11:14,419 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:11:14,420 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:11:14,420 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:11:14,420 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:11:14,420 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:11:14,420 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:11:14,443 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:11:14,457 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:11:14,459 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:11:14,460 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:11:14,461 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:11:14,461 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl
[2020-11-24 20:11:14,461 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl'
[2020-11-24 20:11:14,577 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:11:14,578 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:11:14,579 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:11:14,579 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:11:14,579 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:11:14,596 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,598 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,644 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,645 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,677 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,692 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,703 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,717 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:11:14,718 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:11:14,719 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:11:14,721 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:11:14,725 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/1) ...
[2020-11-24 20:11:14,746 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:11:14,752 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:11:14,761 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:11:14,769 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s458 ) && msg.sender!=to_s458 ) && value_s458<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][to_s458] + value_s458 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && value_s458>=0 ) && value_s458<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s458]>=0 ) && _balances_ERC20[this][to_s458]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:11:14,773 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - value_s458 ) ) && _balances_ERC20[this][to_s458]==( ( old(_balances_ERC20[this][to_s458]) ) + value_s458 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && amount_KOCToken[this]==( old(amount_KOCToken[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[value_s458,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amount_KOCToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 20:11:14,780 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && amount_KOCToken[this] == old(amount_KOCToken[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:11:14,781 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:11:14,796 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:11:14 PropertyContainer
[2020-11-24 20:11:14,796 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:11:14,796 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:11:14,796 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:11:14,796 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:11:14,797 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/2) ...
[2020-11-24 20:11:14,798 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:11:14,798 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:11:14,819 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:11:14" (2/2) ...
[2020-11-24 20:11:14,820 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:11:14,821 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:11:14,821 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:11:14,821 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:11:14,823 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/2) ...
[2020-11-24 20:11:14,878 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:11:14,878 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:11:14,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,879 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles
[2020-11-24 20:11:14,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__success
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-24 20:11:14,880 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole
[2020-11-24 20:11:14,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole
[2020-11-24 20:11:14,881 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole
[2020-11-24 20:11:14,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole
[2020-11-24 20:11:14,881 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole
[2020-11-24 20:11:14,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole
[2020-11-24 20:11:14,881 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole
[2020-11-24 20:11:14,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole
[2020-11-24 20:11:14,881 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__success
[2020-11-24 20:11:14,881 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__success
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:11:14,882 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:11:14,882 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:11:14,883 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:11:14,883 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:11:14,883 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:11:14,883 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:11:14,883 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:11:14,883 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:11:14,883 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:11:14,883 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:11:14,883 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:11:14,883 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:11:14,884 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:11:14,884 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:11:14,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:11:14,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:11:14,885 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:11:14,885 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:11:14,886 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:11:14,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:11:14,886 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-24 20:11:14,886 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable
[2020-11-24 20:11:14,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable
[2020-11-24 20:11:14,886 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable
[2020-11-24 20:11:14,886 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable
[2020-11-24 20:11:14,886 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-24 20:11:14,886 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped
[2020-11-24 20:11:14,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped
[2020-11-24 20:11:14,887 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped
[2020-11-24 20:11:14,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped
[2020-11-24 20:11:14,887 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-24 20:11:14,887 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:11:14,887 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:11:14,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:11:14,887 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:11:14,887 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:11:14,887 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:11:14,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken_NoBaseCtor__success
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken
[2020-11-24 20:11:14,888 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:11:14,888 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:11:14,889 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:11:14,890 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KOCToken
[2020-11-24 20:11:14,891 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:11:14,891 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:11:14,891 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 20:11:14,892 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:11:14,892 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:11:14,892 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:11:14,892 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,893 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,893 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,893 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,893 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,893 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 20:11:14,894 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__success
[2020-11-24 20:11:14,894 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__fail
[2020-11-24 20:11:14,894 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 20:11:14,894 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__fail
[2020-11-24 20:11:14,895 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 20:11:14,895 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-24 20:11:14,895 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__success
[2020-11-24 20:11:14,895 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__fail
[2020-11-24 20:11:14,896 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__success
[2020-11-24 20:11:14,896 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__fail
[2020-11-24 20:11:14,896 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__success
[2020-11-24 20:11:14,896 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__fail
[2020-11-24 20:11:14,897 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__success
[2020-11-24 20:11:14,897 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__fail
[2020-11-24 20:11:14,897 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__fail
[2020-11-24 20:11:14,897 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__fail
[2020-11-24 20:11:14,898 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:11:14,898 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:11:14,898 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:11:14,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:11:14,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:11:14,899 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:11:14,899 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:11:14,900 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:11:14,900 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:11:14,900 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:11:14,900 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:11:14,901 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:11:14,901 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:11:14,901 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:11:14,901 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:11:14,902 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:11:14,902 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:11:14,902 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:11:14,902 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:11:14,902 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:11:14,903 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:11:14,903 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:11:14,903 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:11:14,903 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:11:14,903 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:11:14,904 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__success
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__success
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-24 20:11:14,905 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken_NoBaseCtor__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken__success
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure KOCToken_KOCToken__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:11:14,906 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:11:14,907 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:11:14,907 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 20:11:14,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__fail
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__success
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__fail
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__success
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__fail
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__success
[2020-11-24 20:11:14,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__fail
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__success
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__fail
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__success
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__fail
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__success
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__fail
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__success
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__fail
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__success
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:11:14,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:11:14,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:11:14,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:11:14,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-24 20:11:14,914 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__fail
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__success
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__fail
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__success
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:11:14,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken_NoBaseCtor__fail
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken_NoBaseCtor__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken__fail
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure KOCToken_KOCToken__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:11:14,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-24 20:11:14,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KOCToken
[2020-11-24 20:11:14,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:11:14,919 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:11:14,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:11:15,218 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:11:15,219 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:11:15,219 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:11:15,523 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:11:15,946 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:11:15,946 INFO  L286             CfgBuilder]: Removed 10 assue(true) statements.
[2020-11-24 20:11:15,948 INFO  L202        PluginConnector]: Adding new model KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:11:15 BoogieIcfgContainer
[2020-11-24 20:11:15,948 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:11:14" (2/2) ...
[2020-11-24 20:11:15,948 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:11:15,949 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4f7ca2d6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:11:15, skipping insertion in model container
[2020-11-24 20:11:15,949 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:11:15,949 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:11:15,949 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:11:15,950 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:11:15,950 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/3) ...
[2020-11-24 20:11:15,950 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@20ddacc7 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:11:15, skipping insertion in model container
[2020-11-24 20:11:15,950 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:11:14" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:11:15,980 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:11:15 NWAContainer
[2020-11-24 20:11:15,980 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:11:15,980 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:11:15,980 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:11:15,981 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:11:15,982 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:11:15" (3/4) ...
[2020-11-24 20:11:15,982 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@56422141 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:11:15, skipping insertion in model container
[2020-11-24 20:11:15,982 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:11:15" (4/4) ...
[2020-11-24 20:11:15,985 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:11:15,991 INFO  L110   BuchiProductObserver]: Initial RCFG 2792 locations, 4112 edges
[2020-11-24 20:11:15,991 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:11:16,002 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:11:18,288 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:11:18,298 INFO  L110   BuchiProductObserver]: BuchiProgram size 7216 locations, 13513 edges
[2020-11-24 20:11:18,298 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:11:18 BoogieIcfgContainer
[2020-11-24 20:11:18,298 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:11:18,299 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:11:18,299 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:11:18,300 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:11:18,300 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:11:18" (1/1) ...
[2020-11-24 20:11:18,438 INFO  L313           BlockEncoder]: Initial Icfg 7216 locations, 13513 edges
[2020-11-24 20:11:18,438 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:11:18,439 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:11:18,439 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:11:18,439 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:11:18,455 INFO  L70    emoveInfeasibleEdges]: Removed 195 edges and 23 locations because of local infeasibility
[2020-11-24 20:11:18,469 INFO  L70        RemoveSinkStates]: Removed 110 edges and 73 locations by removing sink states
[2020-11-24 20:11:18,497 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:11:18,503 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:11:18,509 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:11:18,510 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:11:18,515 INFO  L313           BlockEncoder]: Encoded RCFG 7086 locations, 13158 edges
[2020-11-24 20:11:18,515 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:11:18 BasicIcfg
[2020-11-24 20:11:18,515 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:11:18,516 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:11:18,516 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:11:18,518 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:11:18,518 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:11:18,518 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:11:14" (1/6) ...
[2020-11-24 20:11:18,520 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@10f05bf8 and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:11:18, skipping insertion in model container
[2020-11-24 20:11:18,520 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:11:18,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:11:14" (2/6) ...
[2020-11-24 20:11:18,520 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@10f05bf8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:11:18, skipping insertion in model container
[2020-11-24 20:11:18,520 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:11:18,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:11:15" (3/6) ...
[2020-11-24 20:11:18,521 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@10f05bf8 and model type KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:11:18, skipping insertion in model container
[2020-11-24 20:11:18,521 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:11:18,521 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:11:15" (4/6) ...
[2020-11-24 20:11:18,521 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@10f05bf8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:11:18, skipping insertion in model container
[2020-11-24 20:11:18,521 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:11:18,521 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:11:18" (5/6) ...
[2020-11-24 20:11:18,521 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@10f05bf8 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:11:18, skipping insertion in model container
[2020-11-24 20:11:18,522 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:11:18,522 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:11:18" (6/6) ...
[2020-11-24 20:11:18,523 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KOCToken_0xfae2b2f57ce6dce9a089b746e32ede3941b2208b_transfer-normal.bpl_BEv2
[2020-11-24 20:11:18,560 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:11:18,561 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:11:18,561 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:11:18,561 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:11:18,561 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:11:18,561 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:11:18,561 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:11:18,561 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:11:18,561 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:11:18,626 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7086 states.
[2020-11-24 20:11:18,703 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:18,703 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:18,703 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:18,712 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:18,712 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:18,713 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:11:18,713 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7086 states.
[2020-11-24 20:11:18,743 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:18,743 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:18,743 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:18,746 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:18,746 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND TRUE   revert
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND FALSE  !(gas >= 0)
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:18,764 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:18,764 INFO  L82        PathProgramCache]: Analyzing trace with hash -1121397168, now seen corresponding path program 1 times
[2020-11-24 20:11:18,770 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:18,792 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:18,830 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:11:18,832 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:18,832 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:11:19,127 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:19,139 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:11:19,139 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:11:19,141 INFO  L87              Difference]: Start difference. First operand 7086 states. Second operand 3 states.
[2020-11-24 20:11:19,404 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:19,404 INFO  L93              Difference]: Finished difference Result 2904 states and 3587 transitions.
[2020-11-24 20:11:19,405 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:11:19,406 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2904 states and 3587 transitions.
[2020-11-24 20:11:19,424 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:19,445 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2904 states to 2904 states and 3587 transitions.
[2020-11-24 20:11:19,446 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:11:19,448 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 760
[2020-11-24 20:11:19,449 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2904 states and 3587 transitions.
[2020-11-24 20:11:19,457 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:19,457 INFO  L728         BuchiCegarLoop]: Abstraction has 2904 states and 3587 transitions.
[2020-11-24 20:11:19,471 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2904 states and 3587 transitions.
[2020-11-24 20:11:19,530 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2904 to 2904.
[2020-11-24 20:11:19,531 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2904 states.
[2020-11-24 20:11:19,538 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2904 states to 2904 states and 3587 transitions.
[2020-11-24 20:11:19,539 INFO  L751         BuchiCegarLoop]: Abstraction has 2904 states and 3587 transitions.
[2020-11-24 20:11:19,539 INFO  L631         BuchiCegarLoop]: Abstraction has 2904 states and 3587 transitions.
[2020-11-24 20:11:19,539 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:11:19,539 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2904 states and 3587 transitions.
[2020-11-24 20:11:19,548 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:19,549 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:19,549 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:19,551 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:19,551 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND TRUE   revert
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND FALSE  !(__exception)
[L863]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3638]  COND TRUE   DType[this] == KOCToken
[L3639]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4059]              __var_12 := null;
[L4060]  COND TRUE   !(to_s612 != null)
[L4061]              revert := true;
[L3639]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3640]  COND TRUE   revert
[L863]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L864]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s458) && _balances_ERC20[this][to_s458] == old(_balances_ERC20[this][to_s458]) + value_s458) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND FALSE  !(__exception)
[L863]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3638]  COND TRUE   DType[this] == KOCToken
[L3639]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4059]              __var_12 := null;
[L4060]  COND TRUE   !(to_s612 != null)
[L4061]              revert := true;
[L3639]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3640]  COND TRUE   revert
[L863]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L864]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s458) && _balances_ERC20[this][to_s458] == old(_balances_ERC20[this][to_s458]) + value_s458) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:19,556 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:19,556 INFO  L82        PathProgramCache]: Analyzing trace with hash -2042171849, now seen corresponding path program 1 times
[2020-11-24 20:11:19,557 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:19,568 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:19,593 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:11:19,594 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:19,594 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:11:19,595 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:19,595 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:11:19,595 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:11:19,596 INFO  L87              Difference]: Start difference. First operand 2904 states and 3587 transitions. cyclomatic complexity: 685 Second operand 3 states.
[2020-11-24 20:11:19,707 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:19,707 INFO  L93              Difference]: Finished difference Result 3894 states and 4843 transitions.
[2020-11-24 20:11:19,707 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:11:19,708 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3894 states and 4843 transitions.
[2020-11-24 20:11:19,723 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:11:19,740 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3894 states to 3894 states and 4843 transitions.
[2020-11-24 20:11:19,740 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1059
[2020-11-24 20:11:19,741 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1059
[2020-11-24 20:11:19,741 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3894 states and 4843 transitions.
[2020-11-24 20:11:19,746 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:19,746 INFO  L728         BuchiCegarLoop]: Abstraction has 3894 states and 4843 transitions.
[2020-11-24 20:11:19,749 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3894 states and 4843 transitions.
[2020-11-24 20:11:19,788 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3894 to 3392.
[2020-11-24 20:11:19,788 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3392 states.
[2020-11-24 20:11:19,794 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3392 states to 3392 states and 4239 transitions.
[2020-11-24 20:11:19,794 INFO  L751         BuchiCegarLoop]: Abstraction has 3392 states and 4239 transitions.
[2020-11-24 20:11:19,794 INFO  L631         BuchiCegarLoop]: Abstraction has 3392 states and 4239 transitions.
[2020-11-24 20:11:19,794 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:11:19,794 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3392 states and 4239 transitions.
[2020-11-24 20:11:19,801 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:19,801 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:19,801 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:19,803 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:19,803 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND TRUE   !(account_s654 != null)
[L4112]              revert := true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND TRUE   revert
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND FALSE  !(__exception)
[L863]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3638]  COND TRUE   DType[this] == KOCToken
[L3639]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4059]              __var_12 := null;
[L4060]  COND TRUE   !(to_s612 != null)
[L4061]              revert := true;
[L3639]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3640]  COND TRUE   revert
[L863]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L864]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s458) && _balances_ERC20[this][to_s458] == old(_balances_ERC20[this][to_s458]) + value_s458) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND FALSE  !(__exception)
[L863]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3638]  COND TRUE   DType[this] == KOCToken
[L3639]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4059]              __var_12 := null;
[L4060]  COND TRUE   !(to_s612 != null)
[L4061]              revert := true;
[L3639]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3640]  COND TRUE   revert
[L863]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L864]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s458) && _balances_ERC20[this][to_s458] == old(_balances_ERC20[this][to_s458]) + value_s458) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:19,807 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:19,807 INFO  L82        PathProgramCache]: Analyzing trace with hash -439963308, now seen corresponding path program 1 times
[2020-11-24 20:11:19,808 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:19,821 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:19,873 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-24 20:11:19,874 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:19,874 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:11:19,874 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:19,874 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:11:19,874 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:11:19,875 INFO  L87              Difference]: Start difference. First operand 3392 states and 4239 transitions. cyclomatic complexity: 849 Second operand 5 states.
[2020-11-24 20:11:19,907 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:19,908 INFO  L93              Difference]: Finished difference Result 3394 states and 4240 transitions.
[2020-11-24 20:11:19,908 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:11:19,908 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3394 states and 4240 transitions.
[2020-11-24 20:11:19,917 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:19,928 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3394 states to 3391 states and 4237 transitions.
[2020-11-24 20:11:19,929 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 920
[2020-11-24 20:11:19,929 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 920
[2020-11-24 20:11:19,929 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3391 states and 4237 transitions.
[2020-11-24 20:11:19,932 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:19,933 INFO  L728         BuchiCegarLoop]: Abstraction has 3391 states and 4237 transitions.
[2020-11-24 20:11:19,935 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3391 states and 4237 transitions.
[2020-11-24 20:11:19,966 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3391 to 3391.
[2020-11-24 20:11:19,966 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3391 states.
[2020-11-24 20:11:19,970 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3391 states to 3391 states and 4237 transitions.
[2020-11-24 20:11:19,970 INFO  L751         BuchiCegarLoop]: Abstraction has 3391 states and 4237 transitions.
[2020-11-24 20:11:19,970 INFO  L631         BuchiCegarLoop]: Abstraction has 3391 states and 4237 transitions.
[2020-11-24 20:11:19,970 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:11:19,970 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3391 states and 4237 transitions.
[2020-11-24 20:11:19,975 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:19,975 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:19,975 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:19,977 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:19,977 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND TRUE   !(c_s106 >= a_s106)
[L3085]              revert := true;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND TRUE   revert
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND TRUE   revert
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND FALSE  !(__exception)
[L863]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3638]  COND TRUE   DType[this] == KOCToken
[L3639]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4059]              __var_12 := null;
[L4060]  COND TRUE   !(to_s612 != null)
[L4061]              revert := true;
[L3639]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3640]  COND TRUE   revert
[L863]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L864]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s458) && _balances_ERC20[this][to_s458] == old(_balances_ERC20[this][to_s458]) + value_s458) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND FALSE  !(__exception)
[L863]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3638]  COND TRUE   DType[this] == KOCToken
[L3639]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4059]              __var_12 := null;
[L4060]  COND TRUE   !(to_s612 != null)
[L4061]              revert := true;
[L3639]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3640]  COND TRUE   revert
[L863]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L864]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - value_s458) && _balances_ERC20[this][to_s458] == old(_balances_ERC20[this][to_s458]) + value_s458) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && amount_KOCToken[this] == old(amount_KOCToken[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

[2020-11-24 20:11:19,980 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:19,981 INFO  L82        PathProgramCache]: Analyzing trace with hash -560159520, now seen corresponding path program 1 times
[2020-11-24 20:11:19,982 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:19,991 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:11:20,026 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-24 20:11:20,026 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:11:20,026 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:11:20,027 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:11:20,027 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:11:20,027 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:11:20,027 INFO  L87              Difference]: Start difference. First operand 3391 states and 4237 transitions. cyclomatic complexity: 848 Second operand 3 states.
[2020-11-24 20:11:20,116 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:11:20,116 INFO  L93              Difference]: Finished difference Result 3893 states and 4609 transitions.
[2020-11-24 20:11:20,116 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:11:20,116 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3893 states and 4609 transitions.
[2020-11-24 20:11:20,129 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:11:20,144 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3893 states to 3556 states and 4179 transitions.
[2020-11-24 20:11:20,144 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 949
[2020-11-24 20:11:20,145 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 989
[2020-11-24 20:11:20,145 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3556 states and 4179 transitions.
[2020-11-24 20:11:20,153 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:11:20,154 INFO  L728         BuchiCegarLoop]: Abstraction has 3556 states and 4179 transitions.
[2020-11-24 20:11:20,162 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3556 states and 4179 transitions.
[2020-11-24 20:11:20,194 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3556 to 3122.
[2020-11-24 20:11:20,194 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3122 states.
[2020-11-24 20:11:20,199 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3122 states to 3122 states and 3643 transitions.
[2020-11-24 20:11:20,199 INFO  L751         BuchiCegarLoop]: Abstraction has 3122 states and 3643 transitions.
[2020-11-24 20:11:20,200 INFO  L631         BuchiCegarLoop]: Abstraction has 3122 states and 3643 transitions.
[2020-11-24 20:11:20,200 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:11:20,200 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3122 states and 3643 transitions.
[2020-11-24 20:11:20,205 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:11:20,205 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:11:20,205 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:11:20,207 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:11:20,207 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7800]              assume null == 0;
[L7801]  CALL        call this := FreshRefGenerator__success();
[L2940]              havoc newRef;
[L2941]              assume Alloc[newRef] == false;
[L2942]              Alloc[newRef] := true;
[L2943]              assume newRef != null;
[L7801]  RET         call this := FreshRefGenerator__success();
[L7802]              assume now >= 0;
[L7803]              assume DType[this] == KOCToken;
[L7804]              assume msgvalue_MSG == 0;
[L7805]              gas := gas - 53000;
[L7806]  CALL        call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND FALSE  !(revert)
[L4119]              _totalSupply_ERC20[this] := __var_16;
[L4120]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4120]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4121]  COND FALSE  !(revert)
[L4124]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4125]              _balances_ERC20[this][account_s654] := __var_17;
[L4126]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4127]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND FALSE  !(revert)
[L4840]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
[L7807]              assume !revert && gas >= 0;
[L7810]  CALL        call CorralChoice_KOCToken(this);
[L7655]              havoc msgsender_MSG;
[L7656]              havoc msgvalue_MSG;
[L7657]              havoc choice;
[L7658]              havoc to_s458;
[L7659]              havoc value_s458;
[L7660]              havoc __ret_0_transfer;
[L7661]              havoc spender_s477;
[L7662]              havoc value_s477;
[L7663]              havoc __ret_0_approve;
[L7664]              havoc from_s512;
[L7665]              havoc to_s512;
[L7666]              havoc value_s512;
[L7667]              havoc __ret_0_transferFrom;
[L7668]              havoc __ret_0_totalSupply;
[L7669]              havoc owner_s423;
[L7670]              havoc __ret_0_balanceOf;
[L7671]              havoc owner_s439;
[L7672]              havoc spender_s439;
[L7673]              havoc __ret_0_allowance;
[L7674]              havoc spender_s539;
[L7675]              havoc addedValue_s539;
[L7676]              havoc __ret_0_increaseAllowance;
[L7677]              havoc spender_s566;
[L7678]              havoc subtractedValue_s566;
[L7679]              havoc __ret_0_decreaseAllowance;
[L7680]              havoc name_s795;
[L7681]              havoc symbol_s795;
[L7682]              havoc decimals_s795;
[L7683]              havoc __ret_0_name;
[L7684]              havoc __ret_0_symbol;
[L7685]              havoc __ret_0_decimals;
[L7686]              havoc value_s912;
[L7687]              havoc from_s925;
[L7688]              havoc value_s925;
[L7689]              havoc tmpNow;
[L7690]              havoc gas;
[L7691]              assume gas > 4000000 && gas <= 8000000;
[L7692]              tmpNow := now;
[L7693]              havoc now;
[L7694]              assume now > tmpNow;
[L7695]              assume msgsender_MSG != null;
[L7696]              assume DType[msgsender_MSG] != SafeMath;
[L7697]              assume DType[msgsender_MSG] != Roles;
[L7698]              assume DType[msgsender_MSG] != MinterRole;
[L7699]              assume DType[msgsender_MSG] != IERC20;
[L7700]              assume DType[msgsender_MSG] != ERC20;
[L7701]              assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]              assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]              assume DType[msgsender_MSG] != ERC20Capped;
[L7704]              assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]              assume DType[msgsender_MSG] != KOCToken;
[L7706]              Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE   choice == 13
[L7708]              gas := gas - 21000;
[L7709]  COND TRUE   gas >= 0
[L7710]              assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]              assume msgvalue_MSG == 0;
[L7712]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L834]               havoc __exception;
[L835]               revert := false;
[L836]   COND TRUE   __exception
[L837]               __tmp__Balance := Balance;
[L838]               __tmp__DType := DType;
[L839]               __tmp__Alloc := Alloc;
[L840]               __tmp__balance_ADDR := balance_ADDR;
[L841]               __tmp__M_Ref_bool := M_Ref_bool;
[L842]               __tmp__sum := sum;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum__balances0 := sum__balances0;
[L845]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum__allowed1 := sum__allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L851]               __tmp___minters_MinterRole := _minters_MinterRole;
[L852]               __tmp___balances_ERC20 := _balances_ERC20;
[L853]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L854]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L855]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L856]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L857]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L858]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L859]               __tmp__amount_KOCToken := amount_KOCToken;
[L860]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3604]  COND TRUE   __tmp__DType[this] == KOCToken
[L3605]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4033]              __var_12 := null;
[L4034]  COND TRUE   !(to_s612 != null)
[L4035]              revert := true;
[L3605]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3606]  COND TRUE   revert
[L860]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L861]               assume revert || gas < 0;
[L7712]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET         call CorralChoice_KOCToken(this);

Loop:
[L7810]  CALL       call CorralChoice_KOCToken(this);
[L7655]             havoc msgsender_MSG;
[L7656]             havoc msgvalue_MSG;
[L7657]             havoc choice;
[L7658]             havoc to_s458;
[L7659]             havoc value_s458;
[L7660]             havoc __ret_0_transfer;
[L7661]             havoc spender_s477;
[L7662]             havoc value_s477;
[L7663]             havoc __ret_0_approve;
[L7664]             havoc from_s512;
[L7665]             havoc to_s512;
[L7666]             havoc value_s512;
[L7667]             havoc __ret_0_transferFrom;
[L7668]             havoc __ret_0_totalSupply;
[L7669]             havoc owner_s423;
[L7670]             havoc __ret_0_balanceOf;
[L7671]             havoc owner_s439;
[L7672]             havoc spender_s439;
[L7673]             havoc __ret_0_allowance;
[L7674]             havoc spender_s539;
[L7675]             havoc addedValue_s539;
[L7676]             havoc __ret_0_increaseAllowance;
[L7677]             havoc spender_s566;
[L7678]             havoc subtractedValue_s566;
[L7679]             havoc __ret_0_decreaseAllowance;
[L7680]             havoc name_s795;
[L7681]             havoc symbol_s795;
[L7682]             havoc decimals_s795;
[L7683]             havoc __ret_0_name;
[L7684]             havoc __ret_0_symbol;
[L7685]             havoc __ret_0_decimals;
[L7686]             havoc value_s912;
[L7687]             havoc from_s925;
[L7688]             havoc value_s925;
[L7689]             havoc tmpNow;
[L7690]             havoc gas;
[L7691]             assume gas > 4000000 && gas <= 8000000;
[L7692]             tmpNow := now;
[L7693]             havoc now;
[L7694]             assume now > tmpNow;
[L7695]             assume msgsender_MSG != null;
[L7696]             assume DType[msgsender_MSG] != SafeMath;
[L7697]             assume DType[msgsender_MSG] != Roles;
[L7698]             assume DType[msgsender_MSG] != MinterRole;
[L7699]             assume DType[msgsender_MSG] != IERC20;
[L7700]             assume DType[msgsender_MSG] != ERC20;
[L7701]             assume DType[msgsender_MSG] != ERC20Detailed;
[L7702]             assume DType[msgsender_MSG] != ERC20Mintable;
[L7703]             assume DType[msgsender_MSG] != ERC20Capped;
[L7704]             assume DType[msgsender_MSG] != ERC20Burnable;
[L7705]             assume DType[msgsender_MSG] != KOCToken;
[L7706]             Alloc[msgsender_MSG] := true;
[L7707]  COND TRUE  choice == 13
[L7708]             gas := gas - 21000;
[L7709]  COND TRUE  gas >= 0
[L7710]             assume value_s458 >= 0 && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7711]             assume msgvalue_MSG == 0;
[L7712]  CALL       call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_ERC200 := true;
[L3]                call_transfer_ERC200 := false;
[L3]                revert := revert_hold;
[L834]              havoc __exception;
[L835]              revert := false;
[L836]   COND TRUE  __exception
[L837]              __tmp__Balance := Balance;
[L838]              __tmp__DType := DType;
[L839]              __tmp__Alloc := Alloc;
[L840]              __tmp__balance_ADDR := balance_ADDR;
[L841]              __tmp__M_Ref_bool := M_Ref_bool;
[L842]              __tmp__sum := sum;
[L843]              __tmp__M_Ref_int := M_Ref_int;
[L844]              __tmp__sum__balances0 := sum__balances0;
[L845]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L846]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]              __tmp__sum__allowed1 := sum__allowed1;
[L848]              __tmp__Length := Length;
[L849]              __tmp__now := now;
[L850]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L851]              __tmp___minters_MinterRole := _minters_MinterRole;
[L852]              __tmp___balances_ERC20 := _balances_ERC20;
[L853]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L854]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L855]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L856]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L857]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L858]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L859]              __tmp__amount_KOCToken := amount_KOCToken;
[L860]   CALL       call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3604]  COND TRUE  __tmp__DType[this] == KOCToken
[L3605]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4033]             __var_12 := null;
[L4034]  COND TRUE  !(to_s612 != null)
[L4035]             revert := true;
[L3605]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3606]  COND TRUE  revert
[L860]   RET        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L861]              assume revert || gas < 0;
[L7712]  RET        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L7810]  RET        call CorralChoice_KOCToken(this);

[2020-11-24 20:11:20,211 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:20,211 INFO  L82        PathProgramCache]: Analyzing trace with hash 1320855033, now seen corresponding path program 1 times
[2020-11-24 20:11:20,212 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:20,239 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:20,268 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:20,367 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:20,367 INFO  L82        PathProgramCache]: Analyzing trace with hash 924971584, now seen corresponding path program 1 times
[2020-11-24 20:11:20,368 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:20,374 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:20,380 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:20,391 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:11:20,391 INFO  L82        PathProgramCache]: Analyzing trace with hash -876578488, now seen corresponding path program 1 times
[2020-11-24 20:11:20,392 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:11:20,418 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:20,445 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 20:11:20,673 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification. DAG size of input: 154 DAG size of output: 148
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-24 20:11:20,829 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 109
[2020-11-24 20:11:20,954 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification that was a NOOP. DAG size: 269
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-24 20:11:21,149 WARN  L188               SmtUtils]: Spent 183.00 ms on a formula simplification that was a NOOP. DAG size: 215
[2020-11-24 20:11:21,572 WARN  L188               SmtUtils]: Spent 419.00 ms on a formula simplification. DAG size of input: 273 DAG size of output: 267
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 20:11:21,739 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification. DAG size of input: 166 DAG size of output: 162
[2020-11-24 20:11:21,914 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification that was a NOOP. DAG size: 331
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 20:11:22,048 WARN  L188               SmtUtils]: Spent 129.00 ms on a formula simplification that was a NOOP. DAG size: 266
[2020-11-24 20:11:22,175 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification that was a NOOP. DAG size: 266
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-24 20:11:22,238 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-24 20:11:22,946 WARN  L188               SmtUtils]: Spent 304.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 203
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 20:11:23,640 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 215
[2020-11-24 20:11:24,049 WARN  L188               SmtUtils]: Spent 407.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 267
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 20:11:24,201 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification. DAG size of input: 166 DAG size of output: 162
[2020-11-24 20:11:24,339 WARN  L188               SmtUtils]: Spent 137.00 ms on a formula simplification that was a NOOP. DAG size: 331
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-24 20:11:24,463 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification that was a NOOP. DAG size: 266
[2020-11-24 20:11:25,232 WARN  L188               SmtUtils]: Spent 767.00 ms on a formula simplification. DAG size of input: 469 DAG size of output: 455
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11177 to 22349
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 20:11:25,376 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 200 DAG size of output: 197
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 20:11:25,752 WARN  L188               SmtUtils]: Spent 207.00 ms on a formula simplification. DAG size of input: 308 DAG size of output: 307
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 20:11:25,857 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification that was a NOOP. DAG size: 303
[2020-11-24 20:11:25,874 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:25,894 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:11:25,903 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:11:25 BasicIcfg
[2020-11-24 20:11:25,903 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:11:25,903 INFO  L168              Benchmark]: Toolchain (without parser) took 11325.74 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.1 GB). Free memory was 929.8 MB in the beginning and 1.3 GB in the end (delta: -419.2 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,904 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,904 INFO  L168              Benchmark]: Boogie Preprocessor took 138.97 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,904 INFO  L168              Benchmark]: UtopiaSpecLang took 77.52 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,904 INFO  L168              Benchmark]: Boogie Printer took 24.60 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,905 INFO  L168              Benchmark]: RCFGBuilder took 1127.47 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 897.6 MB in the beginning and 921.8 MB in the end (delta: -24.2 MB). Peak memory consumption was 185.1 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,905 INFO  L168              Benchmark]: UtopiaLTL2Aut took 31.29 ms. Allocated memory is still 1.1 GB. Free memory was 921.8 MB in the beginning and 914.8 MB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,905 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2318.30 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 188.7 MB). Free memory was 914.8 MB in the beginning and 1.1 GB in the end (delta: -135.9 MB). Peak memory consumption was 477.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,905 INFO  L168              Benchmark]: BlockEncodingV2 took 216.66 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 940.1 MB in the end (delta: 110.6 MB). Peak memory consumption was 110.6 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,906 INFO  L168              Benchmark]: BuchiAutomizer took 7387.45 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 844.6 MB). Free memory was 940.1 MB in the beginning and 1.3 GB in the end (delta: -408.9 MB). Peak memory consumption was 949.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:11:25,908 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7216 locations, 13513 edges
  - StatisticsResult: Encoded RCFG
    7086 locations, 13158 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 138.97 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 77.52 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 903.0 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 24.60 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1127.47 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.0 MB). Free memory was 897.6 MB in the beginning and 921.8 MB in the end (delta: -24.2 MB). Peak memory consumption was 185.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 31.29 ms. Allocated memory is still 1.1 GB. Free memory was 921.8 MB in the beginning and 914.8 MB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2318.30 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 188.7 MB). Free memory was 914.8 MB in the beginning and 1.1 GB in the end (delta: -135.9 MB). Peak memory consumption was 477.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 216.66 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 940.1 MB in the end (delta: 110.6 MB). Peak memory consumption was 110.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7387.45 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 844.6 MB). Free memory was 940.1 MB in the beginning and 1.3 GB in the end (delta: -408.9 MB). Peak memory consumption was 949.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2792 locations, 4112 edges
  - StatisticsResult: BuchiProgram size
    7216 locations, 13513 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 5 locations. The remainder module has 3122 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.3s and 5 iterations.  TraceHistogramMax:5. Analysis of lassos took 6.2s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 936 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3392 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15021 SDtfs, 11390 SDslu, 11138 SDs, 0 SdLazy, 1150 SolverSat, 2189 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639956) = (new KOCToken)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639951});
[L1941]              havoc __exception;
[L1942]              revert := false;
[L1943]  COND FALSE  !(__exception)
[L1970]  CALL        call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4871]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4871]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4872]  COND FALSE  !(revert)
[L4875]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4875]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4876]  COND FALSE  !(revert)
[L4879]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4390]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4390]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4391]  COND FALSE  !(revert)
[L4394]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4365]              assume msgsender_MSG != null;
[L4366]              Balance[this] := 0;
[L4367]              _name_ERC20Detailed[this] := 1767506099;
[L4368]              _symbol_ERC20Detailed[this] := 1767506099;
[L4369]              _decimals_ERC20Detailed[this] := 0;
[L4371]              _name_ERC20Detailed[this] := name_s795;
[L4372]              _symbol_ERC20Detailed[this] := symbol_s795;
[L4373]              _decimals_ERC20Detailed[this] := decimals_s795;
[L4394]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s795, symbol_s795, decimals_s795);
[L4395]  COND FALSE  !(revert)
[L4879]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 1257239932, 1257239932, 18);
[L4880]  COND FALSE  !(revert)
[L4883]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4722]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L4722]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4723]  COND FALSE  !(revert)
[L4726]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3556]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3510]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3495]              assume msgsender_MSG != null;
[L3496]              Balance[this] := 0;
[L3510]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3511]  COND FALSE  !(revert)
[L3556]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3557]  COND FALSE  !(revert)
[L3560]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3532]              assume msgsender_MSG != null;
[L3533]              Balance[this] := 0;
[L3534]              _balances_ERC20[this] := zeroRefintArr();
[L3535]              sum__balances0[this] := 0;
[L3536]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3537]              sum__allowed1[this] := 0;
[L3538]              _totalSupply_ERC20[this] := 0;
[L3560]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3561]  COND FALSE  !(revert)
[L4726]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4727]  COND FALSE  !(revert)
[L4730]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4699]              assume msgsender_MSG != null;
[L4700]              Balance[this] := 0;
[L4730]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4731]  COND FALSE  !(revert)
[L4883]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4884]  COND FALSE  !(revert)
[L4887]  CALL        call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4827]              assume msgsender_MSG != null;
[L4828]              Balance[this] := 0;
[L4829]              amount_KOCToken[this] := 10000000;
[L4831]              __var_27 := ConstantToRef(7544919301613266970804652377014389568456575767);
[L4832]  COND TRUE   DType[this] == KOCToken
[L4833]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4110]              __var_15 := null;
[L4111]  COND FALSE  !(!(account_s654 != null))
[L4115]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4115]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s654);
[L4116]  COND FALSE  !(revert)
[L4119]              _totalSupply_ERC20[this] := __var_16;
[L4120]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L3083]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3084]  COND FALSE  !(!(c_s106 >= a_s106))
[L3088]              __ret_0_ := c_s106;
[L4120]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], value_s654);
[L4121]  COND FALSE  !(revert)
[L4124]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L4125]              _balances_ERC20[this][account_s654] := __var_17;
[L4126]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L4127]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4833]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, ConstantToRef(7544919301613266970804652377014389568456575767), nonlinearMul(amount_KOCToken[this], 1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4834]  COND FALSE  !(revert)
[L4840]              assert { :EventEmitted "CreateTokenSuccess_KOCToken" } true;
[L4887]  RET         call KOCToken_KOCToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4888]  COND FALSE  !(revert)
[L1970]  RET         call KOCToken_KOCToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1971]              assume !revert && gas >= 0;
[L7806]  RET         call KOCToken_KOCToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(115792089237316195423570985008687907853269984665640564039457584007913129639956).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639961, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_ERC200 := true;
[L3]                call_transfer_ERC200 := false;
[L3]                revert := revert_hold;
[L834]              havoc __exception;
[L835]              revert := false;
[L836]   COND TRUE  __exception
[L837]              __tmp__Balance := Balance;
[L838]              __tmp__DType := DType;
[L839]              __tmp__Alloc := Alloc;
[L840]              __tmp__balance_ADDR := balance_ADDR;
[L841]              __tmp__M_Ref_bool := M_Ref_bool;
[L842]              __tmp__sum := sum;
[L843]              __tmp__M_Ref_int := M_Ref_int;
[L844]              __tmp__sum__balances0 := sum__balances0;
[L845]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L846]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]              __tmp__sum__allowed1 := sum__allowed1;
[L848]              __tmp__Length := Length;
[L849]              __tmp__now := now;
[L850]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L851]              __tmp___minters_MinterRole := _minters_MinterRole;
[L852]              __tmp___balances_ERC20 := _balances_ERC20;
[L853]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L854]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L855]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L856]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L857]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L858]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L859]              __tmp__amount_KOCToken := amount_KOCToken;
[L860]   CALL       call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3604]  COND TRUE  __tmp__DType[this] == KOCToken
[L3605]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4033]             __var_12 := null;
[L4034]  COND TRUE  !(to_s612 != null)
[L4035]             revert := true;
[L3605]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3606]  COND TRUE  revert
[L860]   RET        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L861]              assume revert || gas < 0;
[L7712]  RET        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);

Loop:
ERC20(115792089237316195423570985008687907853269984665640564039457584007913129639956).transfer~address~uint256.gas(3979001)({from : 7544919301613266970804652377014389568456575767, to : 0, value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != to_s458) && msgsender_MSG != to_s458) && value_s458 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][to_s458] + value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && value_s458 >= 0) && value_s458 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s458] >= 0) && _balances_ERC20[this][to_s458] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_ERC200 := true;
[L3]                call_transfer_ERC200 := false;
[L3]                revert := revert_hold;
[L834]              havoc __exception;
[L835]              revert := false;
[L836]   COND TRUE  __exception
[L837]              __tmp__Balance := Balance;
[L838]              __tmp__DType := DType;
[L839]              __tmp__Alloc := Alloc;
[L840]              __tmp__balance_ADDR := balance_ADDR;
[L841]              __tmp__M_Ref_bool := M_Ref_bool;
[L842]              __tmp__sum := sum;
[L843]              __tmp__M_Ref_int := M_Ref_int;
[L844]              __tmp__sum__balances0 := sum__balances0;
[L845]              __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L846]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]              __tmp__sum__allowed1 := sum__allowed1;
[L848]              __tmp__Length := Length;
[L849]              __tmp__now := now;
[L850]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L851]              __tmp___minters_MinterRole := _minters_MinterRole;
[L852]              __tmp___balances_ERC20 := _balances_ERC20;
[L853]              __tmp___allowed_ERC20 := _allowed_ERC20;
[L854]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L855]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L856]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L857]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L858]              __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L859]              __tmp__amount_KOCToken := amount_KOCToken;
[L860]   CALL       call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L3604]  COND TRUE  __tmp__DType[this] == KOCToken
[L3605]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L4033]             __var_12 := null;
[L4034]  COND TRUE  !(to_s612 != null)
[L4035]             revert := true;
[L3605]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s458, value_s458);
[L3606]  COND TRUE  revert
[L860]   RET        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);
[L861]              assume revert || gas < 0;
[L7712]  RET        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s458, value_s458);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
