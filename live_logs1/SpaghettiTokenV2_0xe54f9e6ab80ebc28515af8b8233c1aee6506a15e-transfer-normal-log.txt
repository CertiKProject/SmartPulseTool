This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:05:46,017 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:05:46,018 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:05:46,028 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:05:46,029 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:05:46,029 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:05:46,030 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:05:46,032 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:05:46,033 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:05:46,034 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:05:46,035 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:05:46,035 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:05:46,036 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:05:46,036 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:05:46,037 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:05:46,038 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:05:46,038 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:05:46,039 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:05:46,041 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:05:46,042 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:05:46,042 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:05:46,043 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:05:46,045 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:05:46,045 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:05:46,045 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:05:46,046 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:05:46,046 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:05:46,047 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:05:46,047 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:05:46,047 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:05:46,048 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:05:46,048 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:05:46,049 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:05:46,049 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:05:46,050 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:05:46,050 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:05:46,050 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:05:46,050 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:05:46,051 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:05:46,051 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:05:46,052 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:05:46,052 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:05:46,060 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:05:46,060 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:05:46,061 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:05:46,061 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:05:46,061 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:05:46,061 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:05:46,061 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:05:46,061 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:05:46,062 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:05:46,062 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:05:46,062 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:05:46,063 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:05:46,063 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:05:46,084 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:05:46,093 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:05:46,095 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:05:46,096 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:05:46,097 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:05:46,097 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl
[2020-11-25 05:05:46,097 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl'
[2020-11-25 05:05:46,171 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:05:46,172 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:05:46,173 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:05:46,173 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:05:46,173 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:05:46,189 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,190 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,215 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,216 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,233 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,241 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,247 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,254 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:05:46,255 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:05:46,255 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:05:46,257 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:05:46,260 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/1) ...
[2020-11-25 05:05:46,280 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiTokenV2.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && balanceOf_SpaghettiTokenV2[this][msg.sender] == old(balanceOf_SpaghettiTokenV2[this][msg.sender]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:46,285 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiTokenV2.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && balanceOf_SpaghettiTokenV2[this][msg.sender] == old(balanceOf_SpaghettiTokenV2[this][msg.sender]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:46,293 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiTokenV2.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && balanceOf_SpaghettiTokenV2[this][msg.sender] == old(balanceOf_SpaghettiTokenV2[this][msg.sender]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:46,299 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=dst_s253 ) && msg.sender!=dst_s253 ) && wad_s253<=balanceOf_SpaghettiTokenV2[this][msg.sender] ) && ( balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && wad_s253>=0 ) && wad_s253<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiTokenV2[this][dst_s253]>=0 ) && balanceOf_SpaghettiTokenV2[this][dst_s253]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiTokenV2[this][msg.sender]>=0 ) && balanceOf_SpaghettiTokenV2[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:05:46,302 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && balanceOf_SpaghettiTokenV2[this][msg.sender]==( ( old(balanceOf_SpaghettiTokenV2[this][msg.sender]) ) - wad_s253 ) ) && balanceOf_SpaghettiTokenV2[this][dst_s253]==( ( old(balanceOf_SpaghettiTokenV2[this][dst_s253]) ) + wad_s253 ) ) && totalSupply_SpaghettiTokenV2[this]==( old(totalSupply_SpaghettiTokenV2[this]) ) ) && allowance_SpaghettiTokenV2[this]==( old(allowance_SpaghettiTokenV2[this]) ) ) && balanceOf_SpaghettiTokenV2[this][p1]==( old(balanceOf_SpaghettiTokenV2[this][p1]) ) ) && symbol_SpaghettiTokenV2[this]==( old(symbol_SpaghettiTokenV2[this]) ) ) && decimals_SpaghettiTokenV2[this]==( old(decimals_SpaghettiTokenV2[this]) ) ) && name_SpaghettiTokenV2[this]==( old(name_SpaghettiTokenV2[this]) ) ) && pastav1_SpaghettiTokenV2[this]==( old(pastav1_SpaghettiTokenV2[this]) ) ) && foodbank_SpaghettiTokenV2[this]==( old(foodbank_SpaghettiTokenV2[this]) ) ) && governance_SpaghettiTokenV2[this]==( old(governance_SpaghettiTokenV2[this]) ) ) && food_SpaghettiTokenV2[this]==( old(food_SpaghettiTokenV2[this]) ) ) && oven_SpaghettiTokenV2[this]==( old(oven_SpaghettiTokenV2[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_SpaghettiTokenV2>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]],IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]],IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]]
[2020-11-25 05:05:46,307 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiTokenV2.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && balanceOf_SpaghettiTokenV2[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && balanceOf_SpaghettiTokenV2[this][msg.sender] == old(balanceOf_SpaghettiTokenV2[this][msg.sender]) - value && balanceOf_SpaghettiTokenV2[this][to] == old(balanceOf_SpaghettiTokenV2[this][to]) + value && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:05:46,307 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_SpaghettiTokenV20) ==> ( <>AP(success_transfer_SpaghettiTokenV20) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:05:46,315 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:46 PropertyContainer
[2020-11-25 05:05:46,315 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:05:46,315 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:05:46,315 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:05:46,315 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:05:46,316 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/2) ...
[2020-11-25 05:05:46,317 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:05:46,317 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:05:46,328 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:46" (2/2) ...
[2020-11-25 05:05:46,329 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:05:46,329 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:05:46,329 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:05:46,329 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:05:46,330 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/2) ...
[2020-11-25 05:05:46,382 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:05:46,383 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:05:46,383 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:05:46,383 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:05:46,383 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:05:46,383 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:05:46,383 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:05:46,383 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_ERC20
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath
[2020-11-25 05:05:46,384 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:05:46,384 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:46,385 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:05:46,386 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:05:46,387 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2
[2020-11-25 05:05:46,388 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2
[2020-11-25 05:05:46,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2
[2020-11-25 05:05:46,389 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-25 05:05:46,389 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__success
[2020-11-25 05:05:46,390 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,391 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:05:46,392 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,393 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:05:46,394 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,395 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:05:46,396 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:05:46,396 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:05:46,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__fail
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__success
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:05:46,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:05:46,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:05:46,401 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:05:46,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:05:46,403 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:05:46,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:05:46,751 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:46,875 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:46,875 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:46,876 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:05:46,963 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:05:46,963 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 05:05:46,965 INFO  L202        PluginConnector]: Adding new model SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:46 BoogieIcfgContainer
[2020-11-25 05:05:46,965 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:46" (2/2) ...
[2020-11-25 05:05:46,965 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:05:46,965 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@741a70b3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:46, skipping insertion in model container
[2020-11-25 05:05:46,966 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:05:46,966 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:05:46,966 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:05:46,967 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:05:46,967 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/3) ...
[2020-11-25 05:05:46,968 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@49e7b686 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:46, skipping insertion in model container
[2020-11-25 05:05:46,968 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:46" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:05:47,001 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:47 NWAContainer
[2020-11-25 05:05:47,001 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:05:47,001 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:05:47,001 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:05:47,002 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:05:47,003 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:46" (3/4) ...
[2020-11-25 05:05:47,003 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@438358a3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:47, skipping insertion in model container
[2020-11-25 05:05:47,003 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:47" (4/4) ...
[2020-11-25 05:05:47,006 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:05:47,010 INFO  L110   BuchiProductObserver]: Initial RCFG 1442 locations, 1807 edges
[2020-11-25 05:05:47,010 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:05:47,019 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:05:48,415 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:05:48,422 INFO  L110   BuchiProductObserver]: BuchiProgram size 3396 locations, 5800 edges
[2020-11-25 05:05:48,422 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:48 BoogieIcfgContainer
[2020-11-25 05:05:48,422 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:05:48,422 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:05:48,422 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:05:48,424 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:05:48,425 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:48" (1/1) ...
[2020-11-25 05:05:48,517 INFO  L313           BlockEncoder]: Initial Icfg 3396 locations, 5800 edges
[2020-11-25 05:05:48,518 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:05:48,518 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:05:48,518 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:05:48,519 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:05:48,531 INFO  L70    emoveInfeasibleEdges]: Removed 114 edges and 9 locations because of local infeasibility
[2020-11-25 05:05:48,542 INFO  L70        RemoveSinkStates]: Removed 80 edges and 53 locations by removing sink states
[2020-11-25 05:05:48,555 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:05:48,560 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:05:48,563 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:05:48,564 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:05:48,569 INFO  L313           BlockEncoder]: Encoded RCFG 3320 locations, 5586 edges
[2020-11-25 05:05:48,570 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:05:48 BasicIcfg
[2020-11-25 05:05:48,570 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:05:48,570 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:05:48,570 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:05:48,573 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:05:48,573 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:48,573 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:05:46" (1/6) ...
[2020-11-25 05:05:48,575 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c184895 and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:05:48, skipping insertion in model container
[2020-11-25 05:05:48,575 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:48,575 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:05:46" (2/6) ...
[2020-11-25 05:05:48,575 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c184895 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:05:48, skipping insertion in model container
[2020-11-25 05:05:48,575 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:48,575 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:05:46" (3/6) ...
[2020-11-25 05:05:48,575 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c184895 and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:05:48, skipping insertion in model container
[2020-11-25 05:05:48,575 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:48,576 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:05:47" (4/6) ...
[2020-11-25 05:05:48,576 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c184895 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:05:48, skipping insertion in model container
[2020-11-25 05:05:48,576 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:48,576 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:05:48" (5/6) ...
[2020-11-25 05:05:48,576 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5c184895 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:05:48, skipping insertion in model container
[2020-11-25 05:05:48,576 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:05:48,576 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:05:48" (6/6) ...
[2020-11-25 05:05:48,577 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-normal.bpl_BEv2
[2020-11-25 05:05:48,615 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:05:48,616 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:05:48,616 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:05:48,616 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:05:48,616 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:05:48,617 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:05:48,617 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:05:48,617 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:05:48,617 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:05:48,652 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3320 states.
[2020-11-25 05:05:48,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:48,712 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:48,712 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:48,721 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:48,721 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:48,721 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:05:48,721 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3320 states.
[2020-11-25 05:05:48,746 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:48,746 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:48,746 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:48,748 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:48,749 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND TRUE   revert
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND TRUE   choice == 20
[L3581]              gas := gas - 21000;
[L3582]  COND FALSE  !(gas >= 0)
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:48,766 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:48,766 INFO  L82        PathProgramCache]: Analyzing trace with hash 722495683, now seen corresponding path program 1 times
[2020-11-25 05:05:48,771 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:48,794 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:48,831 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:48,833 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:48,833 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:05:49,031 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:49,044 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:05:49,044 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:05:49,046 INFO  L87              Difference]: Start difference. First operand 3320 states. Second operand 4 states.
[2020-11-25 05:05:49,471 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:49,471 INFO  L93              Difference]: Finished difference Result 2767 states and 3056 transitions.
[2020-11-25 05:05:49,472 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:05:49,474 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2767 states and 3056 transitions.
[2020-11-25 05:05:49,494 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:49,520 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2767 states to 2767 states and 3056 transitions.
[2020-11-25 05:05:49,521 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:05:49,524 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 806
[2020-11-25 05:05:49,525 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2767 states and 3056 transitions.
[2020-11-25 05:05:49,534 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:49,534 INFO  L728         BuchiCegarLoop]: Abstraction has 2767 states and 3056 transitions.
[2020-11-25 05:05:49,553 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2767 states and 3056 transitions.
[2020-11-25 05:05:49,602 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2767 to 2767.
[2020-11-25 05:05:49,603 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2767 states.
[2020-11-25 05:05:49,610 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2767 states to 2767 states and 3056 transitions.
[2020-11-25 05:05:49,611 INFO  L751         BuchiCegarLoop]: Abstraction has 2767 states and 3056 transitions.
[2020-11-25 05:05:49,612 INFO  L631         BuchiCegarLoop]: Abstraction has 2767 states and 3056 transitions.
[2020-11-25 05:05:49,612 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:05:49,612 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2767 states and 3056 transitions.
[2020-11-25 05:05:49,622 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:49,623 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:49,623 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:49,625 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:49,626 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND TRUE   revert
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND FALSE  !(__exception)
[L459]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2185]  COND TRUE   DType[this] == SpaghettiTokenV2
[L2186]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2330]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2331]  COND TRUE   src_s399 != msgsender_MSG && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2332]  COND TRUE   !(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2333]              revert := true;
[L2186]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2187]  COND TRUE   revert
[L459]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L460]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] == old(balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) - wad_s253) && balanceOf_SpaghettiTokenV2[this][dst_s253] == old(balanceOf_SpaghettiTokenV2[this][dst_s253]) + wad_s253) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND FALSE  !(__exception)
[L459]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2185]  COND TRUE   DType[this] == SpaghettiTokenV2
[L2186]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2330]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2331]  COND TRUE   src_s399 != msgsender_MSG && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2332]  COND TRUE   !(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2333]              revert := true;
[L2186]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2187]  COND TRUE   revert
[L459]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L460]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((((__ret_0_ == true && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] == old(balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) - wad_s253) && balanceOf_SpaghettiTokenV2[this][dst_s253] == old(balanceOf_SpaghettiTokenV2[this][dst_s253]) + wad_s253) && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this][p1] == old(balanceOf_SpaghettiTokenV2[this][p1])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L3]                 revert := revert_hold;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:49,630 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:49,631 INFO  L82        PathProgramCache]: Analyzing trace with hash -1764617535, now seen corresponding path program 1 times
[2020-11-25 05:05:49,632 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:49,643 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:49,672 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:49,673 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:49,673 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:05:49,674 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:49,675 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:05:49,675 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:05:49,675 INFO  L87              Difference]: Start difference. First operand 2767 states and 3056 transitions. cyclomatic complexity: 291 Second operand 4 states.
[2020-11-25 05:05:50,475 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:50,476 INFO  L93              Difference]: Finished difference Result 3887 states and 4436 transitions.
[2020-11-25 05:05:50,476 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:05:50,477 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3887 states and 4436 transitions.
[2020-11-25 05:05:50,499 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:05:50,521 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3887 states to 3749 states and 4272 transitions.
[2020-11-25 05:05:50,521 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1084
[2020-11-25 05:05:50,522 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1113
[2020-11-25 05:05:50,522 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3749 states and 4272 transitions.
[2020-11-25 05:05:50,531 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:50,531 INFO  L728         BuchiCegarLoop]: Abstraction has 3749 states and 4272 transitions.
[2020-11-25 05:05:50,535 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3749 states and 4272 transitions.
[2020-11-25 05:05:50,574 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3749 to 2809.
[2020-11-25 05:05:50,574 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2809 states.
[2020-11-25 05:05:50,580 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2809 states to 2809 states and 3032 transitions.
[2020-11-25 05:05:50,580 INFO  L751         BuchiCegarLoop]: Abstraction has 2809 states and 3032 transitions.
[2020-11-25 05:05:50,580 INFO  L631         BuchiCegarLoop]: Abstraction has 2809 states and 3032 transitions.
[2020-11-25 05:05:50,580 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:05:50,580 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2809 states and 3032 transitions.
[2020-11-25 05:05:50,590 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:50,590 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:50,590 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:50,593 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:50,593 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2219]  COND TRUE   !(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2220]              revert := true;
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2219]  COND TRUE   !(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2220]              revert := true;
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:50,598 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:50,598 INFO  L82        PathProgramCache]: Analyzing trace with hash -2042680092, now seen corresponding path program 1 times
[2020-11-25 05:05:50,599 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:50,619 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:50,680 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:50,680 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:50,680 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:05:50,681 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:50,681 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:05:50,681 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:05:50,681 INFO  L87              Difference]: Start difference. First operand 2809 states and 3032 transitions. cyclomatic complexity: 225 Second operand 3 states.
[2020-11-25 05:05:50,750 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:50,750 INFO  L93              Difference]: Finished difference Result 2933 states and 3186 transitions.
[2020-11-25 05:05:50,750 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:05:50,750 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2933 states and 3186 transitions.
[2020-11-25 05:05:50,765 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:50,779 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2933 states to 2933 states and 3186 transitions.
[2020-11-25 05:05:50,780 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 852
[2020-11-25 05:05:50,780 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 852
[2020-11-25 05:05:50,781 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2933 states and 3186 transitions.
[2020-11-25 05:05:50,785 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:50,785 INFO  L728         BuchiCegarLoop]: Abstraction has 2933 states and 3186 transitions.
[2020-11-25 05:05:50,789 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2933 states and 3186 transitions.
[2020-11-25 05:05:50,823 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2933 to 2933.
[2020-11-25 05:05:50,823 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2933 states.
[2020-11-25 05:05:50,829 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2933 states to 2933 states and 3186 transitions.
[2020-11-25 05:05:50,830 INFO  L751         BuchiCegarLoop]: Abstraction has 2933 states and 3186 transitions.
[2020-11-25 05:05:50,830 INFO  L631         BuchiCegarLoop]: Abstraction has 2933 states and 3186 transitions.
[2020-11-25 05:05:50,830 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:05:50,830 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2933 states and 3186 transitions.
[2020-11-25 05:05:50,837 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:50,837 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:50,837 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:50,840 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:50,840 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND TRUE   !(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399)
[L2236]              revert := true;
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND TRUE   !(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399)
[L2236]              revert := true;
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:50,844 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:50,844 INFO  L82        PathProgramCache]: Analyzing trace with hash 1261045514, now seen corresponding path program 1 times
[2020-11-25 05:05:50,845 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:50,862 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:50,941 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:50,942 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:50,942 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 05:05:50,942 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:50,943 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:05:50,943 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:05:50,943 INFO  L87              Difference]: Start difference. First operand 2933 states and 3186 transitions. cyclomatic complexity: 255 Second operand 7 states.
[2020-11-25 05:05:51,936 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:51,936 INFO  L93              Difference]: Finished difference Result 3189 states and 3473 transitions.
[2020-11-25 05:05:51,936 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 05:05:51,937 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3189 states and 3473 transitions.
[2020-11-25 05:05:51,949 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:05:51,964 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3189 states to 3189 states and 3473 transitions.
[2020-11-25 05:05:51,964 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 948
[2020-11-25 05:05:51,965 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 948
[2020-11-25 05:05:51,965 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3189 states and 3473 transitions.
[2020-11-25 05:05:51,970 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:51,970 INFO  L728         BuchiCegarLoop]: Abstraction has 3189 states and 3473 transitions.
[2020-11-25 05:05:51,974 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3189 states and 3473 transitions.
[2020-11-25 05:05:52,006 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3189 to 3003.
[2020-11-25 05:05:52,006 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3003 states.
[2020-11-25 05:05:52,010 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3003 states to 3003 states and 3264 transitions.
[2020-11-25 05:05:52,011 INFO  L751         BuchiCegarLoop]: Abstraction has 3003 states and 3264 transitions.
[2020-11-25 05:05:52,011 INFO  L631         BuchiCegarLoop]: Abstraction has 3003 states and 3264 transitions.
[2020-11-25 05:05:52,011 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:05:52,011 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3003 states and 3264 transitions.
[2020-11-25 05:05:52,016 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:52,017 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:52,017 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:52,020 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:52,020 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2010]              revert := true;
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2010]              revert := true;
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:52,024 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:52,024 INFO  L82        PathProgramCache]: Analyzing trace with hash -86371748, now seen corresponding path program 1 times
[2020-11-25 05:05:52,025 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:52,042 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:52,099 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:52,099 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:52,099 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 05:05:52,100 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:05:52,100 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 05:05:52,100 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 05:05:52,100 INFO  L87              Difference]: Start difference. First operand 3003 states and 3264 transitions. cyclomatic complexity: 263 Second operand 8 states.
[2020-11-25 05:05:52,249 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:52,249 INFO  L93              Difference]: Finished difference Result 3035 states and 3301 transitions.
[2020-11-25 05:05:52,249 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 05:05:52,249 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3035 states and 3301 transitions.
[2020-11-25 05:05:52,259 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:52,271 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3035 states to 3015 states and 3280 transitions.
[2020-11-25 05:05:52,271 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 869
[2020-11-25 05:05:52,272 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 869
[2020-11-25 05:05:52,272 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3015 states and 3280 transitions.
[2020-11-25 05:05:52,276 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:52,276 INFO  L728         BuchiCegarLoop]: Abstraction has 3015 states and 3280 transitions.
[2020-11-25 05:05:52,279 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3015 states and 3280 transitions.
[2020-11-25 05:05:52,307 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3015 to 3001.
[2020-11-25 05:05:52,307 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3001 states.
[2020-11-25 05:05:52,311 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3001 states to 3001 states and 3262 transitions.
[2020-11-25 05:05:52,311 INFO  L751         BuchiCegarLoop]: Abstraction has 3001 states and 3262 transitions.
[2020-11-25 05:05:52,312 INFO  L631         BuchiCegarLoop]: Abstraction has 3001 states and 3262 transitions.
[2020-11-25 05:05:52,312 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:05:52,312 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3001 states and 3262 transitions.
[2020-11-25 05:05:52,318 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:52,318 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:52,318 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:52,319 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:52,320 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND TRUE   choice == 20
[L3581]              gas := gas - 21000;
[L3582]  COND FALSE  !(gas >= 0)
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:52,323 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:52,323 INFO  L82        PathProgramCache]: Analyzing trace with hash 233636137, now seen corresponding path program 1 times
[2020-11-25 05:05:52,324 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:52,347 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:52,369 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:52,432 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:52,432 INFO  L82        PathProgramCache]: Analyzing trace with hash -1585740476, now seen corresponding path program 1 times
[2020-11-25 05:05:52,433 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:52,436 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:05:52,442 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:05:52,442 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:05:52,443 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:05:52,443 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 05:05:52,443 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:05:52,443 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:05:52,443 INFO  L87              Difference]: Start difference. First operand 3001 states and 3262 transitions. cyclomatic complexity: 263 Second operand 4 states.
[2020-11-25 05:05:52,856 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:05:52,856 INFO  L93              Difference]: Finished difference Result 3112 states and 3342 transitions.
[2020-11-25 05:05:52,857 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:05:52,857 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3112 states and 3342 transitions.
[2020-11-25 05:05:52,913 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:05:52,925 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3112 states to 3112 states and 3342 transitions.
[2020-11-25 05:05:52,925 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 867
[2020-11-25 05:05:52,926 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 867
[2020-11-25 05:05:52,926 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3112 states and 3342 transitions.
[2020-11-25 05:05:52,929 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:05:52,929 INFO  L728         BuchiCegarLoop]: Abstraction has 3112 states and 3342 transitions.
[2020-11-25 05:05:52,932 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3112 states and 3342 transitions.
[2020-11-25 05:05:52,960 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3112 to 3001.
[2020-11-25 05:05:52,961 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3001 states.
[2020-11-25 05:05:52,965 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3001 states to 3001 states and 3222 transitions.
[2020-11-25 05:05:52,965 INFO  L751         BuchiCegarLoop]: Abstraction has 3001 states and 3222 transitions.
[2020-11-25 05:05:52,965 INFO  L631         BuchiCegarLoop]: Abstraction has 3001 states and 3222 transitions.
[2020-11-25 05:05:52,965 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 05:05:52,965 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3001 states and 3222 transitions.
[2020-11-25 05:05:52,974 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:05:52,974 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:05:52,974 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:05:52,976 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:05:52,976 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_SpaghettiTokenV20 := false;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3711]              assume null == 0;
[L3712]  CALL        call this := FreshRefGenerator__success();
[L1918]              havoc newRef;
[L1919]              assume Alloc[newRef] == false;
[L1920]              Alloc[newRef] := true;
[L1921]              assume newRef != null;
[L3712]  RET         call this := FreshRefGenerator__success();
[L3713]              assume now >= 0;
[L3714]              assume DType[this] == SpaghettiTokenV2;
[L3715]              assume msgvalue_MSG == 0;
[L3716]              gas := gas - 53000;
[L3717]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3718]              assume !revert && gas >= 0;
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3721]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3538]              havoc msgsender_MSG;
[L3539]              havoc msgvalue_MSG;
[L3540]              havoc choice;
[L3541]              havoc __ret_0_totalSupply;
[L3542]              havoc arg551_s0;
[L3543]              havoc __ret_0_balanceOf;
[L3544]              havoc src_s399;
[L3545]              havoc dst_s399;
[L3546]              havoc wad_s399;
[L3547]              havoc __ret_0_transferFrom;
[L3548]              havoc guy_s208;
[L3549]              havoc __ret_0_approve;
[L3550]              havoc arg552_s0;
[L3551]              havoc arg553_s0;
[L3552]              havoc __ret_0_allowance;
[L3553]              havoc __ret_0_symbol;
[L3554]              havoc __ret_0_decimals;
[L3555]              havoc __ret_0_name;
[L3556]              havoc __ret_0_pastav1;
[L3557]              havoc __ret_0_foodbank;
[L3558]              havoc __ret_0_governance;
[L3559]              havoc __ret_0_food;
[L3560]              havoc __ret_0_oven;
[L3561]              havoc guy_s236;
[L3562]              havoc wad_s236;
[L3563]              havoc dst_s253;
[L3564]              havoc wad_s253;
[L3565]              havoc __ret_0_transfer;
[L3566]              havoc __ret_0_mint;
[L3567]              havoc _foodbank_s530;
[L3568]              havoc _governance_s548;
[L3569]              havoc tmpNow;
[L3570]              havoc gas;
[L3571]              assume gas > 4000000 && gas <= 8000000;
[L3572]              tmpNow := now;
[L3573]              havoc now;
[L3574]              assume now > tmpNow;
[L3575]              assume msgsender_MSG != null;
[L3576]              assume DType[msgsender_MSG] != ERC20;
[L3577]              assume DType[msgsender_MSG] != DSMath;
[L3578]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3579]              Alloc[msgsender_MSG] := true;
[L3580]  COND FALSE  !(choice == 20)
[L3586]  COND FALSE  !(choice == 19)
[L3592]  COND FALSE  !(choice == 18)
[L3599]  COND FALSE  !(choice == 17)
[L3605]  COND FALSE  !(choice == 16)
[L3611]  COND FALSE  !(choice == 15)
[L3617]  COND FALSE  !(choice == 14)
[L3623]  COND FALSE  !(choice == 13)
[L3629]  COND FALSE  !(choice == 12)
[L3635]  COND FALSE  !(choice == 11)
[L3641]  COND FALSE  !(choice == 10)
[L3647]  COND FALSE  !(choice == 9)
[L3653]  COND FALSE  !(choice == 8)
[L3659]  COND FALSE  !(choice == 7)
[L3666]  COND TRUE   choice == 6
[L3667]              gas := gas - 21000;
[L3668]  COND TRUE   gas >= 0
[L3669]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3670]              assume msgvalue_MSG == 0;
[L3671]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3721]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:05:52,986 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:52,986 INFO  L82        PathProgramCache]: Analyzing trace with hash 233636137, now seen corresponding path program 2 times
[2020-11-25 05:05:52,987 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:53,005 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:53,025 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:53,053 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:53,053 INFO  L82        PathProgramCache]: Analyzing trace with hash 1993664167, now seen corresponding path program 1 times
[2020-11-25 05:05:53,054 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:53,063 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:53,073 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:53,092 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:05:53,092 INFO  L82        PathProgramCache]: Analyzing trace with hash 81412559, now seen corresponding path program 1 times
[2020-11-25 05:05:53,093 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:05:53,120 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:05:53,150 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
[2020-11-25 05:05:53,522 WARN  L188               SmtUtils]: Spent 176.00 ms on a formula simplification. DAG size of input: 67 DAG size of output: 66
[2020-11-25 05:05:53,741 WARN  L188               SmtUtils]: Spent 217.00 ms on a formula simplification. DAG size of input: 118 DAG size of output: 111
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
[2020-11-25 05:05:53,878 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification that was a NOOP. DAG size: 103
[2020-11-25 05:05:54,191 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification. DAG size of input: 106 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 05:05:54,517 WARN  L188               SmtUtils]: Spent 127.00 ms on a formula simplification that was a NOOP. DAG size: 91
[2020-11-25 05:05:55,011 WARN  L188               SmtUtils]: Spent 491.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 184
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 05:05:55,347 WARN  L188               SmtUtils]: Spent 315.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 127
[2020-11-25 05:05:55,752 WARN  L188               SmtUtils]: Spent 403.00 ms on a formula simplification that was a NOOP. DAG size: 298
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 3517 to 7027
[2020-11-25 05:05:56,487 WARN  L188               SmtUtils]: Spent 719.00 ms on a formula simplification that was a NOOP. DAG size: 246
[2020-11-25 05:05:58,289 WARN  L188               SmtUtils]: Spent 1.80 s on a formula simplification. DAG size of input: 326 DAG size of output: 280
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.003s / 0.005s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.007s total
Resizing node table from 6271 to 12541
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 05:05:58,737 WARN  L188               SmtUtils]: Spent 418.00 ms on a formula simplification. DAG size of input: 174 DAG size of output: 170
[2020-11-25 05:05:59,145 WARN  L188               SmtUtils]: Spent 405.00 ms on a formula simplification that was a NOOP. DAG size: 350
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4273 to 8543
[2020-11-25 05:05:59,555 WARN  L188               SmtUtils]: Spent 403.00 ms on a formula simplification that was a NOOP. DAG size: 279
[2020-11-25 05:05:59,954 WARN  L188               SmtUtils]: Spent 397.00 ms on a formula simplification that was a NOOP. DAG size: 279
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 05:06:00,154 WARN  L188               SmtUtils]: Spent 192.00 ms on a formula simplification that was a NOOP. DAG size: 169
[2020-11-25 05:06:00,178 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 05:06:00,703 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 67 DAG size of output: 66
[2020-11-25 05:06:00,866 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification. DAG size of input: 118 DAG size of output: 111
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
[2020-11-25 05:06:01,145 WARN  L188               SmtUtils]: Spent 202.00 ms on a formula simplification. DAG size of input: 106 DAG size of output: 103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 05:06:01,684 WARN  L188               SmtUtils]: Spent 375.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 184
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 05:06:01,896 WARN  L188               SmtUtils]: Spent 205.00 ms on a formula simplification. DAG size of input: 131 DAG size of output: 127
[2020-11-25 05:06:02,221 WARN  L188               SmtUtils]: Spent 323.00 ms on a formula simplification that was a NOOP. DAG size: 298
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:06:02,798 WARN  L188               SmtUtils]: Spent 571.00 ms on a formula simplification that was a NOOP. DAG size: 246
[2020-11-25 05:06:04,013 WARN  L188               SmtUtils]: Spent 1.21 s on a formula simplification. DAG size of input: 325 DAG size of output: 280
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:06:04,489 WARN  L188               SmtUtils]: Spent 460.00 ms on a formula simplification. DAG size of input: 174 DAG size of output: 170
[2020-11-25 05:06:04,870 WARN  L188               SmtUtils]: Spent 379.00 ms on a formula simplification that was a NOOP. DAG size: 350
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 8543 to 17077
[2020-11-25 05:06:05,382 WARN  L188               SmtUtils]: Spent 505.00 ms on a formula simplification that was a NOOP. DAG size: 279
[2020-11-25 05:06:06,565 WARN  L188               SmtUtils]: Spent 1.18 s on a formula simplification. DAG size of input: 482 DAG size of output: 472
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 05:06:06,697 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification that was a NOOP. DAG size: 201
[2020-11-25 05:06:06,968 WARN  L188               SmtUtils]: Spent 250.00 ms on a formula simplification that was a NOOP. DAG size: 313
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 05:06:07,102 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification that was a NOOP. DAG size: 201
[2020-11-25 05:06:07,624 WARN  L188               SmtUtils]: Spent 520.00 ms on a formula simplification. DAG size of input: 315 DAG size of output: 314
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 05:06:07,881 WARN  L188               SmtUtils]: Spent 253.00 ms on a formula simplification that was a NOOP. DAG size: 310
[2020-11-25 05:06:07,904 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:07,931 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:07,940 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:06:07 BasicIcfg
[2020-11-25 05:06:07,940 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:06:07,940 INFO  L168              Benchmark]: Toolchain (without parser) took 21768.53 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.5 GB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -136.7 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,941 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,941 INFO  L168              Benchmark]: Boogie Preprocessor took 81.76 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,941 INFO  L168              Benchmark]: UtopiaSpecLang took 60.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,942 INFO  L168              Benchmark]: Boogie Printer took 13.41 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,942 INFO  L168              Benchmark]: RCFGBuilder took 636.69 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 822.5 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,942 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.04 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,942 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1421.09 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 252.7 MB). Free memory was 818.9 MB in the beginning and 1.2 GB in the end (delta: -356.6 MB). Peak memory consumption was 197.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,943 INFO  L168              Benchmark]: BlockEncodingV2 took 147.41 ms. Allocated memory is still 1.3 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 49.2 MB). Peak memory consumption was 49.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,943 INFO  L168              Benchmark]: BuchiAutomizer took 19369.82 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 49.1 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 05:06:07,945 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3396 locations, 5800 edges
  - StatisticsResult: Encoded RCFG
    3320 locations, 5586 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 81.76 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 60.26 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.41 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 636.69 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 822.5 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.04 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1421.09 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 252.7 MB). Free memory was 818.9 MB in the beginning and 1.2 GB in the end (delta: -356.6 MB). Peak memory consumption was 197.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 147.41 ms. Allocated memory is still 1.3 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 49.2 MB). Peak memory consumption was 49.2 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 19369.82 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.2 GB). Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 49.1 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1442 locations, 1807 edges
  - StatisticsResult: BuchiProgram size
    3396 locations, 5800 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.6 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 3001 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.3s and 7 iterations.  TraceHistogramMax:1. Analysis of lassos took 15.6s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 6 MinimizatonAttempts, 1251 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 3003 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18596 SDtfs, 11840 SDslu, 37821 SDs, 0 SdLazy, 6805 SolverSat, 1940 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639941) = (new SpaghettiTokenV2)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639946});
[L241]               havoc __exception;
[L242]               revert := false;
[L243]   COND FALSE  !(__exception)
[L269]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1967]              assume msgsender_MSG != null;
[L1968]              Balance[this] := 0;
[L1982]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1983]  COND FALSE  !(revert)
[L2112]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2113]  COND FALSE  !(revert)
[L2116]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2073]              assume msgsender_MSG != null;
[L2074]              Balance[this] := 0;
[L2075]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2076]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2077]              sum_balanceOf0[this] := 0;
[L2078]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2079]              sum_allowance1[this] := 0;
[L2080]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2081]              decimals_SpaghettiTokenV2[this] := 18;
[L2082]              name_SpaghettiTokenV2[this] := -432993173;
[L2083]              __var_1 := null;
[L2084]              foodbank_SpaghettiTokenV2[this] := null;
[L2085]              governance_SpaghettiTokenV2[this] := null;
[L2086]              food_SpaghettiTokenV2[this] := 0;
[L2087]              oven_SpaghettiTokenV2[this] := 0;
[L2089]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2090]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2091]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2092]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2093]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2116]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2117]  COND FALSE  !(revert)
[L269]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L270]               assume !revert && gas >= 0;
[L3717]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
SpaghettiTokenV2(115792089237316195423570985008687907853269984665640564039457584007913129639941).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639947, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639946, wad : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);

Loop:
SpaghettiTokenV2(115792089237316195423570985008687907853269984665640564039457584007913129639941).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639945, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639946, wad : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != dst_s253) && msgsender_MSG != dst_s253) && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && balanceOf_SpaghettiTokenV2[this][dst_s253] + wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_SpaghettiTokenV20 := true;
[L3]                 call_transfer_SpaghettiTokenV20 := false;
[L3]                 revert := revert_hold;
[L431]               havoc __exception;
[L432]               revert := false;
[L433]   COND TRUE   __exception
[L434]               __tmp__Balance := Balance;
[L435]               __tmp__DType := DType;
[L436]               __tmp__Alloc := Alloc;
[L437]               __tmp__balance_ADDR := balance_ADDR;
[L438]               __tmp__M_Ref_int := M_Ref_int;
[L439]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L440]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L441]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L442]               __tmp__sum_allowance1 := sum_allowance1;
[L443]               __tmp__Length := Length;
[L444]               __tmp__now := now;
[L445]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L446]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L447]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L448]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L449]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L450]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L451]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L452]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L453]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L454]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L455]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L456]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2170]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2171]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2217]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2218]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2235]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2239]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2240]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2008]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2009]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2240]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2241]  COND FALSE  !(revert)
[L2247]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2248]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2249]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2250]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2252]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2253]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2026]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2027]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2028]              revert := true;
[L2253]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2254]  COND TRUE   revert
[L2171]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2172]  COND TRUE   revert
[L456]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L457]               assume revert || gas < 0;
[L3671]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
