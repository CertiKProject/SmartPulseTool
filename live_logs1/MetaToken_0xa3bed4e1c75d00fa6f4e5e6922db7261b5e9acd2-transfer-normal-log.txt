This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 21:53:16,572 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 21:53:16,573 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 21:53:16,584 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 21:53:16,584 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 21:53:16,585 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 21:53:16,586 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 21:53:16,587 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 21:53:16,589 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 21:53:16,590 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 21:53:16,590 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 21:53:16,590 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 21:53:16,591 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 21:53:16,592 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 21:53:16,593 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 21:53:16,594 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 21:53:16,594 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 21:53:16,595 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 21:53:16,597 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 21:53:16,598 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 21:53:16,599 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 21:53:16,599 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 21:53:16,602 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 21:53:16,602 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 21:53:16,602 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 21:53:16,602 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 21:53:16,603 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 21:53:16,603 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 21:53:16,604 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 21:53:16,604 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 21:53:16,604 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 21:53:16,605 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 21:53:16,605 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 21:53:16,606 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 21:53:16,606 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 21:53:16,607 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 21:53:16,607 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 21:53:16,607 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 21:53:16,607 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 21:53:16,608 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 21:53:16,609 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 21:53:16,609 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 21:53:16,617 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 21:53:16,617 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 21:53:16,618 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 21:53:16,618 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 21:53:16,618 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 21:53:16,618 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 21:53:16,618 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 21:53:16,618 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 21:53:16,618 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 21:53:16,618 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 21:53:16,619 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 21:53:16,619 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 21:53:16,620 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 21:53:16,620 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 21:53:16,620 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 21:53:16,620 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 21:53:16,620 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 21:53:16,620 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 21:53:16,644 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 21:53:16,658 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 21:53:16,661 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 21:53:16,662 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 21:53:16,662 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 21:53:16,663 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl
[2020-11-24 21:53:16,663 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl'
[2020-11-24 21:53:16,776 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 21:53:16,778 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 21:53:16,778 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 21:53:16,778 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 21:53:16,778 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 21:53:16,795 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,797 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,842 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,843 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,871 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,887 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,900 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,917 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 21:53:16,917 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 21:53:16,917 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 21:53:16,920 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 21:53:16,924 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/1) ...
[2020-11-24 21:53:16,948 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this]) && nexus_Module[this] == old(nexus_Module[this]))))
[2020-11-24 21:53:16,954 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this]) && nexus_Module[this] == old(nexus_Module[this]))))
[2020-11-24 21:53:16,963 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this]) && nexus_Module[this] == old(nexus_Module[this]))))
[2020-11-24 21:53:16,972 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s535 ) && msg.sender!=recipient_s535 ) && amount_s535<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s535] + amount_s535 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s535>=0 ) && amount_s535<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s535]>=0 ) && _balances_ERC20[this][recipient_s535]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 21:53:16,976 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s535 ) ) && _balances_ERC20[this][recipient_s535]==( ( old(_balances_ERC20[this][recipient_s535]) ) + amount_s535 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && _minters_GovernedMinterRole[this]==( old(_minters_GovernedMinterRole[this]) ) ) && nexus_Module[this]==( old(nexus_Module[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s535,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_minters_GovernedMinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_minters_GovernedMinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[nexus_Module,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[nexus_Module,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 21:53:16,983 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this]) && nexus_Module[this] == old(nexus_Module[this]))))
[2020-11-24 21:53:16,983 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 21:53:17,001 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 09:53:17 PropertyContainer
[2020-11-24 21:53:17,001 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 21:53:17,001 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 21:53:17,001 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 21:53:17,001 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 21:53:17,002 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/2) ...
[2020-11-24 21:53:17,003 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 21:53:17,003 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 21:53:17,026 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 09:53:17" (2/2) ...
[2020-11-24 21:53:17,026 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 21:53:17,027 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 21:53:17,027 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 21:53:17,027 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 21:53:17,028 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/2) ...
[2020-11-24 21:53:17,082 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 21:53:17,082 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-24 21:53:17,082 INFO  L130     BoogieDeclarations]: Found specification of procedure ModuleKeys_ModuleKeys_NoBaseCtor__success
[2020-11-24 21:53:17,082 INFO  L130     BoogieDeclarations]: Found specification of procedure ModuleKeys_ModuleKeys
[2020-11-24 21:53:17,082 INFO  L138     BoogieDeclarations]: Found implementation of procedure ModuleKeys_ModuleKeys
[2020-11-24 21:53:17,082 INFO  L130     BoogieDeclarations]: Found specification of procedure INexus_INexus_NoBaseCtor__success
[2020-11-24 21:53:17,082 INFO  L130     BoogieDeclarations]: Found specification of procedure INexus_INexus
[2020-11-24 21:53:17,083 INFO  L138     BoogieDeclarations]: Found implementation of procedure INexus_INexus
[2020-11-24 21:53:17,083 INFO  L130     BoogieDeclarations]: Found specification of procedure governor_INexus
[2020-11-24 21:53:17,083 INFO  L130     BoogieDeclarations]: Found specification of procedure getModule~bytes32_INexus
[2020-11-24 21:53:17,083 INFO  L130     BoogieDeclarations]: Found specification of procedure proposeModule~bytes32~address_INexus
[2020-11-24 21:53:17,083 INFO  L130     BoogieDeclarations]: Found specification of procedure cancelProposedModule~bytes32_INexus
[2020-11-24 21:53:17,083 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptProposedModule~bytes32_INexus
[2020-11-24 21:53:17,083 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptProposedModules~arr_INexus
[2020-11-24 21:53:17,084 INFO  L130     BoogieDeclarations]: Found specification of procedure requestLockModule~bytes32_INexus
[2020-11-24 21:53:17,084 INFO  L130     BoogieDeclarations]: Found specification of procedure cancelLockModule~bytes32_INexus
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure lockModule~bytes32_INexus
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure Module_Module_NoBaseCtor__success
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure Module_Module
[2020-11-24 21:53:17,086 INFO  L138     BoogieDeclarations]: Found implementation of procedure Module_Module
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _governor_Module__success
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _governance_Module__success
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _staking_Module__success
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _proxyAdmin_Module__success
[2020-11-24 21:53:17,086 INFO  L130     BoogieDeclarations]: Found specification of procedure _metaToken_Module__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure _oracleHub_Module__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure _manager_Module__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure _savingsManager_Module__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure _recollateraliser_Module__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure nexus_Module
[2020-11-24 21:53:17,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure nexus_Module
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-24 21:53:17,087 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 21:53:17,087 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 21:53:17,088 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 21:53:17,088 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 21:53:17,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 21:53:17,089 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 21:53:17,089 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 21:53:17,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 21:53:17,090 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 21:53:17,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 21:53:17,090 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 21:53:17,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 21:53:17,090 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 21:53:17,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 21:53:17,090 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 21:53:17,090 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 21:53:17,090 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 21:53:17,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 21:53:17,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 21:53:17,091 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 21:53:17,091 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles
[2020-11-24 21:53:17,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__success
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure GovernedMinterRole_GovernedMinterRole
[2020-11-24 21:53:17,092 INFO  L138     BoogieDeclarations]: Found implementation of procedure GovernedMinterRole_GovernedMinterRole
[2020-11-24 21:53:17,092 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_GovernedMinterRole
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 21:53:17,093 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 21:53:17,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 21:53:17,094 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 21:53:17,094 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 21:53:17,094 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 21:53:17,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 21:53:17,095 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 21:53:17,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 21:53:17,095 INFO  L130     BoogieDeclarations]: Found specification of procedure MetaToken_MetaToken_NoBaseCtor__success
[2020-11-24 21:53:17,095 INFO  L130     BoogieDeclarations]: Found specification of procedure MetaToken_MetaToken
[2020-11-24 21:53:17,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure MetaToken_MetaToken
[2020-11-24 21:53:17,095 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MetaToken
[2020-11-24 21:53:17,095 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MetaToken
[2020-11-24 21:53:17,095 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 21:53:17,095 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGovernor_pre__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGovernance_pre__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyProxyAdmin_pre__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyManager_pre__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ModuleKeys
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ModuleKeys
[2020-11-24 21:53:17,096 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_INexus
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_INexus
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Module
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Module
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 21:53:17,097 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GovernedMinterRole
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_GovernedMinterRole
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 21:53:17,098 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MetaToken
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure ModuleKeys_ModuleKeys_NoBaseCtor__fail
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure ModuleKeys_ModuleKeys__success
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure ModuleKeys_ModuleKeys__fail
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure INexus_INexus_NoBaseCtor__fail
[2020-11-24 21:53:17,099 INFO  L130     BoogieDeclarations]: Found specification of procedure INexus_INexus__success
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure INexus_INexus__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure Module_Module_NoBaseCtor__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure Module_Module__success
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure Module_Module__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _governor_Module__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _governance_Module__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _staking_Module__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _proxyAdmin_Module__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _metaToken_Module__fail
[2020-11-24 21:53:17,100 INFO  L130     BoogieDeclarations]: Found specification of procedure _oracleHub_Module__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure _manager_Module__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure _savingsManager_Module__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure _recollateraliser_Module__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure nexus_Module__success
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure nexus_Module__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 21:53:17,101 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 21:53:17,102 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 21:53:17,103 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 21:53:17,104 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__success
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure GovernedMinterRole_GovernedMinterRole_NoBaseCtor__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure GovernedMinterRole_GovernedMinterRole__success
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure GovernedMinterRole_GovernedMinterRole__fail
[2020-11-24 21:53:17,105 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_GovernedMinterRole__success
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_GovernedMinterRole__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 21:53:17,106 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 21:53:17,107 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure MetaToken_MetaToken_NoBaseCtor__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure MetaToken_MetaToken__success
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure MetaToken_MetaToken__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MetaToken__success
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MetaToken__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 21:53:17,108 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGovernor_pre__fail
[2020-11-24 21:53:17,109 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGovernance_pre__fail
[2020-11-24 21:53:17,109 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyProxyAdmin_pre__fail
[2020-11-24 21:53:17,109 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyManager_pre__fail
[2020-11-24 21:53:17,109 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure ModuleKeys_ModuleKeys_NoBaseCtor__fail
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure ModuleKeys_ModuleKeys_NoBaseCtor__success
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure ModuleKeys_ModuleKeys__fail
[2020-11-24 21:53:17,109 INFO  L138     BoogieDeclarations]: Found implementation of procedure ModuleKeys_ModuleKeys__success
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure INexus_INexus_NoBaseCtor__fail
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure INexus_INexus_NoBaseCtor__success
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure INexus_INexus__fail
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure INexus_INexus__success
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure Module_Module_NoBaseCtor__fail
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure Module_Module_NoBaseCtor__success
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure Module_Module__fail
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure Module_Module__success
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure _governor_Module__fail
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure _governor_Module__success
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure _governance_Module__fail
[2020-11-24 21:53:17,110 INFO  L138     BoogieDeclarations]: Found implementation of procedure _governance_Module__success
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _staking_Module__fail
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _staking_Module__success
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _proxyAdmin_Module__fail
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _proxyAdmin_Module__success
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _metaToken_Module__fail
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _metaToken_Module__success
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _oracleHub_Module__fail
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _oracleHub_Module__success
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _manager_Module__fail
[2020-11-24 21:53:17,111 INFO  L138     BoogieDeclarations]: Found implementation of procedure _manager_Module__success
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure _savingsManager_Module__fail
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure _savingsManager_Module__success
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure _recollateraliser_Module__fail
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure _recollateraliser_Module__success
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure nexus_Module__fail
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure nexus_Module__success
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 21:53:17,112 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 21:53:17,113 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 21:53:17,114 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 21:53:17,115 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 21:53:17,116 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__fail
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__fail
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure GovernedMinterRole_GovernedMinterRole_NoBaseCtor__fail
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success
[2020-11-24 21:53:17,117 INFO  L138     BoogieDeclarations]: Found implementation of procedure GovernedMinterRole_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure GovernedMinterRole_GovernedMinterRole__success
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_GovernedMinterRole__success
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_GovernedMinterRole__fail
[2020-11-24 21:53:17,118 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_GovernedMinterRole__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 21:53:17,119 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure MetaToken_MetaToken_NoBaseCtor__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure MetaToken_MetaToken_NoBaseCtor__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure MetaToken_MetaToken__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure MetaToken_MetaToken__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MetaToken__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MetaToken__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 21:53:17,120 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGovernor_pre__fail
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGovernor_pre__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGovernance_pre__fail
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGovernance_pre__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyProxyAdmin_pre__fail
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyProxyAdmin_pre__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyManager_pre__fail
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyManager_pre__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ModuleKeys
[2020-11-24 21:53:17,121 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ModuleKeys
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_INexus
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_INexus
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Module
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Module
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 21:53:17,122 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GovernedMinterRole
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_GovernedMinterRole
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MetaToken
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 21:53:17,123 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 21:53:17,123 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 21:53:17,411 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 21:53:17,411 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 21:53:17,411 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 21:53:18,199 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 21:53:18,441 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 21:53:18,442 INFO  L286             CfgBuilder]: Removed 12 assue(true) statements.
[2020-11-24 21:53:18,444 INFO  L202        PluginConnector]: Adding new model MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 09:53:18 BoogieIcfgContainer
[2020-11-24 21:53:18,444 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 09:53:17" (2/2) ...
[2020-11-24 21:53:18,444 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 21:53:18,444 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2f8f0cee and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 09:53:18, skipping insertion in model container
[2020-11-24 21:53:18,444 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 21:53:18,444 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 21:53:18,444 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 21:53:18,445 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 21:53:18,446 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/3) ...
[2020-11-24 21:53:18,446 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@28118d97 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 09:53:18, skipping insertion in model container
[2020-11-24 21:53:18,446 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 09:53:17" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 21:53:18,479 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 09:53:18 NWAContainer
[2020-11-24 21:53:18,479 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 21:53:18,479 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 21:53:18,479 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 21:53:18,480 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 21:53:18,481 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 09:53:18" (3/4) ...
[2020-11-24 21:53:18,482 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7fb9463a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 09:53:18, skipping insertion in model container
[2020-11-24 21:53:18,482 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 09:53:18" (4/4) ...
[2020-11-24 21:53:18,485 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 21:53:18,491 INFO  L110   BuchiProductObserver]: Initial RCFG 3169 locations, 4508 edges
[2020-11-24 21:53:18,492 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 21:53:18,505 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 21:53:21,218 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 21:53:21,228 INFO  L110   BuchiProductObserver]: BuchiProgram size 8032 locations, 14698 edges
[2020-11-24 21:53:21,228 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 09:53:21 BoogieIcfgContainer
[2020-11-24 21:53:21,229 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 21:53:21,229 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 21:53:21,229 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 21:53:21,230 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 21:53:21,230 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 09:53:21" (1/1) ...
[2020-11-24 21:53:21,369 INFO  L313           BlockEncoder]: Initial Icfg 8032 locations, 14698 edges
[2020-11-24 21:53:21,369 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 21:53:21,369 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 21:53:21,370 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 21:53:21,370 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 21:53:21,387 INFO  L70    emoveInfeasibleEdges]: Removed 270 edges and 27 locations because of local infeasibility
[2020-11-24 21:53:21,404 INFO  L70        RemoveSinkStates]: Removed 176 edges and 117 locations by removing sink states
[2020-11-24 21:53:21,421 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 21:53:21,427 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 21:53:21,432 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 21:53:21,432 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 21:53:21,437 INFO  L313           BlockEncoder]: Encoded RCFG 7852 locations, 14199 edges
[2020-11-24 21:53:21,438 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 09:53:21 BasicIcfg
[2020-11-24 21:53:21,438 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 21:53:21,438 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 21:53:21,438 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 21:53:21,440 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 21:53:21,440 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 21:53:21,440 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 09:53:16" (1/6) ...
[2020-11-24 21:53:21,441 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35fc1dee and model type MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 09:53:21, skipping insertion in model container
[2020-11-24 21:53:21,442 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 21:53:21,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 09:53:17" (2/6) ...
[2020-11-24 21:53:21,442 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35fc1dee and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 09:53:21, skipping insertion in model container
[2020-11-24 21:53:21,442 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 21:53:21,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 09:53:18" (3/6) ...
[2020-11-24 21:53:21,442 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35fc1dee and model type MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 09:53:21, skipping insertion in model container
[2020-11-24 21:53:21,442 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 21:53:21,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 09:53:18" (4/6) ...
[2020-11-24 21:53:21,442 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35fc1dee and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 09:53:21, skipping insertion in model container
[2020-11-24 21:53:21,442 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 21:53:21,442 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 09:53:21" (5/6) ...
[2020-11-24 21:53:21,443 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@35fc1dee and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 09:53:21, skipping insertion in model container
[2020-11-24 21:53:21,443 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 21:53:21,443 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 09:53:21" (6/6) ...
[2020-11-24 21:53:21,444 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MetaToken_0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2_transfer-normal.bpl_BEv2
[2020-11-24 21:53:21,475 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 21:53:21,476 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 21:53:21,476 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 21:53:21,476 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 21:53:21,476 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 21:53:21,476 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 21:53:21,476 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 21:53:21,476 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 21:53:21,476 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 21:53:21,534 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7852 states.
[2020-11-24 21:53:21,623 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:21,623 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:53:21,623 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:53:21,631 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:21,631 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:21,631 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 21:53:21,631 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7852 states.
[2020-11-24 21:53:21,659 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:21,659 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:53:21,659 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:53:21,661 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:21,661 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND TRUE   revert
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND TRUE   choice == 19
[L8936]              gas := gas - 21000;
[L8937]  COND FALSE  !(gas >= 0)
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:53:21,674 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:53:21,674 INFO  L82        PathProgramCache]: Analyzing trace with hash 1010523831, now seen corresponding path program 1 times
[2020-11-24 21:53:21,678 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:53:21,700 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:53:21,738 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 21:53:21,740 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:53:21,740 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 21:53:22,094 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 21:53:22,103 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 21:53:22,103 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 21:53:22,104 INFO  L87              Difference]: Start difference. First operand 7852 states. Second operand 4 states.
[2020-11-24 21:53:22,966 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:53:22,966 INFO  L93              Difference]: Finished difference Result 4882 states and 5966 transitions.
[2020-11-24 21:53:22,966 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 21:53:22,968 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4882 states and 5966 transitions.
[2020-11-24 21:53:23,006 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:23,040 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4882 states to 4882 states and 5966 transitions.
[2020-11-24 21:53:23,042 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 21:53:23,044 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 876
[2020-11-24 21:53:23,045 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4882 states and 5966 transitions.
[2020-11-24 21:53:23,058 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:53:23,058 INFO  L728         BuchiCegarLoop]: Abstraction has 4882 states and 5966 transitions.
[2020-11-24 21:53:23,078 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4882 states and 5966 transitions.
[2020-11-24 21:53:23,143 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4882 to 4882.
[2020-11-24 21:53:23,144 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4882 states.
[2020-11-24 21:53:23,152 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4882 states to 4882 states and 5966 transitions.
[2020-11-24 21:53:23,152 INFO  L751         BuchiCegarLoop]: Abstraction has 4882 states and 5966 transitions.
[2020-11-24 21:53:23,152 INFO  L631         BuchiCegarLoop]: Abstraction has 4882 states and 5966 transitions.
[2020-11-24 21:53:23,153 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 21:53:23,153 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4882 states and 5966 transitions.
[2020-11-24 21:53:23,163 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:23,163 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:53:23,163 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:53:23,165 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:23,165 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND TRUE   revert
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND TRUE   revert
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND TRUE   revert
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:53:23,170 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:53:23,170 INFO  L82        PathProgramCache]: Analyzing trace with hash -1547120693, now seen corresponding path program 1 times
[2020-11-24 21:53:23,171 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:53:23,181 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:53:23,205 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 21:53:23,205 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:53:23,205 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 21:53:23,206 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 21:53:23,206 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 21:53:23,206 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 21:53:23,206 INFO  L87              Difference]: Start difference. First operand 4882 states and 5966 transitions. cyclomatic complexity: 1086 Second operand 3 states.
[2020-11-24 21:53:23,354 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:53:23,355 INFO  L93              Difference]: Finished difference Result 6210 states and 7423 transitions.
[2020-11-24 21:53:23,355 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 21:53:23,355 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6210 states and 7423 transitions.
[2020-11-24 21:53:23,372 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 21:53:23,406 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6210 states to 6210 states and 7423 transitions.
[2020-11-24 21:53:23,406 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1245
[2020-11-24 21:53:23,408 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1245
[2020-11-24 21:53:23,408 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6210 states and 7423 transitions.
[2020-11-24 21:53:23,416 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:53:23,416 INFO  L728         BuchiCegarLoop]: Abstraction has 6210 states and 7423 transitions.
[2020-11-24 21:53:23,422 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6210 states and 7423 transitions.
[2020-11-24 21:53:23,490 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6210 to 5484.
[2020-11-24 21:53:23,490 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5484 states.
[2020-11-24 21:53:23,501 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5484 states to 5484 states and 6549 transitions.
[2020-11-24 21:53:23,501 INFO  L751         BuchiCegarLoop]: Abstraction has 5484 states and 6549 transitions.
[2020-11-24 21:53:23,501 INFO  L631         BuchiCegarLoop]: Abstraction has 5484 states and 6549 transitions.
[2020-11-24 21:53:23,501 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 21:53:23,501 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5484 states and 6549 transitions.
[2020-11-24 21:53:23,510 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:23,511 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:53:23,511 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:53:23,514 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:23,514 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND FALSE  !(revert)
[L6195]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6195]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6196]  COND FALSE  !(revert)
[L6199]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6199]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6200]  COND FALSE  !(revert)
[L6203]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6203]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6204]  COND FALSE  !(revert)
[L6207]  CALL        call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5687]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L5687]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L5688]  COND FALSE  !(revert)
[L5691]  CALL        call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4037]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L4037]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4006]              assume msgsender_MSG != null;
[L4007]              Balance[this] := 0;
[L4009]              __var_1 := null;
[L4010]  COND TRUE   !(_nexus_s102 != null)
[L4011]              revert := true;
[L4041]  RET         call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4042]  COND TRUE   revert
[L5691]  RET         call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5692]  COND TRUE   revert
[L6207]  RET         call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6208]  COND TRUE   revert
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND FALSE  !(revert)
[L4599]  COND TRUE   DType[this] == MetaToken
[L4600]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5195]              __var_37 := null;
[L5196]  COND TRUE   !(sender_s718 != null)
[L5197]              revert := true;
[L4600]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4601]  COND TRUE   revert
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND FALSE  !(revert)
[L4599]  COND TRUE   DType[this] == MetaToken
[L4600]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5195]              __var_37 := null;
[L5196]  COND TRUE   !(sender_s718 != null)
[L5197]              revert := true;
[L4600]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4601]  COND TRUE   revert
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:53:23,519 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:53:23,520 INFO  L82        PathProgramCache]: Analyzing trace with hash 1776035732, now seen corresponding path program 1 times
[2020-11-24 21:53:23,521 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:53:23,538 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:53:23,622 INFO  L134       CoverageAnalysis]: Checked inductivity of 74 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 74 trivial. 0 not checked.
[2020-11-24 21:53:23,622 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:53:23,622 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 21:53:23,623 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 21:53:23,623 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 21:53:23,623 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 21:53:23,623 INFO  L87              Difference]: Start difference. First operand 5484 states and 6549 transitions. cyclomatic complexity: 1067 Second operand 3 states.
[2020-11-24 21:53:23,805 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:53:23,806 INFO  L93              Difference]: Finished difference Result 6210 states and 7167 transitions.
[2020-11-24 21:53:23,806 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 21:53:23,806 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6210 states and 7167 transitions.
[2020-11-24 21:53:23,824 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 21:53:23,848 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6210 states to 5762 states and 6633 transitions.
[2020-11-24 21:53:23,848 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1104
[2020-11-24 21:53:23,849 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1162
[2020-11-24 21:53:23,849 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5762 states and 6633 transitions.
[2020-11-24 21:53:23,856 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:53:23,856 INFO  L728         BuchiCegarLoop]: Abstraction has 5762 states and 6633 transitions.
[2020-11-24 21:53:23,861 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5762 states and 6633 transitions.
[2020-11-24 21:53:23,909 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5762 to 5140.
[2020-11-24 21:53:23,909 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5140 states.
[2020-11-24 21:53:23,916 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5140 states to 5140 states and 5863 transitions.
[2020-11-24 21:53:23,916 INFO  L751         BuchiCegarLoop]: Abstraction has 5140 states and 5863 transitions.
[2020-11-24 21:53:23,916 INFO  L631         BuchiCegarLoop]: Abstraction has 5140 states and 5863 transitions.
[2020-11-24 21:53:23,916 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 21:53:23,917 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5140 states and 5863 transitions.
[2020-11-24 21:53:23,925 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:23,925 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:53:23,926 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:53:23,930 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:23,930 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND FALSE  !(revert)
[L6195]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6195]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6196]  COND FALSE  !(revert)
[L6199]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6199]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6200]  COND FALSE  !(revert)
[L6203]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6203]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6204]  COND FALSE  !(revert)
[L6207]  CALL        call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5687]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L5687]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L5688]  COND FALSE  !(revert)
[L5691]  CALL        call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4037]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L4037]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4006]              assume msgsender_MSG != null;
[L4007]              Balance[this] := 0;
[L4009]              __var_1 := null;
[L4010]  COND FALSE  !(!(_nexus_s102 != null))
[L4014]              assume DType[_nexus_s102] == INexus;
[L4015]              __var_2 := _nexus_s102;
[L4016]              nexus_Module[this] := __var_2;
[L4041]  RET         call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4042]  COND FALSE  !(revert)
[L5691]  RET         call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5692]  COND FALSE  !(revert)
[L5695]  CALL        call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5656]              assume msgsender_MSG != null;
[L5657]              Balance[this] := 0;
[L5659]  CALL        call __var_55 := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L5659]  RET         call __var_55 := FreshRefGenerator__success();
[L5660]  COND FALSE  !(revert)
[L5663]              _minters_GovernedMinterRole[this] := __var_55;
[L5695]  RET         call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5696]  COND FALSE  !(revert)
[L6207]  RET         call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6208]  COND FALSE  !(revert)
[L6211]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L5917]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L5917]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5918]  COND FALSE  !(revert)
[L5921]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5892]              assume msgsender_MSG != null;
[L5893]              Balance[this] := 0;
[L5894]              _name_ERC20Detailed[this] := 283664046;
[L5895]              _symbol_ERC20Detailed[this] := 283664046;
[L5896]              _decimals_ERC20Detailed[this] := 0;
[L5898]              _name_ERC20Detailed[this] := name_s1102;
[L5899]              _symbol_ERC20Detailed[this] := symbol_s1102;
[L5900]              _decimals_ERC20Detailed[this] := decimals_s1102;
[L5921]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5922]  COND FALSE  !(revert)
[L6211]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L6212]  COND FALSE  !(revert)
[L6215]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6001]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6001]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6002]  COND FALSE  !(revert)
[L6005]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6005]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6006]  COND FALSE  !(revert)
[L6009]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6009]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6010]  COND FALSE  !(revert)
[L6013]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5974]              assume msgsender_MSG != null;
[L5975]              Balance[this] := 0;
[L6013]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L6014]  COND FALSE  !(revert)
[L6215]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6216]  COND FALSE  !(revert)
[L6219]  CALL        call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6137]              assume msgsender_MSG != null;
[L6138]              Balance[this] := 0;
[L6140]              __var_59 := 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6141]  COND TRUE   DType[this] == MetaToken
[L6142]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5251]              __var_41 := null;
[L5252]  COND FALSE  !(!(account_s761 != null))
[L5256]  CALL        call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5256]  RET         call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L5257]  COND FALSE  !(revert)
[L5260]              _totalSupply_ERC20[this] := __var_42;
[L5261]  CALL        call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5261]  RET         call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L5262]  COND FALSE  !(revert)
[L5265]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s761];
[L5266]              _balances_ERC20[this][account_s761] := __var_43;
[L5267]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s761];
[L5268]              assert { :EventEmitted "Transfer_ERC20" } true;
[L6142]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L6143]  COND FALSE  !(revert)
[L6219]  RET         call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6220]  COND FALSE  !(revert)
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND TRUE   __exception
[L983]               __tmp__Balance := Balance;
[L984]               __tmp__DType := DType;
[L985]               __tmp__Alloc := Alloc;
[L986]               __tmp__balance_ADDR := balance_ADDR;
[L987]               __tmp__M_Ref_int := M_Ref_int;
[L988]               __tmp__sum__balances0 := sum__balances0;
[L989]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L990]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L991]               __tmp__sum__allowances1 := sum__allowances1;
[L992]               __tmp__M_Ref_bool := M_Ref_bool;
[L993]               __tmp__sum := sum;
[L994]               __tmp__M_int_int := M_int_int;
[L995]               __tmp__Length := Length;
[L996]               __tmp__now := now;
[L997]               __tmp__KEY_GOVERNANCE_ModuleKeys := KEY_GOVERNANCE_ModuleKeys;
[L998]               __tmp__KEY_STAKING_ModuleKeys := KEY_STAKING_ModuleKeys;
[L999]               __tmp__KEY_PROXY_ADMIN_ModuleKeys := KEY_PROXY_ADMIN_ModuleKeys;
[L1000]              __tmp__KEY_ORACLE_HUB_ModuleKeys := KEY_ORACLE_HUB_ModuleKeys;
[L1001]              __tmp__KEY_MANAGER_ModuleKeys := KEY_MANAGER_ModuleKeys;
[L1002]              __tmp__KEY_RECOLLATERALISER_ModuleKeys := KEY_RECOLLATERALISER_ModuleKeys;
[L1003]              __tmp__KEY_META_TOKEN_ModuleKeys := KEY_META_TOKEN_ModuleKeys;
[L1004]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys := KEY_SAVINGS_MANAGER_ModuleKeys;
[L1005]              __tmp__nexus_Module := nexus_Module;
[L1006]              __tmp___balances_ERC20 := _balances_ERC20;
[L1007]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1008]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1009]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L1010]              __tmp___minters_GovernedMinterRole := _minters_GovernedMinterRole;
[L1011]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1012]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1013]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1014]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4538]  COND TRUE   __tmp__DType[this] == MetaToken
[L4539]  CALL        call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4255]              __ret_0_ := msgsender_MSG;
[L4539]  RET         call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4540]  COND FALSE  !(revert)
[L4556]  COND TRUE   __tmp__DType[this] == MetaToken
[L4557]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5163]              __var_37 := null;
[L5164]  COND TRUE   !(sender_s718 != null)
[L5165]              revert := true;
[L4557]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4558]  COND TRUE   revert
[L1014]  RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1015]              assume revert || gas < 0;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND TRUE   __exception
[L983]               __tmp__Balance := Balance;
[L984]               __tmp__DType := DType;
[L985]               __tmp__Alloc := Alloc;
[L986]               __tmp__balance_ADDR := balance_ADDR;
[L987]               __tmp__M_Ref_int := M_Ref_int;
[L988]               __tmp__sum__balances0 := sum__balances0;
[L989]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L990]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L991]               __tmp__sum__allowances1 := sum__allowances1;
[L992]               __tmp__M_Ref_bool := M_Ref_bool;
[L993]               __tmp__sum := sum;
[L994]               __tmp__M_int_int := M_int_int;
[L995]               __tmp__Length := Length;
[L996]               __tmp__now := now;
[L997]               __tmp__KEY_GOVERNANCE_ModuleKeys := KEY_GOVERNANCE_ModuleKeys;
[L998]               __tmp__KEY_STAKING_ModuleKeys := KEY_STAKING_ModuleKeys;
[L999]               __tmp__KEY_PROXY_ADMIN_ModuleKeys := KEY_PROXY_ADMIN_ModuleKeys;
[L1000]              __tmp__KEY_ORACLE_HUB_ModuleKeys := KEY_ORACLE_HUB_ModuleKeys;
[L1001]              __tmp__KEY_MANAGER_ModuleKeys := KEY_MANAGER_ModuleKeys;
[L1002]              __tmp__KEY_RECOLLATERALISER_ModuleKeys := KEY_RECOLLATERALISER_ModuleKeys;
[L1003]              __tmp__KEY_META_TOKEN_ModuleKeys := KEY_META_TOKEN_ModuleKeys;
[L1004]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys := KEY_SAVINGS_MANAGER_ModuleKeys;
[L1005]              __tmp__nexus_Module := nexus_Module;
[L1006]              __tmp___balances_ERC20 := _balances_ERC20;
[L1007]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1008]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1009]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L1010]              __tmp___minters_GovernedMinterRole := _minters_GovernedMinterRole;
[L1011]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1012]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1013]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1014]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4538]  COND TRUE   __tmp__DType[this] == MetaToken
[L4539]  CALL        call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4255]              __ret_0_ := msgsender_MSG;
[L4539]  RET         call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4540]  COND FALSE  !(revert)
[L4556]  COND TRUE   __tmp__DType[this] == MetaToken
[L4557]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5163]              __var_37 := null;
[L5164]  COND TRUE   !(sender_s718 != null)
[L5165]              revert := true;
[L4557]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4558]  COND TRUE   revert
[L1014]  RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1015]              assume revert || gas < 0;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:53:23,937 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:53:23,938 INFO  L82        PathProgramCache]: Analyzing trace with hash 977846079, now seen corresponding path program 1 times
[2020-11-24 21:53:23,939 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:53:23,965 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:53:24,101 INFO  L134       CoverageAnalysis]: Checked inductivity of 248 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 248 trivial. 0 not checked.
[2020-11-24 21:53:24,102 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:53:24,102 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 21:53:24,102 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 21:53:24,102 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 21:53:24,102 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 21:53:24,102 INFO  L87              Difference]: Start difference. First operand 5140 states and 5863 transitions. cyclomatic complexity: 725 Second operand 8 states.
[2020-11-24 21:53:24,264 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:53:24,264 INFO  L93              Difference]: Finished difference Result 5168 states and 5899 transitions.
[2020-11-24 21:53:24,264 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 21:53:24,264 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5168 states and 5899 transitions.
[2020-11-24 21:53:24,275 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:24,288 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5168 states to 5144 states and 5871 transitions.
[2020-11-24 21:53:24,288 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1021
[2020-11-24 21:53:24,289 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1021
[2020-11-24 21:53:24,289 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5144 states and 5871 transitions.
[2020-11-24 21:53:24,294 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:53:24,294 INFO  L728         BuchiCegarLoop]: Abstraction has 5144 states and 5871 transitions.
[2020-11-24 21:53:24,300 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5144 states and 5871 transitions.
[2020-11-24 21:53:24,331 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5144 to 5144.
[2020-11-24 21:53:24,332 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5144 states.
[2020-11-24 21:53:24,337 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5144 states to 5144 states and 5871 transitions.
[2020-11-24 21:53:24,337 INFO  L751         BuchiCegarLoop]: Abstraction has 5144 states and 5871 transitions.
[2020-11-24 21:53:24,337 INFO  L631         BuchiCegarLoop]: Abstraction has 5144 states and 5871 transitions.
[2020-11-24 21:53:24,337 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 21:53:24,337 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5144 states and 5871 transitions.
[2020-11-24 21:53:24,343 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 21:53:24,343 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:53:24,343 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:53:24,345 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:53:24,345 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND FALSE  !(revert)
[L6195]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6195]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6196]  COND FALSE  !(revert)
[L6199]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6199]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6200]  COND FALSE  !(revert)
[L6203]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6203]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6204]  COND FALSE  !(revert)
[L6207]  CALL        call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5687]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L5687]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L5688]  COND FALSE  !(revert)
[L5691]  CALL        call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4037]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L4037]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4006]              assume msgsender_MSG != null;
[L4007]              Balance[this] := 0;
[L4009]              __var_1 := null;
[L4010]  COND FALSE  !(!(_nexus_s102 != null))
[L4014]              assume DType[_nexus_s102] == INexus;
[L4015]              __var_2 := _nexus_s102;
[L4016]              nexus_Module[this] := __var_2;
[L4041]  RET         call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4042]  COND FALSE  !(revert)
[L5691]  RET         call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5692]  COND FALSE  !(revert)
[L5695]  CALL        call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5656]              assume msgsender_MSG != null;
[L5657]              Balance[this] := 0;
[L5659]  CALL        call __var_55 := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L5659]  RET         call __var_55 := FreshRefGenerator__success();
[L5660]  COND FALSE  !(revert)
[L5663]              _minters_GovernedMinterRole[this] := __var_55;
[L5695]  RET         call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5696]  COND FALSE  !(revert)
[L6207]  RET         call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6208]  COND FALSE  !(revert)
[L6211]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L5917]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L5917]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5918]  COND FALSE  !(revert)
[L5921]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5892]              assume msgsender_MSG != null;
[L5893]              Balance[this] := 0;
[L5894]              _name_ERC20Detailed[this] := 283664046;
[L5895]              _symbol_ERC20Detailed[this] := 283664046;
[L5896]              _decimals_ERC20Detailed[this] := 0;
[L5898]              _name_ERC20Detailed[this] := name_s1102;
[L5899]              _symbol_ERC20Detailed[this] := symbol_s1102;
[L5900]              _decimals_ERC20Detailed[this] := decimals_s1102;
[L5921]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5922]  COND FALSE  !(revert)
[L6211]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L6212]  COND FALSE  !(revert)
[L6215]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6001]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6001]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6002]  COND FALSE  !(revert)
[L6005]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6005]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6006]  COND FALSE  !(revert)
[L6009]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6009]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6010]  COND FALSE  !(revert)
[L6013]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5974]              assume msgsender_MSG != null;
[L5975]              Balance[this] := 0;
[L6013]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L6014]  COND FALSE  !(revert)
[L6215]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6216]  COND FALSE  !(revert)
[L6219]  CALL        call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6137]              assume msgsender_MSG != null;
[L6138]              Balance[this] := 0;
[L6140]              __var_59 := 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6141]  COND TRUE   DType[this] == MetaToken
[L6142]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5251]              __var_41 := null;
[L5252]  COND FALSE  !(!(account_s761 != null))
[L5256]  CALL        call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5256]  RET         call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L5257]  COND FALSE  !(revert)
[L5260]              _totalSupply_ERC20[this] := __var_42;
[L5261]  CALL        call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5261]  RET         call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L5262]  COND FALSE  !(revert)
[L5265]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s761];
[L5266]              _balances_ERC20[this][account_s761] := __var_43;
[L5267]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s761];
[L5268]              assert { :EventEmitted "Transfer_ERC20" } true;
[L6142]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L6143]  COND FALSE  !(revert)
[L6219]  RET         call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6220]  COND FALSE  !(revert)
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND FALSE  !(revert)
[L4599]  COND TRUE   DType[this] == MetaToken
[L4600]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5195]              __var_37 := null;
[L5196]  COND FALSE  !(!(sender_s718 != null))
[L5200]              __var_38 := null;
[L5201]  COND FALSE  !(!(recipient_s718 != null))
[L5205]  CALL        call __var_39 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s718], amount_s718, 1647150728);
[L4368]  COND FALSE  !(!(b_s392 <= a_s392))
[L4372]              c_s392 := (a_s392 - b_s392) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              __ret_0_ := c_s392;
[L5205]  RET         call __var_39 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s718], amount_s718, 1647150728);
[L5206]  COND FALSE  !(revert)
[L5209]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s718];
[L5210]              _balances_ERC20[this][sender_s718] := __var_39;
[L5211]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s718];
[L5212]  CALL        call __var_40 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s718], amount_s718);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5212]  RET         call __var_40 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s718], amount_s718);
[L5213]  COND FALSE  !(revert)
[L5216]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s718];
[L5217]              _balances_ERC20[this][recipient_s718] := __var_40;
[L5218]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s718];
[L5219]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4600]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4601]  COND FALSE  !(revert)
[L4617]              __ret_0_ := true;
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND FALSE  !(revert)
[L4599]  COND TRUE   DType[this] == MetaToken
[L4600]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5195]              __var_37 := null;
[L5196]  COND FALSE  !(!(sender_s718 != null))
[L5200]              __var_38 := null;
[L5201]  COND FALSE  !(!(recipient_s718 != null))
[L5205]  CALL        call __var_39 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s718], amount_s718, 1647150728);
[L4368]  COND FALSE  !(!(b_s392 <= a_s392))
[L4372]              c_s392 := (a_s392 - b_s392) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              __ret_0_ := c_s392;
[L5205]  RET         call __var_39 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s718], amount_s718, 1647150728);
[L5206]  COND FALSE  !(revert)
[L5209]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s718];
[L5210]              _balances_ERC20[this][sender_s718] := __var_39;
[L5211]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s718];
[L5212]  CALL        call __var_40 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s718], amount_s718);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5212]  RET         call __var_40 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s718], amount_s718);
[L5213]  COND FALSE  !(revert)
[L5216]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s718];
[L5217]              _balances_ERC20[this][recipient_s718] := __var_40;
[L5218]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s718];
[L5219]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4600]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4601]  COND FALSE  !(revert)
[L4617]              __ret_0_ := true;
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:53:24,350 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:53:24,351 INFO  L82        PathProgramCache]: Analyzing trace with hash -1732210185, now seen corresponding path program 1 times
[2020-11-24 21:53:24,352 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:53:24,446 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:53:26,331 INFO  L134       CoverageAnalysis]: Checked inductivity of 248 backedges. 14 proven. 0 refuted. 0 times theorem prover too weak. 234 trivial. 0 not checked.
[2020-11-24 21:53:26,331 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:53:26,331 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [43] imperfect sequences [] total 43
[2020-11-24 21:53:26,333 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 21:53:26,333 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 44 interpolants.
[2020-11-24 21:53:26,333 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=116, Invalid=1776, Unknown=0, NotChecked=0, Total=1892
[2020-11-24 21:53:26,333 INFO  L87              Difference]: Start difference. First operand 5144 states and 5871 transitions. cyclomatic complexity: 729 Second operand 44 states.
[2020-11-24 21:54:00,214 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:54:00,214 INFO  L93              Difference]: Finished difference Result 5514 states and 6334 transitions.
[2020-11-24 21:54:00,214 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 43 states. 
[2020-11-24 21:54:00,214 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5514 states and 6334 transitions.
[2020-11-24 21:54:00,225 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-24 21:54:00,239 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5514 states to 5514 states and 6334 transitions.
[2020-11-24 21:54:00,239 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1117
[2020-11-24 21:54:00,241 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1117
[2020-11-24 21:54:00,241 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5514 states and 6334 transitions.
[2020-11-24 21:54:00,244 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:54:00,244 INFO  L728         BuchiCegarLoop]: Abstraction has 5514 states and 6334 transitions.
[2020-11-24 21:54:00,249 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5514 states and 6334 transitions.
[2020-11-24 21:54:00,284 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5514 to 5475.
[2020-11-24 21:54:00,284 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5475 states.
[2020-11-24 21:54:00,290 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5475 states to 5475 states and 6294 transitions.
[2020-11-24 21:54:00,291 INFO  L751         BuchiCegarLoop]: Abstraction has 5475 states and 6294 transitions.
[2020-11-24 21:54:00,291 INFO  L631         BuchiCegarLoop]: Abstraction has 5475 states and 6294 transitions.
[2020-11-24 21:54:00,291 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 21:54:00,291 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5475 states and 6294 transitions.
[2020-11-24 21:54:00,296 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-24 21:54:00,296 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:54:00,296 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:54:00,298 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:54:00,298 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND TRUE   __exception
[L2592]              __tmp__Balance := Balance;
[L2593]              __tmp__DType := DType;
[L2594]              __tmp__Alloc := Alloc;
[L2595]              __tmp__balance_ADDR := balance_ADDR;
[L2596]              __tmp__M_Ref_int := M_Ref_int;
[L2597]              __tmp__sum__balances0 := sum__balances0;
[L2598]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L2599]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L2600]              __tmp__sum__allowances1 := sum__allowances1;
[L2601]              __tmp__M_Ref_bool := M_Ref_bool;
[L2602]              __tmp__sum := sum;
[L2603]              __tmp__M_int_int := M_int_int;
[L2604]              __tmp__Length := Length;
[L2605]              __tmp__now := now;
[L2606]              __tmp__KEY_GOVERNANCE_ModuleKeys := KEY_GOVERNANCE_ModuleKeys;
[L2607]              __tmp__KEY_STAKING_ModuleKeys := KEY_STAKING_ModuleKeys;
[L2608]              __tmp__KEY_PROXY_ADMIN_ModuleKeys := KEY_PROXY_ADMIN_ModuleKeys;
[L2609]              __tmp__KEY_ORACLE_HUB_ModuleKeys := KEY_ORACLE_HUB_ModuleKeys;
[L2610]              __tmp__KEY_MANAGER_ModuleKeys := KEY_MANAGER_ModuleKeys;
[L2611]              __tmp__KEY_RECOLLATERALISER_ModuleKeys := KEY_RECOLLATERALISER_ModuleKeys;
[L2612]              __tmp__KEY_META_TOKEN_ModuleKeys := KEY_META_TOKEN_ModuleKeys;
[L2613]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys := KEY_SAVINGS_MANAGER_ModuleKeys;
[L2614]              __tmp__nexus_Module := nexus_Module;
[L2615]              __tmp___balances_ERC20 := _balances_ERC20;
[L2616]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L2617]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2618]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L2619]              __tmp___minters_GovernedMinterRole := _minters_GovernedMinterRole;
[L2620]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L2621]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L2622]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L2623]  CALL        call MetaToken_MetaToken__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6154]  CALL        call ModuleKeys_ModuleKeys__fail(this, msgsender_MSG, msgvalue_MSG);
[L3937]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3906]              assume msgsender_MSG != null;
[L3907]              __tmp__Balance[this] := 0;
[L3908]              __tmp__KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3909]              __tmp__KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3910]              __tmp__KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3911]              __tmp__KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3912]              __tmp__KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3913]              __tmp__KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3914]              __tmp__KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3915]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3937]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L6154]  RET         call ModuleKeys_ModuleKeys__fail(this, msgsender_MSG, msgvalue_MSG);
[L6155]  COND FALSE  !(revert)
[L6158]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4239]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]              assume msgsender_MSG != null;
[L4225]              __tmp__Balance[this] := 0;
[L4239]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L6158]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L6159]  COND FALSE  !(revert)
[L6162]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4283]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]              assume msgsender_MSG != null;
[L4269]              __tmp__Balance[this] := 0;
[L4283]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4284]  COND FALSE  !(revert)
[L6162]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L6163]  COND FALSE  !(revert)
[L6166]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4481]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4239]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]              assume msgsender_MSG != null;
[L4225]              __tmp__Balance[this] := 0;
[L4239]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4481]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4482]  COND FALSE  !(revert)
[L4485]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4283]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]              assume msgsender_MSG != null;
[L4269]              __tmp__Balance[this] := 0;
[L4283]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4284]  COND FALSE  !(revert)
[L4485]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4486]  COND FALSE  !(revert)
[L4489]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4456]              assume msgsender_MSG != null;
[L4457]              __tmp__Balance[this] := 0;
[L4458]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L4459]              __tmp__sum__balances0[this] := 0;
[L4460]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L4461]              __tmp__sum__allowances1[this] := 0;
[L4462]              __tmp___totalSupply_ERC20[this] := 0;
[L4489]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4490]  COND FALSE  !(revert)
[L6166]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L6167]  COND FALSE  !(revert)
[L6170]  CALL        call GovernedMinterRole_GovernedMinterRole__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5670]  CALL        call ModuleKeys_ModuleKeys__fail(this, msgsender_MSG, msgvalue_MSG);
[L3937]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3906]              assume msgsender_MSG != null;
[L3907]              __tmp__Balance[this] := 0;
[L3908]              __tmp__KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3909]              __tmp__KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3910]              __tmp__KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3911]              __tmp__KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3912]              __tmp__KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3913]              __tmp__KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3914]              __tmp__KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3915]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3937]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L5670]  RET         call ModuleKeys_ModuleKeys__fail(this, msgsender_MSG, msgvalue_MSG);
[L5671]  COND FALSE  !(revert)
[L5674]  CALL        call Module_Module__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4023]  CALL        call ModuleKeys_ModuleKeys__fail(this, msgsender_MSG, msgvalue_MSG);
[L3937]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3906]              assume msgsender_MSG != null;
[L3907]              __tmp__Balance[this] := 0;
[L3908]              __tmp__KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3909]              __tmp__KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3910]              __tmp__KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3911]              __tmp__KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3912]              __tmp__KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3913]              __tmp__KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3914]              __tmp__KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3915]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3937]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]  COND FALSE  !(revert)
[L4023]  RET         call ModuleKeys_ModuleKeys__fail(this, msgsender_MSG, msgvalue_MSG);
[L4024]  COND FALSE  !(revert)
[L4027]  CALL        call Module_Module_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L3988]              assume msgsender_MSG != null;
[L3989]              __tmp__Balance[this] := 0;
[L3991]              __var_1 := null;
[L3992]  COND FALSE  !(!(_nexus_s102 != null))
[L3996]              assume __tmp__DType[_nexus_s102] == INexus;
[L3997]              __var_2 := _nexus_s102;
[L3998]              __tmp__nexus_Module[this] := __var_2;
[L4027]  RET         call Module_Module_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4028]  COND FALSE  !(revert)
[L5674]  RET         call Module_Module__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5675]  COND FALSE  !(revert)
[L5678]  CALL        call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5641]              assume msgsender_MSG != null;
[L5642]              __tmp__Balance[this] := 0;
[L5644]  CALL        call __var_55 := FreshRefGenerator__fail();
[L3879]              havoc newRef;
[L3880]              assume __tmp__Alloc[newRef] == false;
[L3881]              __tmp__Alloc[newRef] := true;
[L3882]              assume newRef != null;
[L5644]  RET         call __var_55 := FreshRefGenerator__fail();
[L5645]  COND FALSE  !(revert)
[L5648]              __tmp___minters_GovernedMinterRole[this] := __var_55;
[L5678]  RET         call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5679]  COND FALSE  !(revert)
[L6170]  RET         call GovernedMinterRole_GovernedMinterRole__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6171]  COND FALSE  !(revert)
[L6174]  CALL        call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L5905]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4283]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]              assume msgsender_MSG != null;
[L4269]              __tmp__Balance[this] := 0;
[L4283]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4284]  COND FALSE  !(revert)
[L5905]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L5906]  COND FALSE  !(revert)
[L5909]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5878]              assume msgsender_MSG != null;
[L5879]              __tmp__Balance[this] := 0;
[L5880]              __tmp___name_ERC20Detailed[this] := 283664046;
[L5881]              __tmp___symbol_ERC20Detailed[this] := 283664046;
[L5882]              __tmp___decimals_ERC20Detailed[this] := 0;
[L5884]              __tmp___name_ERC20Detailed[this] := name_s1102;
[L5885]              __tmp___symbol_ERC20Detailed[this] := symbol_s1102;
[L5886]              __tmp___decimals_ERC20Detailed[this] := decimals_s1102;
[L5909]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5910]  COND FALSE  !(revert)
[L6174]  RET         call ERC20Detailed_ERC20Detailed__fail(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L6175]  COND FALSE  !(revert)
[L6178]  CALL        call ERC20Burnable_ERC20Burnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L5981]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4239]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]              assume msgsender_MSG != null;
[L4225]              __tmp__Balance[this] := 0;
[L4239]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L5981]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L5982]  COND FALSE  !(revert)
[L5985]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4283]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]              assume msgsender_MSG != null;
[L4269]              __tmp__Balance[this] := 0;
[L4283]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4284]  COND FALSE  !(revert)
[L5985]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L5986]  COND FALSE  !(revert)
[L5989]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4481]  CALL        call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4239]  CALL        call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4224]              assume msgsender_MSG != null;
[L4225]              __tmp__Balance[this] := 0;
[L4239]  RET         call Context_Context_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4240]  COND FALSE  !(revert)
[L4481]  RET         call Context_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4482]  COND FALSE  !(revert)
[L4485]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4283]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4268]              assume msgsender_MSG != null;
[L4269]              __tmp__Balance[this] := 0;
[L4283]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4284]  COND FALSE  !(revert)
[L4485]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4486]  COND FALSE  !(revert)
[L4489]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4456]              assume msgsender_MSG != null;
[L4457]              __tmp__Balance[this] := 0;
[L4458]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L4459]              __tmp__sum__balances0[this] := 0;
[L4460]              __tmp___allowances_ERC20[this] := zeroRefRefintArr();
[L4461]              __tmp__sum__allowances1[this] := 0;
[L4462]              __tmp___totalSupply_ERC20[this] := 0;
[L4489]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4490]  COND FALSE  !(revert)
[L5989]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L5990]  COND FALSE  !(revert)
[L5993]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L5966]              assume msgsender_MSG != null;
[L5967]              __tmp__Balance[this] := 0;
[L5993]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L5994]  COND FALSE  !(revert)
[L6178]  RET         call ERC20Burnable_ERC20Burnable__fail(this, msgsender_MSG, msgvalue_MSG);
[L6179]  COND FALSE  !(revert)
[L6182]  CALL        call MetaToken_MetaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6119]              assume msgsender_MSG != null;
[L6120]              __tmp__Balance[this] := 0;
[L6122]              __var_59 := 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6123]  COND TRUE   __tmp__DType[this] == MetaToken
[L6124]  CALL        call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5227]              __var_41 := null;
[L5228]  COND FALSE  !(!(account_s761 != null))
[L5232]  CALL        call __var_42 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], amount_s761);
[L4332]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4333]  COND FALSE  !(!(c_s365 >= a_s365))
[L4337]              __ret_0_ := c_s365;
[L5232]  RET         call __var_42 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], amount_s761);
[L5233]  COND FALSE  !(revert)
[L5236]              __tmp___totalSupply_ERC20[this] := __var_42;
[L5237]  CALL        call __var_43 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s761], amount_s761);
[L4332]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4333]  COND FALSE  !(!(c_s365 >= a_s365))
[L4337]              __ret_0_ := c_s365;
[L5237]  RET         call __var_43 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s761], amount_s761);
[L5238]  COND FALSE  !(revert)
[L5241]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][account_s761];
[L5242]              __tmp___balances_ERC20[this][account_s761] := __var_43;
[L5243]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][account_s761];
[L6124]  RET         call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L6125]  COND FALSE  !(revert)
[L6182]  RET         call MetaToken_MetaToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6183]  COND FALSE  !(revert)
[L2623]  RET         call MetaToken_MetaToken__fail(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2624]              assume revert || gas < 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND FALSE  !(__exception)
[L1017]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4581]  COND TRUE   DType[this] == MetaToken
[L4582]  CALL        call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4261]              __ret_0_ := msgsender_MSG;
[L4582]  RET         call __var_26 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4583]  COND FALSE  !(revert)
[L4599]  COND TRUE   DType[this] == MetaToken
[L4600]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5195]              __var_37 := null;
[L5196]  COND FALSE  !(!(sender_s718 != null))
[L5200]              __var_38 := null;
[L5201]  COND FALSE  !(!(recipient_s718 != null))
[L5205]  CALL        call __var_39 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s718], amount_s718, 1647150728);
[L4368]  COND FALSE  !(!(b_s392 <= a_s392))
[L4372]              c_s392 := (a_s392 - b_s392) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4373]              __ret_0_ := c_s392;
[L5205]  RET         call __var_39 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ERC20[this][sender_s718], amount_s718, 1647150728);
[L5206]  COND FALSE  !(revert)
[L5209]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][sender_s718];
[L5210]              _balances_ERC20[this][sender_s718] := __var_39;
[L5211]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][sender_s718];
[L5212]  CALL        call __var_40 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s718], amount_s718);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5212]  RET         call __var_40 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][recipient_s718], amount_s718);
[L5213]  COND FALSE  !(revert)
[L5216]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][recipient_s718];
[L5217]              _balances_ERC20[this][recipient_s718] := __var_40;
[L5218]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][recipient_s718];
[L5219]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4600]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4601]  COND FALSE  !(revert)
[L4617]              __ret_0_ := true;
[L1017]  RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1018]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s535) && _balances_ERC20[this][recipient_s535] == old(_balances_ERC20[this][recipient_s535]) + amount_s535) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && _minters_GovernedMinterRole[this] == old(_minters_GovernedMinterRole[this])) && nexus_Module[this] == old(nexus_Module[this]));
[L3]                 revert := revert_hold;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND TRUE   choice == 19
[L8936]              gas := gas - 21000;
[L8937]  COND FALSE  !(gas >= 0)
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:54:00,302 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:54:00,302 INFO  L82        PathProgramCache]: Analyzing trace with hash -1568115024, now seen corresponding path program 1 times
[2020-11-24 21:54:00,303 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:54:00,317 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:54:00,400 INFO  L134       CoverageAnalysis]: Checked inductivity of 242 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 242 trivial. 0 not checked.
[2020-11-24 21:54:00,400 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:54:00,400 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 21:54:00,400 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 21:54:00,401 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 21:54:00,401 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 21:54:00,401 INFO  L87              Difference]: Start difference. First operand 5475 states and 6294 transitions. cyclomatic complexity: 827 Second operand 4 states.
[2020-11-24 21:54:01,018 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:54:01,018 INFO  L93              Difference]: Finished difference Result 6536 states and 7701 transitions.
[2020-11-24 21:54:01,018 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 21:54:01,018 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6536 states and 7701 transitions.
[2020-11-24 21:54:01,033 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2020-11-24 21:54:01,050 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6536 states to 6299 states and 7454 transitions.
[2020-11-24 21:54:01,051 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1372
[2020-11-24 21:54:01,051 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1372
[2020-11-24 21:54:01,051 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6299 states and 7454 transitions.
[2020-11-24 21:54:01,055 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:54:01,055 INFO  L728         BuchiCegarLoop]: Abstraction has 6299 states and 7454 transitions.
[2020-11-24 21:54:01,060 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6299 states and 7454 transitions.
[2020-11-24 21:54:01,091 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6299 to 5488.
[2020-11-24 21:54:01,091 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5488 states.
[2020-11-24 21:54:01,096 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5488 states to 5488 states and 6357 transitions.
[2020-11-24 21:54:01,096 INFO  L751         BuchiCegarLoop]: Abstraction has 5488 states and 6357 transitions.
[2020-11-24 21:54:01,096 INFO  L631         BuchiCegarLoop]: Abstraction has 5488 states and 6357 transitions.
[2020-11-24 21:54:01,097 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 21:54:01,097 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5488 states and 6357 transitions.
[2020-11-24 21:54:01,102 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 6
[2020-11-24 21:54:01,102 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:54:01,102 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:54:01,104 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:54:01,104 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND FALSE  !(revert)
[L6195]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6195]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6196]  COND FALSE  !(revert)
[L6199]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6199]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6200]  COND FALSE  !(revert)
[L6203]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6203]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6204]  COND FALSE  !(revert)
[L6207]  CALL        call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5687]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L5687]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L5688]  COND FALSE  !(revert)
[L5691]  CALL        call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4037]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L4037]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4006]              assume msgsender_MSG != null;
[L4007]              Balance[this] := 0;
[L4009]              __var_1 := null;
[L4010]  COND FALSE  !(!(_nexus_s102 != null))
[L4014]              assume DType[_nexus_s102] == INexus;
[L4015]              __var_2 := _nexus_s102;
[L4016]              nexus_Module[this] := __var_2;
[L4041]  RET         call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4042]  COND FALSE  !(revert)
[L5691]  RET         call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5692]  COND FALSE  !(revert)
[L5695]  CALL        call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5656]              assume msgsender_MSG != null;
[L5657]              Balance[this] := 0;
[L5659]  CALL        call __var_55 := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L5659]  RET         call __var_55 := FreshRefGenerator__success();
[L5660]  COND FALSE  !(revert)
[L5663]              _minters_GovernedMinterRole[this] := __var_55;
[L5695]  RET         call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5696]  COND FALSE  !(revert)
[L6207]  RET         call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6208]  COND FALSE  !(revert)
[L6211]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L5917]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L5917]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5918]  COND FALSE  !(revert)
[L5921]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5892]              assume msgsender_MSG != null;
[L5893]              Balance[this] := 0;
[L5894]              _name_ERC20Detailed[this] := 283664046;
[L5895]              _symbol_ERC20Detailed[this] := 283664046;
[L5896]              _decimals_ERC20Detailed[this] := 0;
[L5898]              _name_ERC20Detailed[this] := name_s1102;
[L5899]              _symbol_ERC20Detailed[this] := symbol_s1102;
[L5900]              _decimals_ERC20Detailed[this] := decimals_s1102;
[L5921]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5922]  COND FALSE  !(revert)
[L6211]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L6212]  COND FALSE  !(revert)
[L6215]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6001]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6001]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6002]  COND FALSE  !(revert)
[L6005]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6005]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6006]  COND FALSE  !(revert)
[L6009]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6009]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6010]  COND FALSE  !(revert)
[L6013]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5974]              assume msgsender_MSG != null;
[L5975]              Balance[this] := 0;
[L6013]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L6014]  COND FALSE  !(revert)
[L6215]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6216]  COND FALSE  !(revert)
[L6219]  CALL        call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6137]              assume msgsender_MSG != null;
[L6138]              Balance[this] := 0;
[L6140]              __var_59 := 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6141]  COND TRUE   DType[this] == MetaToken
[L6142]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5251]              __var_41 := null;
[L5252]  COND FALSE  !(!(account_s761 != null))
[L5256]  CALL        call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5256]  RET         call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L5257]  COND FALSE  !(revert)
[L5260]              _totalSupply_ERC20[this] := __var_42;
[L5261]  CALL        call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5261]  RET         call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L5262]  COND FALSE  !(revert)
[L5265]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s761];
[L5266]              _balances_ERC20[this][account_s761] := __var_43;
[L5267]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s761];
[L5268]              assert { :EventEmitted "Transfer_ERC20" } true;
[L6142]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L6143]  COND FALSE  !(revert)
[L6219]  RET         call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6220]  COND FALSE  !(revert)
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND TRUE   __exception
[L983]               __tmp__Balance := Balance;
[L984]               __tmp__DType := DType;
[L985]               __tmp__Alloc := Alloc;
[L986]               __tmp__balance_ADDR := balance_ADDR;
[L987]               __tmp__M_Ref_int := M_Ref_int;
[L988]               __tmp__sum__balances0 := sum__balances0;
[L989]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L990]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L991]               __tmp__sum__allowances1 := sum__allowances1;
[L992]               __tmp__M_Ref_bool := M_Ref_bool;
[L993]               __tmp__sum := sum;
[L994]               __tmp__M_int_int := M_int_int;
[L995]               __tmp__Length := Length;
[L996]               __tmp__now := now;
[L997]               __tmp__KEY_GOVERNANCE_ModuleKeys := KEY_GOVERNANCE_ModuleKeys;
[L998]               __tmp__KEY_STAKING_ModuleKeys := KEY_STAKING_ModuleKeys;
[L999]               __tmp__KEY_PROXY_ADMIN_ModuleKeys := KEY_PROXY_ADMIN_ModuleKeys;
[L1000]              __tmp__KEY_ORACLE_HUB_ModuleKeys := KEY_ORACLE_HUB_ModuleKeys;
[L1001]              __tmp__KEY_MANAGER_ModuleKeys := KEY_MANAGER_ModuleKeys;
[L1002]              __tmp__KEY_RECOLLATERALISER_ModuleKeys := KEY_RECOLLATERALISER_ModuleKeys;
[L1003]              __tmp__KEY_META_TOKEN_ModuleKeys := KEY_META_TOKEN_ModuleKeys;
[L1004]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys := KEY_SAVINGS_MANAGER_ModuleKeys;
[L1005]              __tmp__nexus_Module := nexus_Module;
[L1006]              __tmp___balances_ERC20 := _balances_ERC20;
[L1007]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1008]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1009]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L1010]              __tmp___minters_GovernedMinterRole := _minters_GovernedMinterRole;
[L1011]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1012]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1013]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1014]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4538]  COND TRUE   __tmp__DType[this] == MetaToken
[L4539]  CALL        call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4255]              __ret_0_ := msgsender_MSG;
[L4539]  RET         call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4540]  COND FALSE  !(revert)
[L4556]  COND TRUE   __tmp__DType[this] == MetaToken
[L4557]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5163]              __var_37 := null;
[L5164]  COND FALSE  !(!(sender_s718 != null))
[L5168]              __var_38 := null;
[L5169]  COND TRUE   !(recipient_s718 != null)
[L5170]              revert := true;
[L4557]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4558]  COND TRUE   revert
[L1014]  RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1015]              assume revert || gas < 0;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND TRUE   choice == 19
[L8936]              gas := gas - 21000;
[L8937]  COND FALSE  !(gas >= 0)
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:54:01,108 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:54:01,108 INFO  L82        PathProgramCache]: Analyzing trace with hash 391236962, now seen corresponding path program 1 times
[2020-11-24 21:54:01,109 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:54:01,124 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:01,142 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:01,243 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:54:01,243 INFO  L82        PathProgramCache]: Analyzing trace with hash -1323134330, now seen corresponding path program 1 times
[2020-11-24 21:54:01,244 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:54:01,246 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 21:54:01,252 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 21:54:01,252 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 21:54:01,253 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 21:54:01,253 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-24 21:54:01,253 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 21:54:01,253 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 21:54:01,253 INFO  L87              Difference]: Start difference. First operand 5488 states and 6357 transitions. cyclomatic complexity: 873 Second operand 4 states.
[2020-11-24 21:54:02,182 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 21:54:02,182 INFO  L93              Difference]: Finished difference Result 5764 states and 6593 transitions.
[2020-11-24 21:54:02,182 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 21:54:02,182 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5764 states and 6593 transitions.
[2020-11-24 21:54:02,199 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2020-11-24 21:54:02,212 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5764 states to 5764 states and 6593 transitions.
[2020-11-24 21:54:02,213 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1274
[2020-11-24 21:54:02,213 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1274
[2020-11-24 21:54:02,213 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5764 states and 6593 transitions.
[2020-11-24 21:54:02,217 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 21:54:02,217 INFO  L728         BuchiCegarLoop]: Abstraction has 5764 states and 6593 transitions.
[2020-11-24 21:54:02,221 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5764 states and 6593 transitions.
[2020-11-24 21:54:02,248 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5764 to 5296.
[2020-11-24 21:54:02,248 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5296 states.
[2020-11-24 21:54:02,254 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5296 states to 5296 states and 6046 transitions.
[2020-11-24 21:54:02,254 INFO  L751         BuchiCegarLoop]: Abstraction has 5296 states and 6046 transitions.
[2020-11-24 21:54:02,254 INFO  L631         BuchiCegarLoop]: Abstraction has 5296 states and 6046 transitions.
[2020-11-24 21:54:02,254 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-24 21:54:02,254 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5296 states and 6046 transitions.
[2020-11-24 21:54:02,261 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 21:54:02,261 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 21:54:02,261 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 21:54:02,262 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 21:54:02,262 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L9067]              assume null == 0;
[L9068]  CALL        call this := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L9068]  RET         call this := FreshRefGenerator__success();
[L9069]              assume now >= 0;
[L9070]              assume DType[this] == MetaToken;
[L9071]              assume msgvalue_MSG == 0;
[L9072]              gas := gas - 53000;
[L9073]  CALL        call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND FALSE  !(revert)
[L6195]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6195]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6196]  COND FALSE  !(revert)
[L6199]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6199]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6200]  COND FALSE  !(revert)
[L6203]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6203]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6204]  COND FALSE  !(revert)
[L6207]  CALL        call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5687]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L5687]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L5688]  COND FALSE  !(revert)
[L5691]  CALL        call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4037]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L4037]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4006]              assume msgsender_MSG != null;
[L4007]              Balance[this] := 0;
[L4009]              __var_1 := null;
[L4010]  COND FALSE  !(!(_nexus_s102 != null))
[L4014]              assume DType[_nexus_s102] == INexus;
[L4015]              __var_2 := _nexus_s102;
[L4016]              nexus_Module[this] := __var_2;
[L4041]  RET         call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4042]  COND FALSE  !(revert)
[L5691]  RET         call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5692]  COND FALSE  !(revert)
[L5695]  CALL        call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5656]              assume msgsender_MSG != null;
[L5657]              Balance[this] := 0;
[L5659]  CALL        call __var_55 := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L5659]  RET         call __var_55 := FreshRefGenerator__success();
[L5660]  COND FALSE  !(revert)
[L5663]              _minters_GovernedMinterRole[this] := __var_55;
[L5695]  RET         call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5696]  COND FALSE  !(revert)
[L6207]  RET         call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6208]  COND FALSE  !(revert)
[L6211]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L5917]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L5917]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5918]  COND FALSE  !(revert)
[L5921]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5892]              assume msgsender_MSG != null;
[L5893]              Balance[this] := 0;
[L5894]              _name_ERC20Detailed[this] := 283664046;
[L5895]              _symbol_ERC20Detailed[this] := 283664046;
[L5896]              _decimals_ERC20Detailed[this] := 0;
[L5898]              _name_ERC20Detailed[this] := name_s1102;
[L5899]              _symbol_ERC20Detailed[this] := symbol_s1102;
[L5900]              _decimals_ERC20Detailed[this] := decimals_s1102;
[L5921]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5922]  COND FALSE  !(revert)
[L6211]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L6212]  COND FALSE  !(revert)
[L6215]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6001]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6001]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6002]  COND FALSE  !(revert)
[L6005]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6005]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6006]  COND FALSE  !(revert)
[L6009]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6009]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6010]  COND FALSE  !(revert)
[L6013]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5974]              assume msgsender_MSG != null;
[L5975]              Balance[this] := 0;
[L6013]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L6014]  COND FALSE  !(revert)
[L6215]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6216]  COND FALSE  !(revert)
[L6219]  CALL        call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6137]              assume msgsender_MSG != null;
[L6138]              Balance[this] := 0;
[L6140]              __var_59 := 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6141]  COND TRUE   DType[this] == MetaToken
[L6142]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5251]              __var_41 := null;
[L5252]  COND FALSE  !(!(account_s761 != null))
[L5256]  CALL        call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5256]  RET         call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L5257]  COND FALSE  !(revert)
[L5260]              _totalSupply_ERC20[this] := __var_42;
[L5261]  CALL        call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5261]  RET         call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L5262]  COND FALSE  !(revert)
[L5265]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s761];
[L5266]              _balances_ERC20[this][account_s761] := __var_43;
[L5267]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s761];
[L5268]              assert { :EventEmitted "Transfer_ERC20" } true;
[L6142]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L6143]  COND FALSE  !(revert)
[L6219]  RET         call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6220]  COND FALSE  !(revert)
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L9074]              assume !revert && gas >= 0;
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND FALSE  !(choice == 19)
[L8941]  COND FALSE  !(choice == 18)
[L8947]  COND FALSE  !(choice == 17)
[L8953]  COND TRUE   choice == 16
[L8954]              gas := gas - 21000;
[L8955]  COND TRUE   gas >= 0
[L8956]              assume amount_s535 >= 0 && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L8957]              assume msgvalue_MSG == 0;
[L8958]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND TRUE   __exception
[L983]               __tmp__Balance := Balance;
[L984]               __tmp__DType := DType;
[L985]               __tmp__Alloc := Alloc;
[L986]               __tmp__balance_ADDR := balance_ADDR;
[L987]               __tmp__M_Ref_int := M_Ref_int;
[L988]               __tmp__sum__balances0 := sum__balances0;
[L989]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L990]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L991]               __tmp__sum__allowances1 := sum__allowances1;
[L992]               __tmp__M_Ref_bool := M_Ref_bool;
[L993]               __tmp__sum := sum;
[L994]               __tmp__M_int_int := M_int_int;
[L995]               __tmp__Length := Length;
[L996]               __tmp__now := now;
[L997]               __tmp__KEY_GOVERNANCE_ModuleKeys := KEY_GOVERNANCE_ModuleKeys;
[L998]               __tmp__KEY_STAKING_ModuleKeys := KEY_STAKING_ModuleKeys;
[L999]               __tmp__KEY_PROXY_ADMIN_ModuleKeys := KEY_PROXY_ADMIN_ModuleKeys;
[L1000]              __tmp__KEY_ORACLE_HUB_ModuleKeys := KEY_ORACLE_HUB_ModuleKeys;
[L1001]              __tmp__KEY_MANAGER_ModuleKeys := KEY_MANAGER_ModuleKeys;
[L1002]              __tmp__KEY_RECOLLATERALISER_ModuleKeys := KEY_RECOLLATERALISER_ModuleKeys;
[L1003]              __tmp__KEY_META_TOKEN_ModuleKeys := KEY_META_TOKEN_ModuleKeys;
[L1004]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys := KEY_SAVINGS_MANAGER_ModuleKeys;
[L1005]              __tmp__nexus_Module := nexus_Module;
[L1006]              __tmp___balances_ERC20 := _balances_ERC20;
[L1007]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1008]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1009]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L1010]              __tmp___minters_GovernedMinterRole := _minters_GovernedMinterRole;
[L1011]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1012]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1013]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1014]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4538]  COND TRUE   __tmp__DType[this] == MetaToken
[L4539]  CALL        call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4255]              __ret_0_ := msgsender_MSG;
[L4539]  RET         call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4540]  COND FALSE  !(revert)
[L4556]  COND TRUE   __tmp__DType[this] == MetaToken
[L4557]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5163]              __var_37 := null;
[L5164]  COND FALSE  !(!(sender_s718 != null))
[L5168]              __var_38 := null;
[L5169]  COND TRUE   !(recipient_s718 != null)
[L5170]              revert := true;
[L4557]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4558]  COND TRUE   revert
[L1014]  RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1015]              assume revert || gas < 0;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L9077]  RET         call CorralChoice_MetaToken(this);

Loop:
[L9077]  CALL        call CorralChoice_MetaToken(this);
[L8871]              havoc msgsender_MSG;
[L8872]              havoc msgvalue_MSG;
[L8873]              havoc choice;
[L8874]              havoc __ret_0_nexus;
[L8875]              havoc __ret_0_totalSupply;
[L8876]              havoc account_s516;
[L8877]              havoc __ret_0_balanceOf;
[L8878]              havoc recipient_s535;
[L8879]              havoc amount_s535;
[L8880]              havoc __ret_0_transfer;
[L8881]              havoc owner_s551;
[L8882]              havoc spender_s551;
[L8883]              havoc __ret_0_allowance;
[L8884]              havoc spender_s570;
[L8885]              havoc amount_s570;
[L8886]              havoc __ret_0_approve;
[L8887]              havoc sender_s606;
[L8888]              havoc recipient_s606;
[L8889]              havoc amount_s606;
[L8890]              havoc __ret_0_transferFrom;
[L8891]              havoc spender_s633;
[L8892]              havoc addedValue_s633;
[L8893]              havoc __ret_0_increaseAllowance;
[L8894]              havoc spender_s661;
[L8895]              havoc subtractedValue_s661;
[L8896]              havoc __ret_0_decreaseAllowance;
[L8897]              havoc account_s1006;
[L8898]              havoc __ret_0_isMinter;
[L8899]              havoc account_s1018;
[L8900]              havoc account_s1030;
[L8901]              havoc name_s1102;
[L8902]              havoc symbol_s1102;
[L8903]              havoc decimals_s1102;
[L8904]              havoc __ret_0_name;
[L8905]              havoc __ret_0_symbol;
[L8906]              havoc __ret_0_decimals;
[L8907]              havoc amount_s1143;
[L8908]              havoc account_s1156;
[L8909]              havoc amount_s1156;
[L8910]              havoc _nexus_s1193;
[L8911]              havoc _initialRecipient_s1193;
[L8912]              havoc account_s1212;
[L8913]              havoc amount_s1212;
[L8914]              havoc __ret_0_mint;
[L8915]              havoc tmpNow;
[L8916]              havoc gas;
[L8917]              assume gas > 4000000 && gas <= 8000000;
[L8918]              tmpNow := now;
[L8919]              havoc now;
[L8920]              assume now > tmpNow;
[L8921]              assume msgsender_MSG != null;
[L8922]              assume DType[msgsender_MSG] != ModuleKeys;
[L8923]              assume DType[msgsender_MSG] != INexus;
[L8924]              assume DType[msgsender_MSG] != Module;
[L8925]              assume DType[msgsender_MSG] != Context;
[L8926]              assume DType[msgsender_MSG] != IERC20;
[L8927]              assume DType[msgsender_MSG] != SafeMath;
[L8928]              assume DType[msgsender_MSG] != ERC20;
[L8929]              assume DType[msgsender_MSG] != Roles;
[L8930]              assume DType[msgsender_MSG] != GovernedMinterRole;
[L8931]              assume DType[msgsender_MSG] != ERC20Detailed;
[L8932]              assume DType[msgsender_MSG] != ERC20Burnable;
[L8933]              assume DType[msgsender_MSG] != MetaToken;
[L8934]              Alloc[msgsender_MSG] := true;
[L8935]  COND TRUE   choice == 19
[L8936]              gas := gas - 21000;
[L8937]  COND TRUE   gas >= 0
[L8938]              assume msgvalue_MSG == 0;
[L8939]  CALL        call __ret_0_nexus := nexus_Module(this, msgsender_MSG, msgvalue_MSG);
[L390]               havoc __exception;
[L391]               revert := false;
[L392]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := nexus_Module__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              __ret_0_ := nexus_Module[this];
[L427]   RET         call __ret_0_ := nexus_Module__success(this, msgsender_MSG, msgvalue_MSG);
[L428]               assume !revert && gas >= 0;
[L8939]  RET         call __ret_0_nexus := nexus_Module(this, msgsender_MSG, msgvalue_MSG);
[L9077]  RET         call CorralChoice_MetaToken(this);

[2020-11-24 21:54:02,266 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:54:02,266 INFO  L82        PathProgramCache]: Analyzing trace with hash 391236962, now seen corresponding path program 2 times
[2020-11-24 21:54:02,268 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:54:02,283 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:02,301 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:02,353 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:54:02,353 INFO  L82        PathProgramCache]: Analyzing trace with hash -2006648247, now seen corresponding path program 1 times
[2020-11-24 21:54:02,354 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:54:02,357 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:02,359 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:02,365 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 21:54:02,365 INFO  L82        PathProgramCache]: Analyzing trace with hash 2036952234, now seen corresponding path program 1 times
[2020-11-24 21:54:02,366 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 21:54:02,383 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:02,405 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-24 21:54:02,805 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 354
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 9181 to 18353
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
[2020-11-24 21:54:02,961 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 21:54:03,574 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification that was a NOOP. DAG size: 66
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
[2020-11-24 21:54:04,478 WARN  L188               SmtUtils]: Spent 680.00 ms on a formula simplification. DAG size of input: 381 DAG size of output: 363
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-24 21:54:04,900 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification that was a NOOP. DAG size: 387
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 21:54:05,034 WARN  L188               SmtUtils]: Spent 129.00 ms on a formula simplification that was a NOOP. DAG size: 345
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 21:54:05,321 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification that was a NOOP. DAG size: 333
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-24 21:54:05,524 WARN  L188               SmtUtils]: Spent 194.00 ms on a formula simplification that was a NOOP. DAG size: 263
[2020-11-24 21:54:05,975 WARN  L188               SmtUtils]: Spent 448.00 ms on a formula simplification. DAG size of input: 335 DAG size of output: 321
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-24 21:54:06,129 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification. DAG size of input: 196 DAG size of output: 192
[2020-11-24 21:54:06,398 WARN  L188               SmtUtils]: Spent 267.00 ms on a formula simplification that was a NOOP. DAG size: 405
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5003 to 9973
[2020-11-24 21:54:06,572 WARN  L188               SmtUtils]: Spent 169.00 ms on a formula simplification that was a NOOP. DAG size: 324
[2020-11-24 21:54:07,504 WARN  L188               SmtUtils]: Spent 930.00 ms on a formula simplification. DAG size of input: 628 DAG size of output: 616
Garbage collection #1: 241 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 241 to 479
Garbage collection #2: 479 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 479 to 953
Garbage collection #3: 953 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 953 to 1901
Garbage collection #4: 1901 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1901 to 3797
Garbage collection #5: 3797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3797 to 7591
Garbage collection #6: 7591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7591 to 15173
Garbage collection #7: 15173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 15173 to 30341
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 21:54:07,719 WARN  L188               SmtUtils]: Spent 199.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 274
[2020-11-24 21:54:07,937 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification that was a NOOP. DAG size: 427
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-24 21:54:08,381 WARN  L188               SmtUtils]: Spent 351.00 ms on a formula simplification. DAG size of input: 429 DAG size of output: 428
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-24 21:54:08,577 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification that was a NOOP. DAG size: 424
[2020-11-24 21:54:08,595 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:08,617 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 21:54:08,627 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 09:54:08 BasicIcfg
[2020-11-24 21:54:08,627 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 21:54:08,627 INFO  L168              Benchmark]: Toolchain (without parser) took 51850.22 ms. Allocated memory was 1.0 GB in the beginning and 3.4 GB in the end (delta: 2.4 GB). Free memory was 924.5 MB in the beginning and 3.1 GB in the end (delta: -2.2 GB). Peak memory consumption was 2.5 GB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,628 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,628 INFO  L168              Benchmark]: Boogie Preprocessor took 138.97 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,628 INFO  L168              Benchmark]: UtopiaSpecLang took 83.67 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,628 INFO  L168              Benchmark]: Boogie Printer took 25.19 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,628 INFO  L168              Benchmark]: RCFGBuilder took 1417.50 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 892.3 MB in the beginning and 886.9 MB in the end (delta: 5.3 MB). Peak memory consumption was 179.9 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,629 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.69 ms. Allocated memory is still 1.1 GB. Free memory was 886.9 MB in the beginning and 877.5 MB in the end (delta: 9.4 MB). Peak memory consumption was 9.4 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,629 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2749.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 196.1 MB). Free memory was 877.5 MB in the beginning and 786.4 MB in the end (delta: 91.1 MB). Peak memory consumption was 443.5 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,630 INFO  L168              Benchmark]: BlockEncodingV2 took 209.07 ms. Allocated memory is still 1.3 GB. Free memory was 786.4 MB in the beginning and 674.1 MB in the end (delta: 112.3 MB). Peak memory consumption was 112.3 MB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,630 INFO  L168              Benchmark]: BuchiAutomizer took 47188.75 ms. Allocated memory was 1.3 GB in the beginning and 3.4 GB in the end (delta: 2.1 GB). Free memory was 674.1 MB in the beginning and 3.1 GB in the end (delta: -2.4 GB). Peak memory consumption was 1.9 GB. Max. memory is 15.3 GB.
[2020-11-24 21:54:08,632 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    8032 locations, 14698 edges
  - StatisticsResult: Encoded RCFG
    7852 locations, 14199 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 138.97 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 83.67 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 25.19 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1417.50 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 892.3 MB in the beginning and 886.9 MB in the end (delta: 5.3 MB). Peak memory consumption was 179.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.69 ms. Allocated memory is still 1.1 GB. Free memory was 886.9 MB in the beginning and 877.5 MB in the end (delta: 9.4 MB). Peak memory consumption was 9.4 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2749.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 196.1 MB). Free memory was 877.5 MB in the beginning and 786.4 MB in the end (delta: 91.1 MB). Peak memory consumption was 443.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 209.07 ms. Allocated memory is still 1.3 GB. Free memory was 786.4 MB in the beginning and 674.1 MB in the end (delta: 112.3 MB). Peak memory consumption was 112.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 47188.75 ms. Allocated memory was 1.3 GB in the beginning and 3.4 GB in the end (delta: 2.1 GB). Free memory was 674.1 MB in the beginning and 3.1 GB in the end (delta: -2.4 GB). Peak memory consumption was 1.9 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3169 locations, 4508 edges
  - StatisticsResult: BuchiProgram size
    8032 locations, 14698 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.7 modules have a trivial ranking function, the largest among these consists of 44 locations. The remainder module has 5296 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 47.1s and 8 iterations.  TraceHistogramMax:5. Analysis of lassos took 9.3s. Construction of modules took 30.6s. BÃ¼chi inclusion checks took 6.1s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.3s AutomataMinimizationTime, 7 MinimizatonAttempts, 2666 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 5488 states and ocurred in iteration 6.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 40183 SDtfs, 28905 SDslu, 90217 SDs, 0 SdLazy, 143490 SolverSat, 4374 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 30.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(49421493821642476244577507638140872659483089639323406415360070334623451553411) = (new MetaToken)({from : 49421493821642476244577507638140872659483089639323406415360070334623451553405, _nexus : 49421493821642476244577507638140872659483089639323406415360070334623451553398, _initialRecipient : 49421493821642476244577507638140872659483089639323406415360070334623451553392});
[L2589]              havoc __exception;
[L2590]              revert := false;
[L2591]  COND FALSE  !(__exception)
[L2626]  CALL        call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6191]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L6191]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L6192]  COND FALSE  !(revert)
[L6195]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6195]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6196]  COND FALSE  !(revert)
[L6199]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6199]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6200]  COND FALSE  !(revert)
[L6203]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6203]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6204]  COND FALSE  !(revert)
[L6207]  CALL        call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L5687]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L5687]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L5688]  COND FALSE  !(revert)
[L5691]  CALL        call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L4037]  CALL        call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L3945]  CALL        call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3922]              assume msgsender_MSG != null;
[L3923]              Balance[this] := 0;
[L3924]              KEY_GOVERNANCE_ModuleKeys[this] := -48832890503588790419199706676866057643620570477433090687806743991846312540275;
[L3925]              KEY_STAKING_ModuleKeys[this] := 13548382394305205806620358309562669106876141577781988137882483834848166703156;
[L3926]              KEY_PROXY_ADMIN_ModuleKeys[this] := -47526405286300761348749644005446389667249588891433250597783563973733641402159;
[L3927]              KEY_ORACLE_HUB_ModuleKeys[this] := -52970734044049472272501028129170933675523569560193747072244451396901064028096;
[L3928]              KEY_MANAGER_ModuleKeys[this] := 49421493821642476244577507638140872659483089639323406415360070334623451553391;
[L3929]              KEY_RECOLLATERALISER_ModuleKeys[this] := 26184543223151444594394499265502566979851852556086732170002532024838889173839;
[L3930]              KEY_META_TOKEN_ModuleKeys[this] := -9745198946330301317986317763847616389614371175034941852806176381588484761694;
[L3931]              KEY_SAVINGS_MANAGER_ModuleKeys[this] := 8591427909938479646942232413824102134555250821688297939988064366145423088625;
[L3945]  RET         call ModuleKeys_ModuleKeys_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3946]  COND FALSE  !(revert)
[L4037]  RET         call ModuleKeys_ModuleKeys__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4006]              assume msgsender_MSG != null;
[L4007]              Balance[this] := 0;
[L4009]              __var_1 := null;
[L4010]  COND FALSE  !(!(_nexus_s102 != null))
[L4014]              assume DType[_nexus_s102] == INexus;
[L4015]              __var_2 := _nexus_s102;
[L4016]              nexus_Module[this] := __var_2;
[L4041]  RET         call Module_Module_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s102);
[L4042]  COND FALSE  !(revert)
[L5691]  RET         call Module_Module__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5692]  COND FALSE  !(revert)
[L5695]  CALL        call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5656]              assume msgsender_MSG != null;
[L5657]              Balance[this] := 0;
[L5659]  CALL        call __var_55 := FreshRefGenerator__success();
[L3887]              havoc newRef;
[L3888]              assume Alloc[newRef] == false;
[L3889]              Alloc[newRef] := true;
[L3890]              assume newRef != null;
[L5659]  RET         call __var_55 := FreshRefGenerator__success();
[L5660]  COND FALSE  !(revert)
[L5663]              _minters_GovernedMinterRole[this] := __var_55;
[L5695]  RET         call GovernedMinterRole_GovernedMinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s981);
[L5696]  COND FALSE  !(revert)
[L6207]  RET         call GovernedMinterRole_GovernedMinterRole__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193);
[L6208]  COND FALSE  !(revert)
[L6211]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L5917]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L5917]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5918]  COND FALSE  !(revert)
[L5921]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5892]              assume msgsender_MSG != null;
[L5893]              Balance[this] := 0;
[L5894]              _name_ERC20Detailed[this] := 283664046;
[L5895]              _symbol_ERC20Detailed[this] := 283664046;
[L5896]              _decimals_ERC20Detailed[this] := 0;
[L5898]              _name_ERC20Detailed[this] := name_s1102;
[L5899]              _symbol_ERC20Detailed[this] := symbol_s1102;
[L5900]              _decimals_ERC20Detailed[this] := decimals_s1102;
[L5921]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s1102, symbol_s1102, decimals_s1102);
[L5922]  COND FALSE  !(revert)
[L6211]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 245509545, 381154431, 18);
[L6212]  COND FALSE  !(revert)
[L6215]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6001]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L6001]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L6002]  COND FALSE  !(revert)
[L6005]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L6005]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6006]  COND FALSE  !(revert)
[L6009]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4497]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4247]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4232]              assume msgsender_MSG != null;
[L4233]              Balance[this] := 0;
[L4247]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4248]  COND FALSE  !(revert)
[L4497]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4498]  COND FALSE  !(revert)
[L4501]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4291]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4276]              assume msgsender_MSG != null;
[L4277]              Balance[this] := 0;
[L4291]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4292]  COND FALSE  !(revert)
[L4501]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4502]  COND FALSE  !(revert)
[L4505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4469]              assume msgsender_MSG != null;
[L4470]              Balance[this] := 0;
[L4471]              _balances_ERC20[this] := zeroRefintArr();
[L4472]              sum__balances0[this] := 0;
[L4473]              _allowances_ERC20[this] := zeroRefRefintArr();
[L4474]              sum__allowances1[this] := 0;
[L4475]              _totalSupply_ERC20[this] := 0;
[L4505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4506]  COND FALSE  !(revert)
[L6009]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L6010]  COND FALSE  !(revert)
[L6013]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5974]              assume msgsender_MSG != null;
[L5975]              Balance[this] := 0;
[L6013]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L6014]  COND FALSE  !(revert)
[L6215]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L6216]  COND FALSE  !(revert)
[L6219]  CALL        call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6137]              assume msgsender_MSG != null;
[L6138]              Balance[this] := 0;
[L6140]              __var_59 := 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6141]  COND TRUE   DType[this] == MetaToken
[L6142]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L5251]              __var_41 := null;
[L5252]  COND FALSE  !(!(account_s761 != null))
[L5256]  CALL        call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5256]  RET         call __var_42 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s761);
[L5257]  COND FALSE  !(revert)
[L5260]              _totalSupply_ERC20[this] := __var_42;
[L5261]  CALL        call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L4344]              c_s365 := (a_s365 + b_s365) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4345]  COND FALSE  !(!(c_s365 >= a_s365))
[L4349]              __ret_0_ := c_s365;
[L5261]  RET         call __var_43 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s761], amount_s761);
[L5262]  COND FALSE  !(revert)
[L5265]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s761];
[L5266]              _balances_ERC20[this][account_s761] := __var_43;
[L5267]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s761];
[L5268]              assert { :EventEmitted "Transfer_ERC20" } true;
[L6142]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _initialRecipient_s1193, 100000000 * (1000000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L6143]  COND FALSE  !(revert)
[L6219]  RET         call MetaToken_MetaToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L6220]  COND FALSE  !(revert)
[L2626]  RET         call MetaToken_MetaToken__success(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
[L2627]              assume !revert && gas >= 0;
[L9073]  RET         call MetaToken_MetaToken(this, msgsender_MSG, msgvalue_MSG, _nexus_s1193, _initialRecipient_s1193);
ERC20(49421493821642476244577507638140872659483089639323406415360070334623451553411).transfer~address~uint256.gas(3979002)({from : 49421493821642476244577507638140872659483089639323406415360070334623451553392, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s535) && msgsender_MSG != recipient_s535) && amount_s535 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s535] + amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s535 >= 0) && amount_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s535] >= 0) && _balances_ERC20[this][recipient_s535] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L980]               havoc __exception;
[L981]               revert := false;
[L982]   COND TRUE   __exception
[L983]               __tmp__Balance := Balance;
[L984]               __tmp__DType := DType;
[L985]               __tmp__Alloc := Alloc;
[L986]               __tmp__balance_ADDR := balance_ADDR;
[L987]               __tmp__M_Ref_int := M_Ref_int;
[L988]               __tmp__sum__balances0 := sum__balances0;
[L989]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L990]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L991]               __tmp__sum__allowances1 := sum__allowances1;
[L992]               __tmp__M_Ref_bool := M_Ref_bool;
[L993]               __tmp__sum := sum;
[L994]               __tmp__M_int_int := M_int_int;
[L995]               __tmp__Length := Length;
[L996]               __tmp__now := now;
[L997]               __tmp__KEY_GOVERNANCE_ModuleKeys := KEY_GOVERNANCE_ModuleKeys;
[L998]               __tmp__KEY_STAKING_ModuleKeys := KEY_STAKING_ModuleKeys;
[L999]               __tmp__KEY_PROXY_ADMIN_ModuleKeys := KEY_PROXY_ADMIN_ModuleKeys;
[L1000]              __tmp__KEY_ORACLE_HUB_ModuleKeys := KEY_ORACLE_HUB_ModuleKeys;
[L1001]              __tmp__KEY_MANAGER_ModuleKeys := KEY_MANAGER_ModuleKeys;
[L1002]              __tmp__KEY_RECOLLATERALISER_ModuleKeys := KEY_RECOLLATERALISER_ModuleKeys;
[L1003]              __tmp__KEY_META_TOKEN_ModuleKeys := KEY_META_TOKEN_ModuleKeys;
[L1004]              __tmp__KEY_SAVINGS_MANAGER_ModuleKeys := KEY_SAVINGS_MANAGER_ModuleKeys;
[L1005]              __tmp__nexus_Module := nexus_Module;
[L1006]              __tmp___balances_ERC20 := _balances_ERC20;
[L1007]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L1008]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L1009]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L1010]              __tmp___minters_GovernedMinterRole := _minters_GovernedMinterRole;
[L1011]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L1012]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L1013]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L1014]  CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L4538]  COND TRUE   __tmp__DType[this] == MetaToken
[L4539]  CALL        call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4255]              __ret_0_ := msgsender_MSG;
[L4539]  RET         call __var_26 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L4540]  COND FALSE  !(revert)
[L4556]  COND TRUE   __tmp__DType[this] == MetaToken
[L4557]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L5163]              __var_37 := null;
[L5164]  COND FALSE  !(!(sender_s718 != null))
[L5168]              __var_38 := null;
[L5169]  COND TRUE   !(recipient_s718 != null)
[L5170]              revert := true;
[L4557]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_26, recipient_s535, amount_s535);
[L4558]  COND TRUE   revert
[L1014]  RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);
[L1015]              assume revert || gas < 0;
[L8958]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s535, amount_s535);

Loop:
Module(49421493821642476244577507638140872659483089639323406415360070334623451553411).nexus.gas(3979001)({from : 49421493821642476244577507638140872659483089639323406415360070334623451553413});
[L390]               havoc __exception;
[L391]               revert := false;
[L392]   COND FALSE  !(__exception)
[L427]   CALL        call __ret_0_ := nexus_Module__success(this, msgsender_MSG, msgvalue_MSG);
[L4217]              __ret_0_ := nexus_Module[this];
[L427]   RET         call __ret_0_ := nexus_Module__success(this, msgsender_MSG, msgvalue_MSG);
[L428]               assume !revert && gas >= 0;
[L8939]  RET         call __ret_0_nexus := nexus_Module(this, msgsender_MSG, msgvalue_MSG);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
