This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:50:21,759 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:50:21,761 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:50:21,771 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:50:21,771 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:50:21,772 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:50:21,773 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:50:21,774 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:50:21,776 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:50:21,776 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:50:21,777 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:50:21,777 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:50:21,778 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:50:21,778 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:50:21,779 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:50:21,780 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:50:21,780 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:50:21,781 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:50:21,783 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:50:21,784 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:50:21,785 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:50:21,785 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:50:21,787 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:50:21,787 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:50:21,787 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:50:21,788 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:50:21,788 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:50:21,789 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:50:21,789 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:50:21,789 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:50:21,790 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:50:21,790 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:50:21,790 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:50:21,791 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:50:21,792 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:50:21,792 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:50:21,792 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:50:21,792 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:50:21,793 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:50:21,793 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:50:21,794 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:50:21,794 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:50:21,802 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:50:21,802 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:50:21,802 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:50:21,803 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:50:21,803 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:50:21,803 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:50:21,804 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:50:21,804 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:50:21,805 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:50:21,805 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:50:21,805 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:50:21,805 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:50:21,826 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:50:21,836 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:50:21,838 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:50:21,839 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:50:21,840 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:50:21,840 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl
[2020-11-25 12:50:21,840 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl'
[2020-11-25 12:50:21,920 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:50:21,921 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:50:21,921 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:50:21,921 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:50:21,921 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:50:21,937 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:21,939 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:21,968 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:21,969 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:21,995 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:22,004 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:22,012 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:22,022 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:50:22,023 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:50:22,023 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:50:22,025 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:50:22,031 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/1) ...
[2020-11-25 12:50:22,055 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COM.transferFrom(from, to, value), from == to && (value > _balances_COM[this][from] || value > _allowed_COM[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(COM.transferFrom)))
[2020-11-25 12:50:22,061 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COM.transferFrom(from, to, value), from == to && (value > _balances_COM[this][from] || value > _allowed_COM[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(COM.transferFrom)))
[2020-11-25 12:50:22,067 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COM.transferFrom(from, to, value), from == to && (value > _balances_COM[this][from] || value > _allowed_COM[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(COM.transferFrom)))
[2020-11-25 12:50:22,075 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( from_s702==to_s702 && ( value_s702>_balances_COM[this][from_s702] || value_s702>_allowed_COM[this][from_s702][msg.sender] ) ) && value_s702>=0 ) && value_s702<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][to_s702]>=0 ) && _balances_COM[this][to_s702]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_COM[this][from_s702]>=0 ) && _balances_COM[this][from_s702]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_COM[this][from_s702][msg.sender]>=0 ) && _allowed_COM[this][from_s702][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]],BinaryExpression[COMPGT,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[to_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[from_s702,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:50:22,079 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COM.transferFrom(from, to, value), from == to && (value > _balances_COM[this][from] || value > _allowed_COM[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][to] >= 0 && _balances_COM[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_COM[this][from] >= 0 &&  _balances_COM[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_COM[this][from][msg.sender] >= 0 && _allowed_COM[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(COM.transferFrom)))
[2020-11-25 12:50:22,080 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_COM0) ==> ( <>AP(fail_transferFrom_COM0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:50:22,088 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:22 PropertyContainer
[2020-11-25 12:50:22,088 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:50:22,088 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:50:22,089 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:50:22,089 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:50:22,089 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/2) ...
[2020-11-25 12:50:22,090 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:50:22,090 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:50:22,103 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:22" (2/2) ...
[2020-11-25 12:50:22,103 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:50:22,104 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:50:22,104 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:50:22,104 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:50:22,105 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/2) ...
[2020-11-25 12:50:22,156 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:50:22,156 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:50:22,156 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 12:50:22,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:50:22,157 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:50:22,157 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:50:22,158 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:50:22,158 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 12:50:22,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 12:50:22,159 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 12:50:22,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 12:50:22,159 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 12:50:22,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 12:50:22,159 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:50:22,159 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM
[2020-11-25 12:50:22,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM
[2020-11-25 12:50:22,159 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM
[2020-11-25 12:50:22,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM
[2020-11-25 12:50:22,159 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM
[2020-11-25 12:50:22,159 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM
[2020-11-25 12:50:22,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM
[2020-11-25 12:50:22,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM
[2020-11-25 12:50:22,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM
[2020-11-25 12:50:22,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM
[2020-11-25 12:50:22,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM
[2020-11-25 12:50:22,160 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:50:22,160 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__success
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM
[2020-11-25 12:50:22,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__success
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:50:22,161 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COM
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 12:50:22,162 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:50:22,163 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__success
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__success
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__success
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__fail
[2020-11-25 12:50:22,164 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__success
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__success
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__success
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__success
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__success
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__fail
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:50:22,165 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__success
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:50:22,166 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:50:22,167 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:50:22,167 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:50:22,167 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:50:22,168 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__fail
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__success
[2020-11-25 12:50:22,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__fail
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__success
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__fail
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__success
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__fail
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__success
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__fail
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__success
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__fail
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__success
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:50:22,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__success
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__fail
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__success
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:50:22,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__success
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__fail
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__success
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__success
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:50:22,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:50:22,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:50:22,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COM
[2020-11-25 12:50:22,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:50:22,174 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:50:22,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:50:22,454 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:22,454 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:22,799 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:50:22,800 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 12:50:22,801 INFO  L202        PluginConnector]: Adding new model COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:22 BoogieIcfgContainer
[2020-11-25 12:50:22,802 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:22" (2/2) ...
[2020-11-25 12:50:22,802 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:50:22,802 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4d56a73 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:22, skipping insertion in model container
[2020-11-25 12:50:22,802 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:50:22,802 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:50:22,802 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:50:22,804 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:50:22,804 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/3) ...
[2020-11-25 12:50:22,804 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2daabe24 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:22, skipping insertion in model container
[2020-11-25 12:50:22,804 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:22" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:50:22,841 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:22 NWAContainer
[2020-11-25 12:50:22,841 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:50:22,841 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:50:22,841 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:50:22,842 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:50:22,843 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:22" (3/4) ...
[2020-11-25 12:50:22,844 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3a6f1b45 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:22, skipping insertion in model container
[2020-11-25 12:50:22,844 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:22" (4/4) ...
[2020-11-25 12:50:22,847 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:50:22,850 INFO  L110   BuchiProductObserver]: Initial RCFG 1653 locations, 2145 edges
[2020-11-25 12:50:22,850 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:50:22,861 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:50:24,118 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:50:24,123 INFO  L110   BuchiProductObserver]: BuchiProgram size 3968 locations, 6926 edges
[2020-11-25 12:50:24,123 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:24 BoogieIcfgContainer
[2020-11-25 12:50:24,123 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:50:24,123 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:50:24,123 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:50:24,125 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:50:24,125 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:24" (1/1) ...
[2020-11-25 12:50:24,195 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:50:24,196 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:50:24,205 INFO  L313           BlockEncoder]: Initial Icfg 3968 locations, 6926 edges
[2020-11-25 12:50:24,206 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:50:24,206 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:50:24,206 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:50:24,207 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:50:24,218 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 11 locations because of local infeasibility
[2020-11-25 12:50:24,226 INFO  L70        RemoveSinkStates]: Removed 54 edges and 27 locations by removing sink states
[2020-11-25 12:50:24,238 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:50:24,242 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:50:24,246 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:50:24,246 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:50:24,251 INFO  L313           BlockEncoder]: Encoded RCFG 3900 locations, 6765 edges
[2020-11-25 12:50:24,252 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:50:24 BasicIcfg
[2020-11-25 12:50:24,252 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:50:24,252 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:50:24,252 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:50:24,254 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:50:24,254 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:24,254 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:21" (1/6) ...
[2020-11-25 12:50:24,257 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4d9bbfb7 and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:24, skipping insertion in model container
[2020-11-25 12:50:24,257 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:24,257 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:22" (2/6) ...
[2020-11-25 12:50:24,257 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4d9bbfb7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:24, skipping insertion in model container
[2020-11-25 12:50:24,257 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:24,257 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:22" (3/6) ...
[2020-11-25 12:50:24,258 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4d9bbfb7 and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:50:24, skipping insertion in model container
[2020-11-25 12:50:24,258 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:24,258 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:22" (4/6) ...
[2020-11-25 12:50:24,258 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4d9bbfb7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:24, skipping insertion in model container
[2020-11-25 12:50:24,258 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:24,258 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:24" (5/6) ...
[2020-11-25 12:50:24,259 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4d9bbfb7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:50:24, skipping insertion in model container
[2020-11-25 12:50:24,259 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:24,260 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:50:24" (6/6) ...
[2020-11-25 12:50:24,262 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_transferfrom-self-fail.bpl_BEv2
[2020-11-25 12:50:24,305 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:50:24,306 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:50:24,306 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:50:24,306 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:50:24,306 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:50:24,306 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:50:24,306 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:50:24,306 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:50:24,306 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:50:24,346 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3900 states.
[2020-11-25 12:50:24,407 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:24,407 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:24,407 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:24,417 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:24,417 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:24,417 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:50:24,417 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3900 states.
[2020-11-25 12:50:24,442 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:24,442 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:24,442 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:24,444 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:24,444 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_COM0 := false;
[L2]                 call_transferFrom_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND TRUE   revert
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND TRUE   choice == 15
[L4181]              gas := gas - 21000;
[L4182]  COND FALSE  !(gas >= 0)
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:50:24,462 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:24,462 INFO  L82        PathProgramCache]: Analyzing trace with hash -285451090, now seen corresponding path program 1 times
[2020-11-25 12:50:24,467 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:24,492 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:24,533 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:24,535 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:24,535 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:50:24,539 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:24,728 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:50:24,729 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:50:24,730 INFO  L87              Difference]: Start difference. First operand 3900 states. Second operand 3 states.
[2020-11-25 12:50:24,960 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:24,960 INFO  L93              Difference]: Finished difference Result 2786 states and 3199 transitions.
[2020-11-25 12:50:24,960 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:50:24,962 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2786 states and 3199 transitions.
[2020-11-25 12:50:24,981 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:25,008 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2786 states to 2782 states and 3191 transitions.
[2020-11-25 12:50:25,009 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 12:50:25,011 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 594
[2020-11-25 12:50:25,011 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2782 states and 3191 transitions.
[2020-11-25 12:50:25,020 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:25,020 INFO  L728         BuchiCegarLoop]: Abstraction has 2782 states and 3191 transitions.
[2020-11-25 12:50:25,039 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2782 states and 3191 transitions.
[2020-11-25 12:50:25,088 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2782 to 2782.
[2020-11-25 12:50:25,089 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2782 states.
[2020-11-25 12:50:25,095 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2782 states to 2782 states and 3191 transitions.
[2020-11-25 12:50:25,096 INFO  L751         BuchiCegarLoop]: Abstraction has 2782 states and 3191 transitions.
[2020-11-25 12:50:25,096 INFO  L631         BuchiCegarLoop]: Abstraction has 2782 states and 3191 transitions.
[2020-11-25 12:50:25,096 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:50:25,096 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2782 states and 3191 transitions.
[2020-11-25 12:50:25,105 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:25,105 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:25,105 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:25,107 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:25,108 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_COM0 := false;
[L2]                 call_transferFrom_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND TRUE   revert
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2658]              revert := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2658]              revert := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:50:25,112 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:25,112 INFO  L82        PathProgramCache]: Analyzing trace with hash 1935479590, now seen corresponding path program 1 times
[2020-11-25 12:50:25,113 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:25,126 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:25,148 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:25,149 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:25,149 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:50:25,150 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:25,150 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:50:25,150 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:50:25,151 INFO  L87              Difference]: Start difference. First operand 2782 states and 3191 transitions. cyclomatic complexity: 411 Second operand 3 states.
[2020-11-25 12:50:25,216 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:25,216 INFO  L93              Difference]: Finished difference Result 3404 states and 3832 transitions.
[2020-11-25 12:50:25,217 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:50:25,217 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3404 states and 3832 transitions.
[2020-11-25 12:50:25,229 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:25,244 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3404 states to 3404 states and 3832 transitions.
[2020-11-25 12:50:25,244 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 762
[2020-11-25 12:50:25,245 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 762
[2020-11-25 12:50:25,245 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3404 states and 3832 transitions.
[2020-11-25 12:50:25,250 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:25,250 INFO  L728         BuchiCegarLoop]: Abstraction has 3404 states and 3832 transitions.
[2020-11-25 12:50:25,253 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3404 states and 3832 transitions.
[2020-11-25 12:50:25,280 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3404 to 3022.
[2020-11-25 12:50:25,280 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3022 states.
[2020-11-25 12:50:25,284 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3022 states to 3022 states and 3373 transitions.
[2020-11-25 12:50:25,284 INFO  L751         BuchiCegarLoop]: Abstraction has 3022 states and 3373 transitions.
[2020-11-25 12:50:25,284 INFO  L631         BuchiCegarLoop]: Abstraction has 3022 states and 3373 transitions.
[2020-11-25 12:50:25,284 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:50:25,284 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3022 states and 3373 transitions.
[2020-11-25 12:50:25,290 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:25,290 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:25,290 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:25,291 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:25,291 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_COM0 := false;
[L2]                 call_transferFrom_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND TRUE   !(amount_s1039 != 0)
[L3010]              revert := true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND TRUE   revert
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2658]              revert := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2658]              revert := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:50:25,295 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:25,295 INFO  L82        PathProgramCache]: Analyzing trace with hash -1126116533, now seen corresponding path program 1 times
[2020-11-25 12:50:25,295 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:25,305 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:25,349 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:50:25,350 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:25,350 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:50:25,350 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:25,350 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:50:25,350 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:50:25,350 INFO  L87              Difference]: Start difference. First operand 3022 states and 3373 transitions. cyclomatic complexity: 353 Second operand 4 states.
[2020-11-25 12:50:25,388 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:25,388 INFO  L93              Difference]: Finished difference Result 3016 states and 3364 transitions.
[2020-11-25 12:50:25,389 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:50:25,389 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3016 states and 3364 transitions.
[2020-11-25 12:50:25,396 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:25,404 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3016 states to 3013 states and 3361 transitions.
[2020-11-25 12:50:25,404 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 692
[2020-11-25 12:50:25,405 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 692
[2020-11-25 12:50:25,405 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3013 states and 3361 transitions.
[2020-11-25 12:50:25,407 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:25,407 INFO  L728         BuchiCegarLoop]: Abstraction has 3013 states and 3361 transitions.
[2020-11-25 12:50:25,410 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3013 states and 3361 transitions.
[2020-11-25 12:50:25,431 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3013 to 3013.
[2020-11-25 12:50:25,431 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3013 states.
[2020-11-25 12:50:25,434 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3013 states to 3013 states and 3361 transitions.
[2020-11-25 12:50:25,434 INFO  L751         BuchiCegarLoop]: Abstraction has 3013 states and 3361 transitions.
[2020-11-25 12:50:25,434 INFO  L631         BuchiCegarLoop]: Abstraction has 3013 states and 3361 transitions.
[2020-11-25 12:50:25,434 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:50:25,434 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3013 states and 3361 transitions.
[2020-11-25 12:50:25,438 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:25,438 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:25,438 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:25,439 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:25,439 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_COM0 := false;
[L2]                 call_transferFrom_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND FALSE  !(!(amount_s1039 != 0))
[L3013]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L3013]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3014]  COND FALSE  !(revert)
[L3017]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3018]              _balances_COM[this][account_s1039] := __var_27;
[L3019]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3020]              assert { :EventEmitted "Transfer_COM" } true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND FALSE  !(revert)
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2658]              revert := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND TRUE   !(value_s702 <= _balances_COM[this][from_s702])
[L2658]              revert := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:50:25,442 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:25,442 INFO  L82        PathProgramCache]: Analyzing trace with hash 1340591311, now seen corresponding path program 1 times
[2020-11-25 12:50:25,443 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:25,453 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:25,484 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:50:25,485 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:25,485 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:50:25,485 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:25,486 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:50:25,486 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:50:25,486 INFO  L87              Difference]: Start difference. First operand 3013 states and 3361 transitions. cyclomatic complexity: 350 Second operand 3 states.
[2020-11-25 12:50:25,534 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:25,534 INFO  L93              Difference]: Finished difference Result 3391 states and 3777 transitions.
[2020-11-25 12:50:25,535 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:50:25,536 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3391 states and 3777 transitions.
[2020-11-25 12:50:25,546 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:25,558 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3391 states to 3224 states and 3572 transitions.
[2020-11-25 12:50:25,558 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 687
[2020-11-25 12:50:25,558 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 687
[2020-11-25 12:50:25,559 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3224 states and 3572 transitions.
[2020-11-25 12:50:25,561 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:25,562 INFO  L728         BuchiCegarLoop]: Abstraction has 3224 states and 3572 transitions.
[2020-11-25 12:50:25,566 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3224 states and 3572 transitions.
[2020-11-25 12:50:25,595 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3224 to 2910.
[2020-11-25 12:50:25,595 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2910 states.
[2020-11-25 12:50:25,600 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2910 states to 2910 states and 3181 transitions.
[2020-11-25 12:50:25,600 INFO  L751         BuchiCegarLoop]: Abstraction has 2910 states and 3181 transitions.
[2020-11-25 12:50:25,601 INFO  L631         BuchiCegarLoop]: Abstraction has 2910 states and 3181 transitions.
[2020-11-25 12:50:25,601 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:50:25,601 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2910 states and 3181 transitions.
[2020-11-25 12:50:25,608 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:25,608 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:25,608 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:25,610 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:25,611 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_COM0 := false;
[L2]                 call_transferFrom_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND FALSE  !(!(amount_s1039 != 0))
[L3013]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L3013]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3014]  COND FALSE  !(revert)
[L3017]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3018]              _balances_COM[this][account_s1039] := __var_27;
[L3019]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3020]              assert { :EventEmitted "Transfer_COM" } true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND FALSE  !(revert)
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND FALSE  !(!(value_s702 <= _balances_COM[this][from_s702]))
[L2661]  COND FALSE  !(!(value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]))
[L2665]              __var_13 := null;
[L2666]  COND FALSE  !(!(to_s702 != null))
[L2670]  COND TRUE   value_s702 < noFee_COM[this]
[L2671]  CALL        call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2867]  COND FALSE  !(!(value_s906 <= _balances_COM[this][from_s906]))
[L2871]  COND FALSE  !(!(value_s906 <= _allowed_COM[this][from_s906][msgsender_MSG]))
[L2875]              __var_19 := null;
[L2876]  COND FALSE  !(!(to_s906 != null))
[L2880]  COND FALSE  !(!(value_s906 < noFee_COM[this]))
[L2884]  CALL        call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2884]  RET         call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L2885]  COND FALSE  !(revert)
[L2888]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][from_s906];
[L2889]              _balances_COM[this][from_s906] := __var_20;
[L2890]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][from_s906];
[L2891]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L2891]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2892]  COND FALSE  !(revert)
[L2895]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s906];
[L2896]              _balances_COM[this][to_s906] := __var_21;
[L2897]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s906];
[L2898]  CALL        call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2898]  RET         call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L2899]  COND FALSE  !(revert)
[L2902]              sum__allowed1[from_s906] := sum__allowed1[from_s906] - _allowed_COM[this][from_s906][msgsender_MSG];
[L2903]              _allowed_COM[this][from_s906][msgsender_MSG] := __var_22;
[L2904]              sum__allowed1[from_s906] := sum__allowed1[from_s906] + _allowed_COM[this][from_s906][msgsender_MSG];
[L2905]              assert { :EventEmitted "Transfer_COM" } true;
[L2671]  RET         call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2672]  COND FALSE  !(revert)
[L2681]              __ret_0_ := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND FALSE  !(!(value_s702 <= _balances_COM[this][from_s702]))
[L2661]  COND FALSE  !(!(value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]))
[L2665]              __var_13 := null;
[L2666]  COND FALSE  !(!(to_s702 != null))
[L2670]  COND TRUE   value_s702 < noFee_COM[this]
[L2671]  CALL        call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2867]  COND FALSE  !(!(value_s906 <= _balances_COM[this][from_s906]))
[L2871]  COND FALSE  !(!(value_s906 <= _allowed_COM[this][from_s906][msgsender_MSG]))
[L2875]              __var_19 := null;
[L2876]  COND FALSE  !(!(to_s906 != null))
[L2880]  COND FALSE  !(!(value_s906 < noFee_COM[this]))
[L2884]  CALL        call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2884]  RET         call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L2885]  COND FALSE  !(revert)
[L2888]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][from_s906];
[L2889]              _balances_COM[this][from_s906] := __var_20;
[L2890]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][from_s906];
[L2891]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L2891]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2892]  COND FALSE  !(revert)
[L2895]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s906];
[L2896]              _balances_COM[this][to_s906] := __var_21;
[L2897]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s906];
[L2898]  CALL        call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2898]  RET         call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L2899]  COND FALSE  !(revert)
[L2902]              sum__allowed1[from_s906] := sum__allowed1[from_s906] - _allowed_COM[this][from_s906][msgsender_MSG];
[L2903]              _allowed_COM[this][from_s906][msgsender_MSG] := __var_22;
[L2904]              sum__allowed1[from_s906] := sum__allowed1[from_s906] + _allowed_COM[this][from_s906][msgsender_MSG];
[L2905]              assert { :EventEmitted "Transfer_COM" } true;
[L2671]  RET         call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2672]  COND FALSE  !(revert)
[L2681]              __ret_0_ := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:50:25,614 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:25,614 INFO  L82        PathProgramCache]: Analyzing trace with hash -365347777, now seen corresponding path program 1 times
[2020-11-25 12:50:25,615 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:25,636 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:25,783 INFO  L134       CoverageAnalysis]: Checked inductivity of 14 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 14 trivial. 0 not checked.
[2020-11-25 12:50:25,783 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:25,783 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 12:50:25,784 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:25,784 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 12:50:25,784 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=109, Unknown=0, NotChecked=0, Total=132
[2020-11-25 12:50:25,784 INFO  L87              Difference]: Start difference. First operand 2910 states and 3181 transitions. cyclomatic complexity: 273 Second operand 12 states.
[2020-11-25 12:50:27,091 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:27,091 INFO  L93              Difference]: Finished difference Result 3007 states and 3290 transitions.
[2020-11-25 12:50:27,091 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 12:50:27,091 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3007 states and 3290 transitions.
[2020-11-25 12:50:27,097 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:27,105 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3007 states to 3007 states and 3290 transitions.
[2020-11-25 12:50:27,105 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 667
[2020-11-25 12:50:27,106 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 667
[2020-11-25 12:50:27,106 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3007 states and 3290 transitions.
[2020-11-25 12:50:27,108 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:27,108 INFO  L728         BuchiCegarLoop]: Abstraction has 3007 states and 3290 transitions.
[2020-11-25 12:50:27,110 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3007 states and 3290 transitions.
[2020-11-25 12:50:27,129 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3007 to 2816.
[2020-11-25 12:50:27,129 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2816 states.
[2020-11-25 12:50:27,131 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2816 states to 2816 states and 3060 transitions.
[2020-11-25 12:50:27,131 INFO  L751         BuchiCegarLoop]: Abstraction has 2816 states and 3060 transitions.
[2020-11-25 12:50:27,131 INFO  L631         BuchiCegarLoop]: Abstraction has 2816 states and 3060 transitions.
[2020-11-25 12:50:27,131 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 12:50:27,131 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2816 states and 3060 transitions.
[2020-11-25 12:50:27,134 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:27,135 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:27,135 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:27,137 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:27,137 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_COM0 := false;
[L2]                 call_transferFrom_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND FALSE  !(!(amount_s1039 != 0))
[L3013]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L3013]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3014]  COND FALSE  !(revert)
[L3017]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3018]              _balances_COM[this][account_s1039] := __var_27;
[L3019]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3020]              assert { :EventEmitted "Transfer_COM" } true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND FALSE  !(revert)
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND TRUE   choice == 11
[L4206]              gas := gas - 21000;
[L4207]  COND TRUE   gas >= 0
[L4208]              assume value_s643 >= 0 && value_s643 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4209]              assume msgvalue_MSG == 0;
[L4210]  CALL        call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L985]               havoc __exception;
[L986]               revert := false;
[L987]   COND FALSE  !(__exception)
[L1015]  CALL        call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L2610]              __var_12 := null;
[L2611]  COND FALSE  !(!(spender_s643 != null))
[L2615]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_COM[this][msgsender_MSG][spender_s643];
[L2616]              _allowed_COM[this][msgsender_MSG][spender_s643] := value_s643;
[L2617]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_COM[this][msgsender_MSG][spender_s643];
[L2618]              assert { :EventEmitted "Approval_COM" } true;
[L2619]              __ret_0_ := true;
[L1015]  RET         call __ret_0_ := approve~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L1016]              assume !revert && gas >= 0;
[L4210]  RET         call __ret_0_approve := approve~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, spender_s643, value_s643);
[L4296]  RET         call CorralChoice_COM(this);
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND FALSE  !(!(value_s702 <= _balances_COM[this][from_s702]))
[L2661]  COND FALSE  !(!(value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]))
[L2665]              __var_13 := null;
[L2666]  COND FALSE  !(!(to_s702 != null))
[L2670]  COND TRUE   value_s702 < noFee_COM[this]
[L2671]  CALL        call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2867]  COND FALSE  !(!(value_s906 <= _balances_COM[this][from_s906]))
[L2871]  COND FALSE  !(!(value_s906 <= _allowed_COM[this][from_s906][msgsender_MSG]))
[L2875]              __var_19 := null;
[L2876]  COND FALSE  !(!(to_s906 != null))
[L2880]  COND FALSE  !(!(value_s906 < noFee_COM[this]))
[L2884]  CALL        call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2884]  RET         call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L2885]  COND FALSE  !(revert)
[L2888]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][from_s906];
[L2889]              _balances_COM[this][from_s906] := __var_20;
[L2890]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][from_s906];
[L2891]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L2891]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2892]  COND FALSE  !(revert)
[L2895]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s906];
[L2896]              _balances_COM[this][to_s906] := __var_21;
[L2897]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s906];
[L2898]  CALL        call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2898]  RET         call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L2899]  COND FALSE  !(revert)
[L2902]              sum__allowed1[from_s906] := sum__allowed1[from_s906] - _allowed_COM[this][from_s906][msgsender_MSG];
[L2903]              _allowed_COM[this][from_s906][msgsender_MSG] := __var_22;
[L2904]              sum__allowed1[from_s906] := sum__allowed1[from_s906] + _allowed_COM[this][from_s906][msgsender_MSG];
[L2905]              assert { :EventEmitted "Transfer_COM" } true;
[L2671]  RET         call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2672]  COND FALSE  !(revert)
[L2681]              __ret_0_ := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND FALSE  !(choice == 14)
[L4192]  COND FALSE  !(choice == 13)
[L4198]  COND FALSE  !(choice == 12)
[L4205]  COND FALSE  !(choice == 11)
[L4212]  COND TRUE   choice == 10
[L4213]              gas := gas - 21000;
[L4214]  COND TRUE   gas >= 0
[L4215]              assume value_s702 >= 0 && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4216]              assume msgvalue_MSG == 0;
[L4217]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((from_s702 == to_s702 && (value_s702 > _balances_COM[this][from_s702] || value_s702 > _allowed_COM[this][from_s702][msgsender_MSG])) && value_s702 >= 0) && value_s702 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][to_s702] >= 0) && _balances_COM[this][to_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_COM[this][from_s702] >= 0) && _balances_COM[this][from_s702] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_COM[this][from_s702][msgsender_MSG] >= 0) && _allowed_COM[this][from_s702][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_COM0 := true;
[L2]                 call_transferFrom_COM0 := false;
[L2]                 revert := revert_hold;
[L1054]              havoc __exception;
[L1055]              revert := false;
[L1056]  COND FALSE  !(__exception)
[L1084]  CALL        call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2657]  COND FALSE  !(!(value_s702 <= _balances_COM[this][from_s702]))
[L2661]  COND FALSE  !(!(value_s702 <= _allowed_COM[this][from_s702][msgsender_MSG]))
[L2665]              __var_13 := null;
[L2666]  COND FALSE  !(!(to_s702 != null))
[L2670]  COND TRUE   value_s702 < noFee_COM[this]
[L2671]  CALL        call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2867]  COND FALSE  !(!(value_s906 <= _balances_COM[this][from_s906]))
[L2871]  COND FALSE  !(!(value_s906 <= _allowed_COM[this][from_s906][msgsender_MSG]))
[L2875]              __var_19 := null;
[L2876]  COND FALSE  !(!(to_s906 != null))
[L2880]  COND FALSE  !(!(value_s906 < noFee_COM[this]))
[L2884]  CALL        call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2884]  RET         call __var_20 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][from_s906], value_s906);
[L2885]  COND FALSE  !(revert)
[L2888]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][from_s906];
[L2889]              _balances_COM[this][from_s906] := __var_20;
[L2890]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][from_s906];
[L2891]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L2891]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][to_s906], value_s906);
[L2892]  COND FALSE  !(revert)
[L2895]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][to_s906];
[L2896]              _balances_COM[this][to_s906] := __var_21;
[L2897]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][to_s906];
[L2898]  CALL        call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L1991]              assert b_s139 <= a_s139;
[L1992]              __ret_0_ := (a_s139 - b_s139) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2898]  RET         call __var_22 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_COM[this][from_s906][msgsender_MSG], value_s906);
[L2899]  COND FALSE  !(revert)
[L2902]              sum__allowed1[from_s906] := sum__allowed1[from_s906] - _allowed_COM[this][from_s906][msgsender_MSG];
[L2903]              _allowed_COM[this][from_s906][msgsender_MSG] := __var_22;
[L2904]              sum__allowed1[from_s906] := sum__allowed1[from_s906] + _allowed_COM[this][from_s906][msgsender_MSG];
[L2905]              assert { :EventEmitted "Transfer_COM" } true;
[L2671]  RET         call _transferFromBurnNo~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L2672]  COND FALSE  !(revert)
[L2681]              __ret_0_ := true;
[L1084]  RET         call __ret_0_ := transferFrom~address~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L1085]              assume !revert && gas >= 0;
[L4217]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_COM(this, msgsender_MSG, msgvalue_MSG, from_s702, to_s702, value_s702);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:50:27,141 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:27,142 INFO  L82        PathProgramCache]: Analyzing trace with hash 1564621214, now seen corresponding path program 1 times
[2020-11-25 12:50:27,142 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:27,170 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:27,244 INFO  L134       CoverageAnalysis]: Checked inductivity of 70 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 70 trivial. 0 not checked.
[2020-11-25 12:50:27,244 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:27,244 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 12:50:27,244 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:27,245 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 12:50:27,245 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=27, Unknown=0, NotChecked=0, Total=42
[2020-11-25 12:50:27,245 INFO  L87              Difference]: Start difference. First operand 2816 states and 3060 transitions. cyclomatic complexity: 247 Second operand 7 states.
[2020-11-25 12:50:27,815 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:27,815 INFO  L93              Difference]: Finished difference Result 1767 states and 1918 transitions.
[2020-11-25 12:50:27,815 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:50:27,816 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1767 states and 1918 transitions.
[2020-11-25 12:50:27,821 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:50:27,821 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1767 states to 0 states and 0 transitions.
[2020-11-25 12:50:27,821 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 12:50:27,821 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 12:50:27,821 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 12:50:27,822 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:27,822 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:27,822 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:27,822 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:27,822 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 12:50:27,822 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 12:50:27,822 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:50:27,822 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 12:50:27,830 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:50:27 BasicIcfg
[2020-11-25 12:50:27,830 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:50:27,830 INFO  L168              Benchmark]: Toolchain (without parser) took 5910.09 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 586.7 MB). Free memory was 940.6 MB in the beginning and 1.4 GB in the end (delta: -496.0 MB). Peak memory consumption was 90.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,832 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,832 INFO  L168              Benchmark]: Boogie Preprocessor took 101.66 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,833 INFO  L168              Benchmark]: UtopiaSpecLang took 65.19 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,833 INFO  L168              Benchmark]: Boogie Printer took 15.10 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,833 INFO  L168              Benchmark]: RCFGBuilder took 698.33 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 817.1 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,834 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.97 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 808.1 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,834 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1281.73 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 213.4 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -252.1 MB). Peak memory consumption was 198.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,835 INFO  L168              Benchmark]: BlockEncodingV2 took 128.53 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 996.3 MB in the end (delta: 63.9 MB). Peak memory consumption was 63.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,835 INFO  L168              Benchmark]: BuchiAutomizer took 3577.63 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 373.3 MB). Free memory was 996.3 MB in the beginning and 1.4 GB in the end (delta: -440.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:27,839 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3968 locations, 6926 edges
  - StatisticsResult: Encoded RCFG
    3900 locations, 6765 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 101.66 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.19 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.10 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 698.33 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 817.1 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.97 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 808.1 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1281.73 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 213.4 MB). Free memory was 808.1 MB in the beginning and 1.1 GB in the end (delta: -252.1 MB). Peak memory consumption was 198.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 128.53 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 996.3 MB in the end (delta: 63.9 MB). Peak memory consumption was 63.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3577.63 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 373.3 MB). Free memory was 996.3 MB in the beginning and 1.4 GB in the end (delta: -440.3 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1653 locations, 2145 edges
  - StatisticsResult: BuchiProgram size
    3968 locations, 6926 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 12 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.5s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 887 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3022 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 17416 SDtfs, 10524 SDslu, 19424 SDs, 0 SdLazy, 24176 SolverSat, 2145 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_COM0) ==> ( <>(fail_transferFrom_COM0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
