This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:53:03,987 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:53:03,988 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:53:03,998 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:53:03,999 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:53:03,999 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:53:04,000 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:53:04,002 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:53:04,003 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:53:04,004 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:53:04,005 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:53:04,005 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:53:04,005 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:53:04,006 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:53:04,007 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:53:04,008 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:53:04,009 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:53:04,010 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:53:04,011 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:53:04,012 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:53:04,013 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:53:04,014 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:53:04,015 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:53:04,015 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:53:04,016 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:53:04,016 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:53:04,016 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:53:04,017 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:53:04,017 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:53:04,017 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:53:04,018 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:53:04,018 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:53:04,019 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:53:04,020 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:53:04,020 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:53:04,021 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:53:04,021 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:53:04,021 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:53:04,021 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:53:04,022 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:53:04,022 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:53:04,023 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:53:04,031 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:53:04,031 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:53:04,032 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:53:04,032 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:53:04,032 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:53:04,032 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:53:04,033 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:53:04,033 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:53:04,033 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:53:04,034 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:53:04,034 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:53:04,059 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:53:04,070 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:53:04,073 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:53:04,074 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:53:04,075 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:53:04,075 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl
[2020-11-25 05:53:04,076 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl'
[2020-11-25 05:53:04,161 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:53:04,163 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:53:04,163 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:53:04,163 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:53:04,163 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:53:04,180 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,182 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,211 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,212 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,229 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,240 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,246 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,256 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:53:04,256 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:53:04,257 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:53:04,259 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:53:04,262 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/1) ...
[2020-11-25 05:53:04,282 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:04,288 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:04,296 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:04,303 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s140 ) && msg.sender!=recipient_s140 ) && amount_s140<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s140] + amount_s140 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s140>=0 ) && amount_s140<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s140]>=0 ) && _balances_ERC20[this][recipient_s140]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:53:04,306 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s140 ) ) && _balances_ERC20[this][recipient_s140]==( ( old(_balances_ERC20[this][recipient_s140]) ) + amount_s140 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _total_StrikeFarm[this]==( old(_total_StrikeFarm[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s140,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_total_StrikeFarm,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-25 05:53:04,312 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 05:53:04,312 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:53:04,321 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:04 PropertyContainer
[2020-11-25 05:53:04,321 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:53:04,321 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:53:04,321 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:53:04,321 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:53:04,322 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/2) ...
[2020-11-25 05:53:04,322 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:53:04,323 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:53:04,336 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:04" (2/2) ...
[2020-11-25 05:53:04,336 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:53:04,337 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:53:04,337 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:53:04,337 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:53:04,338 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/2) ...
[2020-11-25 05:53:04,390 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 05:53:04,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:53:04,391 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 05:53:04,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 05:53:04,392 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 05:53:04,392 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:53:04,392 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:53:04,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:53:04,392 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:53:04,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 05:53:04,392 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:53:04,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 05:53:04,392 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 05:53:04,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:53:04,393 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:53:04,394 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:53:04,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:53:04,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:53:04,395 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:53:04,396 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StrikeFarm
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 05:53:04,397 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:53:04,398 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:53:04,399 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 05:53:04,400 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,401 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:53:04,402 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:53:04,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:53:04,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:53:04,402 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 05:53:04,403 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 05:53:04,404 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:04,405 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 05:53:04,406 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:53:04,407 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 05:53:04,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__fail
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm_NoBaseCtor__success
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__fail
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure StrikeFarm_StrikeFarm__success
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:53:04,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 05:53:04,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:53:04,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:53:04,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StrikeFarm
[2020-11-25 05:53:04,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:53:04,411 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:53:04,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:53:04,630 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:04,631 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:04,632 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:04,904 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:53:05,128 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:53:05,128 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 05:53:05,130 INFO  L202        PluginConnector]: Adding new model StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:05 BoogieIcfgContainer
[2020-11-25 05:53:05,130 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:04" (2/2) ...
[2020-11-25 05:53:05,130 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:53:05,131 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2d35ccdc and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:05, skipping insertion in model container
[2020-11-25 05:53:05,131 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:53:05,131 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:53:05,131 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:53:05,132 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:53:05,133 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/3) ...
[2020-11-25 05:53:05,133 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@75741f7e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:05, skipping insertion in model container
[2020-11-25 05:53:05,133 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:04" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:53:05,176 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:05 NWAContainer
[2020-11-25 05:53:05,176 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:53:05,176 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:53:05,177 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:53:05,177 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:53:05,178 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:05" (3/4) ...
[2020-11-25 05:53:05,179 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6a90f83b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:05, skipping insertion in model container
[2020-11-25 05:53:05,179 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:05" (4/4) ...
[2020-11-25 05:53:05,183 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:53:05,190 INFO  L110   BuchiProductObserver]: Initial RCFG 1476 locations, 2078 edges
[2020-11-25 05:53:05,190 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:53:05,204 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:53:06,435 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:53:06,440 INFO  L110   BuchiProductObserver]: BuchiProgram size 3734 locations, 6788 edges
[2020-11-25 05:53:06,440 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:06 BoogieIcfgContainer
[2020-11-25 05:53:06,440 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:53:06,441 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:53:06,441 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:53:06,442 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:53:06,443 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:06" (1/1) ...
[2020-11-25 05:53:06,507 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:53:06,510 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_25 := div~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s626, b_s626, -1445521449);
[2020-11-25 05:53:06,521 INFO  L313           BlockEncoder]: Initial Icfg 3734 locations, 6788 edges
[2020-11-25 05:53:06,521 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:53:06,522 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:53:06,522 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:53:06,522 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:53:06,534 INFO  L70    emoveInfeasibleEdges]: Removed 150 edges and 15 locations because of local infeasibility
[2020-11-25 05:53:06,541 INFO  L70        RemoveSinkStates]: Removed 98 edges and 65 locations by removing sink states
[2020-11-25 05:53:06,554 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:53:06,558 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:53:06,561 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:53:06,562 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:53:06,566 INFO  L313           BlockEncoder]: Encoded RCFG 3634 locations, 6511 edges
[2020-11-25 05:53:06,567 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:53:06 BasicIcfg
[2020-11-25 05:53:06,567 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:53:06,567 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:53:06,567 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:53:06,569 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:53:06,570 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:06,570 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:53:04" (1/6) ...
[2020-11-25 05:53:06,571 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@162ef05a and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:53:06, skipping insertion in model container
[2020-11-25 05:53:06,571 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:06,572 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:53:04" (2/6) ...
[2020-11-25 05:53:06,572 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@162ef05a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:53:06, skipping insertion in model container
[2020-11-25 05:53:06,572 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:06,572 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:53:05" (3/6) ...
[2020-11-25 05:53:06,572 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@162ef05a and model type StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:53:06, skipping insertion in model container
[2020-11-25 05:53:06,572 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:06,572 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:53:05" (4/6) ...
[2020-11-25 05:53:06,572 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@162ef05a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:53:06, skipping insertion in model container
[2020-11-25 05:53:06,572 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:06,572 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:53:06" (5/6) ...
[2020-11-25 05:53:06,572 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@162ef05a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:53:06, skipping insertion in model container
[2020-11-25 05:53:06,572 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:53:06,572 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:53:06" (6/6) ...
[2020-11-25 05:53:06,573 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StrikeFarm_0x8a309E9fb32055CB8ad3524C6e53A6C3480e66B7_transfer-normal.bpl_BEv2
[2020-11-25 05:53:06,608 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:53:06,609 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:53:06,609 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:53:06,609 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:53:06,609 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:53:06,609 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:53:06,609 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:53:06,609 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:53:06,609 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:53:06,639 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3634 states.
[2020-11-25 05:53:06,690 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:06,690 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:06,690 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:06,697 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:06,697 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:06,697 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:53:06,698 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3634 states.
[2020-11-25 05:53:06,713 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:06,713 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:06,713 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:06,715 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:06,715 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND TRUE   revert
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND TRUE   choice == 11
[L4031]              gas := gas - 21000;
[L4032]  COND FALSE  !(gas >= 0)
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:06,728 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:06,728 INFO  L82        PathProgramCache]: Analyzing trace with hash -1932665478, now seen corresponding path program 1 times
[2020-11-25 05:53:06,733 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:06,758 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:53:06,801 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:53:06,802 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:53:06,802 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:53:06,971 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:53:06,979 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:53:06,980 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:53:06,981 INFO  L87              Difference]: Start difference. First operand 3634 states. Second operand 4 states.
[2020-11-25 05:53:07,349 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:53:07,350 INFO  L93              Difference]: Finished difference Result 2194 states and 2637 transitions.
[2020-11-25 05:53:07,350 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:53:07,352 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2194 states and 2637 transitions.
[2020-11-25 05:53:07,368 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:07,390 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2194 states to 2194 states and 2637 transitions.
[2020-11-25 05:53:07,391 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:53:07,392 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 477
[2020-11-25 05:53:07,393 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2194 states and 2637 transitions.
[2020-11-25 05:53:07,401 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:53:07,401 INFO  L728         BuchiCegarLoop]: Abstraction has 2194 states and 2637 transitions.
[2020-11-25 05:53:07,419 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2194 states and 2637 transitions.
[2020-11-25 05:53:07,466 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2194 to 2194.
[2020-11-25 05:53:07,467 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2194 states.
[2020-11-25 05:53:07,473 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2194 states to 2194 states and 2637 transitions.
[2020-11-25 05:53:07,474 INFO  L751         BuchiCegarLoop]: Abstraction has 2194 states and 2637 transitions.
[2020-11-25 05:53:07,474 INFO  L631         BuchiCegarLoop]: Abstraction has 2194 states and 2637 transitions.
[2020-11-25 05:53:07,474 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:53:07,474 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2194 states and 2637 transitions.
[2020-11-25 05:53:07,482 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:07,482 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:07,482 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:07,484 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:07,484 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND TRUE   revert
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1724]  COND TRUE   DType[this] == StrikeFarm
[L1725]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1725]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]  COND TRUE   revert
[L381]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L382]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1724]  COND TRUE   DType[this] == StrikeFarm
[L1725]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1725]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]  COND TRUE   revert
[L381]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L382]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:07,489 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:07,489 INFO  L82        PathProgramCache]: Analyzing trace with hash 1012725291, now seen corresponding path program 1 times
[2020-11-25 05:53:07,491 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:07,501 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:53:07,525 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:53:07,526 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:53:07,526 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:53:07,528 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:53:07,528 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:53:07,528 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:53:07,528 INFO  L87              Difference]: Start difference. First operand 2194 states and 2637 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 05:53:07,606 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:53:07,606 INFO  L93              Difference]: Finished difference Result 2794 states and 3291 transitions.
[2020-11-25 05:53:07,606 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:53:07,607 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2794 states and 3291 transitions.
[2020-11-25 05:53:07,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:53:07,637 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2794 states to 2794 states and 3291 transitions.
[2020-11-25 05:53:07,637 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 645
[2020-11-25 05:53:07,638 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 645
[2020-11-25 05:53:07,638 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2794 states and 3291 transitions.
[2020-11-25 05:53:07,644 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:53:07,644 INFO  L728         BuchiCegarLoop]: Abstraction has 2794 states and 3291 transitions.
[2020-11-25 05:53:07,647 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2794 states and 3291 transitions.
[2020-11-25 05:53:07,678 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2794 to 2386.
[2020-11-25 05:53:07,678 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2386 states.
[2020-11-25 05:53:07,684 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2386 states to 2386 states and 2797 transitions.
[2020-11-25 05:53:07,684 INFO  L751         BuchiCegarLoop]: Abstraction has 2386 states and 2797 transitions.
[2020-11-25 05:53:07,684 INFO  L631         BuchiCegarLoop]: Abstraction has 2386 states and 2797 transitions.
[2020-11-25 05:53:07,684 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:53:07,684 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2386 states and 2797 transitions.
[2020-11-25 05:53:07,690 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:07,691 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:07,691 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:07,693 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:07,693 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND TRUE   !(account_s366 != null)
[L2266]              revert := true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1724]  COND TRUE   DType[this] == StrikeFarm
[L1725]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1725]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]  COND FALSE  !(revert)
[L1737]  COND TRUE   DType[this] == StrikeFarm
[L1738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1739]  COND TRUE   revert
[L381]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L382]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1724]  COND TRUE   DType[this] == StrikeFarm
[L1725]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1725]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]  COND FALSE  !(revert)
[L1737]  COND TRUE   DType[this] == StrikeFarm
[L1738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1739]  COND TRUE   revert
[L381]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L382]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:07,698 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:07,698 INFO  L82        PathProgramCache]: Analyzing trace with hash -1005839395, now seen corresponding path program 1 times
[2020-11-25 05:53:07,699 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:07,713 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:53:07,774 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 33 trivial. 0 not checked.
[2020-11-25 05:53:07,774 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 05:53:07,774 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 05:53:07,775 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:53:07,775 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:53:07,775 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:53:07,775 INFO  L87              Difference]: Start difference. First operand 2386 states and 2797 transitions. cyclomatic complexity: 413 Second operand 7 states.
[2020-11-25 05:53:07,831 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:53:07,831 INFO  L93              Difference]: Finished difference Result 2394 states and 2804 transitions.
[2020-11-25 05:53:07,831 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:53:07,832 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2394 states and 2804 transitions.
[2020-11-25 05:53:07,843 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:07,855 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2394 states to 2385 states and 2795 transitions.
[2020-11-25 05:53:07,855 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 533
[2020-11-25 05:53:07,856 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 533
[2020-11-25 05:53:07,856 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2385 states and 2795 transitions.
[2020-11-25 05:53:07,859 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:53:07,859 INFO  L728         BuchiCegarLoop]: Abstraction has 2385 states and 2795 transitions.
[2020-11-25 05:53:07,863 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2385 states and 2795 transitions.
[2020-11-25 05:53:07,898 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2385 to 2385.
[2020-11-25 05:53:07,899 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2385 states.
[2020-11-25 05:53:07,903 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2385 states to 2385 states and 2795 transitions.
[2020-11-25 05:53:07,904 INFO  L751         BuchiCegarLoop]: Abstraction has 2385 states and 2795 transitions.
[2020-11-25 05:53:07,904 INFO  L631         BuchiCegarLoop]: Abstraction has 2385 states and 2795 transitions.
[2020-11-25 05:53:07,904 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:53:07,904 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2385 states and 2795 transitions.
[2020-11-25 05:53:07,911 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:07,912 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:07,912 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:07,915 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:07,915 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND TRUE   !(c_s533 >= a_s533)
[L2509]              revert := true;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND TRUE   revert
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND TRUE   revert
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1724]  COND TRUE   DType[this] == StrikeFarm
[L1725]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1725]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]  COND FALSE  !(revert)
[L1737]  COND TRUE   DType[this] == StrikeFarm
[L1738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1739]  COND TRUE   revert
[L381]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L382]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND FALSE  !(__exception)
[L381]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1724]  COND TRUE   DType[this] == StrikeFarm
[L1725]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1602]              __ret_0_ := msgsender_MSG;
[L1725]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]  COND FALSE  !(revert)
[L1737]  COND TRUE   DType[this] == StrikeFarm
[L1738]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2208]              __var_12 := null;
[L2209]  COND TRUE   !(sender_s323 != null)
[L2210]              revert := true;
[L1738]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1739]  COND TRUE   revert
[L381]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L382]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s140) && _balances_ERC20[this][recipient_s140] == old(_balances_ERC20[this][recipient_s140]) + amount_s140) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _total_StrikeFarm[this] == old(_total_StrikeFarm[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:07,920 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:07,920 INFO  L82        PathProgramCache]: Analyzing trace with hash 363414952, now seen corresponding path program 1 times
[2020-11-25 05:53:07,921 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:07,934 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:53:08,007 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 05:53:08,007 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:53:08,008 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:53:08,008 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:53:08,008 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:53:08,008 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:53:08,009 INFO  L87              Difference]: Start difference. First operand 2385 states and 2795 transitions. cyclomatic complexity: 412 Second operand 3 states.
[2020-11-25 05:53:08,061 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:53:08,061 INFO  L93              Difference]: Finished difference Result 2793 states and 3201 transitions.
[2020-11-25 05:53:08,061 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:53:08,061 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2793 states and 3201 transitions.
[2020-11-25 05:53:08,070 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 05:53:08,079 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2793 states to 2620 states and 2997 transitions.
[2020-11-25 05:53:08,079 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 595
[2020-11-25 05:53:08,080 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 613
[2020-11-25 05:53:08,080 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2620 states and 2997 transitions.
[2020-11-25 05:53:08,082 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:53:08,082 INFO  L728         BuchiCegarLoop]: Abstraction has 2620 states and 2997 transitions.
[2020-11-25 05:53:08,085 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2620 states and 2997 transitions.
[2020-11-25 05:53:08,116 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2620 to 2264.
[2020-11-25 05:53:08,116 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2264 states.
[2020-11-25 05:53:08,118 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2264 states to 2264 states and 2555 transitions.
[2020-11-25 05:53:08,118 INFO  L751         BuchiCegarLoop]: Abstraction has 2264 states and 2555 transitions.
[2020-11-25 05:53:08,118 INFO  L631         BuchiCegarLoop]: Abstraction has 2264 states and 2555 transitions.
[2020-11-25 05:53:08,118 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:53:08,118 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2264 states and 2555 transitions.
[2020-11-25 05:53:08,121 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:08,121 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:08,121 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:08,122 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:08,122 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND TRUE   __exception
[L360]               __tmp__Balance := Balance;
[L361]               __tmp__DType := DType;
[L362]               __tmp__Alloc := Alloc;
[L363]               __tmp__balance_ADDR := balance_ADDR;
[L364]               __tmp__M_Ref_int := M_Ref_int;
[L365]               __tmp__sum__balances0 := sum__balances0;
[L366]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L367]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L368]               __tmp__sum__allowances1 := sum__allowances1;
[L369]               __tmp__Length := Length;
[L370]               __tmp__now := now;
[L371]               __tmp___balances_ERC20 := _balances_ERC20;
[L372]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L373]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L374]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L375]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L376]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L377]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L378]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1691]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1692]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1692]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1693]  COND FALSE  !(revert)
[L1704]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1705]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2176]              __var_12 := null;
[L2177]  COND TRUE   !(sender_s323 != null)
[L2178]              revert := true;
[L1705]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1706]  COND TRUE   revert
[L378]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L379]               assume revert || gas < 0;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND TRUE   __exception
[L360]               __tmp__Balance := Balance;
[L361]               __tmp__DType := DType;
[L362]               __tmp__Alloc := Alloc;
[L363]               __tmp__balance_ADDR := balance_ADDR;
[L364]               __tmp__M_Ref_int := M_Ref_int;
[L365]               __tmp__sum__balances0 := sum__balances0;
[L366]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L367]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L368]               __tmp__sum__allowances1 := sum__allowances1;
[L369]               __tmp__Length := Length;
[L370]               __tmp__now := now;
[L371]               __tmp___balances_ERC20 := _balances_ERC20;
[L372]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L373]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L374]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L375]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L376]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L377]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L378]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1691]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1692]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1692]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1693]  COND FALSE  !(revert)
[L1704]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1705]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2176]              __var_12 := null;
[L2177]  COND TRUE   !(sender_s323 != null)
[L2178]              revert := true;
[L1705]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1706]  COND TRUE   revert
[L378]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L379]               assume revert || gas < 0;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:08,127 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:08,127 INFO  L82        PathProgramCache]: Analyzing trace with hash -624230308, now seen corresponding path program 1 times
[2020-11-25 05:53:08,127 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:08,139 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:53:08,177 INFO  L134       CoverageAnalysis]: Checked inductivity of 45 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 45 trivial. 0 not checked.
[2020-11-25 05:53:08,177 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:53:08,177 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 05:53:08,178 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:53:08,178 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 05:53:08,178 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 05:53:08,178 INFO  L87              Difference]: Start difference. First operand 2264 states and 2555 transitions. cyclomatic complexity: 293 Second operand 8 states.
[2020-11-25 05:53:08,240 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:53:08,240 INFO  L93              Difference]: Finished difference Result 2288 states and 2583 transitions.
[2020-11-25 05:53:08,241 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 05:53:08,241 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2288 states and 2583 transitions.
[2020-11-25 05:53:08,246 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:08,252 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2288 states to 2268 states and 2561 transitions.
[2020-11-25 05:53:08,252 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 523
[2020-11-25 05:53:08,252 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 523
[2020-11-25 05:53:08,252 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2268 states and 2561 transitions.
[2020-11-25 05:53:08,254 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:53:08,254 INFO  L728         BuchiCegarLoop]: Abstraction has 2268 states and 2561 transitions.
[2020-11-25 05:53:08,256 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2268 states and 2561 transitions.
[2020-11-25 05:53:08,269 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2268 to 2268.
[2020-11-25 05:53:08,269 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2268 states.
[2020-11-25 05:53:08,272 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2268 states to 2268 states and 2561 transitions.
[2020-11-25 05:53:08,272 INFO  L751         BuchiCegarLoop]: Abstraction has 2268 states and 2561 transitions.
[2020-11-25 05:53:08,272 INFO  L631         BuchiCegarLoop]: Abstraction has 2268 states and 2561 transitions.
[2020-11-25 05:53:08,272 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:53:08,272 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2268 states and 2561 transitions.
[2020-11-25 05:53:08,275 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:53:08,275 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:53:08,275 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:53:08,276 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:53:08,276 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L4109]              assume null == 0;
[L4110]  CALL        call this := FreshRefGenerator__success();
[L1524]              havoc newRef;
[L1525]              assume Alloc[newRef] == false;
[L1526]              Alloc[newRef] := true;
[L1527]              assume newRef != null;
[L4110]  RET         call this := FreshRefGenerator__success();
[L4111]              assume now >= 0;
[L4112]              assume DType[this] == StrikeFarm;
[L4113]              assume msgvalue_MSG == 0;
[L4114]              gas := gas - 53000;
[L4115]  CALL        call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
[L4116]              assume !revert && gas >= 0;
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND TRUE   __exception
[L360]               __tmp__Balance := Balance;
[L361]               __tmp__DType := DType;
[L362]               __tmp__Alloc := Alloc;
[L363]               __tmp__balance_ADDR := balance_ADDR;
[L364]               __tmp__M_Ref_int := M_Ref_int;
[L365]               __tmp__sum__balances0 := sum__balances0;
[L366]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L367]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L368]               __tmp__sum__allowances1 := sum__allowances1;
[L369]               __tmp__Length := Length;
[L370]               __tmp__now := now;
[L371]               __tmp___balances_ERC20 := _balances_ERC20;
[L372]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L373]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L374]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L375]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L376]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L377]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L378]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1691]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1692]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1692]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1693]  COND FALSE  !(revert)
[L1704]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1705]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2176]              __var_12 := null;
[L2177]  COND FALSE  !(!(sender_s323 != null))
[L2181]              __var_13 := null;
[L2182]  COND TRUE   !(recipient_s323 != null)
[L2183]              revert := true;
[L1705]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1706]  COND TRUE   revert
[L378]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L379]               assume revert || gas < 0;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

Loop:
[L4119]  CALL        call CorralChoice_StrikeFarm(this);
[L3985]              havoc msgsender_MSG;
[L3986]              havoc msgvalue_MSG;
[L3987]              havoc choice;
[L3988]              havoc __ret_0_totalSupply;
[L3989]              havoc account_s121;
[L3990]              havoc __ret_0_balanceOf;
[L3991]              havoc recipient_s140;
[L3992]              havoc amount_s140;
[L3993]              havoc __ret_0_transfer;
[L3994]              havoc owner_s156;
[L3995]              havoc spender_s156;
[L3996]              havoc __ret_0_allowance;
[L3997]              havoc spender_s175;
[L3998]              havoc amount_s175;
[L3999]              havoc __ret_0_approve;
[L4000]              havoc sender_s211;
[L4001]              havoc recipient_s211;
[L4002]              havoc amount_s211;
[L4003]              havoc __ret_0_transferFrom;
[L4004]              havoc spender_s238;
[L4005]              havoc addedValue_s238;
[L4006]              havoc __ret_0_increaseAllowance;
[L4007]              havoc spender_s266;
[L4008]              havoc subtractedValue_s266;
[L4009]              havoc __ret_0_decreaseAllowance;
[L4010]              havoc name_s483;
[L4011]              havoc symbol_s483;
[L4012]              havoc decimals_s483;
[L4013]              havoc __ret_0_name;
[L4014]              havoc __ret_0_symbol;
[L4015]              havoc __ret_0_decimals;
[L4016]              havoc tmpNow;
[L4017]              havoc gas;
[L4018]              assume gas > 4000000 && gas <= 8000000;
[L4019]              tmpNow := now;
[L4020]              havoc now;
[L4021]              assume now > tmpNow;
[L4022]              assume msgsender_MSG != null;
[L4023]              assume DType[msgsender_MSG] != IERC20;
[L4024]              assume DType[msgsender_MSG] != Context;
[L4025]              assume DType[msgsender_MSG] != ERC20;
[L4026]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4027]              assume DType[msgsender_MSG] != SafeMath;
[L4028]              assume DType[msgsender_MSG] != StrikeFarm;
[L4029]              Alloc[msgsender_MSG] := true;
[L4030]  COND FALSE  !(choice == 11)
[L4036]  COND FALSE  !(choice == 10)
[L4042]  COND TRUE   choice == 9
[L4043]              gas := gas - 21000;
[L4044]  COND TRUE   gas >= 0
[L4045]              assume amount_s140 >= 0 && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4046]              assume msgvalue_MSG == 0;
[L4047]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND TRUE   __exception
[L360]               __tmp__Balance := Balance;
[L361]               __tmp__DType := DType;
[L362]               __tmp__Alloc := Alloc;
[L363]               __tmp__balance_ADDR := balance_ADDR;
[L364]               __tmp__M_Ref_int := M_Ref_int;
[L365]               __tmp__sum__balances0 := sum__balances0;
[L366]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L367]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L368]               __tmp__sum__allowances1 := sum__allowances1;
[L369]               __tmp__Length := Length;
[L370]               __tmp__now := now;
[L371]               __tmp___balances_ERC20 := _balances_ERC20;
[L372]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L373]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L374]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L375]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L376]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L377]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L378]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1691]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1692]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1692]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1693]  COND FALSE  !(revert)
[L1704]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1705]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2176]              __var_12 := null;
[L2177]  COND FALSE  !(!(sender_s323 != null))
[L2181]              __var_13 := null;
[L2182]  COND TRUE   !(recipient_s323 != null)
[L2183]              revert := true;
[L1705]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1706]  COND TRUE   revert
[L378]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L379]               assume revert || gas < 0;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L4119]  RET         call CorralChoice_StrikeFarm(this);

[2020-11-25 05:53:08,280 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:08,280 INFO  L82        PathProgramCache]: Analyzing trace with hash -1383842752, now seen corresponding path program 1 times
[2020-11-25 05:53:08,280 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:08,301 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:08,320 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:08,385 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:08,386 INFO  L82        PathProgramCache]: Analyzing trace with hash -1679577691, now seen corresponding path program 1 times
[2020-11-25 05:53:08,386 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:08,393 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:08,399 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:08,411 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:53:08,412 INFO  L82        PathProgramCache]: Analyzing trace with hash -949983482, now seen corresponding path program 1 times
[2020-11-25 05:53:08,412 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:53:08,438 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:08,469 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 05:53:09,061 WARN  L188               SmtUtils]: Spent 203.00 ms on a formula simplification that was a NOOP. DAG size: 185
[2020-11-25 05:53:09,450 WARN  L188               SmtUtils]: Spent 386.00 ms on a formula simplification. DAG size of input: 237 DAG size of output: 225
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:53:09,860 WARN  L188               SmtUtils]: Spent 119.00 ms on a formula simplification that was a NOOP. DAG size: 220
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 05:53:09,903 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-25 05:53:10,425 WARN  L188               SmtUtils]: Spent 198.00 ms on a formula simplification. DAG size of input: 193 DAG size of output: 182
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 05:53:10,657 WARN  L188               SmtUtils]: Spent 105.00 ms on a formula simplification that was a NOOP. DAG size: 223
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 05:53:11,219 WARN  L188               SmtUtils]: Spent 250.00 ms on a formula simplification. DAG size of input: 236 DAG size of output: 225
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:53:11,425 WARN  L188               SmtUtils]: Spent 110.00 ms on a formula simplification that was a NOOP. DAG size: 275
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:53:11,531 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification that was a NOOP. DAG size: 220
[2020-11-25 05:53:12,037 WARN  L188               SmtUtils]: Spent 504.00 ms on a formula simplification. DAG size of input: 405 DAG size of output: 393
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9883 to 19763
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 05:53:12,179 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 178 DAG size of output: 176
[2020-11-25 05:53:12,308 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 270
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 05:53:12,655 WARN  L188               SmtUtils]: Spent 270.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 05:53:12,763 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:12,781 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:53:12,789 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:53:12 BasicIcfg
[2020-11-25 05:53:12,789 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:53:12,790 INFO  L168              Benchmark]: Toolchain (without parser) took 8627.89 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 898.6 MB). Free memory was 935.2 MB in the beginning and 1.5 GB in the end (delta: -544.1 MB). Peak memory consumption was 880.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,791 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,792 INFO  L168              Benchmark]: Boogie Preprocessor took 93.17 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,793 INFO  L168              Benchmark]: UtopiaSpecLang took 64.38 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,794 INFO  L168              Benchmark]: Boogie Printer took 15.49 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,794 INFO  L168              Benchmark]: RCFGBuilder took 793.95 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,795 INFO  L168              Benchmark]: UtopiaLTL2Aut took 45.43 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,796 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1264.03 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.2 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -226.9 MB). Peak memory consumption was 176.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,797 INFO  L168              Benchmark]: BlockEncodingV2 took 126.06 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 971.6 MB in the end (delta: 58.1 MB). Peak memory consumption was 58.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,798 INFO  L168              Benchmark]: BuchiAutomizer took 6222.35 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 700.4 MB). Free memory was 971.6 MB in the beginning and 1.5 GB in the end (delta: -507.7 MB). Peak memory consumption was 719.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:53:12,804 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3734 locations, 6788 edges
  - StatisticsResult: Encoded RCFG
    3634 locations, 6511 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.17 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.38 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 15.49 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 793.95 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 806.3 MB in the end (delta: 112.7 MB). Peak memory consumption was 112.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 45.43 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1264.03 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.2 MB). Free memory was 802.8 MB in the beginning and 1.0 GB in the end (delta: -226.9 MB). Peak memory consumption was 176.6 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 126.06 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 971.6 MB in the end (delta: 58.1 MB). Peak memory consumption was 58.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6222.35 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 700.4 MB). Free memory was 971.6 MB in the beginning and 1.5 GB in the end (delta: -507.7 MB). Peak memory consumption was 719.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1476 locations, 2078 edges
  - StatisticsResult: BuchiProgram size
    3734 locations, 6788 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 2268 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.1s and 6 iterations.  TraceHistogramMax:3. Analysis of lassos took 5.0s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 764 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2386 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13137 SDtfs, 5842 SDslu, 31931 SDs, 0 SdLazy, 1632 SolverSat, 1489 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(879309099) = (new StrikeFarm)({from : 879309103});
[L1002]              havoc __exception;
[L1003]              revert := false;
[L1004]  COND FALSE  !(__exception)
[L1026]  CALL        call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L2726]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L2726]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2727]  COND FALSE  !(revert)
[L2730]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2730]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2731]  COND FALSE  !(revert)
[L2734]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1650]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1588]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1573]              assume msgsender_MSG != null;
[L1574]              Balance[this] := 0;
[L1588]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1589]  COND FALSE  !(revert)
[L1650]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]  COND FALSE  !(revert)
[L1654]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L1654]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1655]  COND FALSE  !(revert)
[L1658]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1622]              assume msgsender_MSG != null;
[L1623]              Balance[this] := 0;
[L1624]              _balances_ERC20[this] := zeroRefintArr();
[L1625]              sum__balances0[this] := 0;
[L1626]              _allowances_ERC20[this] := zeroRefRefintArr();
[L1627]              sum__allowances1[this] := 0;
[L1628]              _totalSupply_ERC20[this] := 0;
[L1658]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1659]  COND FALSE  !(revert)
[L2734]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2735]  COND FALSE  !(revert)
[L2738]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2414]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1556]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1541]              assume msgsender_MSG != null;
[L1542]              Balance[this] := 0;
[L1556]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1557]  COND FALSE  !(revert)
[L2414]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2415]  COND FALSE  !(revert)
[L2418]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2389]              assume msgsender_MSG != null;
[L2390]              Balance[this] := 0;
[L2391]              _name_ERC20Detailed[this] := -1368110498;
[L2392]              _symbol_ERC20Detailed[this] := -1368110498;
[L2393]              _decimals_ERC20Detailed[this] := 0;
[L2395]              _name_ERC20Detailed[this] := name_s483;
[L2396]              _symbol_ERC20Detailed[this] := symbol_s483;
[L2397]              _decimals_ERC20Detailed[this] := decimals_s483;
[L2418]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s483, symbol_s483, decimals_s483);
[L2419]  COND FALSE  !(revert)
[L2738]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 879309088, -1713371657, 18);
[L2739]  COND FALSE  !(revert)
[L2742]  CALL        call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2673]              assume msgsender_MSG != null;
[L2674]              Balance[this] := 0;
[L2675]              _total_StrikeFarm[this] := 11000;
[L2677]  COND TRUE   DType[this] == StrikeFarm
[L2678]  CALL        call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2456]              __ret_0_ := _decimals_ERC20Detailed[this];
[L2678]  RET         call __var_27 := decimals_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG);
[L2679]  COND FALSE  !(revert)
[L2685]              __var_26 := __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2686]  COND TRUE   DType[this] == StrikeFarm
[L2687]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2264]              __var_16 := null;
[L2265]  COND FALSE  !(!(account_s366 != null))
[L2269]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2269]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s366);
[L2270]  COND FALSE  !(revert)
[L2273]              _totalSupply_ERC20[this] := __var_17;
[L2274]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2507]              c_s533 := (a_s533 + b_s533) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2508]  COND FALSE  !(!(c_s533 >= a_s533))
[L2512]              __ret_0_ := c_s533;
[L2274]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s366], amount_s366);
[L2275]  COND FALSE  !(revert)
[L2278]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s366];
[L2279]              _balances_ERC20[this][account_s366] := __var_18;
[L2280]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s366];
[L2281]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2687]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, nonlinearMul(_total_StrikeFarm[this], nonlinearPow(10, __var_27 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2688]  COND FALSE  !(revert)
[L2742]  RET         call StrikeFarm_StrikeFarm_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2743]  COND FALSE  !(revert)
[L1026]  RET         call StrikeFarm_StrikeFarm__success(this, msgsender_MSG, msgvalue_MSG);
[L1027]              assume !revert && gas >= 0;
[L4115]  RET         call StrikeFarm_StrikeFarm(this, msgsender_MSG, msgvalue_MSG);
ERC20(879309099).transfer~address~uint256.gas(3979002)({from : 879309104, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND TRUE   __exception
[L360]               __tmp__Balance := Balance;
[L361]               __tmp__DType := DType;
[L362]               __tmp__Alloc := Alloc;
[L363]               __tmp__balance_ADDR := balance_ADDR;
[L364]               __tmp__M_Ref_int := M_Ref_int;
[L365]               __tmp__sum__balances0 := sum__balances0;
[L366]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L367]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L368]               __tmp__sum__allowances1 := sum__allowances1;
[L369]               __tmp__Length := Length;
[L370]               __tmp__now := now;
[L371]               __tmp___balances_ERC20 := _balances_ERC20;
[L372]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L373]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L374]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L375]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L376]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L377]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L378]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1691]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1692]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1692]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1693]  COND FALSE  !(revert)
[L1704]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1705]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2176]              __var_12 := null;
[L2177]  COND FALSE  !(!(sender_s323 != null))
[L2181]              __var_13 := null;
[L2182]  COND TRUE   !(recipient_s323 != null)
[L2183]              revert := true;
[L1705]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1706]  COND TRUE   revert
[L378]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L379]               assume revert || gas < 0;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);

Loop:
ERC20(879309099).transfer~address~uint256.gas(3979001)({from : 879309101, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s140) && msgsender_MSG != recipient_s140) && amount_s140 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s140] + amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s140 >= 0) && amount_s140 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s140] >= 0) && _balances_ERC20[this][recipient_s140] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L357]               havoc __exception;
[L358]               revert := false;
[L359]   COND TRUE   __exception
[L360]               __tmp__Balance := Balance;
[L361]               __tmp__DType := DType;
[L362]               __tmp__Alloc := Alloc;
[L363]               __tmp__balance_ADDR := balance_ADDR;
[L364]               __tmp__M_Ref_int := M_Ref_int;
[L365]               __tmp__sum__balances0 := sum__balances0;
[L366]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L367]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L368]               __tmp__sum__allowances1 := sum__allowances1;
[L369]               __tmp__Length := Length;
[L370]               __tmp__now := now;
[L371]               __tmp___balances_ERC20 := _balances_ERC20;
[L372]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L373]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L374]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L375]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L376]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L377]               __tmp___total_StrikeFarm := _total_StrikeFarm;
[L378]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L1691]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1692]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1596]              __ret_0_ := msgsender_MSG;
[L1692]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L1693]  COND FALSE  !(revert)
[L1704]  COND TRUE   __tmp__DType[this] == StrikeFarm
[L1705]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L2176]              __var_12 := null;
[L2177]  COND FALSE  !(!(sender_s323 != null))
[L2181]              __var_13 := null;
[L2182]  COND TRUE   !(recipient_s323 != null)
[L2183]              revert := true;
[L1705]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s140, amount_s140);
[L1706]  COND TRUE   revert
[L378]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);
[L379]               assume revert || gas < 0;
[L4047]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s140, amount_s140);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
