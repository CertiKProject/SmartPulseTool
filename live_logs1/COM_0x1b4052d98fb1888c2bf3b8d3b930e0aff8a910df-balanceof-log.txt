This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:18:23,618 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:18:23,620 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:18:23,630 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:18:23,630 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:18:23,631 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:18:23,632 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:18:23,633 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:18:23,634 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:18:23,635 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:18:23,636 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:18:23,636 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:18:23,636 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:18:23,637 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:18:23,638 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:18:23,638 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:18:23,639 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:18:23,640 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:18:23,641 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:18:23,643 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:18:23,643 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:18:23,644 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:18:23,646 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:18:23,646 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:18:23,646 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:18:23,647 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:18:23,647 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:18:23,647 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:18:23,648 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:18:23,648 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:18:23,648 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:18:23,649 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:18:23,649 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:18:23,650 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:18:23,650 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:18:23,650 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:18:23,651 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:18:23,651 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:18:23,651 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:18:23,652 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:18:23,652 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:18:23,652 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:18:23,660 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:18:23,660 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:18:23,661 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:18:23,661 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:18:23,661 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:18:23,661 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:18:23,661 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:18:23,661 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:18:23,662 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:18:23,662 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:18:23,662 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:18:23,663 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:18:23,663 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:18:23,686 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:18:23,702 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:18:23,705 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:18:23,706 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:18:23,707 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:18:23,707 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl
[2020-11-25 12:18:23,707 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl'
[2020-11-25 12:18:23,788 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:18:23,790 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:18:23,790 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:18:23,790 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:18:23,790 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:18:23,807 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,809 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,839 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,839 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,858 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,867 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,874 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,884 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:18:23,884 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:18:23,884 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:18:23,886 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:18:23,890 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/1) ...
[2020-11-25 12:18:23,909 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(COM.balanceOf(owner), _balances_COM[this][owner] >= 0 && _balances_COM[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.balanceOf(owner), return == _balances_COM[this][owner] && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:23,915 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(COM.balanceOf(owner), _balances_COM[this][owner] >= 0 && _balances_COM[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.balanceOf(owner), return == _balances_COM[this][owner] && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:23,922 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(COM.balanceOf(owner), _balances_COM[this][owner] >= 0 && _balances_COM[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.balanceOf(owner), return == _balances_COM[this][owner] && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:23,927 INFO  L636   opiaSpecLangObserver]: Parsed ( _balances_COM[this][owner_s327]>=0 && _balances_COM[this][owner_s327]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],[IdentifierExpression[owner_s327,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],[IdentifierExpression[owner_s327,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:18:23,929 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==_balances_COM[this][owner_s327] && _totalSupply_COM[this]==( old(_totalSupply_COM[this]) ) ) && _balances_COM[this]==( old(_balances_COM[this]) ) ) && _allowed_COM[this]==( old(_allowed_COM[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,balanceOf~address_COM>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],[IdentifierExpression[owner_s327,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_COM,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_COM>]]]]]]
[2020-11-25 12:18:23,934 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(COM.balanceOf(owner), _balances_COM[this][owner] >= 0 && _balances_COM[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(COM.balanceOf(owner), return == _balances_COM[this][owner] && _totalSupply_COM[this] == old(_totalSupply_COM[this]) && _balances_COM[this] == old(_balances_COM[this]) && _allowed_COM[this] == old(_allowed_COM[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 12:18:23,934 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_COM0) ==> ( <>AP(success_balanceOf_COM0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:18:23,942 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:23 PropertyContainer
[2020-11-25 12:18:23,942 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:18:23,943 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:18:23,943 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:18:23,943 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:18:23,944 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/2) ...
[2020-11-25 12:18:23,944 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:18:23,944 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:18:23,957 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:23" (2/2) ...
[2020-11-25 12:18:23,957 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:18:23,958 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:18:23,958 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:18:23,958 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:18:23,958 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/2) ...
[2020-11-25 12:18:24,008 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:18:24,008 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 12:18:24,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:18:24,009 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:18:24,009 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:18:24,010 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 12:18:24,010 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 12:18:24,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 12:18:24,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 12:18:24,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM
[2020-11-25 12:18:24,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM
[2020-11-25 12:18:24,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM
[2020-11-25 12:18:24,011 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM
[2020-11-25 12:18:24,011 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM
[2020-11-25 12:18:24,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM
[2020-11-25 12:18:24,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM
[2020-11-25 12:18:24,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM
[2020-11-25 12:18:24,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM
[2020-11-25 12:18:24,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM
[2020-11-25 12:18:24,012 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:18:24,012 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__success
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM
[2020-11-25 12:18:24,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__success
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM
[2020-11-25 12:18:24,013 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_COM
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:18:24,014 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:18:24,015 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure COM_COM__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_COM__fail
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__success
[2020-11-25 12:18:24,016 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__success
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__success
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure findPercent~uint256_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__success
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure returnRate_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__success
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__success
[2020-11-25 12:18:24,017 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__success
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:18:24,018 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:18:24,019 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:18:24,019 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:18:24,019 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:18:24,019 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:18:24,019 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure ceil~uint256~uint256_SafeMath__success
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 12:18:24,020 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__fail
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM_NoBaseCtor__success
[2020-11-25 12:18:24,021 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__fail
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure COM_COM__success
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__fail
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_COM__success
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__fail
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_COM__success
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__fail
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_COM__success
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__fail
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure findPercent~uint256_COM__success
[2020-11-25 12:18:24,022 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__fail
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure returnRate_COM__success
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__fail
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_COM__success
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__fail
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnYes~address~uint256_COM__success
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__fail
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferBurnNo~address~uint256_COM__success
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__fail
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_COM__success
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__fail
[2020-11-25 12:18:24,023 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_COM__success
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__fail
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnYes~address~address~uint256_COM__success
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__fail
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferFromBurnNo~address~address~uint256_COM__success
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__fail
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_COM__success
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__fail
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_COM__success
[2020-11-25 12:18:24,024 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__fail
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_COM__success
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__fail
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_COM__success
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__fail
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_COM__success
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 12:18:24,025 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_COM
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:18:24,026 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:18:24,026 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:18:24,437 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:24,437 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:24,438 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:18:24,650 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:18:24,650 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 12:18:24,652 INFO  L202        PluginConnector]: Adding new model COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:24 BoogieIcfgContainer
[2020-11-25 12:18:24,652 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:23" (2/2) ...
[2020-11-25 12:18:24,652 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:18:24,653 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1474822a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:24, skipping insertion in model container
[2020-11-25 12:18:24,653 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:18:24,653 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:18:24,653 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:18:24,654 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:18:24,655 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/3) ...
[2020-11-25 12:18:24,655 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5c492b39 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:24, skipping insertion in model container
[2020-11-25 12:18:24,655 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:23" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:18:24,692 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:24 NWAContainer
[2020-11-25 12:18:24,692 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:18:24,693 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:18:24,693 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:18:24,694 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:18:24,695 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:24" (3/4) ...
[2020-11-25 12:18:24,695 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@52900702 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:24, skipping insertion in model container
[2020-11-25 12:18:24,695 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:24" (4/4) ...
[2020-11-25 12:18:24,700 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:18:24,707 INFO  L110   BuchiProductObserver]: Initial RCFG 1654 locations, 2147 edges
[2020-11-25 12:18:24,707 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:18:24,720 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:18:25,939 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:18:25,944 INFO  L110   BuchiProductObserver]: BuchiProgram size 3970 locations, 6932 edges
[2020-11-25 12:18:25,944 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:25 BoogieIcfgContainer
[2020-11-25 12:18:25,944 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:18:25,945 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:18:25,945 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:18:25,946 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:18:25,947 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:25" (1/1) ...
[2020-11-25 12:18:26,013 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:18:26,014 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call c_s197 := add~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s197, m_s197);
[2020-11-25 12:18:26,023 INFO  L313           BlockEncoder]: Initial Icfg 3970 locations, 6932 edges
[2020-11-25 12:18:26,023 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:18:26,024 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:18:26,024 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:18:26,024 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:18:26,036 INFO  L70    emoveInfeasibleEdges]: Removed 63 edges and 11 locations because of local infeasibility
[2020-11-25 12:18:26,046 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:18:26,057 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:18:26,061 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:18:26,065 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:18:26,065 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:18:26,070 INFO  L313           BlockEncoder]: Encoded RCFG 3928 locations, 6823 edges
[2020-11-25 12:18:26,070 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:18:26 BasicIcfg
[2020-11-25 12:18:26,070 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:18:26,071 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:18:26,071 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:18:26,072 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:18:26,073 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:26,073 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:18:23" (1/6) ...
[2020-11-25 12:18:26,075 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@282f4da and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:26, skipping insertion in model container
[2020-11-25 12:18:26,075 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:26,075 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:18:23" (2/6) ...
[2020-11-25 12:18:26,075 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@282f4da and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:26, skipping insertion in model container
[2020-11-25 12:18:26,075 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:26,075 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:18:24" (3/6) ...
[2020-11-25 12:18:26,075 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@282f4da and model type COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:18:26, skipping insertion in model container
[2020-11-25 12:18:26,075 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:26,076 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:18:24" (4/6) ...
[2020-11-25 12:18:26,076 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@282f4da and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:18:26, skipping insertion in model container
[2020-11-25 12:18:26,076 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:26,076 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:18:25" (5/6) ...
[2020-11-25 12:18:26,076 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@282f4da and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:18:26, skipping insertion in model container
[2020-11-25 12:18:26,076 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:18:26,076 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:18:26" (6/6) ...
[2020-11-25 12:18:26,077 INFO  L404   chiAutomizerObserver]: Analyzing ICFG COM_0x1b4052d98fb1888c2bf3b8d3b930e0aff8a910df_balanceof.bpl_BEv2
[2020-11-25 12:18:26,112 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:18:26,113 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:18:26,113 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:18:26,113 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:18:26,113 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:18:26,113 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:18:26,113 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:18:26,113 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:18:26,113 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:18:26,145 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3928 states.
[2020-11-25 12:18:26,191 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:26,192 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:26,192 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:26,201 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:26,201 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:26,201 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:18:26,201 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3928 states.
[2020-11-25 12:18:26,221 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:26,221 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:26,222 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:26,223 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:26,223 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_COM0 := false;
[L2]                 call_balanceOf_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND TRUE   revert
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND TRUE   choice == 15
[L4181]              gas := gas - 21000;
[L4182]  COND FALSE  !(gas >= 0)
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:26,238 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:26,238 INFO  L82        PathProgramCache]: Analyzing trace with hash 1436653793, now seen corresponding path program 1 times
[2020-11-25 12:18:26,243 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:26,273 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:26,310 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:18:26,311 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:26,311 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:18:26,315 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:26,497 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:18:26,497 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:18:26,498 INFO  L87              Difference]: Start difference. First operand 3928 states. Second operand 4 states.
[2020-11-25 12:18:26,851 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:26,851 INFO  L93              Difference]: Finished difference Result 2917 states and 3364 transitions.
[2020-11-25 12:18:26,852 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:18:26,853 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2917 states and 3364 transitions.
[2020-11-25 12:18:26,867 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:26,891 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2917 states to 2913 states and 3356 transitions.
[2020-11-25 12:18:26,892 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:18:26,894 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 626
[2020-11-25 12:18:26,894 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2913 states and 3356 transitions.
[2020-11-25 12:18:26,902 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:26,902 INFO  L728         BuchiCegarLoop]: Abstraction has 2913 states and 3356 transitions.
[2020-11-25 12:18:26,919 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2913 states and 3356 transitions.
[2020-11-25 12:18:26,968 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2913 to 2913.
[2020-11-25 12:18:26,968 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2913 states.
[2020-11-25 12:18:26,975 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2913 states to 2913 states and 3356 transitions.
[2020-11-25 12:18:26,975 INFO  L751         BuchiCegarLoop]: Abstraction has 2913 states and 3356 transitions.
[2020-11-25 12:18:26,976 INFO  L631         BuchiCegarLoop]: Abstraction has 2913 states and 3356 transitions.
[2020-11-25 12:18:26,976 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:18:26,976 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2913 states and 3356 transitions.
[2020-11-25 12:18:26,983 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:26,983 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:26,983 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:26,985 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:26,985 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_COM0 := false;
[L2]                 call_balanceOf_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND TRUE   revert
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND FALSE  !(__exception)
[L681]   CALL        call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2271]              __ret_0_ := _balances_COM[this][owner_s327];
[L681]   RET         call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L682]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_COM[this][owner_s327] && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND FALSE  !(__exception)
[L681]   CALL        call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2271]              __ret_0_ := _balances_COM[this][owner_s327];
[L681]   RET         call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L682]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_COM[this][owner_s327] && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:26,988 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:26,988 INFO  L82        PathProgramCache]: Analyzing trace with hash 1966248390, now seen corresponding path program 1 times
[2020-11-25 12:18:26,989 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:26,999 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:27,016 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:18:27,016 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:27,016 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 12:18:27,017 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:27,018 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:18:27,018 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:18:27,018 INFO  L87              Difference]: Start difference. First operand 2913 states and 3356 transitions. cyclomatic complexity: 445 Second operand 3 states.
[2020-11-25 12:18:27,079 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:27,079 INFO  L93              Difference]: Finished difference Result 3553 states and 4012 transitions.
[2020-11-25 12:18:27,079 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:18:27,079 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3553 states and 4012 transitions.
[2020-11-25 12:18:27,094 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:18:27,114 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3553 states to 3553 states and 4012 transitions.
[2020-11-25 12:18:27,114 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 804
[2020-11-25 12:18:27,115 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 804
[2020-11-25 12:18:27,116 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3553 states and 4012 transitions.
[2020-11-25 12:18:27,120 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:27,120 INFO  L728         BuchiCegarLoop]: Abstraction has 3553 states and 4012 transitions.
[2020-11-25 12:18:27,123 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3553 states and 4012 transitions.
[2020-11-25 12:18:27,149 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3553 to 3017.
[2020-11-25 12:18:27,150 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3017 states.
[2020-11-25 12:18:27,154 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3017 states to 3017 states and 3360 transitions.
[2020-11-25 12:18:27,154 INFO  L751         BuchiCegarLoop]: Abstraction has 3017 states and 3360 transitions.
[2020-11-25 12:18:27,154 INFO  L631         BuchiCegarLoop]: Abstraction has 3017 states and 3360 transitions.
[2020-11-25 12:18:27,154 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:18:27,154 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3017 states and 3360 transitions.
[2020-11-25 12:18:27,160 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:27,160 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:27,160 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:27,161 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:27,161 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_COM0 := false;
[L2]                 call_balanceOf_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND TRUE   !(amount_s1039 != 0)
[L3010]              revert := true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND TRUE   revert
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND FALSE  !(__exception)
[L681]   CALL        call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2271]              __ret_0_ := _balances_COM[this][owner_s327];
[L681]   RET         call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L682]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_COM[this][owner_s327] && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND FALSE  !(__exception)
[L681]   CALL        call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2271]              __ret_0_ := _balances_COM[this][owner_s327];
[L681]   RET         call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L682]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_COM[this][owner_s327] && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:27,165 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:27,165 INFO  L82        PathProgramCache]: Analyzing trace with hash 933363218, now seen corresponding path program 1 times
[2020-11-25 12:18:27,165 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:27,174 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:27,211 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:27,212 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:27,212 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:18:27,212 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:27,212 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:18:27,212 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:18:27,212 INFO  L87              Difference]: Start difference. First operand 3017 states and 3360 transitions. cyclomatic complexity: 345 Second operand 4 states.
[2020-11-25 12:18:27,250 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:27,250 INFO  L93              Difference]: Finished difference Result 3011 states and 3351 transitions.
[2020-11-25 12:18:27,250 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:18:27,250 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3011 states and 3351 transitions.
[2020-11-25 12:18:27,262 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:27,274 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3011 states to 3008 states and 3348 transitions.
[2020-11-25 12:18:27,274 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 670
[2020-11-25 12:18:27,275 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 670
[2020-11-25 12:18:27,275 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3008 states and 3348 transitions.
[2020-11-25 12:18:27,278 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:27,278 INFO  L728         BuchiCegarLoop]: Abstraction has 3008 states and 3348 transitions.
[2020-11-25 12:18:27,281 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3008 states and 3348 transitions.
[2020-11-25 12:18:27,305 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3008 to 3008.
[2020-11-25 12:18:27,305 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3008 states.
[2020-11-25 12:18:27,310 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3008 states to 3008 states and 3348 transitions.
[2020-11-25 12:18:27,311 INFO  L751         BuchiCegarLoop]: Abstraction has 3008 states and 3348 transitions.
[2020-11-25 12:18:27,311 INFO  L631         BuchiCegarLoop]: Abstraction has 3008 states and 3348 transitions.
[2020-11-25 12:18:27,311 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:18:27,311 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3008 states and 3348 transitions.
[2020-11-25 12:18:27,316 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:27,316 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:27,316 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:27,317 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:27,318 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_COM0 := false;
[L2]                 call_balanceOf_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND FALSE  !(!(amount_s1039 != 0))
[L3013]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L3013]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3014]  COND FALSE  !(revert)
[L3017]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3018]              _balances_COM[this][account_s1039] := __var_27;
[L3019]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3020]              assert { :EventEmitted "Transfer_COM" } true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND FALSE  !(revert)
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND FALSE  !(__exception)
[L681]   CALL        call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2271]              __ret_0_ := _balances_COM[this][owner_s327];
[L681]   RET         call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L682]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_COM[this][owner_s327] && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND FALSE  !(__exception)
[L681]   CALL        call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2271]              __ret_0_ := _balances_COM[this][owner_s327];
[L681]   RET         call __ret_0_ := balanceOf~address_COM__success(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L682]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _balances_COM[this][owner_s327] && _totalSupply_COM[this] == old(_totalSupply_COM[this])) && _balances_COM[this] == old(_balances_COM[this])) && _allowed_COM[this] == old(_allowed_COM[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:27,321 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:27,321 INFO  L82        PathProgramCache]: Analyzing trace with hash 1412841846, now seen corresponding path program 1 times
[2020-11-25 12:18:27,321 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:27,335 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:27,374 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:27,375 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:27,375 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:18:27,375 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:27,375 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:18:27,375 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:18:27,376 INFO  L87              Difference]: Start difference. First operand 3008 states and 3348 transitions. cyclomatic complexity: 342 Second operand 4 states.
[2020-11-25 12:18:27,442 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:27,442 INFO  L93              Difference]: Finished difference Result 3009 states and 3347 transitions.
[2020-11-25 12:18:27,442 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:18:27,442 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3009 states and 3347 transitions.
[2020-11-25 12:18:27,456 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:27,472 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3009 states to 2999 states and 3337 transitions.
[2020-11-25 12:18:27,472 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 659
[2020-11-25 12:18:27,473 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 659
[2020-11-25 12:18:27,473 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2999 states and 3337 transitions.
[2020-11-25 12:18:27,476 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:27,477 INFO  L728         BuchiCegarLoop]: Abstraction has 2999 states and 3337 transitions.
[2020-11-25 12:18:27,481 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2999 states and 3337 transitions.
[2020-11-25 12:18:27,513 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2999 to 2997.
[2020-11-25 12:18:27,513 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2997 states.
[2020-11-25 12:18:27,518 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2997 states to 2997 states and 3335 transitions.
[2020-11-25 12:18:27,518 INFO  L751         BuchiCegarLoop]: Abstraction has 2997 states and 3335 transitions.
[2020-11-25 12:18:27,518 INFO  L631         BuchiCegarLoop]: Abstraction has 2997 states and 3335 transitions.
[2020-11-25 12:18:27,518 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:18:27,518 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2997 states and 3335 transitions.
[2020-11-25 12:18:27,525 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:18:27,525 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:18:27,525 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:18:27,528 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:18:27,528 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_COM0 := false;
[L2]                 call_balanceOf_COM0 := false;
[L2]     CALL        call main();
[L4286]              assume null == 0;
[L4287]  CALL        call this := FreshRefGenerator__success();
[L1872]              havoc newRef;
[L1873]              assume Alloc[newRef] == false;
[L1874]              Alloc[newRef] := true;
[L1875]              assume newRef != null;
[L4287]  RET         call this := FreshRefGenerator__success();
[L4288]              assume now >= 0;
[L4289]              assume DType[this] == COM;
[L4290]              assume msgvalue_MSG >= 0;
[L4291]              gas := gas - 53000;
[L4292]  CALL        call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L523]               havoc __exception;
[L524]               revert := false;
[L525]   COND FALSE  !(__exception)
[L553]   CALL        call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2237]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2238]  COND FALSE  !(revert)
[L2241]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2115]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1904]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]              assume msgsender_MSG != null;
[L1890]              Balance[this] := 0;
[L1904]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1905]  COND FALSE  !(revert)
[L2115]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L2119]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2090]              assume msgsender_MSG != null;
[L2091]              Balance[this] := 0;
[L2092]              _name_ERC20Detailed[this] := -1465673266;
[L2093]              _symbol_ERC20Detailed[this] := -1465673266;
[L2094]              _decimals_ERC20Detailed[this] := 0;
[L2096]              _name_ERC20Detailed[this] := name_s228;
[L2097]              _symbol_ERC20Detailed[this] := symbol_s228;
[L2098]              _decimals_ERC20Detailed[this] := decimals_s228;
[L2119]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s228, symbol_s228, decimals_s228);
[L2120]  COND FALSE  !(revert)
[L2241]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, tokenName_COM[this], tokenSymbol_COM[this], tokenDecimals_COM[this]);
[L2242]  COND FALSE  !(revert)
[L2245]  CALL        call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2193]              assume msgsender_MSG != null;
[L2194]              Balance[this] := 0;
[L2195]              _balances_COM[this] := zeroRefintArr();
[L2196]              sum__balances0[this] := 0;
[L2197]              _allowed_COM[this] := zeroRefRefintArr();
[L2198]              sum__allowed1[this] := 0;
[L2199]              tokenName_COM[this] := -963585000;
[L2200]              tokenSymbol_COM[this] := -1124477489;
[L2201]              tokenDecimals_COM[this] := 18;
[L2202]              _totalSupply_COM[this] := 1000000000000000000000000;
[L2203]              noFee_COM[this] := 10000000000000000001;
[L2204]              heightEnd20Percent_COM[this] := 10328752;
[L2205]              heightEnd10Percent_COM[this] := 12582818;
[L2206]              heightEnd05Percent_COM[this] := 14836884;
[L2209]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L2210]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L2211]              Balance[this] := Balance[this] + msgvalue_MSG;
[L2213]  CALL        call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L3009]  COND FALSE  !(!(amount_s1039 != 0))
[L3013]  CALL        call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L2007]              c_s163 := (a_s163 + b_s163) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]              assert c_s163 >= a_s163;
[L2009]              __ret_0_ := c_s163;
[L3013]  RET         call __var_27 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_COM[this][account_s1039], amount_s1039);
[L3014]  COND FALSE  !(revert)
[L3017]              sum__balances0[this] := sum__balances0[this] - _balances_COM[this][account_s1039];
[L3018]              _balances_COM[this][account_s1039] := __var_27;
[L3019]              sum__balances0[this] := sum__balances0[this] + _balances_COM[this][account_s1039];
[L3020]              assert { :EventEmitted "Transfer_COM" } true;
[L2213]  RET         call _mint~address~uint256_COM__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _totalSupply_COM[this]);
[L2214]  COND FALSE  !(revert)
[L2245]  RET         call COM_COM_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2246]  COND FALSE  !(revert)
[L553]   RET         call COM_COM__success(this, msgsender_MSG, msgvalue_MSG);
[L554]               assume !revert && gas >= 0;
[L4292]  RET         call COM_COM(this, msgsender_MSG, msgvalue_MSG);
[L4293]              assume !revert && gas >= 0;
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND TRUE   __exception
[L654]               __tmp__Balance := Balance;
[L655]               __tmp__DType := DType;
[L656]               __tmp__Alloc := Alloc;
[L657]               __tmp__balance_ADDR := balance_ADDR;
[L658]               __tmp__M_Ref_int := M_Ref_int;
[L659]               __tmp__sum__balances0 := sum__balances0;
[L660]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L661]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L662]               __tmp__sum__allowed1 := sum__allowed1;
[L663]               __tmp__Length := Length;
[L664]               __tmp__now := now;
[L665]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L666]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L667]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L668]               __tmp___balances_COM := _balances_COM;
[L669]               __tmp___allowed_COM := _allowed_COM;
[L670]               __tmp__tokenName_COM := tokenName_COM;
[L671]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L672]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L673]               __tmp___totalSupply_COM := _totalSupply_COM;
[L674]               __tmp__noFee_COM := noFee_COM;
[L675]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L676]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L677]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L678]   CALL        call __ret_0_ := balanceOf~address_COM__fail(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2265]              __ret_0_ := __tmp___balances_COM[this][owner_s327];
[L678]   RET         call __ret_0_ := balanceOf~address_COM__fail(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L679]               assume revert || gas < 0;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

Loop:
[L4296]  CALL        call CorralChoice_COM(this);
[L4131]              havoc msgsender_MSG;
[L4132]              havoc msgvalue_MSG;
[L4133]              havoc choice;
[L4134]              havoc __ret_0_totalSupply;
[L4135]              havoc owner_s327;
[L4136]              havoc __ret_0_balanceOf;
[L4137]              havoc owner_s343;
[L4138]              havoc spender_s343;
[L4139]              havoc __ret_0_allowance;
[L4140]              havoc to_s454;
[L4141]              havoc value_s454;
[L4142]              havoc __ret_0_transfer;
[L4143]              havoc spender_s643;
[L4144]              havoc value_s643;
[L4145]              havoc __ret_0_approve;
[L4146]              havoc from_s702;
[L4147]              havoc to_s702;
[L4148]              havoc value_s702;
[L4149]              havoc __ret_0_transferFrom;
[L4150]              havoc name_s228;
[L4151]              havoc symbol_s228;
[L4152]              havoc decimals_s228;
[L4153]              havoc __ret_0_name;
[L4154]              havoc __ret_0_symbol;
[L4155]              havoc __ret_0_decimals;
[L4156]              havoc value_s365;
[L4157]              havoc __ret_0_findPercent;
[L4158]              havoc __ret_0_returnRate;
[L4159]              havoc spender_s956;
[L4160]              havoc addedValue_s956;
[L4161]              havoc __ret_0_increaseAllowance;
[L4162]              havoc spender_s1006;
[L4163]              havoc subtractedValue_s1006;
[L4164]              havoc __ret_0_decreaseAllowance;
[L4165]              havoc amount_s1051;
[L4166]              havoc account_s1140;
[L4167]              havoc amount_s1140;
[L4168]              havoc tmpNow;
[L4169]              havoc gas;
[L4170]              assume gas > 4000000 && gas <= 8000000;
[L4171]              tmpNow := now;
[L4172]              havoc now;
[L4173]              assume now > tmpNow;
[L4174]              assume msgsender_MSG != null;
[L4175]              assume DType[msgsender_MSG] != IERC20;
[L4176]              assume DType[msgsender_MSG] != SafeMath;
[L4177]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4178]              assume DType[msgsender_MSG] != COM;
[L4179]              Alloc[msgsender_MSG] := true;
[L4180]  COND FALSE  !(choice == 15)
[L4186]  COND TRUE   choice == 14
[L4187]              gas := gas - 21000;
[L4188]  COND TRUE   gas >= 0
[L4189]              assume msgvalue_MSG == 0;
[L4190]  CALL        call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _balances_COM[this][owner_s327] >= 0 && _balances_COM[this][owner_s327] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_COM0 := true;
[L2]                 call_balanceOf_COM0 := false;
[L2]                 revert := revert_hold;
[L651]               havoc __exception;
[L652]               revert := false;
[L653]   COND TRUE   __exception
[L654]               __tmp__Balance := Balance;
[L655]               __tmp__DType := DType;
[L656]               __tmp__Alloc := Alloc;
[L657]               __tmp__balance_ADDR := balance_ADDR;
[L658]               __tmp__M_Ref_int := M_Ref_int;
[L659]               __tmp__sum__balances0 := sum__balances0;
[L660]               __tmp__alloc__allowed_COM_lvl0 := alloc__allowed_COM_lvl0;
[L661]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L662]               __tmp__sum__allowed1 := sum__allowed1;
[L663]               __tmp__Length := Length;
[L664]               __tmp__now := now;
[L665]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L666]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L667]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L668]               __tmp___balances_COM := _balances_COM;
[L669]               __tmp___allowed_COM := _allowed_COM;
[L670]               __tmp__tokenName_COM := tokenName_COM;
[L671]               __tmp__tokenSymbol_COM := tokenSymbol_COM;
[L672]               __tmp__tokenDecimals_COM := tokenDecimals_COM;
[L673]               __tmp___totalSupply_COM := _totalSupply_COM;
[L674]               __tmp__noFee_COM := noFee_COM;
[L675]               __tmp__heightEnd20Percent_COM := heightEnd20Percent_COM;
[L676]               __tmp__heightEnd10Percent_COM := heightEnd10Percent_COM;
[L677]               __tmp__heightEnd05Percent_COM := heightEnd05Percent_COM;
[L678]   CALL        call __ret_0_ := balanceOf~address_COM__fail(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L2265]              __ret_0_ := __tmp___balances_COM[this][owner_s327];
[L678]   RET         call __ret_0_ := balanceOf~address_COM__fail(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L679]               assume revert || gas < 0;
[L4190]  RET         call __ret_0_balanceOf := balanceOf~address_COM(this, msgsender_MSG, msgvalue_MSG, owner_s327);
[L4296]  RET         call CorralChoice_COM(this);

[2020-11-25 12:18:27,532 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:18:27,532 INFO  L82        PathProgramCache]: Analyzing trace with hash 1720887507, now seen corresponding path program 1 times
[2020-11-25 12:18:27,533 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:18:27,548 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:18:27,603 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 12:18:27,604 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:18:27,604 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 12:18:27,604 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:18:27,604 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 12:18:27,604 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 12:18:27,604 INFO  L87              Difference]: Start difference. First operand 2997 states and 3335 transitions. cyclomatic complexity: 340 Second operand 5 states.
[2020-11-25 12:18:27,832 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:18:27,832 INFO  L93              Difference]: Finished difference Result 2020 states and 2234 transitions.
[2020-11-25 12:18:27,832 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:18:27,832 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2020 states and 2234 transitions.
[2020-11-25 12:18:27,836 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:18:27,836 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2020 states to 0 states and 0 transitions.
[2020-11-25 12:18:27,836 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 12:18:27,836 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 12:18:27,836 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 12:18:27,836 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:18:27,836 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:18:27,836 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:18:27,836 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:18:27,836 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 12:18:27,836 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 12:18:27,837 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:18:27,837 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 12:18:27,840 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:18:27 BasicIcfg
[2020-11-25 12:18:27,840 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:18:27,840 INFO  L168              Benchmark]: Toolchain (without parser) took 4051.24 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 414.2 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -301.4 MB). Peak memory consumption was 112.8 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,841 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,841 INFO  L168              Benchmark]: Boogie Preprocessor took 93.96 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,841 INFO  L168              Benchmark]: UtopiaSpecLang took 58.31 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,842 INFO  L168              Benchmark]: Boogie Printer took 14.59 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,842 INFO  L168              Benchmark]: RCFGBuilder took 695.26 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 817.1 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,842 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.62 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 813.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,842 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1251.83 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 185.6 MB). Free memory was 813.5 MB in the beginning and 1.0 GB in the end (delta: -204.6 MB). Peak memory consumption was 184.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,843 INFO  L168              Benchmark]: BlockEncodingV2 took 125.46 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 953.2 MB in the end (delta: 64.9 MB). Peak memory consumption was 64.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,843 INFO  L168              Benchmark]: BuchiAutomizer took 1769.31 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 228.6 MB). Free memory was 953.2 MB in the beginning and 1.2 GB in the end (delta: -288.8 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:18:27,846 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3970 locations, 6932 edges
  - StatisticsResult: Encoded RCFG
    3928 locations, 6823 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.96 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.31 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.59 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 695.26 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 817.1 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.62 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 813.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1251.83 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 185.6 MB). Free memory was 813.5 MB in the beginning and 1.0 GB in the end (delta: -204.6 MB). Peak memory consumption was 184.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 125.46 ms. Allocated memory is still 1.2 GB. Free memory was 1.0 GB in the beginning and 953.2 MB in the end (delta: 64.9 MB). Peak memory consumption was 64.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1769.31 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 228.6 MB). Free memory was 953.2 MB in the beginning and 1.2 GB in the end (delta: -288.8 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1654 locations, 2147 edges
  - StatisticsResult: BuchiProgram size
    3970 locations, 6932 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.7s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 538 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3017 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15181 SDtfs, 9423 SDslu, 18283 SDs, 0 SdLazy, 1867 SolverSat, 2225 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_COM0) ==> ( <>(success_balanceOf_COM0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
