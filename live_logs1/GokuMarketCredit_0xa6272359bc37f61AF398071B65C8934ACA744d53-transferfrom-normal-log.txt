This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 17:35:20,772 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 17:35:20,773 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 17:35:20,784 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 17:35:20,784 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 17:35:20,785 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 17:35:20,786 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 17:35:20,787 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 17:35:20,789 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 17:35:20,790 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 17:35:20,790 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 17:35:20,791 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 17:35:20,791 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 17:35:20,792 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 17:35:20,793 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 17:35:20,793 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 17:35:20,794 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 17:35:20,795 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 17:35:20,796 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 17:35:20,798 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 17:35:20,798 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 17:35:20,799 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 17:35:20,801 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 17:35:20,801 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 17:35:20,801 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 17:35:20,801 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 17:35:20,802 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 17:35:20,802 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 17:35:20,802 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 17:35:20,803 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 17:35:20,803 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 17:35:20,804 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 17:35:20,804 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 17:35:20,805 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 17:35:20,805 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 17:35:20,806 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 17:35:20,806 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 17:35:20,806 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 17:35:20,806 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 17:35:20,807 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 17:35:20,807 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 17:35:20,808 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 17:35:20,816 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 17:35:20,816 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 17:35:20,817 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 17:35:20,817 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 17:35:20,817 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 17:35:20,817 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 17:35:20,817 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 17:35:20,817 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 17:35:20,817 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 17:35:20,817 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 17:35:20,818 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 17:35:20,818 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 17:35:20,819 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 17:35:20,819 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 17:35:20,844 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 17:35:20,861 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 17:35:20,863 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 17:35:20,865 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 17:35:20,865 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 17:35:20,866 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl
[2020-11-25 17:35:20,866 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl'
[2020-11-25 17:35:20,952 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 17:35:20,953 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 17:35:20,953 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 17:35:20,954 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 17:35:20,954 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 17:35:20,970 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:20,972 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,006 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,007 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,028 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,039 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,047 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,056 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 17:35:21,057 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 17:35:21,057 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 17:35:21,059 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 17:35:21,063 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/1) ...
[2020-11-25 17:35:21,079 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:21,085 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:21,093 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:21,102 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s419 && p1!=_to_s419 ) && ( p2!=_from_s419 || p3!=msg.sender ) ) && _from_s419!=_to_s419 ) && _value_s419<=balances_BasicToken[this][_from_s419] ) && _value_s419<=allowed_StandardToken[this][_from_s419][msg.sender] ) && ( balances_BasicToken[this][_to_s419] + _value_s419 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s419>=0 ) && _value_s419<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s419]>=0 ) && balances_BasicToken[this][_to_s419]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_from_s419]>=0 ) && balances_BasicToken[this][_from_s419]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s419][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s419][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 17:35:21,105 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && balances_BasicToken[this][_from_s419]==( ( old(balances_BasicToken[this][_from_s419]) ) - _value_s419 ) ) && balances_BasicToken[this][_to_s419]==( ( old(balances_BasicToken[this][_to_s419]) ) + _value_s419 ) ) && allowed_StandardToken[this][_from_s419][msg.sender]==( ( old(allowed_StandardToken[this][_from_s419][msg.sender]) ) - _value_s419 ) ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this][p1]==( old(balances_BasicToken[this][p1]) ) ) && allowed_StandardToken[this][p2][p3]==( old(allowed_StandardToken[this][p2][p3]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_StandardToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_to_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[_from_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],IdentifierExpression[_value_s419,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StandardToken>]]]]]]
[2020-11-25 17:35:21,111 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && balances_BasicToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.transferFrom(from, to, value), return == true && balances_BasicToken[this][from] == old(balances_BasicToken[this][from]) - value && balances_BasicToken[this][to] == old(balances_BasicToken[this][to]) + value && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1]) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 17:35:21,111 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_StandardToken0) ==> ( <>AP(success_transferFrom_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 17:35:21,122 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:21 PropertyContainer
[2020-11-25 17:35:21,122 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 17:35:21,122 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 17:35:21,122 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 17:35:21,122 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 17:35:21,123 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/2) ...
[2020-11-25 17:35:21,124 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 17:35:21,124 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 17:35:21,145 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:21" (2/2) ...
[2020-11-25 17:35:21,145 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 17:35:21,146 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 17:35:21,146 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 17:35:21,146 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 17:35:21,147 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/2) ...
[2020-11-25 17:35:21,208 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 17:35:21,208 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 17:35:21,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 17:35:21,209 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 17:35:21,209 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,210 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,210 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,210 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,210 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 17:35:21,210 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 17:35:21,210 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 17:35:21,210 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 17:35:21,210 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 17:35:21,211 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 17:35:21,211 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 17:35:21,211 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 17:35:21,211 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 17:35:21,211 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 17:35:21,211 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-25 17:35:21,211 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-25 17:35:21,211 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-25 17:35:21,211 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-25 17:35:21,211 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 17:35:21,212 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 17:35:21,212 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 17:35:21,212 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 17:35:21,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 17:35:21,213 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 17:35:21,213 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 17:35:21,213 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 17:35:21,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 17:35:21,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 17:35:21,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit
[2020-11-25 17:35:21,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit
[2020-11-25 17:35:21,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit
[2020-11-25 17:35:21,214 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit
[2020-11-25 17:35:21,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 17:35:21,215 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 17:35:21,216 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GokuMarketCredit
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,217 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 17:35:21,218 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 17:35:21,219 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,220 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 17:35:21,221 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__fail
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit__success
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure GokuMarketCredit_GokuMarketCredit__fail
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__success
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__fail
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit__success
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GokuMarketCredit__fail
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit__success
[2020-11-25 17:35:21,222 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GokuMarketCredit__fail
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit__success
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GokuMarketCredit__fail
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit__success
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_GokuMarketCredit__fail
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 17:35:21,223 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 17:35:21,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 17:35:21,225 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-25 17:35:21,226 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 17:35:21,227 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 17:35:21,228 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__fail
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit__fail
[2020-11-25 17:35:21,229 INFO  L138     BoogieDeclarations]: Found implementation of procedure GokuMarketCredit_GokuMarketCredit__success
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__fail
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_GokuMarketCredit__success
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit__fail
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GokuMarketCredit__success
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit__fail
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GokuMarketCredit__success
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit__fail
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GokuMarketCredit__success
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit__fail
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_GokuMarketCredit__success
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 17:35:21,230 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 17:35:21,231 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GokuMarketCredit
[2020-11-25 17:35:21,232 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 17:35:21,232 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 17:35:21,233 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 17:35:21,470 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:21,470 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:21,471 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:21,698 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 17:35:22,020 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 17:35:22,021 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 17:35:22,023 INFO  L202        PluginConnector]: Adding new model GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:22 BoogieIcfgContainer
[2020-11-25 17:35:22,023 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:21" (2/2) ...
[2020-11-25 17:35:22,023 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 17:35:22,023 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5c1d666b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:22, skipping insertion in model container
[2020-11-25 17:35:22,023 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 17:35:22,024 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 17:35:22,024 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 17:35:22,026 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 17:35:22,026 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/3) ...
[2020-11-25 17:35:22,026 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@6e5b9546 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:22, skipping insertion in model container
[2020-11-25 17:35:22,027 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:21" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 17:35:22,063 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:22 NWAContainer
[2020-11-25 17:35:22,063 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 17:35:22,063 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 17:35:22,064 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 17:35:22,064 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 17:35:22,065 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:22" (3/4) ...
[2020-11-25 17:35:22,066 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2d78b31a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:22, skipping insertion in model container
[2020-11-25 17:35:22,066 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:22" (4/4) ...
[2020-11-25 17:35:22,069 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 17:35:22,073 INFO  L110   BuchiProductObserver]: Initial RCFG 1782 locations, 2381 edges
[2020-11-25 17:35:22,073 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 17:35:22,084 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 17:35:23,596 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 17:35:23,602 INFO  L110   BuchiProductObserver]: BuchiProgram size 4398 locations, 7806 edges
[2020-11-25 17:35:23,602 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:23 BoogieIcfgContainer
[2020-11-25 17:35:23,602 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 17:35:23,603 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 17:35:23,603 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 17:35:23,604 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 17:35:23,604 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:23" (1/1) ...
[2020-11-25 17:35:23,715 INFO  L313           BlockEncoder]: Initial Icfg 4398 locations, 7806 edges
[2020-11-25 17:35:23,716 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 17:35:23,716 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 17:35:23,716 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 17:35:23,717 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 17:35:23,731 INFO  L70    emoveInfeasibleEdges]: Removed 96 edges and 19 locations because of local infeasibility
[2020-11-25 17:35:23,744 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 17:35:23,758 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 17:35:23,765 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 17:35:23,770 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 17:35:23,771 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 17:35:23,778 INFO  L313           BlockEncoder]: Encoded RCFG 4334 locations, 7643 edges
[2020-11-25 17:35:23,779 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:35:23 BasicIcfg
[2020-11-25 17:35:23,779 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 17:35:23,779 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 17:35:23,779 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 17:35:23,782 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 17:35:23,782 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:23,782 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:35:20" (1/6) ...
[2020-11-25 17:35:23,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19babcc4 and model type GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:35:23, skipping insertion in model container
[2020-11-25 17:35:23,785 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:23,785 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:35:21" (2/6) ...
[2020-11-25 17:35:23,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19babcc4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:35:23, skipping insertion in model container
[2020-11-25 17:35:23,786 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:23,786 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:35:22" (3/6) ...
[2020-11-25 17:35:23,786 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19babcc4 and model type GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:35:23, skipping insertion in model container
[2020-11-25 17:35:23,786 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:23,786 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:35:22" (4/6) ...
[2020-11-25 17:35:23,787 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19babcc4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:35:23, skipping insertion in model container
[2020-11-25 17:35:23,787 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:23,787 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:35:23" (5/6) ...
[2020-11-25 17:35:23,787 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@19babcc4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:35:23, skipping insertion in model container
[2020-11-25 17:35:23,787 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 17:35:23,787 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:35:23" (6/6) ...
[2020-11-25 17:35:23,789 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GokuMarketCredit_0xa6272359bc37f61AF398071B65C8934ACA744d53_transferfrom-normal.bpl_BEv2
[2020-11-25 17:35:23,829 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 17:35:23,830 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 17:35:23,830 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 17:35:23,830 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 17:35:23,830 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 17:35:23,830 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 17:35:23,831 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 17:35:23,831 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 17:35:23,831 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 17:35:23,900 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4334 states.
[2020-11-25 17:35:23,957 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:23,958 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:23,958 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:23,967 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:23,967 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:23,967 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 17:35:23,967 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4334 states.
[2020-11-25 17:35:23,991 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:23,991 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:23,991 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:23,993 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:23,993 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND TRUE   revert
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND TRUE   choice == 16
[L4894]              gas := gas - 21000;
[L4895]  COND FALSE  !(gas >= 0)
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:24,010 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:24,011 INFO  L82        PathProgramCache]: Analyzing trace with hash 637488927, now seen corresponding path program 1 times
[2020-11-25 17:35:24,016 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:24,035 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:24,072 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:35:24,073 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:24,074 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 17:35:24,315 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:24,327 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 17:35:24,327 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 17:35:24,329 INFO  L87              Difference]: Start difference. First operand 4334 states. Second operand 3 states.
[2020-11-25 17:35:24,526 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:24,526 INFO  L93              Difference]: Finished difference Result 2560 states and 2917 transitions.
[2020-11-25 17:35:24,526 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 17:35:24,527 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2560 states and 2917 transitions.
[2020-11-25 17:35:24,540 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:24,558 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2560 states to 2556 states and 2909 transitions.
[2020-11-25 17:35:24,559 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 17:35:24,561 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 652
[2020-11-25 17:35:24,561 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2556 states and 2909 transitions.
[2020-11-25 17:35:24,567 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:24,567 INFO  L728         BuchiCegarLoop]: Abstraction has 2556 states and 2909 transitions.
[2020-11-25 17:35:24,581 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2556 states and 2909 transitions.
[2020-11-25 17:35:24,626 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2556 to 2556.
[2020-11-25 17:35:24,626 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2556 states.
[2020-11-25 17:35:24,630 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2556 states to 2556 states and 2909 transitions.
[2020-11-25 17:35:24,631 INFO  L751         BuchiCegarLoop]: Abstraction has 2556 states and 2909 transitions.
[2020-11-25 17:35:24,631 INFO  L631         BuchiCegarLoop]: Abstraction has 2556 states and 2909 transitions.
[2020-11-25 17:35:24,631 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 17:35:24,631 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2556 states and 2909 transitions.
[2020-11-25 17:35:24,636 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:24,637 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:24,637 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:24,638 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:24,638 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND TRUE   revert
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L695]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2621]  COND TRUE   !(_value_s419 <= balances_BasicToken[this][_from_s419])
[L2622]              revert := true;
[L695]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L696]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && balances_BasicToken[this][_from_s419] == old(balances_BasicToken[this][_from_s419]) - _value_s419) && balances_BasicToken[this][_to_s419] == old(balances_BasicToken[this][_to_s419]) + _value_s419) && allowed_StandardToken[this][_from_s419][msgsender_MSG] == old(allowed_StandardToken[this][_from_s419][msgsender_MSG]) - _value_s419) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND FALSE  !(__exception)
[L695]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2621]  COND TRUE   !(_value_s419 <= balances_BasicToken[this][_from_s419])
[L2622]              revert := true;
[L695]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L696]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((__ret_0_ == true && balances_BasicToken[this][_from_s419] == old(balances_BasicToken[this][_from_s419]) - _value_s419) && balances_BasicToken[this][_to_s419] == old(balances_BasicToken[this][_to_s419]) + _value_s419) && allowed_StandardToken[this][_from_s419][msgsender_MSG] == old(allowed_StandardToken[this][_from_s419][msgsender_MSG]) - _value_s419) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this][p1] == old(balances_BasicToken[this][p1])) && allowed_StandardToken[this][p2][p3] == old(allowed_StandardToken[this][p2][p3])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:24,642 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:24,642 INFO  L82        PathProgramCache]: Analyzing trace with hash 842047142, now seen corresponding path program 1 times
[2020-11-25 17:35:24,643 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:24,651 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:24,672 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 17:35:24,672 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:24,673 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 17:35:24,674 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:24,674 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 17:35:24,674 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 17:35:24,674 INFO  L87              Difference]: Start difference. First operand 2556 states and 2909 transitions. cyclomatic complexity: 355 Second operand 4 states.
[2020-11-25 17:35:25,057 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:25,057 INFO  L93              Difference]: Finished difference Result 3540 states and 4039 transitions.
[2020-11-25 17:35:25,057 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 17:35:25,057 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3540 states and 4039 transitions.
[2020-11-25 17:35:25,071 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 17:35:25,087 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3540 states to 3432 states and 3911 transitions.
[2020-11-25 17:35:25,087 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 857
[2020-11-25 17:35:25,088 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 862
[2020-11-25 17:35:25,088 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3432 states and 3911 transitions.
[2020-11-25 17:35:25,094 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:25,094 INFO  L728         BuchiCegarLoop]: Abstraction has 3432 states and 3911 transitions.
[2020-11-25 17:35:25,097 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3432 states and 3911 transitions.
[2020-11-25 17:35:25,124 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3432 to 2596.
[2020-11-25 17:35:25,124 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2596 states.
[2020-11-25 17:35:25,128 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2596 states to 2596 states and 2831 transitions.
[2020-11-25 17:35:25,128 INFO  L751         BuchiCegarLoop]: Abstraction has 2596 states and 2831 transitions.
[2020-11-25 17:35:25,128 INFO  L631         BuchiCegarLoop]: Abstraction has 2596 states and 2831 transitions.
[2020-11-25 17:35:25,128 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 17:35:25,128 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2596 states and 2831 transitions.
[2020-11-25 17:35:25,133 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:25,133 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:25,133 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:25,136 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:25,136 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND TRUE   !(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419])
[L2578]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND TRUE   !(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419])
[L2578]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:25,140 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:25,141 INFO  L82        PathProgramCache]: Analyzing trace with hash 1958382333, now seen corresponding path program 1 times
[2020-11-25 17:35:25,141 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:25,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:25,257 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-25 17:35:25,257 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:25,257 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 17:35:25,258 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:25,258 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 17:35:25,258 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 17:35:25,258 INFO  L87              Difference]: Start difference. First operand 2596 states and 2831 transitions. cyclomatic complexity: 237 Second operand 6 states.
[2020-11-25 17:35:25,896 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:25,896 INFO  L93              Difference]: Finished difference Result 2788 states and 3040 transitions.
[2020-11-25 17:35:25,897 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 17:35:25,897 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2788 states and 3040 transitions.
[2020-11-25 17:35:25,906 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 17:35:25,917 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2788 states to 2788 states and 3040 transitions.
[2020-11-25 17:35:25,917 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 744
[2020-11-25 17:35:25,918 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 744
[2020-11-25 17:35:25,918 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2788 states and 3040 transitions.
[2020-11-25 17:35:25,921 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:25,921 INFO  L728         BuchiCegarLoop]: Abstraction has 2788 states and 3040 transitions.
[2020-11-25 17:35:25,924 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2788 states and 3040 transitions.
[2020-11-25 17:35:25,947 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2788 to 2652.
[2020-11-25 17:35:25,948 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2652 states.
[2020-11-25 17:35:25,950 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2652 states to 2652 states and 2891 transitions.
[2020-11-25 17:35:25,950 INFO  L751         BuchiCegarLoop]: Abstraction has 2652 states and 2891 transitions.
[2020-11-25 17:35:25,951 INFO  L631         BuchiCegarLoop]: Abstraction has 2652 states and 2891 transitions.
[2020-11-25 17:35:25,951 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 17:35:25,951 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2652 states and 2891 transitions.
[2020-11-25 17:35:25,955 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:25,955 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:25,955 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:25,958 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:25,958 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND TRUE   !(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG])
[L2582]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND TRUE   !(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG])
[L2582]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:25,962 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:25,962 INFO  L82        PathProgramCache]: Analyzing trace with hash 1257305949, now seen corresponding path program 1 times
[2020-11-25 17:35:25,962 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:25,973 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 17:35:26,039 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-25 17:35:26,040 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 17:35:26,040 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 17:35:26,040 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 17:35:26,040 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 17:35:26,040 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 17:35:26,040 INFO  L87              Difference]: Start difference. First operand 2652 states and 2891 transitions. cyclomatic complexity: 241 Second operand 6 states.
[2020-11-25 17:35:26,767 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 17:35:26,767 INFO  L93              Difference]: Finished difference Result 2782 states and 3034 transitions.
[2020-11-25 17:35:26,768 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 17:35:26,768 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2782 states and 3034 transitions.
[2020-11-25 17:35:26,775 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 17:35:26,785 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2782 states to 2782 states and 3034 transitions.
[2020-11-25 17:35:26,785 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 741
[2020-11-25 17:35:26,786 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 741
[2020-11-25 17:35:26,786 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2782 states and 3034 transitions.
[2020-11-25 17:35:26,788 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 17:35:26,788 INFO  L728         BuchiCegarLoop]: Abstraction has 2782 states and 3034 transitions.
[2020-11-25 17:35:26,791 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2782 states and 3034 transitions.
[2020-11-25 17:35:26,814 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2782 to 2652.
[2020-11-25 17:35:26,815 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2652 states.
[2020-11-25 17:35:26,818 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2652 states to 2652 states and 2891 transitions.
[2020-11-25 17:35:26,819 INFO  L751         BuchiCegarLoop]: Abstraction has 2652 states and 2891 transitions.
[2020-11-25 17:35:26,819 INFO  L631         BuchiCegarLoop]: Abstraction has 2652 states and 2891 transitions.
[2020-11-25 17:35:26,819 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 17:35:26,819 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2652 states and 2891 transitions.
[2020-11-25 17:35:26,823 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 17:35:26,823 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 17:35:26,823 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 17:35:26,825 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 17:35:26,825 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StandardToken0 := false;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5004]              assume null == 0;
[L5005]  CALL        call this := FreshRefGenerator__success();
[L2075]              havoc newRef;
[L2076]              assume Alloc[newRef] == false;
[L2077]              Alloc[newRef] := true;
[L2078]              assume newRef != null;
[L5005]  RET         call this := FreshRefGenerator__success();
[L5006]              assume now >= 0;
[L5007]              assume DType[this] == GokuMarketCredit;
[L5008]              assume msgvalue_MSG == 0;
[L5009]              gas := gas - 53000;
[L5010]  CALL        call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
[L5011]              assume !revert && gas >= 0;
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

Loop:
[L5014]  CALL        call CorralChoice_GokuMarketCredit(this);
[L4842]              havoc msgsender_MSG;
[L4843]              havoc msgvalue_MSG;
[L4844]              havoc choice;
[L4845]              havoc __ret_0_totalSupply;
[L4846]              havoc _owner_s214;
[L4847]              havoc __ret_0_balanceOf;
[L4848]              havoc _to_s202;
[L4849]              havoc _value_s202;
[L4850]              havoc __ret_0_transfer;
[L4851]              havoc _value_s235;
[L4852]              havoc _owner_s463;
[L4853]              havoc _spender_s463;
[L4854]              havoc __ret_0_allowance;
[L4855]              havoc _from_s419;
[L4856]              havoc _to_s419;
[L4857]              havoc _value_s419;
[L4858]              havoc __ret_0_transferFrom;
[L4859]              havoc _spender_s447;
[L4860]              havoc _value_s447;
[L4861]              havoc __ret_0_approve;
[L4862]              havoc _spender_s505;
[L4863]              havoc _addedValue_s505;
[L4864]              havoc __ret_0_increaseApproval;
[L4865]              havoc _spender_s565;
[L4866]              havoc _subtractedValue_s565;
[L4867]              havoc __ret_0_decreaseApproval;
[L4868]              havoc __ret_0_owner;
[L4869]              havoc _newOwner_s610;
[L4870]              havoc __ret_0_name;
[L4871]              havoc __ret_0_symbol;
[L4872]              havoc __ret_0_decimals;
[L4873]              havoc __ret_0_INITIAL_SUPPLY;
[L4874]              havoc tokenAddress_s697;
[L4875]              havoc tokens_s697;
[L4876]              havoc success_s697;
[L4877]              havoc tmpNow;
[L4878]              havoc gas;
[L4879]              assume gas > 4000000 && gas <= 8000000;
[L4880]              tmpNow := now;
[L4881]              havoc now;
[L4882]              assume now > tmpNow;
[L4883]              assume msgsender_MSG != null;
[L4884]              assume DType[msgsender_MSG] != ERC20Basic;
[L4885]              assume DType[msgsender_MSG] != SafeMath;
[L4886]              assume DType[msgsender_MSG] != BasicToken;
[L4887]              assume DType[msgsender_MSG] != BurnableToken;
[L4888]              assume DType[msgsender_MSG] != ERC20;
[L4889]              assume DType[msgsender_MSG] != StandardToken;
[L4890]              assume DType[msgsender_MSG] != Ownable;
[L4891]              assume DType[msgsender_MSG] != GokuMarketCredit;
[L4892]              Alloc[msgsender_MSG] := true;
[L4893]  COND FALSE  !(choice == 16)
[L4899]  COND FALSE  !(choice == 15)
[L4905]  COND FALSE  !(choice == 14)
[L4912]  COND FALSE  !(choice == 13)
[L4919]  COND FALSE  !(choice == 12)
[L4925]  COND TRUE   choice == 11
[L4926]              gas := gas - 21000;
[L4927]  COND TRUE   gas >= 0
[L4928]              assume _value_s419 >= 0 && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4929]              assume msgvalue_MSG == 0;
[L4930]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L5014]  RET         call CorralChoice_GokuMarketCredit(this);

[2020-11-25 17:35:26,830 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:26,831 INFO  L82        PathProgramCache]: Analyzing trace with hash -2062120652, now seen corresponding path program 1 times
[2020-11-25 17:35:26,831 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:26,865 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:26,894 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:27,007 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:27,007 INFO  L82        PathProgramCache]: Analyzing trace with hash 2015099606, now seen corresponding path program 1 times
[2020-11-25 17:35:27,008 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:27,014 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:27,020 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:27,034 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 17:35:27,034 INFO  L82        PathProgramCache]: Analyzing trace with hash 42420937, now seen corresponding path program 1 times
[2020-11-25 17:35:27,035 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 17:35:27,064 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:27,099 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 17:35:27,346 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 172 DAG size of output: 163
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2017 to 4027
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 17:35:27,529 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification. DAG size of input: 119 DAG size of output: 113
[2020-11-25 17:35:27,646 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification that was a NOOP. DAG size: 263
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6271 to 12541
[2020-11-25 17:35:28,313 WARN  L188               SmtUtils]: Spent 650.00 ms on a formula simplification. DAG size of input: 219 DAG size of output: 219
[2020-11-25 17:35:29,070 WARN  L188               SmtUtils]: Spent 754.00 ms on a formula simplification. DAG size of input: 287 DAG size of output: 268
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 17:35:29,509 WARN  L188               SmtUtils]: Spent 385.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 171
[2020-11-25 17:35:29,738 WARN  L188               SmtUtils]: Spent 227.00 ms on a formula simplification that was a NOOP. DAG size: 324
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 17:35:30,339 WARN  L188               SmtUtils]: Spent 590.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 261
[2020-11-25 17:35:30,585 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification that was a NOOP. DAG size: 261
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4357 to 8713
[2020-11-25 17:35:30,980 WARN  L188               SmtUtils]: Spent 376.00 ms on a formula simplification. DAG size of input: 212 DAG size of output: 185
[2020-11-25 17:35:30,989 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-25 17:35:31,443 WARN  L188               SmtUtils]: Spent 246.00 ms on a formula simplification. DAG size of input: 231 DAG size of output: 219
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-25 17:35:31,999 WARN  L188               SmtUtils]: Spent 144.00 ms on a formula simplification that was a NOOP. DAG size: 261
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
[2020-11-25 17:35:32,638 WARN  L188               SmtUtils]: Spent 625.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 217
[2020-11-25 17:35:33,562 WARN  L188               SmtUtils]: Spent 922.00 ms on a formula simplification. DAG size of input: 284 DAG size of output: 266
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 17:35:33,814 WARN  L188               SmtUtils]: Spent 233.00 ms on a formula simplification. DAG size of input: 171 DAG size of output: 165
[2020-11-25 17:35:34,045 WARN  L188               SmtUtils]: Spent 229.00 ms on a formula simplification that was a NOOP. DAG size: 318
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 17:35:34,512 WARN  L188               SmtUtils]: Spent 459.00 ms on a formula simplification. DAG size of input: 257 DAG size of output: 257
[2020-11-25 17:35:35,460 WARN  L188               SmtUtils]: Spent 946.00 ms on a formula simplification. DAG size of input: 447 DAG size of output: 432
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10513 to 21023
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
[2020-11-25 17:35:36,158 WARN  L188               SmtUtils]: Spent 679.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 216
[2020-11-25 17:35:36,418 WARN  L188               SmtUtils]: Spent 243.00 ms on a formula simplification that was a NOOP. DAG size: 322
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 17419 to 34819
[2020-11-25 17:35:37,006 WARN  L188               SmtUtils]: Spent 561.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 206
[2020-11-25 17:35:37,553 WARN  L188               SmtUtils]: Spent 545.00 ms on a formula simplification. DAG size of input: 314 DAG size of output: 313
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31699 to 63397
[2020-11-25 17:35:38,395 WARN  L188               SmtUtils]: Spent 823.00 ms on a formula simplification. DAG size of input: 353 DAG size of output: 308
[2020-11-25 17:35:38,413 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:38,433 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 17:35:38,445 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:35:38 BasicIcfg
[2020-11-25 17:35:38,445 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 17:35:38,445 INFO  L168              Benchmark]: Toolchain (without parser) took 17493.43 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 935.2 MB in the beginning and 943.2 MB in the end (delta: -8.0 MB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,446 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,446 INFO  L168              Benchmark]: Boogie Preprocessor took 103.29 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,446 INFO  L168              Benchmark]: UtopiaSpecLang took 65.00 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,446 INFO  L168              Benchmark]: Boogie Printer took 23.15 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,447 INFO  L168              Benchmark]: RCFGBuilder took 877.75 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 758.0 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,447 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.56 ms. Allocated memory is still 1.0 GB. Free memory was 758.0 MB in the beginning and 754.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,447 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1538.88 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 754.4 MB in the beginning and 777.6 MB in the end (delta: -23.2 MB). Peak memory consumption was 178.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,447 INFO  L168              Benchmark]: BlockEncodingV2 took 176.24 ms. Allocated memory is still 1.2 GB. Free memory was 777.6 MB in the beginning and 698.9 MB in the end (delta: 78.7 MB). Peak memory consumption was 78.7 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,448 INFO  L168              Benchmark]: BuchiAutomizer took 14665.84 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 698.9 MB in the beginning and 943.2 MB in the end (delta: -244.3 MB). Peak memory consumption was 870.9 MB. Max. memory is 15.3 GB.
[2020-11-25 17:35:38,450 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4398 locations, 7806 edges
  - StatisticsResult: Encoded RCFG
    4334 locations, 7643 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 103.29 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 65.00 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 23.15 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 877.75 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 758.0 MB in the end (delta: 145.0 MB). Peak memory consumption was 145.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.56 ms. Allocated memory is still 1.0 GB. Free memory was 758.0 MB in the beginning and 754.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1538.88 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 754.4 MB in the beginning and 777.6 MB in the end (delta: -23.2 MB). Peak memory consumption was 178.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 176.24 ms. Allocated memory is still 1.2 GB. Free memory was 777.6 MB in the beginning and 698.9 MB in the end (delta: 78.7 MB). Peak memory consumption was 78.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 14665.84 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 698.9 MB in the beginning and 943.2 MB in the end (delta: -244.3 MB). Peak memory consumption was 870.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1782 locations, 2381 edges
  - StatisticsResult: BuchiProgram size
    4398 locations, 7806 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 2652 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 14.6s and 5 iterations.  TraceHistogramMax:8. Analysis of lassos took 12.1s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1102 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2652 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 11527 SDtfs, 10441 SDslu, 13332 SDs, 0 SdLazy, 9081 SolverSat, 2107 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639828) = (new GokuMarketCredit)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639825});
[L1142]              havoc __exception;
[L1143]              revert := false;
[L1144]  COND FALSE  !(__exception)
[L1167]  CALL        call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L2950]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2950]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2951]  COND FALSE  !(revert)
[L2954]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2954]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2955]  COND FALSE  !(revert)
[L2958]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2958]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2959]  COND FALSE  !(revert)
[L2962]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2553]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2553]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2554]  COND FALSE  !(revert)
[L2557]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2501]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2502]  COND FALSE  !(revert)
[L2505]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2482]              assume msgsender_MSG != null;
[L2483]              Balance[this] := 0;
[L2505]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2506]  COND FALSE  !(revert)
[L2557]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2558]  COND FALSE  !(revert)
[L2561]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2561]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2565]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2524]              assume msgsender_MSG != null;
[L2525]              Balance[this] := 0;
[L2526]              allowed_StandardToken[this] := zeroRefRefintArr();
[L2527]              sum_allowed1[this] := 0;
[L2565]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2566]  COND FALSE  !(revert)
[L2962]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2963]  COND FALSE  !(revert)
[L2966]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2377]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2377]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2378]  COND FALSE  !(revert)
[L2381]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2244]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2092]              assume msgsender_MSG != null;
[L2093]              Balance[this] := 0;
[L2107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2108]  COND FALSE  !(revert)
[L2244]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L2245]  COND FALSE  !(revert)
[L2248]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2222]              assume msgsender_MSG != null;
[L2223]              Balance[this] := 0;
[L2224]              balances_BasicToken[this] := zeroRefintArr();
[L2225]              sum_balances0[this] := 0;
[L2226]              totalSupply__BasicToken[this] := 0;
[L2248]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2249]  COND FALSE  !(revert)
[L2381]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2382]  COND FALSE  !(revert)
[L2385]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2354]              assume msgsender_MSG != null;
[L2355]              Balance[this] := 0;
[L2385]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2386]  COND FALSE  !(revert)
[L2966]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L2967]  COND FALSE  !(revert)
[L2970]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2778]              assume msgsender_MSG != null;
[L2779]              Balance[this] := 0;
[L2780]              owner_Ownable[this] := null;
[L2782]              owner_Ownable[this] := msgsender_MSG;
[L2795]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2970]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L2971]  COND FALSE  !(revert)
[L2974]  CALL        call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2900]              assume msgsender_MSG != null;
[L2901]              Balance[this] := 0;
[L2902]              name_GokuMarketCredit[this] := -1649829923;
[L2903]              symbol_GokuMarketCredit[this] := 1836184011;
[L2904]              decimals_GokuMarketCredit[this] := 18;
[L2905]              __var_13 := decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2906]              INITIAL_SUPPLY_GokuMarketCredit[this] := 50000000 * (nonlinearPow(10, decimals_GokuMarketCredit[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2908]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2909]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L2910]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_GokuMarketCredit[this];
[L2911]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L2974]  RET         call GokuMarketCredit_GokuMarketCredit_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2975]  COND FALSE  !(revert)
[L1167]  RET         call GokuMarketCredit_GokuMarketCredit__success(this, msgsender_MSG, msgvalue_MSG);
[L1168]              assume !revert && gas >= 0;
[L5010]  RET         call GokuMarketCredit_GokuMarketCredit(this, msgsender_MSG, msgvalue_MSG);
StandardToken(115792089237316195423570985008687907853269984665640564039457584007913129639828).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639817, _from : 115792089237316195423570985008687907853269984665640564039457584007913129639818, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);

Loop:
StandardToken(115792089237316195423570985008687907853269984665640564039457584007913129639828).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639826, _from : 115792089237316195423570985008687907853269984665640564039457584007913129639827, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s419 && p1 != _to_s419) && (p2 != _from_s419 || p3 != msgsender_MSG)) && _from_s419 != _to_s419) && _value_s419 <= balances_BasicToken[this][_from_s419]) && _value_s419 <= allowed_StandardToken[this][_from_s419][msgsender_MSG]) && balances_BasicToken[this][_to_s419] + _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s419 >= 0) && _value_s419 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s419] >= 0) && balances_BasicToken[this][_to_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s419] >= 0) && balances_BasicToken[this][_from_s419] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s419][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s419][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StandardToken0 := true;
[L3]                 call_transferFrom_StandardToken0 := false;
[L3]                 revert := revert_hold;
[L670]               havoc __exception;
[L671]               revert := false;
[L672]   COND TRUE   __exception
[L673]               __tmp__Balance := Balance;
[L674]               __tmp__DType := DType;
[L675]               __tmp__Alloc := Alloc;
[L676]               __tmp__balance_ADDR := balance_ADDR;
[L677]               __tmp__M_Ref_int := M_Ref_int;
[L678]               __tmp__sum_balances0 := sum_balances0;
[L679]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L680]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L681]               __tmp__sum_allowed1 := sum_allowed1;
[L682]               __tmp__Length := Length;
[L683]               __tmp__now := now;
[L684]               __tmp__balances_BasicToken := balances_BasicToken;
[L685]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L686]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L687]               __tmp__owner_Ownable := owner_Ownable;
[L688]               __tmp__name_GokuMarketCredit := name_GokuMarketCredit;
[L689]               __tmp__symbol_GokuMarketCredit := symbol_GokuMarketCredit;
[L690]               __tmp__decimals_GokuMarketCredit := decimals_GokuMarketCredit;
[L691]               __tmp__INITIAL_SUPPLY_GokuMarketCredit := INITIAL_SUPPLY_GokuMarketCredit;
[L692]   CALL        call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L2577]  COND FALSE  !(!(_value_s419 <= __tmp__balances_BasicToken[this][_from_s419]))
[L2581]  COND FALSE  !(!(_value_s419 <= __tmp__allowed_StandardToken[this][_from_s419][msgsender_MSG]))
[L2585]              __var_6 := null;
[L2586]  COND TRUE   !(_to_s419 != null)
[L2587]              revert := true;
[L692]   RET         call __ret_0_ := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);
[L693]               assume revert || gas < 0;
[L4930]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_StandardToken(this, msgsender_MSG, msgvalue_MSG, _from_s419, _to_s419, _value_s419);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
