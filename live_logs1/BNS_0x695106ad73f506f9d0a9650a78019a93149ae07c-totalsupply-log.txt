This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:12:52,908 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:12:52,909 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:12:52,921 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:12:52,921 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:12:52,922 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:12:52,923 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:12:52,924 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:12:52,926 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:12:52,926 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:12:52,927 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:12:52,927 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:12:52,928 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:12:52,929 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:12:52,930 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:12:52,930 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:12:52,931 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:12:52,932 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:12:52,933 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:12:52,935 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:12:52,936 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:12:52,937 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:12:52,939 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:12:52,939 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:12:52,939 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:12:52,940 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:12:52,940 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:12:52,941 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:12:52,941 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:12:52,941 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:12:52,942 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:12:52,942 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:12:52,943 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:12:52,943 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:12:52,944 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:12:52,944 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:12:52,945 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:12:52,945 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:12:52,945 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:12:52,946 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:12:52,946 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:12:52,946 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:12:52,954 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:12:52,955 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:12:52,955 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:12:52,956 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:12:52,956 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:12:52,956 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:12:52,956 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:12:52,956 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:12:52,956 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:12:52,957 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:12:52,957 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:12:52,957 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:12:52,958 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:12:52,958 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:12:52,983 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:12:52,995 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:12:52,998 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:12:52,999 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:12:52,999 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:12:53,000 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl
[2020-11-25 01:12:53,000 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl'
[2020-11-25 01:12:53,084 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:12:53,085 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:12:53,085 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:12:53,085 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:12:53,085 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:12:53,102 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,103 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,138 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,139 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,160 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,171 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,180 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,190 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:12:53,190 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:12:53,191 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:12:53,193 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:12:53,197 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/1) ...
[2020-11-25 01:12:53,217 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:12:53,222 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:12:53,230 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:12:53,236 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_ERC20[this]>=0 && _totalSupply_ERC20[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:12:53,239 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==_totalSupply_ERC20[this] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowed_ERC20[this]==( old(_allowed_ERC20[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_ERC20>],ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]]
[2020-11-25 01:12:53,244 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowed_ERC20[this] == old(_allowed_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-25 01:12:53,245 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_ERC200) ==> ( <>AP(success_totalSupply_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:12:53,254 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:12:53 PropertyContainer
[2020-11-25 01:12:53,254 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:12:53,254 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:12:53,254 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:12:53,255 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:12:53,255 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/2) ...
[2020-11-25 01:12:53,256 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:12:53,256 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:12:53,271 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:12:53" (2/2) ...
[2020-11-25 01:12:53,271 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:12:53,272 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:12:53,272 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:12:53,272 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:12:53,272 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/2) ...
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:12:53,325 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:12:53,325 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:12:53,326 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,326 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,327 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,327 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,327 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:12:53,327 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:12:53,327 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:12:53,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:12:53,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:12:53,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:12:53,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:12:53,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:12:53,328 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:12:53,328 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:12:53,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:12:53,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:12:53,329 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:12:53,329 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 01:12:53,330 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:12:53,330 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:12:53,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 01:12:53,330 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:12:53,330 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:12:53,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS
[2020-11-25 01:12:53,331 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:12:53,331 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BNS
[2020-11-25 01:12:53,332 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:12:53,333 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:12:53,334 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:12:53,335 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:12:53,336 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:12:53,337 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__success
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure BNS_BNS__fail
[2020-11-25 01:12:53,338 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:12:53,339 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:12:53,339 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:12:53,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:12:53,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:12:53,342 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 01:12:53,343 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 01:12:53,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__fail
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS_NoBaseCtor__success
[2020-11-25 01:12:53,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__fail
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure BNS_BNS__success
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:12:53,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BNS
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:12:53,347 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:12:53,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:12:53,550 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:12:53,550 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:12:53,551 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:12:54,127 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:12:54,128 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 01:12:54,130 INFO  L202        PluginConnector]: Adding new model BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:12:54 BoogieIcfgContainer
[2020-11-25 01:12:54,130 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:12:53" (2/2) ...
[2020-11-25 01:12:54,131 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:12:54,131 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@83eae74 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:12:54, skipping insertion in model container
[2020-11-25 01:12:54,131 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:12:54,131 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:12:54,131 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:12:54,133 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:12:54,133 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/3) ...
[2020-11-25 01:12:54,133 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1a025bcb and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:12:54, skipping insertion in model container
[2020-11-25 01:12:54,134 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:12:53" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:12:54,173 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:12:54 NWAContainer
[2020-11-25 01:12:54,173 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:12:54,173 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:12:54,173 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:12:54,174 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:12:54,175 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:12:54" (3/4) ...
[2020-11-25 01:12:54,176 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2178e392 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:12:54, skipping insertion in model container
[2020-11-25 01:12:54,176 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:12:54" (4/4) ...
[2020-11-25 01:12:54,179 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:12:54,183 INFO  L110   BuchiProductObserver]: Initial RCFG 1599 locations, 2300 edges
[2020-11-25 01:12:54,184 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:12:54,198 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:12:55,533 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:12:55,539 INFO  L110   BuchiProductObserver]: BuchiProgram size 4092 locations, 7555 edges
[2020-11-25 01:12:55,539 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:12:55 BoogieIcfgContainer
[2020-11-25 01:12:55,539 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:12:55,539 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:12:55,540 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:12:55,541 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:12:55,541 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:12:55" (1/1) ...
[2020-11-25 01:12:55,633 INFO  L313           BlockEncoder]: Initial Icfg 4092 locations, 7555 edges
[2020-11-25 01:12:55,634 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:12:55,634 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:12:55,634 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:12:55,635 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:12:55,646 INFO  L70    emoveInfeasibleEdges]: Removed 120 edges and 15 locations because of local infeasibility
[2020-11-25 01:12:55,655 INFO  L70        RemoveSinkStates]: Removed 68 edges and 45 locations by removing sink states
[2020-11-25 01:12:55,668 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:12:55,672 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:12:55,676 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:12:55,677 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:12:55,683 INFO  L313           BlockEncoder]: Encoded RCFG 4012 locations, 7338 edges
[2020-11-25 01:12:55,683 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:12:55 BasicIcfg
[2020-11-25 01:12:55,683 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:12:55,683 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:12:55,683 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:12:55,686 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:12:55,686 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:12:55,686 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:12:53" (1/6) ...
[2020-11-25 01:12:55,688 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2e4553bf and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:12:55, skipping insertion in model container
[2020-11-25 01:12:55,688 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:12:55,688 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:12:53" (2/6) ...
[2020-11-25 01:12:55,689 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2e4553bf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:12:55, skipping insertion in model container
[2020-11-25 01:12:55,689 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:12:55,689 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:12:54" (3/6) ...
[2020-11-25 01:12:55,689 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2e4553bf and model type BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:12:55, skipping insertion in model container
[2020-11-25 01:12:55,689 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:12:55,689 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:12:54" (4/6) ...
[2020-11-25 01:12:55,690 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2e4553bf and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:12:55, skipping insertion in model container
[2020-11-25 01:12:55,690 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:12:55,690 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:12:55" (5/6) ...
[2020-11-25 01:12:55,690 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@2e4553bf and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:12:55, skipping insertion in model container
[2020-11-25 01:12:55,690 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:12:55,690 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:12:55" (6/6) ...
[2020-11-25 01:12:55,691 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BNS_0x695106ad73f506f9d0a9650a78019a93149ae07c_totalsupply.bpl_BEv2
[2020-11-25 01:12:55,727 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:12:55,727 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:12:55,728 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:12:55,728 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:12:55,728 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:12:55,728 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:12:55,728 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:12:55,728 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:12:55,728 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:12:55,771 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4012 states.
[2020-11-25 01:12:55,822 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:55,823 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:55,823 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:55,830 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:55,830 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:55,830 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:12:55,830 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4012 states.
[2020-11-25 01:12:55,849 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:55,849 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:55,849 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:55,850 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:55,850 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND TRUE   revert
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND TRUE   choice == 13
[L4464]              gas := gas - 21000;
[L4465]  COND FALSE  !(gas >= 0)
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:12:55,867 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:12:55,867 INFO  L82        PathProgramCache]: Analyzing trace with hash -263004281, now seen corresponding path program 1 times
[2020-11-25 01:12:55,873 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:12:55,891 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:12:55,927 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:12:55,929 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:12:55,930 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:12:55,933 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:12:56,143 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:12:56,144 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:12:56,145 INFO  L87              Difference]: Start difference. First operand 4012 states. Second operand 4 states.
[2020-11-25 01:12:56,579 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:12:56,579 INFO  L93              Difference]: Finished difference Result 2410 states and 2901 transitions.
[2020-11-25 01:12:56,582 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:12:56,583 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2410 states and 2901 transitions.
[2020-11-25 01:12:56,598 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:56,623 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2410 states to 2410 states and 2901 transitions.
[2020-11-25 01:12:56,623 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:12:56,626 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 604
[2020-11-25 01:12:56,626 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2410 states and 2901 transitions.
[2020-11-25 01:12:56,635 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:12:56,635 INFO  L728         BuchiCegarLoop]: Abstraction has 2410 states and 2901 transitions.
[2020-11-25 01:12:56,649 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2410 states and 2901 transitions.
[2020-11-25 01:12:56,690 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2410 to 2410.
[2020-11-25 01:12:56,691 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2410 states.
[2020-11-25 01:12:56,695 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2410 states to 2410 states and 2901 transitions.
[2020-11-25 01:12:56,695 INFO  L751         BuchiCegarLoop]: Abstraction has 2410 states and 2901 transitions.
[2020-11-25 01:12:56,695 INFO  L631         BuchiCegarLoop]: Abstraction has 2410 states and 2901 transitions.
[2020-11-25 01:12:56,695 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:12:56,695 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2410 states and 2901 transitions.
[2020-11-25 01:12:56,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:56,701 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:56,701 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:56,703 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:56,703 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND TRUE   revert
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:12:56,707 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:12:56,707 INFO  L82        PathProgramCache]: Analyzing trace with hash 791770501, now seen corresponding path program 1 times
[2020-11-25 01:12:56,708 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:12:56,716 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:12:56,734 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:12:56,734 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:12:56,734 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:12:56,736 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:12:56,736 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:12:56,736 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:12:56,737 INFO  L87              Difference]: Start difference. First operand 2410 states and 2901 transitions. cyclomatic complexity: 493 Second operand 3 states.
[2020-11-25 01:12:56,810 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:12:56,810 INFO  L93              Difference]: Finished difference Result 3270 states and 3965 transitions.
[2020-11-25 01:12:56,810 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:12:56,811 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3270 states and 3965 transitions.
[2020-11-25 01:12:56,823 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:12:56,837 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3270 states to 3270 states and 3965 transitions.
[2020-11-25 01:12:56,837 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 850
[2020-11-25 01:12:56,838 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 850
[2020-11-25 01:12:56,838 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3270 states and 3965 transitions.
[2020-11-25 01:12:56,844 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:12:56,844 INFO  L728         BuchiCegarLoop]: Abstraction has 3270 states and 3965 transitions.
[2020-11-25 01:12:56,846 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3270 states and 3965 transitions.
[2020-11-25 01:12:56,873 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3270 to 2770.
[2020-11-25 01:12:56,874 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2770 states.
[2020-11-25 01:12:56,878 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2770 states to 2770 states and 3361 transitions.
[2020-11-25 01:12:56,879 INFO  L751         BuchiCegarLoop]: Abstraction has 2770 states and 3361 transitions.
[2020-11-25 01:12:56,879 INFO  L631         BuchiCegarLoop]: Abstraction has 2770 states and 3361 transitions.
[2020-11-25 01:12:56,879 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:12:56,879 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2770 states and 3361 transitions.
[2020-11-25 01:12:56,884 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:56,884 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:56,884 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:56,887 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:56,887 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND TRUE   !(account_s464 != null)
[L2331]              revert := true;
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND TRUE   revert
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:12:56,891 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:12:56,891 INFO  L82        PathProgramCache]: Analyzing trace with hash 1549207652, now seen corresponding path program 1 times
[2020-11-25 01:12:56,892 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:12:56,906 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:12:56,957 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 28 refuted. 0 times theorem prover too weak. 91 trivial. 0 not checked.
[2020-11-25 01:12:56,957 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:12:56,957 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:12:56,958 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:12:56,958 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:12:56,958 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:12:56,958 INFO  L87              Difference]: Start difference. First operand 2770 states and 3361 transitions. cyclomatic complexity: 593 Second operand 7 states.
[2020-11-25 01:12:57,006 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:12:57,007 INFO  L93              Difference]: Finished difference Result 2778 states and 3368 transitions.
[2020-11-25 01:12:57,007 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:12:57,007 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2778 states and 3368 transitions.
[2020-11-25 01:12:57,017 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:57,027 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2778 states to 2769 states and 3359 transitions.
[2020-11-25 01:12:57,028 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 716
[2020-11-25 01:12:57,028 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 716
[2020-11-25 01:12:57,028 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2769 states and 3359 transitions.
[2020-11-25 01:12:57,031 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:12:57,031 INFO  L728         BuchiCegarLoop]: Abstraction has 2769 states and 3359 transitions.
[2020-11-25 01:12:57,033 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2769 states and 3359 transitions.
[2020-11-25 01:12:57,060 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2769 to 2769.
[2020-11-25 01:12:57,060 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2769 states.
[2020-11-25 01:12:57,064 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2769 states to 2769 states and 3359 transitions.
[2020-11-25 01:12:57,064 INFO  L751         BuchiCegarLoop]: Abstraction has 2769 states and 3359 transitions.
[2020-11-25 01:12:57,064 INFO  L631         BuchiCegarLoop]: Abstraction has 2769 states and 3359 transitions.
[2020-11-25 01:12:57,064 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:12:57,064 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2769 states and 3359 transitions.
[2020-11-25 01:12:57,070 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:12:57,071 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:57,071 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:57,073 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:57,073 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND FALSE  !(!(account_s464 != null))
[L2334]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND TRUE   !(c_s174 >= a_s174)
[L1828]              revert := true;
[L2334]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2335]  COND TRUE   revert
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND TRUE   revert
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:12:57,076 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:12:57,076 INFO  L82        PathProgramCache]: Analyzing trace with hash -1030998617, now seen corresponding path program 1 times
[2020-11-25 01:12:57,077 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:12:57,088 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:12:57,155 INFO  L134       CoverageAnalysis]: Checked inductivity of 119 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 119 trivial. 0 not checked.
[2020-11-25 01:12:57,155 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:12:57,155 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:12:57,156 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:12:57,156 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:12:57,156 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:12:57,156 INFO  L87              Difference]: Start difference. First operand 2769 states and 3359 transitions. cyclomatic complexity: 592 Second operand 3 states.
[2020-11-25 01:12:57,214 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:12:57,214 INFO  L93              Difference]: Finished difference Result 3263 states and 3783 transitions.
[2020-11-25 01:12:57,214 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:12:57,214 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3263 states and 3783 transitions.
[2020-11-25 01:12:57,223 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:12:57,235 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3263 states to 2990 states and 3449 transitions.
[2020-11-25 01:12:57,235 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 761
[2020-11-25 01:12:57,236 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 793
[2020-11-25 01:12:57,236 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2990 states and 3449 transitions.
[2020-11-25 01:12:57,239 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:12:57,239 INFO  L728         BuchiCegarLoop]: Abstraction has 2990 states and 3449 transitions.
[2020-11-25 01:12:57,242 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2990 states and 3449 transitions.
[2020-11-25 01:12:57,264 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2990 to 2705.
[2020-11-25 01:12:57,264 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2705 states.
[2020-11-25 01:12:57,267 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2705 states to 2705 states and 3094 transitions.
[2020-11-25 01:12:57,267 INFO  L751         BuchiCegarLoop]: Abstraction has 2705 states and 3094 transitions.
[2020-11-25 01:12:57,267 INFO  L631         BuchiCegarLoop]: Abstraction has 2705 states and 3094 transitions.
[2020-11-25 01:12:57,268 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:12:57,268 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2705 states and 3094 transitions.
[2020-11-25 01:12:57,271 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:12:57,271 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:57,271 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:57,273 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:57,273 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND FALSE  !(!(account_s464 != null))
[L2334]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2334]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2335]  COND FALSE  !(revert)
[L2338]              _totalSupply_ERC20[this] := __var_8;
[L2339]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2339]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2340]  COND FALSE  !(revert)
[L2343]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2344]              _balances_ERC20[this][account_s464] := __var_9;
[L2345]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2346]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND FALSE  !(revert)
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND FALSE  !(__exception)
[L275]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1913]              __ret_0_ := _totalSupply_ERC20[this];
[L275]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L276]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowed_ERC20[this] == old(_allowed_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:12:57,276 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:12:57,276 INFO  L82        PathProgramCache]: Analyzing trace with hash -2099422690, now seen corresponding path program 1 times
[2020-11-25 01:12:57,277 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:12:57,289 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:12:57,330 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 124 trivial. 0 not checked.
[2020-11-25 01:12:57,330 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:12:57,330 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:12:57,331 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:12:57,331 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:12:57,331 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:12:57,331 INFO  L87              Difference]: Start difference. First operand 2705 states and 3094 transitions. cyclomatic complexity: 391 Second operand 4 states.
[2020-11-25 01:12:57,359 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:12:57,360 INFO  L93              Difference]: Finished difference Result 2706 states and 3093 transitions.
[2020-11-25 01:12:57,360 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:12:57,360 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2706 states and 3093 transitions.
[2020-11-25 01:12:57,365 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:12:57,372 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2706 states to 2696 states and 3083 transitions.
[2020-11-25 01:12:57,372 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 746
[2020-11-25 01:12:57,373 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 746
[2020-11-25 01:12:57,373 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2696 states and 3083 transitions.
[2020-11-25 01:12:57,375 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:12:57,375 INFO  L728         BuchiCegarLoop]: Abstraction has 2696 states and 3083 transitions.
[2020-11-25 01:12:57,377 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2696 states and 3083 transitions.
[2020-11-25 01:12:57,395 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2696 to 2694.
[2020-11-25 01:12:57,395 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2694 states.
[2020-11-25 01:12:57,398 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2694 states to 2694 states and 3081 transitions.
[2020-11-25 01:12:57,398 INFO  L751         BuchiCegarLoop]: Abstraction has 2694 states and 3081 transitions.
[2020-11-25 01:12:57,398 INFO  L631         BuchiCegarLoop]: Abstraction has 2694 states and 3081 transitions.
[2020-11-25 01:12:57,398 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:12:57,398 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2694 states and 3081 transitions.
[2020-11-25 01:12:57,401 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:12:57,401 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:12:57,401 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:12:57,403 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:12:57,403 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L4556]              assume null == 0;
[L4557]  CALL        call this := FreshRefGenerator__success();
[L1661]              havoc newRef;
[L1662]              assume Alloc[newRef] == false;
[L1663]              Alloc[newRef] := true;
[L1664]              assume newRef != null;
[L4557]  RET         call this := FreshRefGenerator__success();
[L4558]              assume now >= 0;
[L4559]              assume DType[this] == BNS;
[L4560]              assume msgvalue_MSG == 0;
[L4561]              gas := gas - 53000;
[L4562]  CALL        call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L1082]              havoc __exception;
[L1083]              revert := false;
[L1084]  COND FALSE  !(__exception)
[L1105]  CALL        call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2799]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L2803]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2569]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2569]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2570]  COND FALSE  !(revert)
[L2573]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2544]              assume msgsender_MSG != null;
[L2545]              Balance[this] := 0;
[L2546]              _name_ERC20Detailed[this] := -2028290499;
[L2547]              _symbol_ERC20Detailed[this] := -2028290499;
[L2548]              _decimals_ERC20Detailed[this] := 0;
[L2550]              _name_ERC20Detailed[this] := name_s606;
[L2551]              _symbol_ERC20Detailed[this] := symbol_s606;
[L2552]              _decimals_ERC20Detailed[this] := decimals_s606;
[L2573]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s606, symbol_s606, decimals_s606);
[L2574]  COND FALSE  !(revert)
[L2803]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, 2048224778, 26805932, 8);
[L2804]  COND FALSE  !(revert)
[L2807]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2649]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L2649]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2650]  COND FALSE  !(revert)
[L2653]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1895]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1693]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1678]              assume msgsender_MSG != null;
[L1679]              Balance[this] := 0;
[L1693]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1694]  COND FALSE  !(revert)
[L1895]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1896]  COND FALSE  !(revert)
[L1899]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1871]              assume msgsender_MSG != null;
[L1872]              Balance[this] := 0;
[L1873]              _balances_ERC20[this] := zeroRefintArr();
[L1874]              sum__balances0[this] := 0;
[L1875]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1876]              sum__allowed1[this] := 0;
[L1877]              _totalSupply_ERC20[this] := 0;
[L1899]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1900]  COND FALSE  !(revert)
[L2653]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2657]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2657]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2658]  COND FALSE  !(revert)
[L2807]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L2808]  COND FALSE  !(revert)
[L2811]  CALL        call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2753]              assume msgsender_MSG != null;
[L2754]              Balance[this] := 0;
[L2756]              __var_16 := 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2757]  COND TRUE   DType[this] == BNS
[L2758]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2329]              __var_7 := null;
[L2330]  COND FALSE  !(!(account_s464 != null))
[L2334]  CALL        call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2334]  RET         call __var_8 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], value_s464);
[L2335]  COND FALSE  !(revert)
[L2338]              _totalSupply_ERC20[this] := __var_8;
[L2339]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L1826]              c_s174 := (a_s174 + b_s174) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1827]  COND FALSE  !(!(c_s174 >= a_s174))
[L1831]              __ret_0_ := c_s174;
[L2339]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s464], value_s464);
[L2340]  COND FALSE  !(revert)
[L2343]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s464];
[L2344]              _balances_ERC20[this][account_s464] := __var_9;
[L2345]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s464];
[L2346]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2758]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, 250000000000000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2759]  COND FALSE  !(revert)
[L2811]  RET         call BNS_BNS_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2812]  COND FALSE  !(revert)
[L1105]  RET         call BNS_BNS__success(this, msgsender_MSG, msgvalue_MSG);
[L1106]              assume !revert && gas >= 0;
[L4562]  RET         call BNS_BNS(this, msgsender_MSG, msgvalue_MSG);
[L4563]              assume !revert && gas >= 0;
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND TRUE   __exception
[L255]               __tmp__Balance := Balance;
[L256]               __tmp__DType := DType;
[L257]               __tmp__Alloc := Alloc;
[L258]               __tmp__balance_ADDR := balance_ADDR;
[L259]               __tmp__M_Ref_int := M_Ref_int;
[L260]               __tmp__sum__balances0 := sum__balances0;
[L261]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L262]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L263]               __tmp__sum__allowed1 := sum__allowed1;
[L264]               __tmp__Length := Length;
[L265]               __tmp__now := now;
[L266]               __tmp___balances_ERC20 := _balances_ERC20;
[L267]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L268]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L269]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L270]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L271]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L272]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1907]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L272]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L273]               assume revert || gas < 0;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

Loop:
[L4566]  CALL        call CorralChoice_BNS(this);
[L4415]              havoc msgsender_MSG;
[L4416]              havoc msgvalue_MSG;
[L4417]              havoc choice;
[L4418]              havoc to_s268;
[L4419]              havoc value_s268;
[L4420]              havoc __ret_0_transfer;
[L4421]              havoc spender_s287;
[L4422]              havoc value_s287;
[L4423]              havoc __ret_0_approve;
[L4424]              havoc from_s322;
[L4425]              havoc to_s322;
[L4426]              havoc value_s322;
[L4427]              havoc __ret_0_transferFrom;
[L4428]              havoc __ret_0_totalSupply;
[L4429]              havoc owner_s233;
[L4430]              havoc __ret_0_balanceOf;
[L4431]              havoc owner_s249;
[L4432]              havoc spender_s249;
[L4433]              havoc __ret_0_allowance;
[L4434]              havoc spender_s349;
[L4435]              havoc addedValue_s349;
[L4436]              havoc __ret_0_increaseAllowance;
[L4437]              havoc spender_s376;
[L4438]              havoc subtractedValue_s376;
[L4439]              havoc __ret_0_decreaseAllowance;
[L4440]              havoc name_s606;
[L4441]              havoc symbol_s606;
[L4442]              havoc decimals_s606;
[L4443]              havoc __ret_0_name;
[L4444]              havoc __ret_0_symbol;
[L4445]              havoc __ret_0_decimals;
[L4446]              havoc value_s646;
[L4447]              havoc from_s659;
[L4448]              havoc value_s659;
[L4449]              havoc tmpNow;
[L4450]              havoc gas;
[L4451]              assume gas > 4000000 && gas <= 8000000;
[L4452]              tmpNow := now;
[L4453]              havoc now;
[L4454]              assume now > tmpNow;
[L4455]              assume msgsender_MSG != null;
[L4456]              assume DType[msgsender_MSG] != IERC20;
[L4457]              assume DType[msgsender_MSG] != SafeMath;
[L4458]              assume DType[msgsender_MSG] != ERC20;
[L4459]              assume DType[msgsender_MSG] != ERC20Detailed;
[L4460]              assume DType[msgsender_MSG] != ERC20Burnable;
[L4461]              assume DType[msgsender_MSG] != BNS;
[L4462]              Alloc[msgsender_MSG] := true;
[L4463]  COND FALSE  !(choice == 13)
[L4470]  COND FALSE  !(choice == 12)
[L4477]  COND FALSE  !(choice == 11)
[L4484]  COND TRUE   choice == 10
[L4485]              gas := gas - 21000;
[L4486]  COND TRUE   gas >= 0
[L4487]              assume msgvalue_MSG == 0;
[L4488]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L252]               havoc __exception;
[L253]               revert := false;
[L254]   COND TRUE   __exception
[L255]               __tmp__Balance := Balance;
[L256]               __tmp__DType := DType;
[L257]               __tmp__Alloc := Alloc;
[L258]               __tmp__balance_ADDR := balance_ADDR;
[L259]               __tmp__M_Ref_int := M_Ref_int;
[L260]               __tmp__sum__balances0 := sum__balances0;
[L261]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L262]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L263]               __tmp__sum__allowed1 := sum__allowed1;
[L264]               __tmp__Length := Length;
[L265]               __tmp__now := now;
[L266]               __tmp___balances_ERC20 := _balances_ERC20;
[L267]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L268]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L269]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L270]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L271]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L272]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1907]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L272]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L273]               assume revert || gas < 0;
[L4488]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L4566]  RET         call CorralChoice_BNS(this);

[2020-11-25 01:12:57,406 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:12:57,406 INFO  L82        PathProgramCache]: Analyzing trace with hash 1372542739, now seen corresponding path program 1 times
[2020-11-25 01:12:57,407 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:12:57,417 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:12:57,452 INFO  L134       CoverageAnalysis]: Checked inductivity of 124 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 124 trivial. 0 not checked.
[2020-11-25 01:12:57,452 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:12:57,452 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:12:57,453 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:12:57,453 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 01:12:57,453 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 01:12:57,453 INFO  L87              Difference]: Start difference. First operand 2694 states and 3081 transitions. cyclomatic complexity: 389 Second operand 5 states.
[2020-11-25 01:12:57,643 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:12:57,643 INFO  L93              Difference]: Finished difference Result 1765 states and 1988 transitions.
[2020-11-25 01:12:57,643 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:12:57,643 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1765 states and 1988 transitions.
[2020-11-25 01:12:57,647 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:12:57,647 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1765 states to 0 states and 0 transitions.
[2020-11-25 01:12:57,647 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:12:57,647 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:12:57,647 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:12:57,647 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:12:57,647 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:12:57,647 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:12:57,647 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:12:57,647 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 01:12:57,647 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:12:57,647 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:12:57,647 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:12:57,650 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:12:57 BasicIcfg
[2020-11-25 01:12:57,650 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:12:57,651 INFO  L168              Benchmark]: Toolchain (without parser) took 4566.72 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 403.7 MB). Free memory was 935.2 MB in the beginning and 872.1 MB in the end (delta: 63.1 MB). Peak memory consumption was 466.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,652 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,652 INFO  L168              Benchmark]: Boogie Preprocessor took 105.12 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,653 INFO  L168              Benchmark]: UtopiaSpecLang took 63.66 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,653 INFO  L168              Benchmark]: Boogie Printer took 16.97 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,653 INFO  L168              Benchmark]: RCFGBuilder took 859.42 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 784.9 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,653 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.62 ms. Allocated memory is still 1.0 GB. Free memory was 784.9 MB in the beginning and 781.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,654 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1366.26 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 218.1 MB). Free memory was 781.3 MB in the beginning and 953.3 MB in the end (delta: -172.0 MB). Peak memory consumption was 173.0 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,654 INFO  L168              Benchmark]: BlockEncodingV2 took 143.63 ms. Allocated memory is still 1.2 GB. Free memory was 953.3 MB in the beginning and 884.8 MB in the end (delta: 68.4 MB). Peak memory consumption was 68.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,654 INFO  L168              Benchmark]: BuchiAutomizer took 1967.05 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 185.6 MB). Free memory was 884.8 MB in the beginning and 872.1 MB in the end (delta: 12.8 MB). Peak memory consumption was 198.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:12:57,656 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4092 locations, 7555 edges
  - StatisticsResult: Encoded RCFG
    4012 locations, 7338 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 105.12 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.66 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.97 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 859.42 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 784.9 MB in the end (delta: 128.9 MB). Peak memory consumption was 128.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.62 ms. Allocated memory is still 1.0 GB. Free memory was 784.9 MB in the beginning and 781.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1366.26 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 218.1 MB). Free memory was 781.3 MB in the beginning and 953.3 MB in the end (delta: -172.0 MB). Peak memory consumption was 173.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 143.63 ms. Allocated memory is still 1.2 GB. Free memory was 953.3 MB in the beginning and 884.8 MB in the end (delta: 68.4 MB). Peak memory consumption was 68.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1967.05 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 185.6 MB). Free memory was 884.8 MB in the beginning and 872.1 MB in the end (delta: 12.8 MB). Peak memory consumption was 198.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1599 locations, 2300 edges
  - StatisticsResult: BuchiProgram size
    4092 locations, 7555 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.9s and 7 iterations.  TraceHistogramMax:5. Analysis of lassos took 0.3s. Construction of modules took 0.4s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 787 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2770 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 16698 SDtfs, 8931 SDslu, 27300 SDs, 0 SdLazy, 2396 SolverSat, 2289 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.4s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_ERC200) ==> ( <>(success_totalSupply_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
