This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:50:50,062 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:50:50,063 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:50:50,074 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:50:50,074 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:50:50,075 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:50:50,076 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:50:50,077 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:50:50,079 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:50:50,079 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:50:50,080 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:50:50,080 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:50:50,081 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:50:50,082 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:50:50,083 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:50:50,083 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:50:50,084 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:50:50,085 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:50:50,087 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:50:50,088 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:50:50,089 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:50:50,089 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:50:50,091 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:50:50,091 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:50:50,091 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:50:50,092 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:50:50,092 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:50:50,093 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:50:50,093 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:50:50,093 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:50:50,094 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:50:50,094 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:50:50,094 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:50:50,095 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:50:50,096 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:50:50,096 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:50:50,096 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:50:50,097 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:50:50,097 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:50:50,097 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:50:50,098 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:50:50,098 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:50:50,106 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:50:50,106 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:50:50,107 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:50:50,107 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:50:50,107 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:50:50,107 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:50:50,108 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:50:50,108 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:50:50,108 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:50:50,109 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:50:50,109 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:50:50,130 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:50:50,141 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:50:50,144 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:50:50,146 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:50:50,146 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:50:50,147 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl
[2020-11-25 05:50:50,147 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl'
[2020-11-25 05:50:50,232 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:50:50,233 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:50:50,234 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:50:50,234 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:50:50,234 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:50:50,251 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,252 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,283 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,284 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,305 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,314 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,321 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,330 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:50:50,331 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:50:50,331 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:50:50,333 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:50:50,336 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/1) ...
[2020-11-25 05:50:50,355 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StreamProtocol.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_StreamProtocol[this][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transfer(to, value), return == true && balances_StreamProtocol[this][msg.sender] == old(balances_StreamProtocol[this][msg.sender]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:50,361 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StreamProtocol.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_StreamProtocol[this][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transfer(to, value), return == true && balances_StreamProtocol[this][msg.sender] == old(balances_StreamProtocol[this][msg.sender]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:50,368 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StreamProtocol.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_StreamProtocol[this][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transfer(to, value), return == true && balances_StreamProtocol[this][msg.sender] == old(balances_StreamProtocol[this][msg.sender]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:50,376 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s385 ) && msg.sender!=to_s385 ) && tokens_s385<=balances_StreamProtocol[this][msg.sender] ) && ( balances_StreamProtocol[this][to_s385] + tokens_s385 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s385>=0 ) && tokens_s385<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StreamProtocol[this][to_s385]>=0 ) && balances_StreamProtocol[this][to_s385]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StreamProtocol[this][msg.sender]>=0 ) && balances_StreamProtocol[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:50:50,379 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s385==true && balances_StreamProtocol[this][msg.sender]==( ( old(balances_StreamProtocol[this][msg.sender]) ) - tokens_s385 ) ) && balances_StreamProtocol[this][to_s385]==( ( old(balances_StreamProtocol[this][to_s385]) ) + tokens_s385 ) ) && _totalSupply_StreamProtocol[this]==( old(_totalSupply_StreamProtocol[this]) ) ) && allowed_StreamProtocol[this]==( old(allowed_StreamProtocol[this]) ) ) && balances_StreamProtocol[this][p1]==( old(balances_StreamProtocol[this][p1]) ) ) && symbol_StreamProtocol[this]==( old(symbol_StreamProtocol[this]) ) ) && name_StreamProtocol[this]==( old(name_StreamProtocol[this]) ) ) && decimals_StreamProtocol[this]==( old(decimals_StreamProtocol[this]) ) ) && _stopTrade_StreamProtocol[this]==( old(_stopTrade_StreamProtocol[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s385,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_StreamProtocol>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_stopTrade_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_stopTrade_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_StreamProtocol>]]]]]]
[2020-11-25 05:50:50,384 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StreamProtocol.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_StreamProtocol[this][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][msg.sender] >= 0 &&  balances_StreamProtocol[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transfer(to, value), return == true && balances_StreamProtocol[this][msg.sender] == old(balances_StreamProtocol[this][msg.sender]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:50,385 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_StreamProtocol0) ==> ( <>AP(success_transfer_StreamProtocol0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:50:50,397 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:50 PropertyContainer
[2020-11-25 05:50:50,397 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:50:50,397 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:50:50,397 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:50:50,397 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:50:50,398 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/2) ...
[2020-11-25 05:50:50,399 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:50:50,399 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:50:50,411 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:50" (2/2) ...
[2020-11-25 05:50:50,412 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:50:50,412 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:50:50,412 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:50:50,412 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:50:50,413 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/2) ...
[2020-11-25 05:50:50,466 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:50:50,466 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:50:50,466 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:50:50,466 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:50:50,466 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,466 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,466 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:50:50,467 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:50:50,468 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 05:50:50,468 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 05:50:50,468 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:50:50,468 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:50:50,468 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:50:50,469 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:50:50,470 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol
[2020-11-25 05:50:50,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol
[2020-11-25 05:50:50,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 05:50:50,471 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StreamProtocol
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:50:50,472 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:50:50,473 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,474 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,475 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__success
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__fail
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__success
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__fail
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__success
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__fail
[2020-11-25 05:50:50,476 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:50:50,477 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:50:50,477 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:50:50,477 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:50:50,477 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:50:50,478 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 05:50:50,479 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:50:50,480 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__success
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,481 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:50:50,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__fail
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__success
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__fail
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__success
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__fail
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__success
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:50:50,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StreamProtocol
[2020-11-25 05:50:50,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:50:50,485 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:50:50,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:50:50,931 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:51,054 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:51,055 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:51,055 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:51,150 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:50:51,150 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 05:50:51,152 INFO  L202        PluginConnector]: Adding new model StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:51 BoogieIcfgContainer
[2020-11-25 05:50:51,152 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:50" (2/2) ...
[2020-11-25 05:50:51,153 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:50:51,153 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7d8307a9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:51, skipping insertion in model container
[2020-11-25 05:50:51,153 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:50:51,153 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:50:51,153 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:50:51,155 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:50:51,155 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/3) ...
[2020-11-25 05:50:51,155 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1fd49a5 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:51, skipping insertion in model container
[2020-11-25 05:50:51,155 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:50" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:50:51,194 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:51 NWAContainer
[2020-11-25 05:50:51,194 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:50:51,194 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:50:51,195 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:50:51,195 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:50:51,196 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:51" (3/4) ...
[2020-11-25 05:50:51,197 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@16bc9e17 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:51, skipping insertion in model container
[2020-11-25 05:50:51,197 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:51" (4/4) ...
[2020-11-25 05:50:51,200 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:50:51,204 INFO  L110   BuchiProductObserver]: Initial RCFG 1310 locations, 1636 edges
[2020-11-25 05:50:51,204 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:50:51,215 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:50:52,547 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:50:52,551 INFO  L110   BuchiProductObserver]: BuchiProgram size 3094 locations, 5273 edges
[2020-11-25 05:50:52,551 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:52 BoogieIcfgContainer
[2020-11-25 05:50:52,551 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:50:52,551 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:50:52,551 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:50:52,553 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:50:52,553 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:52" (1/1) ...
[2020-11-25 05:50:52,614 INFO  L313           BlockEncoder]: Initial Icfg 3094 locations, 5273 edges
[2020-11-25 05:50:52,614 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:50:52,615 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:50:52,615 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:50:52,615 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:50:52,626 INFO  L70    emoveInfeasibleEdges]: Removed 60 edges and 13 locations because of local infeasibility
[2020-11-25 05:50:52,633 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 05:50:52,643 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:50:52,647 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:50:52,649 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:50:52,650 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:50:52,653 INFO  L313           BlockEncoder]: Encoded RCFG 3054 locations, 5173 edges
[2020-11-25 05:50:52,653 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:50:52 BasicIcfg
[2020-11-25 05:50:52,653 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:50:52,654 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:50:52,654 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:50:52,656 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:50:52,656 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:52,656 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:50" (1/6) ...
[2020-11-25 05:50:52,658 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@708188f5 and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:50:52, skipping insertion in model container
[2020-11-25 05:50:52,658 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:52,658 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:50" (2/6) ...
[2020-11-25 05:50:52,658 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@708188f5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:50:52, skipping insertion in model container
[2020-11-25 05:50:52,658 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:52,658 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:51" (3/6) ...
[2020-11-25 05:50:52,658 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@708188f5 and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:50:52, skipping insertion in model container
[2020-11-25 05:50:52,658 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:52,658 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:51" (4/6) ...
[2020-11-25 05:50:52,659 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@708188f5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:50:52, skipping insertion in model container
[2020-11-25 05:50:52,659 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:52,659 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:52" (5/6) ...
[2020-11-25 05:50:52,659 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@708188f5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:50:52, skipping insertion in model container
[2020-11-25 05:50:52,659 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:52,659 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:50:52" (6/6) ...
[2020-11-25 05:50:52,660 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transfer-normal.bpl_BEv2
[2020-11-25 05:50:52,696 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:50:52,696 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:50:52,696 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:50:52,696 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:50:52,696 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:50:52,696 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:50:52,696 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:50:52,696 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:50:52,696 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:50:52,719 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3054 states.
[2020-11-25 05:50:52,764 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:52,764 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:52,764 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:52,773 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:52,773 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:52,773 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:50:52,773 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3054 states.
[2020-11-25 05:50:52,790 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:52,790 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:52,790 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:52,793 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:52,793 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_StreamProtocol0 := false;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND TRUE   revert
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND TRUE   choice == 15
[L3504]              gas := gas - 21000;
[L3505]  COND FALSE  !(gas >= 0)
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:52,806 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:52,806 INFO  L82        PathProgramCache]: Analyzing trace with hash 672324993, now seen corresponding path program 1 times
[2020-11-25 05:50:52,810 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:52,840 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:52,870 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:52,871 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:52,872 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:50:52,874 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:53,008 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:50:53,008 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:50:53,009 INFO  L87              Difference]: Start difference. First operand 3054 states. Second operand 3 states.
[2020-11-25 05:50:53,199 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:53,199 INFO  L93              Difference]: Finished difference Result 2155 states and 2410 transitions.
[2020-11-25 05:50:53,199 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:50:53,201 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2155 states and 2410 transitions.
[2020-11-25 05:50:53,215 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:53,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2155 states to 2155 states and 2410 transitions.
[2020-11-25 05:50:53,234 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:50:53,236 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 604
[2020-11-25 05:50:53,236 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2155 states and 2410 transitions.
[2020-11-25 05:50:53,243 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:53,243 INFO  L728         BuchiCegarLoop]: Abstraction has 2155 states and 2410 transitions.
[2020-11-25 05:50:53,261 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2155 states and 2410 transitions.
[2020-11-25 05:50:53,305 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2155 to 2155.
[2020-11-25 05:50:53,305 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2155 states.
[2020-11-25 05:50:53,310 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2155 states to 2155 states and 2410 transitions.
[2020-11-25 05:50:53,311 INFO  L751         BuchiCegarLoop]: Abstraction has 2155 states and 2410 transitions.
[2020-11-25 05:50:53,311 INFO  L631         BuchiCegarLoop]: Abstraction has 2155 states and 2410 transitions.
[2020-11-25 05:50:53,311 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:50:53,312 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2155 states and 2410 transitions.
[2020-11-25 05:50:53,319 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:53,319 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:53,319 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:53,321 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:53,321 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_StreamProtocol0 := false;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND TRUE   revert
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND TRUE   choice == 12
[L3522]              gas := gas - 21000;
[L3523]  COND TRUE   gas >= 0
[L3524]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3525]              assume msgvalue_MSG == 0;
[L3526]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND FALSE  !(__exception)
[L694]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2064]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2065]              revert := true;
[L694]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L695]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s385 == true && balances_StreamProtocol[this][msgsender_MSG] == old(balances_StreamProtocol[this][msgsender_MSG]) - tokens_s385) && balances_StreamProtocol[this][to_s385] == old(balances_StreamProtocol[this][to_s385]) + tokens_s385) && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this])) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND TRUE   choice == 12
[L3522]              gas := gas - 21000;
[L3523]  COND TRUE   gas >= 0
[L3524]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3525]              assume msgvalue_MSG == 0;
[L3526]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND FALSE  !(__exception)
[L694]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2064]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2065]              revert := true;
[L694]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L695]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s385 == true && balances_StreamProtocol[this][msgsender_MSG] == old(balances_StreamProtocol[this][msgsender_MSG]) - tokens_s385) && balances_StreamProtocol[this][to_s385] == old(balances_StreamProtocol[this][to_s385]) + tokens_s385) && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this])) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:53,326 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:53,326 INFO  L82        PathProgramCache]: Analyzing trace with hash 195025053, now seen corresponding path program 1 times
[2020-11-25 05:50:53,327 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:53,340 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:53,364 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:53,365 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:53,365 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:50:53,366 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:53,366 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:50:53,367 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:50:53,367 INFO  L87              Difference]: Start difference. First operand 2155 states and 2410 transitions. cyclomatic complexity: 257 Second operand 4 states.
[2020-11-25 05:50:53,794 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:53,795 INFO  L93              Difference]: Finished difference Result 3201 states and 3666 transitions.
[2020-11-25 05:50:53,795 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:50:53,796 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3201 states and 3666 transitions.
[2020-11-25 05:50:53,810 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:50:53,825 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3201 states to 3033 states and 3472 transitions.
[2020-11-25 05:50:53,825 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 825
[2020-11-25 05:50:53,826 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 837
[2020-11-25 05:50:53,826 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3033 states and 3472 transitions.
[2020-11-25 05:50:53,830 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:53,831 INFO  L728         BuchiCegarLoop]: Abstraction has 3033 states and 3472 transitions.
[2020-11-25 05:50:53,833 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3033 states and 3472 transitions.
[2020-11-25 05:50:53,854 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3033 to 2191.
[2020-11-25 05:50:53,854 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2191 states.
[2020-11-25 05:50:53,857 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2191 states to 2191 states and 2378 transitions.
[2020-11-25 05:50:53,858 INFO  L751         BuchiCegarLoop]: Abstraction has 2191 states and 2378 transitions.
[2020-11-25 05:50:53,858 INFO  L631         BuchiCegarLoop]: Abstraction has 2191 states and 2378 transitions.
[2020-11-25 05:50:53,858 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:50:53,858 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2191 states and 2378 transitions.
[2020-11-25 05:50:53,861 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:53,862 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:53,862 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:53,863 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:53,863 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_StreamProtocol0 := false;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND FALSE  !(revert)
[L1927]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              assume msgsender_MSG != null;
[L1814]              Balance[this] := 0;
[L1815]              owner_Owned[this] := null;
[L1817]              owner_Owned[this] := msgsender_MSG;
[L1830]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1831]  COND FALSE  !(revert)
[L1927]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1928]  COND FALSE  !(revert)
[L1931]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1879]              assume msgsender_MSG != null;
[L1880]              Balance[this] := 0;
[L1881]              symbol_StreamProtocol[this] := 1491346165;
[L1882]              name_StreamProtocol[this] := 1491346165;
[L1883]              decimals_StreamProtocol[this] := 0;
[L1884]              _totalSupply_StreamProtocol[this] := 0;
[L1885]              _stopTrade_StreamProtocol[this] := false;
[L1886]              balances_StreamProtocol[this] := zeroRefintArr();
[L1887]              sum_balances0[this] := 0;
[L1888]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1889]              sum_allowed1[this] := 0;
[L1891]              symbol_StreamProtocol[this] := 1357906882;
[L1892]              name_StreamProtocol[this] := -1605590943;
[L1893]              decimals_StreamProtocol[this] := 18;
[L1894]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1896]              _stopTrade_StreamProtocol[this] := false;
[L1897]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1898]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1899]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1900]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1931]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1932]  COND FALSE  !(revert)
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND TRUE   choice == 12
[L3522]              gas := gas - 21000;
[L3523]  COND TRUE   gas >= 0
[L3524]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3525]              assume msgvalue_MSG == 0;
[L3526]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L685]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L686]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L687]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L688]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L689]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L690]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L691]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2032]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2033]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND TRUE   choice == 12
[L3522]              gas := gas - 21000;
[L3523]  COND TRUE   gas >= 0
[L3524]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3525]              assume msgvalue_MSG == 0;
[L3526]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L685]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L686]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L687]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L688]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L689]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L690]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L691]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2032]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2033]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:53,866 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:53,866 INFO  L82        PathProgramCache]: Analyzing trace with hash -691589322, now seen corresponding path program 1 times
[2020-11-25 05:50:53,867 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:53,879 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:53,930 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:53,930 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:53,930 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 05:50:53,931 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:53,931 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 05:50:53,931 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-25 05:50:53,931 INFO  L87              Difference]: Start difference. First operand 2191 states and 2378 transitions. cyclomatic complexity: 189 Second operand 11 states.
[2020-11-25 05:50:55,391 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:55,391 INFO  L93              Difference]: Finished difference Result 3685 states and 4086 transitions.
[2020-11-25 05:50:55,392 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 05:50:55,392 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3685 states and 4086 transitions.
[2020-11-25 05:50:55,401 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 05:50:55,411 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3685 states to 3685 states and 4086 transitions.
[2020-11-25 05:50:55,411 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1069
[2020-11-25 05:50:55,412 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1069
[2020-11-25 05:50:55,412 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3685 states and 4086 transitions.
[2020-11-25 05:50:55,416 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:55,416 INFO  L728         BuchiCegarLoop]: Abstraction has 3685 states and 4086 transitions.
[2020-11-25 05:50:55,418 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3685 states and 4086 transitions.
[2020-11-25 05:50:55,438 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3685 to 2233.
[2020-11-25 05:50:55,439 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2233 states.
[2020-11-25 05:50:55,441 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2233 states to 2233 states and 2429 transitions.
[2020-11-25 05:50:55,441 INFO  L751         BuchiCegarLoop]: Abstraction has 2233 states and 2429 transitions.
[2020-11-25 05:50:55,441 INFO  L631         BuchiCegarLoop]: Abstraction has 2233 states and 2429 transitions.
[2020-11-25 05:50:55,441 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:50:55,441 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2233 states and 2429 transitions.
[2020-11-25 05:50:55,445 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:50:55,445 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:55,445 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:55,447 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:55,447 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_StreamProtocol0 := false;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND FALSE  !(revert)
[L1927]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              assume msgsender_MSG != null;
[L1814]              Balance[this] := 0;
[L1815]              owner_Owned[this] := null;
[L1817]              owner_Owned[this] := msgsender_MSG;
[L1830]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1831]  COND FALSE  !(revert)
[L1927]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1928]  COND FALSE  !(revert)
[L1931]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1879]              assume msgsender_MSG != null;
[L1880]              Balance[this] := 0;
[L1881]              symbol_StreamProtocol[this] := 1491346165;
[L1882]              name_StreamProtocol[this] := 1491346165;
[L1883]              decimals_StreamProtocol[this] := 0;
[L1884]              _totalSupply_StreamProtocol[this] := 0;
[L1885]              _stopTrade_StreamProtocol[this] := false;
[L1886]              balances_StreamProtocol[this] := zeroRefintArr();
[L1887]              sum_balances0[this] := 0;
[L1888]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1889]              sum_allowed1[this] := 0;
[L1891]              symbol_StreamProtocol[this] := 1357906882;
[L1892]              name_StreamProtocol[this] := -1605590943;
[L1893]              decimals_StreamProtocol[this] := 18;
[L1894]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1896]              _stopTrade_StreamProtocol[this] := false;
[L1897]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1898]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1899]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1900]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1931]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1932]  COND FALSE  !(revert)
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND TRUE   choice == 12
[L3522]              gas := gas - 21000;
[L3523]  COND TRUE   gas >= 0
[L3524]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3525]              assume msgvalue_MSG == 0;
[L3526]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L685]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L686]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L687]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L688]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L689]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L690]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L691]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2032]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2036]              __var_4 := null;
[L2037]  COND TRUE   !(to_s385 > null)
[L2038]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND TRUE   choice == 12
[L3522]              gas := gas - 21000;
[L3523]  COND TRUE   gas >= 0
[L3524]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3525]              assume msgvalue_MSG == 0;
[L3526]  CALL        call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L685]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L686]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L687]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L688]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L689]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L690]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L691]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2032]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2036]              __var_4 := null;
[L2037]  COND TRUE   !(to_s385 > null)
[L2038]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:55,450 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:55,450 INFO  L82        PathProgramCache]: Analyzing trace with hash 815611563, now seen corresponding path program 1 times
[2020-11-25 05:50:55,450 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:55,468 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:55,486 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:55,527 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:55,527 INFO  L82        PathProgramCache]: Analyzing trace with hash -1474291637, now seen corresponding path program 1 times
[2020-11-25 05:50:55,528 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:55,532 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:55,536 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:55,544 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:55,544 INFO  L82        PathProgramCache]: Analyzing trace with hash 67533301, now seen corresponding path program 1 times
[2020-11-25 05:50:55,545 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:55,559 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:55,576 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 05:50:56,047 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification that was a NOOP. DAG size: 190
[2020-11-25 05:50:56,403 WARN  L188               SmtUtils]: Spent 352.00 ms on a formula simplification. DAG size of input: 243 DAG size of output: 230
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3517 to 7027
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 05:50:56,823 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification that was a NOOP. DAG size: 233
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 05:50:56,880 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 05:50:57,896 WARN  L188               SmtUtils]: Spent 291.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 230
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
[2020-11-25 05:50:58,029 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 141 DAG size of output: 137
[2020-11-25 05:50:58,148 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 290
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 05:50:58,289 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification that was a NOOP. DAG size: 233
[2020-11-25 05:50:59,003 WARN  L188               SmtUtils]: Spent 712.00 ms on a formula simplification. DAG size of input: 425 DAG size of output: 415
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9973 to 19937
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 05:50:59,112 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification. DAG size of input: 178 DAG size of output: 176
[2020-11-25 05:50:59,236 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 275
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 05:50:59,507 WARN  L188               SmtUtils]: Spent 215.00 ms on a formula simplification. DAG size of input: 277 DAG size of output: 276
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 05:50:59,613 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 272
[2020-11-25 05:50:59,626 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:59,643 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:59,651 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:50:59 BasicIcfg
[2020-11-25 05:50:59,651 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:50:59,651 INFO  L168              Benchmark]: Toolchain (without parser) took 9418.81 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 901.3 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -225.0 MB). Peak memory consumption was 891.5 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,652 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,652 INFO  L168              Benchmark]: Boogie Preprocessor took 96.53 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,652 INFO  L168              Benchmark]: UtopiaSpecLang took 66.44 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,653 INFO  L168              Benchmark]: Boogie Printer took 14.70 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,653 INFO  L168              Benchmark]: RCFGBuilder took 740.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.4 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,653 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.15 ms. Allocated memory is still 1.0 GB. Free memory was 822.4 MB in the beginning and 813.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,654 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1356.68 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 174.6 MB). Free memory was 813.5 MB in the beginning and 1.1 GB in the end (delta: -265.6 MB). Peak memory consumption was 179.0 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,654 INFO  L168              Benchmark]: BlockEncodingV2 took 102.07 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 44.6 MB). Peak memory consumption was 44.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,654 INFO  L168              Benchmark]: BuchiAutomizer took 6997.22 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 726.7 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -139.3 MB). Peak memory consumption was 802.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:59,657 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3094 locations, 5273 edges
  - StatisticsResult: Encoded RCFG
    3054 locations, 5173 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 96.53 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 66.44 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 14.70 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 740.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.4 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.15 ms. Allocated memory is still 1.0 GB. Free memory was 822.4 MB in the beginning and 813.5 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1356.68 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 174.6 MB). Free memory was 813.5 MB in the beginning and 1.1 GB in the end (delta: -265.6 MB). Peak memory consumption was 179.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 102.07 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 44.6 MB). Peak memory consumption was 44.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6997.22 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 726.7 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -139.3 MB). Peak memory consumption was 802.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1310 locations, 1636 edges
  - StatisticsResult: BuchiProgram size
    3094 locations, 5273 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 2233 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.9s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 4.3s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 2294 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2233 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8317 SDtfs, 9935 SDslu, 8295 SDs, 0 SdLazy, 20374 SolverSat, 2090 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129638919) = (new StreamProtocol)({from : (- 1)});
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND FALSE  !(revert)
[L1927]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              assume msgsender_MSG != null;
[L1814]              Balance[this] := 0;
[L1815]              owner_Owned[this] := null;
[L1817]              owner_Owned[this] := msgsender_MSG;
[L1830]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1831]  COND FALSE  !(revert)
[L1927]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1928]  COND FALSE  !(revert)
[L1931]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1879]              assume msgsender_MSG != null;
[L1880]              Balance[this] := 0;
[L1881]              symbol_StreamProtocol[this] := 1491346165;
[L1882]              name_StreamProtocol[this] := 1491346165;
[L1883]              decimals_StreamProtocol[this] := 0;
[L1884]              _totalSupply_StreamProtocol[this] := 0;
[L1885]              _stopTrade_StreamProtocol[this] := false;
[L1886]              balances_StreamProtocol[this] := zeroRefintArr();
[L1887]              sum_balances0[this] := 0;
[L1888]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1889]              sum_allowed1[this] := 0;
[L1891]              symbol_StreamProtocol[this] := 1357906882;
[L1892]              name_StreamProtocol[this] := -1605590943;
[L1893]              decimals_StreamProtocol[this] := 18;
[L1894]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1896]              _stopTrade_StreamProtocol[this] := false;
[L1897]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1898]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1899]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1900]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1931]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1932]  COND FALSE  !(revert)
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
StreamProtocol(115792089237316195423570985008687907853269984665640564039457584007913129638919).transfer~address~uint256.gas(3979002)({from : (- 1), to : 0, tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L685]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L686]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L687]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L688]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L689]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L690]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L691]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2032]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2036]              __var_4 := null;
[L2037]  COND TRUE   !(to_s385 > null)
[L2038]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);

Loop:
StreamProtocol(115792089237316195423570985008687907853269984665640564039457584007913129638919).transfer~address~uint256.gas(3979001)({from : (- 1), to : 0, tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_StreamProtocol[this][msgsender_MSG]) && balances_StreamProtocol[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s385] >= 0) && balances_StreamProtocol[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][msgsender_MSG] >= 0) && balances_StreamProtocol[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_StreamProtocol0 := true;
[L3]                 call_transfer_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L685]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L686]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L687]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L688]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L689]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L690]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L691]   CALL        call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L2032]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2036]              __var_4 := null;
[L2037]  COND TRUE   !(to_s385 > null)
[L2038]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3526]  RET         call success_s385 := transfer~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
