This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:49:21,523 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:49:21,524 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:49:21,531 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:49:21,531 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:49:21,531 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:49:21,532 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:49:21,533 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:49:21,534 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:49:21,534 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:49:21,535 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:49:21,535 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:49:21,535 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:49:21,536 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:49:21,536 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:49:21,537 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:49:21,537 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:49:21,538 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:49:21,540 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:49:21,541 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:49:21,541 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:49:21,542 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:49:21,544 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:49:21,544 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:49:21,544 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:49:21,545 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:49:21,545 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:49:21,546 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:49:21,546 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:49:21,546 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:49:21,546 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:49:21,547 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:49:21,547 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:49:21,548 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:49:21,548 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:49:21,548 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:49:21,549 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:49:21,549 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:49:21,549 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:49:21,549 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:49:21,550 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:49:21,550 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:49:21,555 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:49:21,555 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:49:21,556 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:49:21,556 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:49:21,556 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:49:21,556 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:49:21,556 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:49:21,557 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:49:21,557 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:49:21,574 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:49:21,587 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:49:21,591 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:49:21,593 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:49:21,594 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:49:21,595 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl
[2020-11-25 01:49:21,595 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl'
[2020-11-25 01:49:21,688 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:49:21,690 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:49:21,690 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:49:21,690 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:49:21,691 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:49:21,702 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,703 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,731 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,732 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,755 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,766 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,774 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,783 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:49:21,784 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:49:21,784 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:49:21,786 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:49:21,789 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/1) ...
[2020-11-25 01:49:21,802 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.balanceOf(owner), balanceOf_TokenERC20[this][owner] >= 0 && balanceOf_TokenERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.balanceOf(owner), return == balanceOf_TokenERC20[this][owner] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 01:49:21,806 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.balanceOf(owner), balanceOf_TokenERC20[this][owner] >= 0 && balanceOf_TokenERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.balanceOf(owner), return == balanceOf_TokenERC20[this][owner] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 01:49:21,811 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.balanceOf(owner), balanceOf_TokenERC20[this][owner] >= 0 && balanceOf_TokenERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.balanceOf(owner), return == balanceOf_TokenERC20[this][owner] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 01:49:21,816 INFO  L636   opiaSpecLangObserver]: Parsed ( balanceOf_TokenERC20[this][arg662_s0]>=0 && balanceOf_TokenERC20[this][arg662_s0]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],[IdentifierExpression[arg662_s0,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],[IdentifierExpression[arg662_s0,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:49:21,819 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==balanceOf_TokenERC20[this][arg662_s0] && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this]==( old(allowance_TokenERC20[this]) ) ) && sellPrice_MyAdvancedToken[this]==( old(sellPrice_MyAdvancedToken[this]) ) ) && buyPrice_MyAdvancedToken[this]==( old(buyPrice_MyAdvancedToken[this]) ) ) && frozenAccount_MyAdvancedToken[this]==( old(frozenAccount_MyAdvancedToken[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,balanceOf~address_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],[IdentifierExpression[arg662_s0,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[sellPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[sellPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_MyAdvancedToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_TokenERC20>]]]]]]
[2020-11-25 01:49:21,823 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.balanceOf(owner), balanceOf_TokenERC20[this][owner] >= 0 && balanceOf_TokenERC20[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.balanceOf(owner), return == balanceOf_TokenERC20[this][owner] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this]) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this]) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this]) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 01:49:21,823 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_TokenERC200) ==> ( <>AP(success_balanceOf_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:49:21,833 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:49:21 PropertyContainer
[2020-11-25 01:49:21,833 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:49:21,833 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:49:21,833 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:49:21,833 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:49:21,834 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/2) ...
[2020-11-25 01:49:21,835 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:49:21,835 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:49:21,850 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:49:21" (2/2) ...
[2020-11-25 01:49:21,850 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:49:21,850 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:49:21,851 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:49:21,851 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:49:21,851 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/2) ...
[2020-11-25 01:49:21,902 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:49:21,902 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 01:49:21,902 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 01:49:21,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 01:49:21,902 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 01:49:21,902 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 01:49:21,902 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 01:49:21,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 01:49:21,903 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 01:49:21,903 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 01:49:21,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 01:49:21,903 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 01:49:21,903 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 01:49:21,903 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 01:49:21,903 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 01:49:21,903 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,904 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 01:49:21,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 01:49:21,904 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 01:49:21,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 01:49:21,904 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 01:49:21,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 01:49:21,904 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 01:49:21,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 01:49:21,905 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 01:49:21,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 01:49:21,905 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 01:49:21,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 01:49:21,905 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 01:49:21,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 01:49:21,905 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 01:49:21,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 01:49:21,905 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 01:49:21,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 01:49:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 01:49:21,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 01:49:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 01:49:21,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 01:49:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 01:49:21,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 01:49:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success
[2020-11-25 01:49:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken
[2020-11-25 01:49:21,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken
[2020-11-25 01:49:21,906 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_MyAdvancedToken
[2020-11-25 01:49:21,907 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_MyAdvancedToken
[2020-11-25 01:49:21,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_MyAdvancedToken
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_MyAdvancedToken
[2020-11-25 01:49:21,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_MyAdvancedToken
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_MyAdvancedToken
[2020-11-25 01:49:21,908 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_MyAdvancedToken
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 01:49:21,908 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MyAdvancedToken
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 01:49:21,909 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 01:49:21,910 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 01:49:21,911 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 01:49:21,912 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken__success
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure MyAdvancedToken_MyAdvancedToken__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_MyAdvancedToken__success
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_MyAdvancedToken__fail
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,913 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_MyAdvancedToken__success
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_MyAdvancedToken__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_MyAdvancedToken__success
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_MyAdvancedToken__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_MyAdvancedToken__success
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_MyAdvancedToken__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_MyAdvancedToken__success
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_MyAdvancedToken__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:49:21,914 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:49:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:49:21,915 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 01:49:21,915 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,916 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 01:49:21,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 01:49:21,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__fail
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken__fail
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure MyAdvancedToken_MyAdvancedToken__success
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_MyAdvancedToken__fail
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_MyAdvancedToken__success
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_MyAdvancedToken__fail
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_MyAdvancedToken__success
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_MyAdvancedToken__fail
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_MyAdvancedToken__success
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_MyAdvancedToken__fail
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_MyAdvancedToken__success
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_MyAdvancedToken__fail
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_MyAdvancedToken__success
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_MyAdvancedToken__fail
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_MyAdvancedToken__success
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:49:21,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 01:49:21,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 01:49:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MyAdvancedToken
[2020-11-25 01:49:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:49:21,922 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:49:21,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:49:22,426 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:49:22,426 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:49:22,427 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:49:22,697 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:49:22,697 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 01:49:22,699 INFO  L202        PluginConnector]: Adding new model MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:49:22 BoogieIcfgContainer
[2020-11-25 01:49:22,699 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:49:21" (2/2) ...
[2020-11-25 01:49:22,699 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:49:22,700 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6303dbe and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:49:22, skipping insertion in model container
[2020-11-25 01:49:22,700 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:49:22,700 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:49:22,700 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:49:22,701 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:49:22,702 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/3) ...
[2020-11-25 01:49:22,702 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@187a83c9 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:49:22, skipping insertion in model container
[2020-11-25 01:49:22,702 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:49:21" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:49:22,741 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:49:22 NWAContainer
[2020-11-25 01:49:22,741 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:49:22,741 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:49:22,742 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:49:22,742 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:49:22,743 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:49:22" (3/4) ...
[2020-11-25 01:49:22,744 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@f2d15ac and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:49:22, skipping insertion in model container
[2020-11-25 01:49:22,744 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:49:22" (4/4) ...
[2020-11-25 01:49:22,747 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:49:22,752 INFO  L110   BuchiProductObserver]: Initial RCFG 2319 locations, 3069 edges
[2020-11-25 01:49:22,753 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:49:22,771 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:49:23,963 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:49:23,970 INFO  L110   BuchiProductObserver]: BuchiProgram size 5480 locations, 9666 edges
[2020-11-25 01:49:23,970 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:49:23 BoogieIcfgContainer
[2020-11-25 01:49:23,970 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:49:23,970 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:49:23,970 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:49:23,972 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:49:23,972 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:49:23" (1/1) ...
[2020-11-25 01:49:24,060 INFO  L313           BlockEncoder]: Initial Icfg 5480 locations, 9666 edges
[2020-11-25 01:49:24,060 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:49:24,061 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:49:24,061 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:49:24,061 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:49:24,074 INFO  L70    emoveInfeasibleEdges]: Removed 84 edges and 11 locations because of local infeasibility
[2020-11-25 01:49:24,083 INFO  L70        RemoveSinkStates]: Removed 32 edges and 21 locations by removing sink states
[2020-11-25 01:49:24,098 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:49:24,102 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:49:24,105 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:49:24,105 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:49:24,109 INFO  L313           BlockEncoder]: Encoded RCFG 5424 locations, 9515 edges
[2020-11-25 01:49:24,109 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:49:24 BasicIcfg
[2020-11-25 01:49:24,109 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:49:24,109 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:49:24,109 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:49:24,111 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:49:24,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:49:24,112 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:49:21" (1/6) ...
[2020-11-25 01:49:24,113 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@77371218 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:49:24, skipping insertion in model container
[2020-11-25 01:49:24,113 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:49:24,113 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:49:21" (2/6) ...
[2020-11-25 01:49:24,114 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@77371218 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:49:24, skipping insertion in model container
[2020-11-25 01:49:24,114 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:49:24,114 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:49:22" (3/6) ...
[2020-11-25 01:49:24,114 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@77371218 and model type MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:49:24, skipping insertion in model container
[2020-11-25 01:49:24,114 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:49:24,114 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:49:22" (4/6) ...
[2020-11-25 01:49:24,114 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@77371218 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:49:24, skipping insertion in model container
[2020-11-25 01:49:24,114 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:49:24,114 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:49:23" (5/6) ...
[2020-11-25 01:49:24,114 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@77371218 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:49:24, skipping insertion in model container
[2020-11-25 01:49:24,114 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:49:24,114 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:49:24" (6/6) ...
[2020-11-25 01:49:24,116 INFO  L404   chiAutomizerObserver]: Analyzing ICFG MyAdvancedToken_0x86c9f9df4a0bfc9a52eb3d16bcce3bc50d1a34ae_balanceof.bpl_BEv2
[2020-11-25 01:49:24,162 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:49:24,163 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:49:24,163 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:49:24,163 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:49:24,163 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:49:24,163 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:49:24,163 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:49:24,163 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:49:24,163 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:49:24,212 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5424 states.
[2020-11-25 01:49:24,288 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:49:24,288 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:49:24,288 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:49:24,298 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:49:24,298 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:49:24,298 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:49:24,298 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5424 states.
[2020-11-25 01:49:24,334 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:49:24,335 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:49:24,335 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:49:24,337 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:49:24,337 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_TokenERC200 := false;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND TRUE   revert
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND TRUE   choice == 22
[L4746]              gas := gas - 21000;
[L4747]  COND FALSE  !(gas >= 0)
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:49:24,355 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:49:24,355 INFO  L82        PathProgramCache]: Analyzing trace with hash -1600072951, now seen corresponding path program 1 times
[2020-11-25 01:49:24,360 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:49:24,381 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:49:24,419 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:49:24,421 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:49:24,421 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:49:24,425 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:49:24,681 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:49:24,682 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:49:24,683 INFO  L87              Difference]: Start difference. First operand 5424 states. Second operand 3 states.
[2020-11-25 01:49:24,970 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:49:24,970 INFO  L93              Difference]: Finished difference Result 4635 states and 5582 transitions.
[2020-11-25 01:49:24,970 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:49:24,971 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4635 states and 5582 transitions.
[2020-11-25 01:49:24,995 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:49:25,029 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4635 states to 4633 states and 5578 transitions.
[2020-11-25 01:49:25,030 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 01:49:25,031 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 173
[2020-11-25 01:49:25,031 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4633 states and 5578 transitions.
[2020-11-25 01:49:25,042 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:49:25,042 INFO  L728         BuchiCegarLoop]: Abstraction has 4633 states and 5578 transitions.
[2020-11-25 01:49:25,060 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4633 states and 5578 transitions.
[2020-11-25 01:49:25,124 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4633 to 4633.
[2020-11-25 01:49:25,124 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4633 states.
[2020-11-25 01:49:25,134 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4633 states to 4633 states and 5578 transitions.
[2020-11-25 01:49:25,134 INFO  L751         BuchiCegarLoop]: Abstraction has 4633 states and 5578 transitions.
[2020-11-25 01:49:25,135 INFO  L631         BuchiCegarLoop]: Abstraction has 4633 states and 5578 transitions.
[2020-11-25 01:49:25,135 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:49:25,135 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4633 states and 5578 transitions.
[2020-11-25 01:49:25,144 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:49:25,144 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:49:25,144 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:49:25,146 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:49:25,146 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_TokenERC200 := false;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND TRUE   revert
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND TRUE   choice == 16
[L4782]              gas := gas - 21000;
[L4783]  COND TRUE   gas >= 0
[L4784]              assume msgvalue_MSG == 0;
[L4785]  CALL        call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balanceOf_TokenERC20[this][arg662_s0] >= 0 && balanceOf_TokenERC20[this][arg662_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_TokenERC200 := true;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L1059]              havoc __exception;
[L1060]              revert := false;
[L1061]  COND FALSE  !(__exception)
[L1088]  CALL        call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2983]              __ret_0_ := balanceOf_TokenERC20[this][arg662_s0];
[L1088]  RET         call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L1089]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == balanceOf_TokenERC20[this][arg662_s0] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L4785]  RET         call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND TRUE   choice == 16
[L4782]              gas := gas - 21000;
[L4783]  COND TRUE   gas >= 0
[L4784]              assume msgvalue_MSG == 0;
[L4785]  CALL        call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balanceOf_TokenERC20[this][arg662_s0] >= 0 && balanceOf_TokenERC20[this][arg662_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_TokenERC200 := true;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L1059]              havoc __exception;
[L1060]              revert := false;
[L1061]  COND FALSE  !(__exception)
[L1088]  CALL        call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2983]              __ret_0_ := balanceOf_TokenERC20[this][arg662_s0];
[L1088]  RET         call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L1089]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == balanceOf_TokenERC20[this][arg662_s0] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L4785]  RET         call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:49:25,151 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:49:25,151 INFO  L82        PathProgramCache]: Analyzing trace with hash -272135650, now seen corresponding path program 1 times
[2020-11-25 01:49:25,152 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:49:25,162 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:49:25,187 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:49:25,188 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:49:25,188 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:49:25,189 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:49:25,189 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:49:25,189 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:49:25,189 INFO  L87              Difference]: Start difference. First operand 4633 states and 5578 transitions. cyclomatic complexity: 951 Second operand 4 states.
[2020-11-25 01:49:25,919 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:49:25,919 INFO  L93              Difference]: Finished difference Result 6193 states and 7330 transitions.
[2020-11-25 01:49:25,919 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:49:25,920 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6193 states and 7330 transitions.
[2020-11-25 01:49:25,939 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 01:49:25,966 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6193 states to 5945 states and 7028 transitions.
[2020-11-25 01:49:25,966 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 248
[2020-11-25 01:49:25,967 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 248
[2020-11-25 01:49:25,967 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5945 states and 7028 transitions.
[2020-11-25 01:49:25,979 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:49:25,979 INFO  L728         BuchiCegarLoop]: Abstraction has 5945 states and 7028 transitions.
[2020-11-25 01:49:25,986 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5945 states and 7028 transitions.
[2020-11-25 01:49:26,054 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5945 to 4948.
[2020-11-25 01:49:26,054 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4948 states.
[2020-11-25 01:49:26,064 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4948 states to 4948 states and 5747 transitions.
[2020-11-25 01:49:26,065 INFO  L751         BuchiCegarLoop]: Abstraction has 4948 states and 5747 transitions.
[2020-11-25 01:49:26,065 INFO  L631         BuchiCegarLoop]: Abstraction has 4948 states and 5747 transitions.
[2020-11-25 01:49:26,065 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:49:26,065 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4948 states and 5747 transitions.
[2020-11-25 01:49:26,075 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:49:26,075 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:49:26,075 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:49:26,077 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:49:26,077 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_TokenERC200 := false;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND FALSE  !(revert)
[L3043]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2628]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2598]              name_TokenERC20[this] := -914773036;
[L2599]              symbol_TokenERC20[this] := -914773036;
[L2600]              decimals_TokenERC20[this] := 18;
[L2601]              totalSupply_TokenERC20[this] := 0;
[L2602]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2603]              sum_balanceOf0[this] := 0;
[L2604]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2605]              sum_allowance1[this] := 0;
[L2607]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2608]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2610]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2611]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2612]              name_TokenERC20[this] := tokenName_s124;
[L2613]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2628]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2629]  COND FALSE  !(revert)
[L3043]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3044]  COND FALSE  !(revert)
[L3047]  CALL        call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3013]              assume msgsender_MSG != null;
[L3014]              Balance[this] := 0;
[L3015]              sellPrice_MyAdvancedToken[this] := 0;
[L3016]              buyPrice_MyAdvancedToken[this] := 0;
[L3017]              frozenAccount_MyAdvancedToken[this] := zeroRefboolArr();
[L3047]  RET         call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3048]  COND FALSE  !(revert)
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND TRUE   choice == 16
[L4782]              gas := gas - 21000;
[L4783]  COND TRUE   gas >= 0
[L4784]              assume msgvalue_MSG == 0;
[L4785]  CALL        call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balanceOf_TokenERC20[this][arg662_s0] >= 0 && balanceOf_TokenERC20[this][arg662_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_TokenERC200 := true;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L1059]              havoc __exception;
[L1060]              revert := false;
[L1061]  COND FALSE  !(__exception)
[L1088]  CALL        call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2983]              __ret_0_ := balanceOf_TokenERC20[this][arg662_s0];
[L1088]  RET         call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L1089]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == balanceOf_TokenERC20[this][arg662_s0] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L4785]  RET         call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND TRUE   choice == 16
[L4782]              gas := gas - 21000;
[L4783]  COND TRUE   gas >= 0
[L4784]              assume msgvalue_MSG == 0;
[L4785]  CALL        call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balanceOf_TokenERC20[this][arg662_s0] >= 0 && balanceOf_TokenERC20[this][arg662_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_TokenERC200 := true;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L1059]              havoc __exception;
[L1060]              revert := false;
[L1061]  COND FALSE  !(__exception)
[L1088]  CALL        call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2983]              __ret_0_ := balanceOf_TokenERC20[this][arg662_s0];
[L1088]  RET         call __ret_0_ := balanceOf~address_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L1089]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == balanceOf_TokenERC20[this][arg662_s0] && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this] == old(allowance_TokenERC20[this])) && sellPrice_MyAdvancedToken[this] == old(sellPrice_MyAdvancedToken[this])) && buyPrice_MyAdvancedToken[this] == old(buyPrice_MyAdvancedToken[this])) && frozenAccount_MyAdvancedToken[this] == old(frozenAccount_MyAdvancedToken[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L2]                 revert := revert_hold;
[L4785]  RET         call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:49:26,082 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:49:26,082 INFO  L82        PathProgramCache]: Analyzing trace with hash -772266339, now seen corresponding path program 1 times
[2020-11-25 01:49:26,083 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:49:26,101 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:49:26,168 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:49:26,168 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:49:26,169 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:49:26,169 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:49:26,170 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:49:26,170 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:49:26,170 INFO  L87              Difference]: Start difference. First operand 4948 states and 5747 transitions. cyclomatic complexity: 805 Second operand 4 states.
[2020-11-25 01:49:26,323 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:49:26,324 INFO  L93              Difference]: Finished difference Result 4949 states and 5746 transitions.
[2020-11-25 01:49:26,324 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 01:49:26,324 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4949 states and 5746 transitions.
[2020-11-25 01:49:26,335 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:49:26,352 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4949 states to 4942 states and 5738 transitions.
[2020-11-25 01:49:26,352 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 223
[2020-11-25 01:49:26,353 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 223
[2020-11-25 01:49:26,353 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4942 states and 5738 transitions.
[2020-11-25 01:49:26,358 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:49:26,358 INFO  L728         BuchiCegarLoop]: Abstraction has 4942 states and 5738 transitions.
[2020-11-25 01:49:26,363 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4942 states and 5738 transitions.
[2020-11-25 01:49:26,397 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4942 to 4940.
[2020-11-25 01:49:26,397 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4940 states.
[2020-11-25 01:49:26,403 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4940 states to 4940 states and 5736 transitions.
[2020-11-25 01:49:26,403 INFO  L751         BuchiCegarLoop]: Abstraction has 4940 states and 5736 transitions.
[2020-11-25 01:49:26,403 INFO  L631         BuchiCegarLoop]: Abstraction has 4940 states and 5736 transitions.
[2020-11-25 01:49:26,403 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:49:26,404 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4940 states and 5736 transitions.
[2020-11-25 01:49:26,408 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:49:26,408 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:49:26,408 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:49:26,410 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:49:26,410 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_TokenERC200 := false;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == MyAdvancedToken;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND FALSE  !(revert)
[L3043]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2628]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2598]              name_TokenERC20[this] := -914773036;
[L2599]              symbol_TokenERC20[this] := -914773036;
[L2600]              decimals_TokenERC20[this] := 18;
[L2601]              totalSupply_TokenERC20[this] := 0;
[L2602]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2603]              sum_balanceOf0[this] := 0;
[L2604]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2605]              sum_allowance1[this] := 0;
[L2607]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2608]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2610]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2611]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2612]              name_TokenERC20[this] := tokenName_s124;
[L2613]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2628]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2629]  COND FALSE  !(revert)
[L3043]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3044]  COND FALSE  !(revert)
[L3047]  CALL        call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3013]              assume msgsender_MSG != null;
[L3014]              Balance[this] := 0;
[L3015]              sellPrice_MyAdvancedToken[this] := 0;
[L3016]              buyPrice_MyAdvancedToken[this] := 0;
[L3017]              frozenAccount_MyAdvancedToken[this] := zeroRefboolArr();
[L3047]  RET         call MyAdvancedToken_MyAdvancedToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3048]  COND FALSE  !(revert)
[L1233]  RET         call MyAdvancedToken_MyAdvancedToken__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call MyAdvancedToken_MyAdvancedToken(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND TRUE   choice == 16
[L4782]              gas := gas - 21000;
[L4783]  COND TRUE   gas >= 0
[L4784]              assume msgvalue_MSG == 0;
[L4785]  CALL        call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balanceOf_TokenERC20[this][arg662_s0] >= 0 && balanceOf_TokenERC20[this][arg662_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_TokenERC200 := true;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L1059]              havoc __exception;
[L1060]              revert := false;
[L1061]  COND TRUE   __exception
[L1062]              __tmp__Balance := Balance;
[L1063]              __tmp__DType := DType;
[L1064]              __tmp__Alloc := Alloc;
[L1065]              __tmp__balance_ADDR := balance_ADDR;
[L1066]              __tmp__M_Ref_int := M_Ref_int;
[L1067]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L1068]              __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L1069]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1070]              __tmp__sum_allowance1 := sum_allowance1;
[L1071]              __tmp__M_Ref_bool := M_Ref_bool;
[L1072]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1073]              __tmp__Length := Length;
[L1074]              __tmp__now := now;
[L1075]              __tmp__owner_owned := owner_owned;
[L1076]              __tmp__name_TokenERC20 := name_TokenERC20;
[L1077]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L1078]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L1079]              __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L1080]              __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L1081]              __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L1082]              __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L1083]              __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L1084]              __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L1085]  CALL        call __ret_0_ := balanceOf~address_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2977]              __ret_0_ := __tmp__balanceOf_TokenERC20[this][arg662_s0];
[L1085]  RET         call __ret_0_ := balanceOf~address_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L1086]              assume revert || gas < 0;
[L4785]  RET         call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

Loop:
[L4908]  CALL        call CorralChoice_MyAdvancedToken(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != MyAdvancedToken;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND TRUE   choice == 16
[L4782]              gas := gas - 21000;
[L4783]  COND TRUE   gas >= 0
[L4784]              assume msgvalue_MSG == 0;
[L4785]  CALL        call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balanceOf_TokenERC20[this][arg662_s0] >= 0 && balanceOf_TokenERC20[this][arg662_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_TokenERC200 := true;
[L2]                 call_balanceOf_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L1059]              havoc __exception;
[L1060]              revert := false;
[L1061]  COND TRUE   __exception
[L1062]              __tmp__Balance := Balance;
[L1063]              __tmp__DType := DType;
[L1064]              __tmp__Alloc := Alloc;
[L1065]              __tmp__balance_ADDR := balance_ADDR;
[L1066]              __tmp__M_Ref_int := M_Ref_int;
[L1067]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L1068]              __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L1069]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1070]              __tmp__sum_allowance1 := sum_allowance1;
[L1071]              __tmp__M_Ref_bool := M_Ref_bool;
[L1072]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1073]              __tmp__Length := Length;
[L1074]              __tmp__now := now;
[L1075]              __tmp__owner_owned := owner_owned;
[L1076]              __tmp__name_TokenERC20 := name_TokenERC20;
[L1077]              __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L1078]              __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L1079]              __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L1080]              __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L1081]              __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L1082]              __tmp__sellPrice_MyAdvancedToken := sellPrice_MyAdvancedToken;
[L1083]              __tmp__buyPrice_MyAdvancedToken := buyPrice_MyAdvancedToken;
[L1084]              __tmp__frozenAccount_MyAdvancedToken := frozenAccount_MyAdvancedToken;
[L1085]  CALL        call __ret_0_ := balanceOf~address_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L2977]              __ret_0_ := __tmp__balanceOf_TokenERC20[this][arg662_s0];
[L1085]  RET         call __ret_0_ := balanceOf~address_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L1086]              assume revert || gas < 0;
[L4785]  RET         call __ret_0_balanceOf := balanceOf~address_TokenERC20(this, msgsender_MSG, msgvalue_MSG, arg662_s0);
[L4908]  RET         call CorralChoice_MyAdvancedToken(this);

[2020-11-25 01:49:26,413 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:49:26,413 INFO  L82        PathProgramCache]: Analyzing trace with hash 1409975210, now seen corresponding path program 1 times
[2020-11-25 01:49:26,414 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:49:26,422 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:49:26,444 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:49:26,445 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:49:26,445 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 01:49:26,445 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:49:26,445 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 01:49:26,445 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 01:49:26,445 INFO  L87              Difference]: Start difference. First operand 4940 states and 5736 transitions. cyclomatic complexity: 802 Second operand 5 states.
[2020-11-25 01:49:26,757 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:49:26,757 INFO  L93              Difference]: Finished difference Result 3065 states and 3511 transitions.
[2020-11-25 01:49:26,757 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:49:26,758 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3065 states and 3511 transitions.
[2020-11-25 01:49:26,764 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:49:26,764 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3065 states to 0 states and 0 transitions.
[2020-11-25 01:49:26,764 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:49:26,764 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:49:26,764 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:49:26,764 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:49:26,764 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:49:26,764 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:49:26,764 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:49:26,764 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:49:26,764 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:49:26,764 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:49:26,764 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:49:26,768 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:49:26 BasicIcfg
[2020-11-25 01:49:26,768 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:49:26,768 INFO  L168              Benchmark]: Toolchain (without parser) took 5079.32 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 411.0 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -110.8 MB). Peak memory consumption was 300.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,769 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.26 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,769 INFO  L168              Benchmark]: Boogie Preprocessor took 93.48 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 919.1 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,770 INFO  L168              Benchmark]: UtopiaSpecLang took 49.05 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,770 INFO  L168              Benchmark]: Boogie Printer took 16.92 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,770 INFO  L168              Benchmark]: RCFGBuilder took 849.34 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 790.2 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,770 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.40 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 781.3 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,771 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1228.64 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 223.9 MB). Free memory was 781.3 MB in the beginning and 968.8 MB in the end (delta: -187.5 MB). Peak memory consumption was 182.5 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,771 INFO  L168              Benchmark]: BlockEncodingV2 took 138.54 ms. Allocated memory is still 1.3 GB. Free memory was 968.8 MB in the beginning and 903.9 MB in the end (delta: 64.8 MB). Peak memory consumption was 64.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,771 INFO  L168              Benchmark]: BuchiAutomizer took 2658.55 ms. Allocated memory was 1.3 GB in the beginning and 1.4 GB in the end (delta: 187.2 MB). Free memory was 903.9 MB in the beginning and 1.1 GB in the end (delta: -147.4 MB). Peak memory consumption was 39.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:49:26,774 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5480 locations, 9666 edges
  - StatisticsResult: Encoded RCFG
    5424 locations, 9515 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.26 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 93.48 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 919.1 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 49.05 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.92 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 849.34 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 790.2 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.40 ms. Allocated memory is still 1.0 GB. Free memory was 790.2 MB in the beginning and 781.3 MB in the end (delta: 9.0 MB). Peak memory consumption was 9.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1228.64 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 223.9 MB). Free memory was 781.3 MB in the beginning and 968.8 MB in the end (delta: -187.5 MB). Peak memory consumption was 182.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 138.54 ms. Allocated memory is still 1.3 GB. Free memory was 968.8 MB in the beginning and 903.9 MB in the end (delta: 64.8 MB). Peak memory consumption was 64.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2658.55 ms. Allocated memory was 1.3 GB in the beginning and 1.4 GB in the end (delta: 187.2 MB). Free memory was 903.9 MB in the beginning and 1.1 GB in the end (delta: -147.4 MB). Peak memory consumption was 39.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2319 locations, 3069 edges
  - StatisticsResult: BuchiProgram size
    5480 locations, 9666 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.6s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 1.0s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 3 MinimizatonAttempts, 999 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4948 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20259 SDtfs, 16954 SDslu, 19179 SDs, 0 SdLazy, 3822 SolverSat, 3926 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_TokenERC200) ==> ( <>(success_balanceOf_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
