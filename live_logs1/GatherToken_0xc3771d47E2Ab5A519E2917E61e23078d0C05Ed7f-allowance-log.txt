This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:51:42,333 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:51:42,334 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:51:42,345 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:51:42,345 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:51:42,346 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:51:42,347 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:51:42,349 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:51:42,350 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:51:42,351 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:51:42,352 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:51:42,352 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:51:42,352 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:51:42,353 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:51:42,354 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:51:42,355 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:51:42,355 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:51:42,357 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:51:42,358 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:51:42,359 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:51:42,360 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:51:42,361 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:51:42,362 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:51:42,363 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:51:42,363 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:51:42,363 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:51:42,364 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:51:42,364 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:51:42,365 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:51:42,365 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:51:42,365 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:51:42,366 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:51:42,366 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:51:42,367 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:51:42,367 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:51:42,368 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:51:42,368 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:51:42,368 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:51:42,368 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:51:42,369 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:51:42,370 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:51:42,370 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:51:42,378 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:51:42,378 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:51:42,379 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:51:42,379 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:51:42,379 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:51:42,380 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:51:42,380 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:51:42,380 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:51:42,380 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:51:42,380 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:51:42,380 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:51:42,380 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:51:42,380 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:51:42,380 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:51:42,381 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:51:42,381 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:51:42,382 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:51:42,382 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:51:42,407 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:51:42,417 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:51:42,419 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:51:42,420 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:51:42,421 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:51:42,421 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl
[2020-11-25 16:51:42,421 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl'
[2020-11-25 16:51:42,519 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:51:42,520 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:51:42,521 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:51:42,521 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:51:42,521 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:51:42,538 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,540 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,579 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,580 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,609 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,623 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,634 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,646 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:51:42,647 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:51:42,647 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:51:42,649 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:51:42,653 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/1) ...
[2020-11-25 16:51:42,673 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:42,678 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:42,686 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:42,693 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_StandardToken[this][_owner_s453][_spender_s453]>=0 && allowed_StandardToken[this][_owner_s453][_spender_s453]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s453,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s453,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s453,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s453,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:51:42,696 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==allowed_StandardToken[this][_owner_s453][_spender_s453] && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && transferPaused_GatherToken[this]==( old(transferPaused_GatherToken[this]) ) ) && mintingFinished_MintableToken[this]==( old(mintingFinished_MintableToken[this]) ) ) && mintPermissions_MintableToken[this]==( old(mintPermissions_MintableToken[this]) ) ) && maxMintLimit_MintableToken[this]==( old(maxMintLimit_MintableToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s453,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s453,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[transferPaused_GatherToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[transferPaused_GatherToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintPermissions_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintPermissions_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[maxMintLimit_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[maxMintLimit_MintableToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]]
[2020-11-25 16:51:42,703 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this]) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this]) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this]) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 16:51:42,703 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_StandardToken0) ==> ( <>AP(success_allowance_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:51:42,716 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:42 PropertyContainer
[2020-11-25 16:51:42,716 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:51:42,717 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:51:42,717 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:51:42,717 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:51:42,718 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/2) ...
[2020-11-25 16:51:42,718 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:51:42,718 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:51:42,738 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:42" (2/2) ...
[2020-11-25 16:51:42,739 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:51:42,739 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:51:42,739 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:51:42,739 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:51:42,740 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/2) ...
[2020-11-25 16:51:42,795 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:51:42,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:51:42,796 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 16:51:42,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 16:51:42,797 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 16:51:42,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 16:51:42,797 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 16:51:42,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 16:51:42,797 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 16:51:42,797 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 16:51:42,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 16:51:42,797 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 16:51:42,797 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:51:42,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 16:51:42,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 16:51:42,798 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 16:51:42,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 16:51:42,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 16:51:42,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 16:51:42,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 16:51:42,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 16:51:42,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 16:51:42,799 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 16:51:42,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:42,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:42,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken
[2020-11-25 16:51:42,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure checkMintPermission~address_MintableToken__success
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address~uint256_MintableToken
[2020-11-25 16:51:42,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address~uint256_MintableToken
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken
[2020-11-25 16:51:42,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure mintInternal~address~uint256_MintableToken__success
[2020-11-25 16:51:42,800 INFO  L130     BoogieDeclarations]: Found specification of procedure mintAllowed~address_MintableToken
[2020-11-25 16:51:42,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintAllowed~address_MintableToken
[2020-11-25 16:51:42,801 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken
[2020-11-25 16:51:42,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken
[2020-11-25 16:51:42,801 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken
[2020-11-25 16:51:42,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken
[2020-11-25 16:51:42,801 INFO  L130     BoogieDeclarations]: Found specification of procedure maxMintLimit_MintableToken
[2020-11-25 16:51:42,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxMintLimit_MintableToken
[2020-11-25 16:51:42,801 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken_NoBaseCtor__success
[2020-11-25 16:51:42,801 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken
[2020-11-25 16:51:42,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken
[2020-11-25 16:51:42,801 INFO  L130     BoogieDeclarations]: Found specification of procedure unpauseTransfer_GatherToken
[2020-11-25 16:51:42,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpauseTransfer_GatherToken
[2020-11-25 16:51:42,802 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_GatherToken
[2020-11-25 16:51:42,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_GatherToken
[2020-11-25 16:51:42,802 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GatherToken
[2020-11-25 16:51:42,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GatherToken
[2020-11-25 16:51:42,802 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GatherToken
[2020-11-25 16:51:42,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GatherToken
[2020-11-25 16:51:42,802 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GatherToken
[2020-11-25 16:51:42,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GatherToken
[2020-11-25 16:51:42,802 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GatherToken
[2020-11-25 16:51:42,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GatherToken
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GatherToken
[2020-11-25 16:51:42,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GatherToken
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure transferPaused_GatherToken
[2020-11-25 16:51:42,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferPaused_GatherToken
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-25 16:51:42,803 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__success
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure tranferable_pre__success
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:51:42,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MintableToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MintableToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GatherToken
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:51:42,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:51:42,806 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:51:42,807 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 16:51:42,808 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,809 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__success
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure MintableToken_MintableToken__fail
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure checkMintPermission~address_MintableToken__fail
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address~uint256_MintableToken__success
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address~uint256_MintableToken__fail
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__success
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 16:51:42,810 INFO  L130     BoogieDeclarations]: Found specification of procedure mintInternal~address~uint256_MintableToken__fail
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure mintAllowed~address_MintableToken__success
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure mintAllowed~address_MintableToken__fail
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken__success
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_MintableToken__fail
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken__success
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_MintableToken__fail
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure maxMintLimit_MintableToken__success
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure maxMintLimit_MintableToken__fail
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken_NoBaseCtor__fail
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken__success
[2020-11-25 16:51:42,811 INFO  L130     BoogieDeclarations]: Found specification of procedure GatherToken_GatherToken__fail
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure unpauseTransfer_GatherToken__success
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure unpauseTransfer_GatherToken__fail
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_GatherToken__success
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure pauseTransfer_GatherToken__fail
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GatherToken__success
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_GatherToken__fail
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GatherToken__success
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_GatherToken__fail
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GatherToken__success
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure name_GatherToken__fail
[2020-11-25 16:51:42,812 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GatherToken__success
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_GatherToken__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GatherToken__success
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_GatherToken__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure transferPaused_GatherToken__success
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure transferPaused_GatherToken__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure hasMintPermission_pre__fail
[2020-11-25 16:51:42,813 INFO  L130     BoogieDeclarations]: Found specification of procedure tranferable_pre__fail
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 16:51:42,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 16:51:42,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 16:51:42,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__fail
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken_NoBaseCtor__success
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__fail
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure MintableToken_MintableToken__success
[2020-11-25 16:51:42,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkMintPermission~address_MintableToken__fail
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure checkMintPermission~address_MintableToken__success
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address~uint256_MintableToken__fail
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address~uint256_MintableToken__success
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__fail
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_MintableToken__success
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintInternal~address~uint256_MintableToken__fail
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintInternal~address~uint256_MintableToken__success
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintAllowed~address_MintableToken__fail
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintAllowed~address_MintableToken__success
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken__fail
[2020-11-25 16:51:42,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_MintableToken__success
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken__fail
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_MintableToken__success
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxMintLimit_MintableToken__fail
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure maxMintLimit_MintableToken__success
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken_NoBaseCtor__fail
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken_NoBaseCtor__success
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken__fail
[2020-11-25 16:51:42,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure GatherToken_GatherToken__success
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpauseTransfer_GatherToken__fail
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpauseTransfer_GatherToken__success
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_GatherToken__fail
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure pauseTransfer_GatherToken__success
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GatherToken__fail
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_GatherToken__success
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GatherToken__fail
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_GatherToken__success
[2020-11-25 16:51:42,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GatherToken__fail
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_GatherToken__success
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GatherToken__fail
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_GatherToken__success
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GatherToken__fail
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_GatherToken__success
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferPaused_GatherToken__fail
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferPaused_GatherToken__success
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:51:42,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__fail
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure hasMintPermission_pre__success
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure tranferable_pre__fail
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure tranferable_pre__success
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:51:42,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MintableToken
[2020-11-25 16:51:42,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MintableToken
[2020-11-25 16:51:42,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GatherToken
[2020-11-25 16:51:42,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:51:42,825 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:51:42,825 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:51:43,250 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:51:43,251 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:51:43,251 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:51:43,749 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:51:43,749 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 16:51:43,751 INFO  L202        PluginConnector]: Adding new model GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:43 BoogieIcfgContainer
[2020-11-25 16:51:43,751 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:42" (2/2) ...
[2020-11-25 16:51:43,751 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:51:43,752 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6ce89ea2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:43, skipping insertion in model container
[2020-11-25 16:51:43,752 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:51:43,752 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:51:43,752 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:51:43,753 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:51:43,753 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/3) ...
[2020-11-25 16:51:43,754 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@139745d6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:43, skipping insertion in model container
[2020-11-25 16:51:43,754 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:42" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:51:43,787 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:43 NWAContainer
[2020-11-25 16:51:43,787 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:51:43,787 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:51:43,787 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:51:43,788 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:51:43,789 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:43" (3/4) ...
[2020-11-25 16:51:43,789 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@12dbcd93 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:43, skipping insertion in model container
[2020-11-25 16:51:43,789 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:43" (4/4) ...
[2020-11-25 16:51:43,792 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:51:43,797 INFO  L110   BuchiProductObserver]: Initial RCFG 2395 locations, 3202 edges
[2020-11-25 16:51:43,797 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:51:43,809 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:51:45,528 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:51:45,535 INFO  L110   BuchiProductObserver]: BuchiProgram size 5904 locations, 10484 edges
[2020-11-25 16:51:45,536 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:45 BoogieIcfgContainer
[2020-11-25 16:51:45,536 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:51:45,536 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:51:45,536 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:51:45,537 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:51:45,538 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:45" (1/1) ...
[2020-11-25 16:51:45,654 INFO  L313           BlockEncoder]: Initial Icfg 5904 locations, 10484 edges
[2020-11-25 16:51:45,654 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:51:45,654 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:51:45,655 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:51:45,655 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:51:45,667 INFO  L70    emoveInfeasibleEdges]: Removed 99 edges and 19 locations because of local infeasibility
[2020-11-25 16:51:45,676 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 16:51:45,691 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:51:45,694 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:51:45,698 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:51:45,698 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:51:45,701 INFO  L313           BlockEncoder]: Encoded RCFG 5838 locations, 10315 edges
[2020-11-25 16:51:45,701 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:51:45 BasicIcfg
[2020-11-25 16:51:45,701 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:51:45,702 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:51:45,702 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:51:45,703 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:51:45,704 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:45,704 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:51:42" (1/6) ...
[2020-11-25 16:51:45,705 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@371053ea and model type GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:51:45, skipping insertion in model container
[2020-11-25 16:51:45,705 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:45,705 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:51:42" (2/6) ...
[2020-11-25 16:51:45,705 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@371053ea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:51:45, skipping insertion in model container
[2020-11-25 16:51:45,705 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:45,706 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:51:43" (3/6) ...
[2020-11-25 16:51:45,706 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@371053ea and model type GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:51:45, skipping insertion in model container
[2020-11-25 16:51:45,706 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:45,706 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:51:43" (4/6) ...
[2020-11-25 16:51:45,706 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@371053ea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:51:45, skipping insertion in model container
[2020-11-25 16:51:45,706 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:45,706 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:51:45" (5/6) ...
[2020-11-25 16:51:45,706 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@371053ea and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:51:45, skipping insertion in model container
[2020-11-25 16:51:45,706 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:51:45,706 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:51:45" (6/6) ...
[2020-11-25 16:51:45,707 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GatherToken_0xc3771d47E2Ab5A519E2917E61e23078d0C05Ed7f_allowance.bpl_BEv2
[2020-11-25 16:51:45,742 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:51:45,742 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:51:45,742 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:51:45,742 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:51:45,742 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:51:45,742 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:51:45,742 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:51:45,743 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:51:45,743 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:51:45,782 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5838 states.
[2020-11-25 16:51:45,836 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:45,836 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:45,837 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:45,844 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:45,844 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:45,844 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:51:45,844 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5838 states.
[2020-11-25 16:51:45,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:45,866 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:45,866 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:45,868 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:45,868 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND TRUE   revert
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND TRUE   choice == 22
[L6546]              gas := gas - 21000;
[L6547]  COND FALSE  !(gas >= 0)
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:45,883 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:45,883 INFO  L82        PathProgramCache]: Analyzing trace with hash -2035433539, now seen corresponding path program 1 times
[2020-11-25 16:51:45,888 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:45,905 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:45,946 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:51:45,948 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:45,948 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:51:46,294 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:46,302 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:51:46,303 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:51:46,304 INFO  L87              Difference]: Start difference. First operand 5838 states. Second operand 4 states.
[2020-11-25 16:51:46,782 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:46,782 INFO  L93              Difference]: Finished difference Result 3501 states and 3934 transitions.
[2020-11-25 16:51:46,782 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:51:46,783 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3501 states and 3934 transitions.
[2020-11-25 16:51:46,813 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:46,849 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3501 states to 3497 states and 3926 transitions.
[2020-11-25 16:51:46,851 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:51:46,855 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 874
[2020-11-25 16:51:46,856 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3497 states and 3926 transitions.
[2020-11-25 16:51:46,869 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:46,870 INFO  L728         BuchiCegarLoop]: Abstraction has 3497 states and 3926 transitions.
[2020-11-25 16:51:46,887 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3497 states and 3926 transitions.
[2020-11-25 16:51:46,938 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3497 to 3497.
[2020-11-25 16:51:46,939 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3497 states.
[2020-11-25 16:51:46,943 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3497 states to 3497 states and 3926 transitions.
[2020-11-25 16:51:46,944 INFO  L751         BuchiCegarLoop]: Abstraction has 3497 states and 3926 transitions.
[2020-11-25 16:51:46,944 INFO  L631         BuchiCegarLoop]: Abstraction has 3497 states and 3926 transitions.
[2020-11-25 16:51:46,944 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:51:46,944 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3497 states and 3926 transitions.
[2020-11-25 16:51:46,951 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:51:46,951 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:46,951 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:46,953 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:46,953 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND TRUE   revert
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND TRUE   revert
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND FALSE  !(choice == 19)
[L6569]  COND FALSE  !(choice == 18)
[L6576]  COND TRUE   choice == 17
[L6577]              gas := gas - 21000;
[L6578]  COND TRUE   gas >= 0
[L6579]              assume msgvalue_MSG == 0;
[L6580]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s453][_spender_s453] >= 0 && allowed_StandardToken[this][_owner_s453][_spender_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L935]               havoc __exception;
[L936]               revert := false;
[L937]   COND FALSE  !(__exception)
[L964]   CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L3530]              __ret_0_ := allowed_StandardToken[this][_owner_s453][_spender_s453];
[L964]   RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L965]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == allowed_StandardToken[this][_owner_s453][_spender_s453] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this])) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6580]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L6702]  RET         call CorralChoice_GatherToken(this);

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND FALSE  !(choice == 19)
[L6569]  COND FALSE  !(choice == 18)
[L6576]  COND TRUE   choice == 17
[L6577]              gas := gas - 21000;
[L6578]  COND TRUE   gas >= 0
[L6579]              assume msgvalue_MSG == 0;
[L6580]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s453][_spender_s453] >= 0 && allowed_StandardToken[this][_owner_s453][_spender_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L935]               havoc __exception;
[L936]               revert := false;
[L937]   COND FALSE  !(__exception)
[L964]   CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L3530]              __ret_0_ := allowed_StandardToken[this][_owner_s453][_spender_s453];
[L964]   RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L965]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == allowed_StandardToken[this][_owner_s453][_spender_s453] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this])) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6580]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:46,957 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:46,957 INFO  L82        PathProgramCache]: Analyzing trace with hash 1505663756, now seen corresponding path program 1 times
[2020-11-25 16:51:46,958 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:46,966 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:46,988 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:51:46,988 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:46,988 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:51:46,989 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:46,989 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:51:46,989 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:51:46,989 INFO  L87              Difference]: Start difference. First operand 3497 states and 3926 transitions. cyclomatic complexity: 431 Second operand 4 states.
[2020-11-25 16:51:47,768 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:47,768 INFO  L93              Difference]: Finished difference Result 4827 states and 5444 transitions.
[2020-11-25 16:51:47,768 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:51:47,769 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4827 states and 5444 transitions.
[2020-11-25 16:51:47,783 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:51:47,799 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4827 states to 4655 states and 5250 transitions.
[2020-11-25 16:51:47,800 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1127
[2020-11-25 16:51:47,801 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1149
[2020-11-25 16:51:47,801 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4655 states and 5250 transitions.
[2020-11-25 16:51:47,809 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:47,809 INFO  L728         BuchiCegarLoop]: Abstraction has 4655 states and 5250 transitions.
[2020-11-25 16:51:47,813 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4655 states and 5250 transitions.
[2020-11-25 16:51:47,846 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4655 to 3741.
[2020-11-25 16:51:47,846 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3741 states.
[2020-11-25 16:51:47,850 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3741 states to 3741 states and 4060 transitions.
[2020-11-25 16:51:47,850 INFO  L751         BuchiCegarLoop]: Abstraction has 3741 states and 4060 transitions.
[2020-11-25 16:51:47,850 INFO  L631         BuchiCegarLoop]: Abstraction has 3741 states and 4060 transitions.
[2020-11-25 16:51:47,850 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:51:47,850 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3741 states and 4060 transitions.
[2020-11-25 16:51:47,856 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:51:47,856 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:47,856 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:47,859 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:47,859 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L4001]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L4013]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3662]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3662]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]  COND FALSE  !(revert)
[L3666]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3666]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3667]  COND FALSE  !(revert)
[L3670]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3670]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3671]  COND FALSE  !(revert)
[L3674]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L3674]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L3678]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3679]  COND FALSE  !(revert)
[L3682]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3623]              assume msgsender_MSG != null;
[L3624]              Balance[this] := 0;
[L3625]              mintingFinished_MintableToken[this] := false;
[L3626]              mintPermissions_MintableToken[this] := zeroRefintArr();
[L3627]              sum_mintPermissions2[this] := 0;
[L3628]              maxMintLimit_MintableToken[this] := 0;
[L3682]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3683]  COND FALSE  !(revert)
[L4017]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3950]              assume msgsender_MSG != null;
[L3951]              Balance[this] := 0;
[L3952]              name_GatherToken[this] := 1979683959;
[L3953]              symbol_GatherToken[this] := -286833360;
[L3954]              decimals_GatherToken[this] := 18;
[L3955]              transferPaused_GatherToken[this] := true;
[L3957]              __var_16 := decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3958]              maxMintLimit_MintableToken[this] := 400000000 * (nonlinearPow(10, decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4021]  RET         call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND FALSE  !(choice == 19)
[L6569]  COND FALSE  !(choice == 18)
[L6576]  COND TRUE   choice == 17
[L6577]              gas := gas - 21000;
[L6578]  COND TRUE   gas >= 0
[L6579]              assume msgvalue_MSG == 0;
[L6580]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s453][_spender_s453] >= 0 && allowed_StandardToken[this][_owner_s453][_spender_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L935]               havoc __exception;
[L936]               revert := false;
[L937]   COND FALSE  !(__exception)
[L964]   CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L3530]              __ret_0_ := allowed_StandardToken[this][_owner_s453][_spender_s453];
[L964]   RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L965]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == allowed_StandardToken[this][_owner_s453][_spender_s453] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this])) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6580]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L6702]  RET         call CorralChoice_GatherToken(this);

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND FALSE  !(choice == 19)
[L6569]  COND FALSE  !(choice == 18)
[L6576]  COND TRUE   choice == 17
[L6577]              gas := gas - 21000;
[L6578]  COND TRUE   gas >= 0
[L6579]              assume msgvalue_MSG == 0;
[L6580]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s453][_spender_s453] >= 0 && allowed_StandardToken[this][_owner_s453][_spender_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L935]               havoc __exception;
[L936]               revert := false;
[L937]   COND FALSE  !(__exception)
[L964]   CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L3530]              __ret_0_ := allowed_StandardToken[this][_owner_s453][_spender_s453];
[L964]   RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L965]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((__ret_0_ == allowed_StandardToken[this][_owner_s453][_spender_s453] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && transferPaused_GatherToken[this] == old(transferPaused_GatherToken[this])) && mintingFinished_MintableToken[this] == old(mintingFinished_MintableToken[this])) && mintPermissions_MintableToken[this] == old(mintPermissions_MintableToken[this])) && maxMintLimit_MintableToken[this] == old(maxMintLimit_MintableToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L6580]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:47,864 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:47,864 INFO  L82        PathProgramCache]: Analyzing trace with hash -160225000, now seen corresponding path program 1 times
[2020-11-25 16:51:47,865 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:47,882 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:48,025 INFO  L134       CoverageAnalysis]: Checked inductivity of 882 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 882 trivial. 0 not checked.
[2020-11-25 16:51:48,026 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:48,026 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:51:48,027 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:48,027 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:51:48,027 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:51:48,027 INFO  L87              Difference]: Start difference. First operand 3741 states and 4060 transitions. cyclomatic complexity: 321 Second operand 4 states.
[2020-11-25 16:51:48,095 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:48,095 INFO  L93              Difference]: Finished difference Result 3742 states and 4059 transitions.
[2020-11-25 16:51:48,095 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:51:48,096 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3742 states and 4059 transitions.
[2020-11-25 16:51:48,103 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:51:48,112 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3742 states to 3732 states and 4049 transitions.
[2020-11-25 16:51:48,112 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 985
[2020-11-25 16:51:48,113 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 985
[2020-11-25 16:51:48,113 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3732 states and 4049 transitions.
[2020-11-25 16:51:48,116 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:48,116 INFO  L728         BuchiCegarLoop]: Abstraction has 3732 states and 4049 transitions.
[2020-11-25 16:51:48,119 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3732 states and 4049 transitions.
[2020-11-25 16:51:48,145 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3732 to 3730.
[2020-11-25 16:51:48,145 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3730 states.
[2020-11-25 16:51:48,148 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3730 states to 3730 states and 4047 transitions.
[2020-11-25 16:51:48,149 INFO  L751         BuchiCegarLoop]: Abstraction has 3730 states and 4047 transitions.
[2020-11-25 16:51:48,149 INFO  L631         BuchiCegarLoop]: Abstraction has 3730 states and 4047 transitions.
[2020-11-25 16:51:48,149 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:51:48,149 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3730 states and 4047 transitions.
[2020-11-25 16:51:48,153 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:51:48,154 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:51:48,154 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:51:48,155 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:51:48,156 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L6692]              assume null == 0;
[L6693]  CALL        call this := FreshRefGenerator__success();
[L2967]              havoc newRef;
[L2968]              assume Alloc[newRef] == false;
[L2969]              Alloc[newRef] := true;
[L2970]              assume newRef != null;
[L6693]  RET         call this := FreshRefGenerator__success();
[L6694]              assume now >= 0;
[L6695]              assume DType[this] == GatherToken;
[L6696]              assume msgvalue_MSG == 0;
[L6697]              gas := gas - 53000;
[L6698]  CALL        call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L1621]              havoc __exception;
[L1622]              revert := false;
[L1623]  COND FALSE  !(__exception)
[L1650]  CALL        call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3997]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3997]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3998]  COND FALSE  !(revert)
[L4001]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L4001]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4002]  COND FALSE  !(revert)
[L4005]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L4005]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  COND FALSE  !(revert)
[L4009]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L4009]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4010]  COND FALSE  !(revert)
[L4013]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L4013]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4014]  COND FALSE  !(revert)
[L4017]  CALL        call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3662]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3662]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3663]  COND FALSE  !(revert)
[L3666]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3666]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3667]  COND FALSE  !(revert)
[L3670]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3670]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3671]  COND FALSE  !(revert)
[L3674]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3396]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3396]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  COND FALSE  !(revert)
[L3400]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3209]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3209]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3210]  COND FALSE  !(revert)
[L3213]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3190]              assume msgsender_MSG != null;
[L3191]              Balance[this] := 0;
[L3213]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3214]  COND FALSE  !(revert)
[L3400]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3401]  COND FALSE  !(revert)
[L3404]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3255]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3173]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3158]              assume msgsender_MSG != null;
[L3159]              Balance[this] := 0;
[L3173]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3174]  COND FALSE  !(revert)
[L3255]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3256]  COND FALSE  !(revert)
[L3259]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3233]              assume msgsender_MSG != null;
[L3234]              Balance[this] := 0;
[L3235]              balances_BasicToken[this] := zeroRefintArr();
[L3236]              sum_balances0[this] := 0;
[L3237]              totalSupply__BasicToken[this] := 0;
[L3259]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3260]  COND FALSE  !(revert)
[L3404]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3405]  COND FALSE  !(revert)
[L3408]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3367]              assume msgsender_MSG != null;
[L3368]              Balance[this] := 0;
[L3369]              allowed_StandardToken[this] := zeroRefRefintArr();
[L3370]              sum_allowed1[this] := 0;
[L3408]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3409]  COND FALSE  !(revert)
[L3674]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3098]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              owner_Ownable[this] := null;
[L3085]              owner_Ownable[this] := msgsender_MSG;
[L3098]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3099]  COND FALSE  !(revert)
[L3678]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3679]  COND FALSE  !(revert)
[L3682]  CALL        call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3623]              assume msgsender_MSG != null;
[L3624]              Balance[this] := 0;
[L3625]              mintingFinished_MintableToken[this] := false;
[L3626]              mintPermissions_MintableToken[this] := zeroRefintArr();
[L3627]              sum_mintPermissions2[this] := 0;
[L3628]              maxMintLimit_MintableToken[this] := 0;
[L3682]  RET         call MintableToken_MintableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3683]  COND FALSE  !(revert)
[L4017]  RET         call MintableToken_MintableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4018]  COND FALSE  !(revert)
[L4021]  CALL        call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3950]              assume msgsender_MSG != null;
[L3951]              Balance[this] := 0;
[L3952]              name_GatherToken[this] := 1979683959;
[L3953]              symbol_GatherToken[this] := -286833360;
[L3954]              decimals_GatherToken[this] := 18;
[L3955]              transferPaused_GatherToken[this] := true;
[L3957]              __var_16 := decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3958]              maxMintLimit_MintableToken[this] := 400000000 * (nonlinearPow(10, decimals_GatherToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4021]  RET         call GatherToken_GatherToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4022]  COND FALSE  !(revert)
[L1650]  RET         call GatherToken_GatherToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1651]              assume !revert && gas >= 0;
[L6698]  RET         call GatherToken_GatherToken(this, msgsender_MSG, msgvalue_MSG);
[L6699]              assume !revert && gas >= 0;
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND FALSE  !(choice == 19)
[L6569]  COND FALSE  !(choice == 18)
[L6576]  COND TRUE   choice == 17
[L6577]              gas := gas - 21000;
[L6578]  COND TRUE   gas >= 0
[L6579]              assume msgvalue_MSG == 0;
[L6580]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s453][_spender_s453] >= 0 && allowed_StandardToken[this][_owner_s453][_spender_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L935]               havoc __exception;
[L936]               revert := false;
[L937]   COND TRUE   __exception
[L938]               __tmp__Balance := Balance;
[L939]               __tmp__DType := DType;
[L940]               __tmp__Alloc := Alloc;
[L941]               __tmp__balance_ADDR := balance_ADDR;
[L942]               __tmp__M_Ref_int := M_Ref_int;
[L943]               __tmp__sum_balances0 := sum_balances0;
[L944]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L945]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L946]               __tmp__sum_allowed1 := sum_allowed1;
[L947]               __tmp__sum_mintPermissions2 := sum_mintPermissions2;
[L948]               __tmp__Length := Length;
[L949]               __tmp__now := now;
[L950]               __tmp__owner_Ownable := owner_Ownable;
[L951]               __tmp__balances_BasicToken := balances_BasicToken;
[L952]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L953]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L954]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L955]               __tmp__mintPermissions_MintableToken := mintPermissions_MintableToken;
[L956]               __tmp__maxMintLimit_MintableToken := maxMintLimit_MintableToken;
[L957]               __tmp__name_GatherToken := name_GatherToken;
[L958]               __tmp__symbol_GatherToken := symbol_GatherToken;
[L959]               __tmp__decimals_GatherToken := decimals_GatherToken;
[L960]               __tmp__transferPaused_GatherToken := transferPaused_GatherToken;
[L961]   CALL        call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L3524]              __ret_0_ := __tmp__allowed_StandardToken[this][_owner_s453][_spender_s453];
[L961]   RET         call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L962]               assume revert || gas < 0;
[L6580]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L6702]  RET         call CorralChoice_GatherToken(this);

Loop:
[L6702]  CALL        call CorralChoice_GatherToken(this);
[L6488]              havoc msgsender_MSG;
[L6489]              havoc msgvalue_MSG;
[L6490]              havoc choice;
[L6491]              havoc __ret_0_owner;
[L6492]              havoc newOwner_s150;
[L6493]              havoc __ret_0_totalSupply;
[L6494]              havoc _owner_s312;
[L6495]              havoc __ret_0_balanceOf;
[L6496]              havoc _to_s867;
[L6497]              havoc _value_s867;
[L6498]              havoc __ret_0_transfer;
[L6499]              havoc _owner_s453;
[L6500]              havoc _spender_s453;
[L6501]              havoc __ret_0_allowance;
[L6502]              havoc _from_s849;
[L6503]              havoc _to_s849;
[L6504]              havoc _value_s849;
[L6505]              havoc __ret_0_transferFrom;
[L6506]              havoc _spender_s437;
[L6507]              havoc _value_s437;
[L6508]              havoc __ret_0_approve;
[L6509]              havoc _spender_s495;
[L6510]              havoc _addedValue_s495;
[L6511]              havoc __ret_0_increaseApproval;
[L6512]              havoc _spender_s555;
[L6513]              havoc _subtractedValue_s555;
[L6514]              havoc __ret_0_decreaseApproval;
[L6515]              havoc __ret_0_mintingFinished;
[L6516]              havoc __ret_0_maxMintLimit;
[L6517]              havoc _minter_s650;
[L6518]              havoc _amount_s650;
[L6519]              havoc _to_s669;
[L6520]              havoc _amount_s669;
[L6521]              havoc __ret_0_mint;
[L6522]              havoc _minter_s749;
[L6523]              havoc __ret_0_mintAllowed;
[L6524]              havoc __ret_0_finishMinting;
[L6525]              havoc __ret_0_name;
[L6526]              havoc __ret_0_symbol;
[L6527]              havoc __ret_0_decimals;
[L6528]              havoc __ret_0_transferPaused;
[L6529]              havoc tmpNow;
[L6530]              havoc gas;
[L6531]              assume gas > 4000000 && gas <= 8000000;
[L6532]              tmpNow := now;
[L6533]              havoc now;
[L6534]              assume now > tmpNow;
[L6535]              assume msgsender_MSG != null;
[L6536]              assume DType[msgsender_MSG] != SafeMath;
[L6537]              assume DType[msgsender_MSG] != Ownable;
[L6538]              assume DType[msgsender_MSG] != ERC20Basic;
[L6539]              assume DType[msgsender_MSG] != ERC20;
[L6540]              assume DType[msgsender_MSG] != BasicToken;
[L6541]              assume DType[msgsender_MSG] != StandardToken;
[L6542]              assume DType[msgsender_MSG] != MintableToken;
[L6543]              assume DType[msgsender_MSG] != GatherToken;
[L6544]              Alloc[msgsender_MSG] := true;
[L6545]  COND FALSE  !(choice == 22)
[L6551]  COND FALSE  !(choice == 21)
[L6557]  COND FALSE  !(choice == 20)
[L6563]  COND FALSE  !(choice == 19)
[L6569]  COND FALSE  !(choice == 18)
[L6576]  COND TRUE   choice == 17
[L6577]              gas := gas - 21000;
[L6578]  COND TRUE   gas >= 0
[L6579]              assume msgvalue_MSG == 0;
[L6580]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s453][_spender_s453] >= 0 && allowed_StandardToken[this][_owner_s453][_spender_s453] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L935]               havoc __exception;
[L936]               revert := false;
[L937]   COND TRUE   __exception
[L938]               __tmp__Balance := Balance;
[L939]               __tmp__DType := DType;
[L940]               __tmp__Alloc := Alloc;
[L941]               __tmp__balance_ADDR := balance_ADDR;
[L942]               __tmp__M_Ref_int := M_Ref_int;
[L943]               __tmp__sum_balances0 := sum_balances0;
[L944]               __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L945]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L946]               __tmp__sum_allowed1 := sum_allowed1;
[L947]               __tmp__sum_mintPermissions2 := sum_mintPermissions2;
[L948]               __tmp__Length := Length;
[L949]               __tmp__now := now;
[L950]               __tmp__owner_Ownable := owner_Ownable;
[L951]               __tmp__balances_BasicToken := balances_BasicToken;
[L952]               __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L953]               __tmp__allowed_StandardToken := allowed_StandardToken;
[L954]               __tmp__mintingFinished_MintableToken := mintingFinished_MintableToken;
[L955]               __tmp__mintPermissions_MintableToken := mintPermissions_MintableToken;
[L956]               __tmp__maxMintLimit_MintableToken := maxMintLimit_MintableToken;
[L957]               __tmp__name_GatherToken := name_GatherToken;
[L958]               __tmp__symbol_GatherToken := symbol_GatherToken;
[L959]               __tmp__decimals_GatherToken := decimals_GatherToken;
[L960]               __tmp__transferPaused_GatherToken := transferPaused_GatherToken;
[L961]   CALL        call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L3524]              __ret_0_ := __tmp__allowed_StandardToken[this][_owner_s453][_spender_s453];
[L961]   RET         call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L962]               assume revert || gas < 0;
[L6580]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s453, _spender_s453);
[L6702]  RET         call CorralChoice_GatherToken(this);

[2020-11-25 16:51:48,160 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:51:48,160 INFO  L82        PathProgramCache]: Analyzing trace with hash -130446387, now seen corresponding path program 1 times
[2020-11-25 16:51:48,161 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:51:48,176 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:51:48,284 INFO  L134       CoverageAnalysis]: Checked inductivity of 882 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 882 trivial. 0 not checked.
[2020-11-25 16:51:48,284 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:51:48,285 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 16:51:48,285 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:51:48,285 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 16:51:48,285 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 16:51:48,285 INFO  L87              Difference]: Start difference. First operand 3730 states and 4047 transitions. cyclomatic complexity: 319 Second operand 5 states.
[2020-11-25 16:51:48,483 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:51:48,483 INFO  L93              Difference]: Finished difference Result 2395 states and 2599 transitions.
[2020-11-25 16:51:48,483 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:51:48,484 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2395 states and 2599 transitions.
[2020-11-25 16:51:48,488 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:51:48,488 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2395 states to 0 states and 0 transitions.
[2020-11-25 16:51:48,488 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:51:48,488 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:51:48,488 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:51:48,488 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:51:48,488 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:51:48,488 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:51:48,488 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:51:48,488 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:51:48,488 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:51:48,489 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:51:48,489 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:51:48,492 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:51:48 BasicIcfg
[2020-11-25 16:51:48,492 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:51:48,492 INFO  L168              Benchmark]: Toolchain (without parser) took 5972.58 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 656.4 MB). Free memory was 935.2 MB in the beginning and 1.4 GB in the end (delta: -508.4 MB). Peak memory consumption was 148.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,493 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,493 INFO  L168              Benchmark]: Boogie Preprocessor took 125.68 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,494 INFO  L168              Benchmark]: UtopiaSpecLang took 69.75 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,494 INFO  L168              Benchmark]: Boogie Printer took 22.05 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,494 INFO  L168              Benchmark]: RCFGBuilder took 1012.64 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.5 MB). Free memory was 903.0 MB in the beginning and 999.6 MB in the end (delta: -96.6 MB). Peak memory consumption was 190.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,494 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.00 ms. Allocated memory is still 1.1 GB. Free memory was 999.6 MB in the beginning and 992.7 MB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,495 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1748.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 158.9 MB). Free memory was 992.7 MB in the beginning and 939.1 MB in the end (delta: 53.5 MB). Peak memory consumption was 505.2 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,495 INFO  L168              Benchmark]: BlockEncodingV2 took 165.53 ms. Allocated memory is still 1.3 GB. Free memory was 939.1 MB in the beginning and 850.8 MB in the end (delta: 88.4 MB). Peak memory consumption was 88.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,495 INFO  L168              Benchmark]: BuchiAutomizer took 2790.24 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 432.0 MB). Free memory was 850.8 MB in the beginning and 1.4 GB in the end (delta: -592.8 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:51:48,498 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5904 locations, 10484 edges
  - StatisticsResult: Encoded RCFG
    5838 locations, 10315 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 125.68 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.1 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.75 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.05 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1012.64 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 65.5 MB). Free memory was 903.0 MB in the beginning and 999.6 MB in the end (delta: -96.6 MB). Peak memory consumption was 190.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.00 ms. Allocated memory is still 1.1 GB. Free memory was 999.6 MB in the beginning and 992.7 MB in the end (delta: 7.0 MB). Peak memory consumption was 7.0 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1748.67 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 158.9 MB). Free memory was 992.7 MB in the beginning and 939.1 MB in the end (delta: 53.5 MB). Peak memory consumption was 505.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 165.53 ms. Allocated memory is still 1.3 GB. Free memory was 939.1 MB in the beginning and 850.8 MB in the end (delta: 88.4 MB). Peak memory consumption was 88.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2790.24 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 432.0 MB). Free memory was 850.8 MB in the beginning and 1.4 GB in the end (delta: -592.8 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2395 locations, 3202 edges
  - StatisticsResult: BuchiProgram size
    5904 locations, 10484 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.7s and 5 iterations.  TraceHistogramMax:12. Analysis of lassos took 0.7s. Construction of modules took 1.1s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 916 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3741 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14566 SDtfs, 12172 SDslu, 17500 SDs, 0 SdLazy, 3229 SolverSat, 2690 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_StandardToken0) ==> ( <>(success_allowance_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
