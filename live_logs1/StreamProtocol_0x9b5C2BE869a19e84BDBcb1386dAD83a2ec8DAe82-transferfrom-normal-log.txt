This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:51:25,453 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:51:25,455 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:51:25,465 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:51:25,466 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:51:25,466 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:51:25,467 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:51:25,469 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:51:25,470 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:51:25,471 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:51:25,472 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:51:25,472 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:51:25,473 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:51:25,474 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:51:25,475 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:51:25,475 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:51:25,476 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:51:25,477 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:51:25,478 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:51:25,480 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:51:25,480 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:51:25,481 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:51:25,483 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:51:25,483 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:51:25,483 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:51:25,484 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:51:25,484 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:51:25,485 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:51:25,485 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:51:25,485 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:51:25,486 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:51:25,487 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:51:25,487 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:51:25,488 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:51:25,488 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:51:25,489 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:51:25,489 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:51:25,489 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:51:25,490 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:51:25,490 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:51:25,491 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:51:25,491 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:51:25,499 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:51:25,499 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:51:25,499 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:51:25,500 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:51:25,500 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:51:25,500 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:51:25,501 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:51:25,501 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:51:25,502 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:51:25,502 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:51:25,502 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:51:25,502 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:51:25,502 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:51:25,524 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:51:25,534 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:51:25,537 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:51:25,538 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:51:25,538 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:51:25,539 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl
[2020-11-25 05:51:25,539 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl'
[2020-11-25 05:51:25,617 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:51:25,618 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:51:25,618 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:51:25,618 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:51:25,619 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:51:25,635 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,637 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,670 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,670 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,691 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,703 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,713 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,723 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:51:25,723 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:51:25,724 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:51:25,726 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:51:25,729 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/1) ...
[2020-11-25 05:51:25,747 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StreamProtocol.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_StreamProtocol[this][from] && value <= allowed_StreamProtocol[this][from][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][from] >= 0 &&  balances_StreamProtocol[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StreamProtocol[this][from][msg.sender] >= 0 && allowed_StreamProtocol[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transferFrom(from, to, value), return == true && balances_StreamProtocol[this][from] == old(balances_StreamProtocol[this][from]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && allowed_StreamProtocol[this][from][msg.sender] == old(allowed_StreamProtocol[this][from][msg.sender]) - value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && allowed_StreamProtocol[this][p2][p3] == old(allowed_StreamProtocol[this][p2][p3]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:51:25,753 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StreamProtocol.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_StreamProtocol[this][from] && value <= allowed_StreamProtocol[this][from][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][from] >= 0 &&  balances_StreamProtocol[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StreamProtocol[this][from][msg.sender] >= 0 && allowed_StreamProtocol[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transferFrom(from, to, value), return == true && balances_StreamProtocol[this][from] == old(balances_StreamProtocol[this][from]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && allowed_StreamProtocol[this][from][msg.sender] == old(allowed_StreamProtocol[this][from][msg.sender]) - value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && allowed_StreamProtocol[this][p2][p3] == old(allowed_StreamProtocol[this][p2][p3]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:51:25,760 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StreamProtocol.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_StreamProtocol[this][from] && value <= allowed_StreamProtocol[this][from][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][from] >= 0 &&  balances_StreamProtocol[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StreamProtocol[this][from][msg.sender] >= 0 && allowed_StreamProtocol[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transferFrom(from, to, value), return == true && balances_StreamProtocol[this][from] == old(balances_StreamProtocol[this][from]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && allowed_StreamProtocol[this][from][msg.sender] == old(allowed_StreamProtocol[this][from][msg.sender]) - value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && allowed_StreamProtocol[this][p2][p3] == old(allowed_StreamProtocol[this][p2][p3]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:51:25,769 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s510 && p1!=to_s510 ) && ( p2!=from_s510 || p3!=msg.sender ) ) && from_s510!=to_s510 ) && tokens_s510<=balances_StreamProtocol[this][from_s510] ) && tokens_s510<=allowed_StreamProtocol[this][from_s510][msg.sender] ) && ( balances_StreamProtocol[this][to_s510] + tokens_s510 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s510>=0 ) && tokens_s510<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StreamProtocol[this][to_s510]>=0 ) && balances_StreamProtocol[this][to_s510]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_StreamProtocol[this][from_s510]>=0 ) && balances_StreamProtocol[this][from_s510]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StreamProtocol[this][from_s510][msg.sender]>=0 ) && allowed_StreamProtocol[this][from_s510][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>],IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:51:25,772 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( success_s510==true && balances_StreamProtocol[this][from_s510]==( ( old(balances_StreamProtocol[this][from_s510]) ) - tokens_s510 ) ) && balances_StreamProtocol[this][to_s510]==( ( old(balances_StreamProtocol[this][to_s510]) ) + tokens_s510 ) ) && allowed_StreamProtocol[this][from_s510][msg.sender]==( ( old(allowed_StreamProtocol[this][from_s510][msg.sender]) ) - tokens_s510 ) ) && _totalSupply_StreamProtocol[this]==( old(_totalSupply_StreamProtocol[this]) ) ) && balances_StreamProtocol[this][p1]==( old(balances_StreamProtocol[this][p1]) ) ) && allowed_StreamProtocol[this][p2][p3]==( old(allowed_StreamProtocol[this][p2][p3]) ) ) && symbol_StreamProtocol[this]==( old(symbol_StreamProtocol[this]) ) ) && name_StreamProtocol[this]==( old(name_StreamProtocol[this]) ) ) && decimals_StreamProtocol[this]==( old(decimals_StreamProtocol[this]) ) ) && _stopTrade_StreamProtocol[this]==( old(_stopTrade_StreamProtocol[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s510,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_StreamProtocol>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_stopTrade_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_stopTrade_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_StreamProtocol>]]]]]]
[2020-11-25 05:51:25,776 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StreamProtocol.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balances_StreamProtocol[this][from] && value <= allowed_StreamProtocol[this][from][msg.sender] && balances_StreamProtocol[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][to] >= 0 && balances_StreamProtocol[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_StreamProtocol[this][from] >= 0 &&  balances_StreamProtocol[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StreamProtocol[this][from][msg.sender] >= 0 && allowed_StreamProtocol[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.transferFrom(from, to, value), return == true && balances_StreamProtocol[this][from] == old(balances_StreamProtocol[this][from]) - value && balances_StreamProtocol[this][to] == old(balances_StreamProtocol[this][to]) + value && allowed_StreamProtocol[this][from][msg.sender] == old(allowed_StreamProtocol[this][from][msg.sender]) - value && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1]) && allowed_StreamProtocol[this][p2][p3] == old(allowed_StreamProtocol[this][p2][p3]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:51:25,777 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_StreamProtocol0) ==> ( <>AP(success_transferFrom_StreamProtocol0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:51:25,784 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:25 PropertyContainer
[2020-11-25 05:51:25,785 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:51:25,785 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:51:25,785 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:51:25,785 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:51:25,786 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/2) ...
[2020-11-25 05:51:25,787 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:51:25,787 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:51:25,804 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:25" (2/2) ...
[2020-11-25 05:51:25,804 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:51:25,805 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:51:25,805 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:51:25,805 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:51:25,805 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/2) ...
[2020-11-25 05:51:25,859 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:51:25,859 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:51:25,859 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:51:25,859 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:51:25,860 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,860 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,860 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,860 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,860 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:51:25,860 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:51:25,861 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:51:25,861 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 05:51:25,861 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 05:51:25,861 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 05:51:25,861 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 05:51:25,861 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 05:51:25,862 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 05:51:25,862 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:51:25,862 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:51:25,862 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:51:25,863 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 05:51:25,863 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:51:25,863 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 05:51:25,863 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 05:51:25,863 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 05:51:25,863 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 05:51:25,863 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:51:25,863 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:51:25,863 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:51:25,864 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:51:25,865 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:51:25,866 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol
[2020-11-25 05:51:25,866 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol
[2020-11-25 05:51:25,867 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 05:51:25,867 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StreamProtocol
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:51:25,868 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:51:25,869 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:51:25,870 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__success
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:51:25,871 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:51:25,872 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__success
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__fail
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__success
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__fail
[2020-11-25 05:51:25,873 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__success
[2020-11-25 05:51:25,874 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__fail
[2020-11-25 05:51:25,874 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:51:25,874 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:51:25,874 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:51:25,874 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 05:51:25,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:51:25,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:51:25,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:51:25,874 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,875 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:51:25,876 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:51:25,877 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__success
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:51:25,878 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:51:25,879 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__success
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:51:25,880 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 05:51:25,881 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StreamProtocol
[2020-11-25 05:51:25,882 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:51:25,882 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:51:25,882 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:51:26,340 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:51:26,364 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:51:26,364 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:51:26,364 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:51:26,557 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:51:26,557 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 05:51:26,559 INFO  L202        PluginConnector]: Adding new model StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:26 BoogieIcfgContainer
[2020-11-25 05:51:26,559 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:25" (2/2) ...
[2020-11-25 05:51:26,560 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:51:26,560 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7f94b395 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:26, skipping insertion in model container
[2020-11-25 05:51:26,560 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:51:26,560 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:51:26,560 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:51:26,562 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:51:26,562 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/3) ...
[2020-11-25 05:51:26,563 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4788df61 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:26, skipping insertion in model container
[2020-11-25 05:51:26,563 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:25" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:51:26,602 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:26 NWAContainer
[2020-11-25 05:51:26,602 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:51:26,602 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:51:26,603 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:51:26,604 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:51:26,604 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:26" (3/4) ...
[2020-11-25 05:51:26,605 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5c783e09 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:26, skipping insertion in model container
[2020-11-25 05:51:26,605 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:26" (4/4) ...
[2020-11-25 05:51:26,608 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:51:26,612 INFO  L110   BuchiProductObserver]: Initial RCFG 1312 locations, 1638 edges
[2020-11-25 05:51:26,612 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:51:26,623 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:51:27,788 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:51:27,792 INFO  L110   BuchiProductObserver]: BuchiProgram size 3098 locations, 5279 edges
[2020-11-25 05:51:27,792 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:27 BoogieIcfgContainer
[2020-11-25 05:51:27,792 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:51:27,792 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:51:27,792 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:51:27,794 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:51:27,794 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:27" (1/1) ...
[2020-11-25 05:51:27,861 INFO  L313           BlockEncoder]: Initial Icfg 3098 locations, 5279 edges
[2020-11-25 05:51:27,861 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:51:27,861 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:51:27,862 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:51:27,862 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:51:27,872 INFO  L70    emoveInfeasibleEdges]: Removed 60 edges and 13 locations because of local infeasibility
[2020-11-25 05:51:27,879 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 05:51:27,891 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:51:27,894 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:51:27,897 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:51:27,897 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:51:27,901 INFO  L313           BlockEncoder]: Encoded RCFG 3058 locations, 5179 edges
[2020-11-25 05:51:27,902 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:51:27 BasicIcfg
[2020-11-25 05:51:27,902 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:51:27,902 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:51:27,902 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:51:27,905 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:51:27,905 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:27,905 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:51:25" (1/6) ...
[2020-11-25 05:51:27,907 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1169fb8e and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:51:27, skipping insertion in model container
[2020-11-25 05:51:27,907 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:27,907 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:51:25" (2/6) ...
[2020-11-25 05:51:27,907 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1169fb8e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:51:27, skipping insertion in model container
[2020-11-25 05:51:27,907 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:27,908 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:51:26" (3/6) ...
[2020-11-25 05:51:27,908 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1169fb8e and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:51:27, skipping insertion in model container
[2020-11-25 05:51:27,908 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:27,908 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:51:26" (4/6) ...
[2020-11-25 05:51:27,908 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1169fb8e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:51:27, skipping insertion in model container
[2020-11-25 05:51:27,908 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:27,908 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:51:27" (5/6) ...
[2020-11-25 05:51:27,909 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@1169fb8e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:51:27, skipping insertion in model container
[2020-11-25 05:51:27,909 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:51:27,909 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:51:27" (6/6) ...
[2020-11-25 05:51:27,910 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_transferfrom-normal.bpl_BEv2
[2020-11-25 05:51:27,944 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:51:27,945 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:51:27,945 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:51:27,945 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:51:27,945 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:51:27,945 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:51:27,945 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:51:27,945 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:51:27,945 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:51:27,975 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3058 states.
[2020-11-25 05:51:28,027 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:28,027 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:28,028 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:28,037 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:28,037 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:28,037 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:51:28,037 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3058 states.
[2020-11-25 05:51:28,055 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:28,055 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:28,055 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:28,057 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:28,057 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StreamProtocol0 := false;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND TRUE   revert
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND TRUE   revert
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND TRUE   choice == 15
[L3504]              gas := gas - 21000;
[L3505]  COND FALSE  !(gas >= 0)
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:28,073 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:28,073 INFO  L82        PathProgramCache]: Analyzing trace with hash -551377108, now seen corresponding path program 1 times
[2020-11-25 05:51:28,078 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:28,098 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:28,133 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:28,134 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:28,134 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:51:28,274 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:28,282 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:51:28,283 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:51:28,284 INFO  L87              Difference]: Start difference. First operand 3058 states. Second operand 4 states.
[2020-11-25 05:51:28,541 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:28,541 INFO  L93              Difference]: Finished difference Result 2157 states and 2412 transitions.
[2020-11-25 05:51:28,541 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:51:28,542 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2157 states and 2412 transitions.
[2020-11-25 05:51:28,553 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:28,567 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2157 states to 2157 states and 2412 transitions.
[2020-11-25 05:51:28,568 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:51:28,570 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 604
[2020-11-25 05:51:28,570 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2157 states and 2412 transitions.
[2020-11-25 05:51:28,575 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:28,575 INFO  L728         BuchiCegarLoop]: Abstraction has 2157 states and 2412 transitions.
[2020-11-25 05:51:28,589 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2157 states and 2412 transitions.
[2020-11-25 05:51:28,629 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2157 to 2157.
[2020-11-25 05:51:28,630 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2157 states.
[2020-11-25 05:51:28,635 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2157 states to 2157 states and 2412 transitions.
[2020-11-25 05:51:28,635 INFO  L751         BuchiCegarLoop]: Abstraction has 2157 states and 2412 transitions.
[2020-11-25 05:51:28,636 INFO  L631         BuchiCegarLoop]: Abstraction has 2157 states and 2412 transitions.
[2020-11-25 05:51:28,636 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:51:28,636 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2157 states and 2412 transitions.
[2020-11-25 05:51:28,643 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:28,644 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:28,644 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:28,646 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:28,646 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StreamProtocol0 := false;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND TRUE   revert
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND FALSE  !(choice == 12)
[L3528]  COND FALSE  !(choice == 11)
[L3535]  COND TRUE   choice == 10
[L3536]              gas := gas - 21000;
[L3537]  COND TRUE   gas >= 0
[L3538]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3539]              assume msgvalue_MSG == 0;
[L3540]  CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L808]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2174]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2175]              revert := true;
[L808]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L809]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s510 == true && balances_StreamProtocol[this][from_s510] == old(balances_StreamProtocol[this][from_s510]) - tokens_s510) && balances_StreamProtocol[this][to_s510] == old(balances_StreamProtocol[this][to_s510]) + tokens_s510) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] == old(allowed_StreamProtocol[this][from_s510][msgsender_MSG]) - tokens_s510) && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1])) && allowed_StreamProtocol[this][p2][p3] == old(allowed_StreamProtocol[this][p2][p3])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND FALSE  !(choice == 12)
[L3528]  COND FALSE  !(choice == 11)
[L3535]  COND TRUE   choice == 10
[L3536]              gas := gas - 21000;
[L3537]  COND TRUE   gas >= 0
[L3538]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3539]              assume msgvalue_MSG == 0;
[L3540]  CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L808]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2174]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2175]              revert := true;
[L808]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L809]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((success_s510 == true && balances_StreamProtocol[this][from_s510] == old(balances_StreamProtocol[this][from_s510]) - tokens_s510) && balances_StreamProtocol[this][to_s510] == old(balances_StreamProtocol[this][to_s510]) + tokens_s510) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] == old(allowed_StreamProtocol[this][from_s510][msgsender_MSG]) - tokens_s510) && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && balances_StreamProtocol[this][p1] == old(balances_StreamProtocol[this][p1])) && allowed_StreamProtocol[this][p2][p3] == old(allowed_StreamProtocol[this][p2][p3])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:28,651 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:28,651 INFO  L82        PathProgramCache]: Analyzing trace with hash -920896225, now seen corresponding path program 1 times
[2020-11-25 05:51:28,652 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:28,661 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:28,677 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:28,677 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:28,677 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:51:28,678 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:28,679 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:51:28,679 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:51:28,679 INFO  L87              Difference]: Start difference. First operand 2157 states and 2412 transitions. cyclomatic complexity: 257 Second operand 4 states.
[2020-11-25 05:51:29,084 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:29,084 INFO  L93              Difference]: Finished difference Result 3203 states and 3668 transitions.
[2020-11-25 05:51:29,084 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:51:29,085 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3203 states and 3668 transitions.
[2020-11-25 05:51:29,097 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:51:29,111 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3203 states to 3035 states and 3474 transitions.
[2020-11-25 05:51:29,111 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 825
[2020-11-25 05:51:29,112 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 837
[2020-11-25 05:51:29,112 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3035 states and 3474 transitions.
[2020-11-25 05:51:29,117 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:29,117 INFO  L728         BuchiCegarLoop]: Abstraction has 3035 states and 3474 transitions.
[2020-11-25 05:51:29,119 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3035 states and 3474 transitions.
[2020-11-25 05:51:29,141 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3035 to 2193.
[2020-11-25 05:51:29,141 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2193 states.
[2020-11-25 05:51:29,144 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2193 states to 2193 states and 2380 transitions.
[2020-11-25 05:51:29,144 INFO  L751         BuchiCegarLoop]: Abstraction has 2193 states and 2380 transitions.
[2020-11-25 05:51:29,144 INFO  L631         BuchiCegarLoop]: Abstraction has 2193 states and 2380 transitions.
[2020-11-25 05:51:29,144 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:51:29,144 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2193 states and 2380 transitions.
[2020-11-25 05:51:29,149 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:51:29,149 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:29,149 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:29,150 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:29,150 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StreamProtocol0 := false;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND FALSE  !(revert)
[L1927]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              assume msgsender_MSG != null;
[L1814]              Balance[this] := 0;
[L1815]              owner_Owned[this] := null;
[L1817]              owner_Owned[this] := msgsender_MSG;
[L1830]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1831]  COND FALSE  !(revert)
[L1927]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1928]  COND FALSE  !(revert)
[L1931]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1879]              assume msgsender_MSG != null;
[L1880]              Balance[this] := 0;
[L1881]              symbol_StreamProtocol[this] := 1491346165;
[L1882]              name_StreamProtocol[this] := 1491346165;
[L1883]              decimals_StreamProtocol[this] := 0;
[L1884]              _totalSupply_StreamProtocol[this] := 0;
[L1885]              _stopTrade_StreamProtocol[this] := false;
[L1886]              balances_StreamProtocol[this] := zeroRefintArr();
[L1887]              sum_balances0[this] := 0;
[L1888]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1889]              sum_allowed1[this] := 0;
[L1891]              symbol_StreamProtocol[this] := 1357906882;
[L1892]              name_StreamProtocol[this] := -1605590943;
[L1893]              decimals_StreamProtocol[this] := 18;
[L1894]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1896]              _stopTrade_StreamProtocol[this] := false;
[L1897]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1898]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1899]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1900]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1931]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1932]  COND FALSE  !(revert)
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND FALSE  !(choice == 12)
[L3528]  COND FALSE  !(choice == 11)
[L3535]  COND TRUE   choice == 10
[L3536]              gas := gas - 21000;
[L3537]  COND TRUE   gas >= 0
[L3538]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3539]              assume msgvalue_MSG == 0;
[L3540]  CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L799]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L800]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L801]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L802]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L803]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L804]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2126]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2127]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND FALSE  !(choice == 12)
[L3528]  COND FALSE  !(choice == 11)
[L3535]  COND TRUE   choice == 10
[L3536]              gas := gas - 21000;
[L3537]  COND TRUE   gas >= 0
[L3538]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3539]              assume msgvalue_MSG == 0;
[L3540]  CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L799]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L800]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L801]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L802]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L803]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L804]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2126]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2127]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:29,153 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:29,153 INFO  L82        PathProgramCache]: Analyzing trace with hash -393525106, now seen corresponding path program 1 times
[2020-11-25 05:51:29,154 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:29,165 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:51:29,217 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:51:29,217 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:51:29,217 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 05:51:29,217 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:51:29,218 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 05:51:29,218 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-25 05:51:29,218 INFO  L87              Difference]: Start difference. First operand 2193 states and 2380 transitions. cyclomatic complexity: 189 Second operand 11 states.
[2020-11-25 05:51:30,600 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:51:30,601 INFO  L93              Difference]: Finished difference Result 3687 states and 4086 transitions.
[2020-11-25 05:51:30,601 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 05:51:30,601 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3687 states and 4086 transitions.
[2020-11-25 05:51:30,610 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 05:51:30,624 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3687 states to 3687 states and 4086 transitions.
[2020-11-25 05:51:30,624 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1069
[2020-11-25 05:51:30,626 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1069
[2020-11-25 05:51:30,626 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3687 states and 4086 transitions.
[2020-11-25 05:51:30,629 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:51:30,629 INFO  L728         BuchiCegarLoop]: Abstraction has 3687 states and 4086 transitions.
[2020-11-25 05:51:30,632 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3687 states and 4086 transitions.
[2020-11-25 05:51:30,653 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3687 to 2235.
[2020-11-25 05:51:30,653 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2235 states.
[2020-11-25 05:51:30,655 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2235 states to 2235 states and 2429 transitions.
[2020-11-25 05:51:30,655 INFO  L751         BuchiCegarLoop]: Abstraction has 2235 states and 2429 transitions.
[2020-11-25 05:51:30,655 INFO  L631         BuchiCegarLoop]: Abstraction has 2235 states and 2429 transitions.
[2020-11-25 05:51:30,655 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:51:30,655 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2235 states and 2429 transitions.
[2020-11-25 05:51:30,659 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:51:30,659 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:51:30,659 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:51:30,661 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:51:30,661 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_StreamProtocol0 := false;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3607]              assume null == 0;
[L3608]  CALL        call this := FreshRefGenerator__success();
[L1626]              havoc newRef;
[L1627]              assume Alloc[newRef] == false;
[L1628]              Alloc[newRef] := true;
[L1629]              assume newRef != null;
[L3608]  RET         call this := FreshRefGenerator__success();
[L3609]              assume now >= 0;
[L3610]              assume DType[this] == StreamProtocol;
[L3611]              assume msgvalue_MSG == 0;
[L3612]              gas := gas - 53000;
[L3613]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND FALSE  !(revert)
[L1927]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              assume msgsender_MSG != null;
[L1814]              Balance[this] := 0;
[L1815]              owner_Owned[this] := null;
[L1817]              owner_Owned[this] := msgsender_MSG;
[L1830]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1831]  COND FALSE  !(revert)
[L1927]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1928]  COND FALSE  !(revert)
[L1931]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1879]              assume msgsender_MSG != null;
[L1880]              Balance[this] := 0;
[L1881]              symbol_StreamProtocol[this] := 1491346165;
[L1882]              name_StreamProtocol[this] := 1491346165;
[L1883]              decimals_StreamProtocol[this] := 0;
[L1884]              _totalSupply_StreamProtocol[this] := 0;
[L1885]              _stopTrade_StreamProtocol[this] := false;
[L1886]              balances_StreamProtocol[this] := zeroRefintArr();
[L1887]              sum_balances0[this] := 0;
[L1888]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1889]              sum_allowed1[this] := 0;
[L1891]              symbol_StreamProtocol[this] := 1357906882;
[L1892]              name_StreamProtocol[this] := -1605590943;
[L1893]              decimals_StreamProtocol[this] := 18;
[L1894]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1896]              _stopTrade_StreamProtocol[this] := false;
[L1897]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1898]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1899]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1900]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1931]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1932]  COND FALSE  !(revert)
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3614]              assume !revert && gas >= 0;
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND FALSE  !(choice == 12)
[L3528]  COND FALSE  !(choice == 11)
[L3535]  COND TRUE   choice == 10
[L3536]              gas := gas - 21000;
[L3537]  COND TRUE   gas >= 0
[L3538]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3539]              assume msgvalue_MSG == 0;
[L3540]  CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L799]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L800]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L801]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L802]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L803]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L804]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2126]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2130]              __var_7 := null;
[L2131]  COND TRUE   !(from_s510 > null)
[L2132]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3617]  CALL        call CorralChoice_StreamProtocol(this);
[L3459]              havoc msgsender_MSG;
[L3460]              havoc msgvalue_MSG;
[L3461]              havoc choice;
[L3462]              havoc __ret_0_totalSupply;
[L3463]              havoc tokenOwner_s328;
[L3464]              havoc balance_s328;
[L3465]              havoc tokenOwner_s532;
[L3466]              havoc spender_s532;
[L3467]              havoc remaining_s532;
[L3468]              havoc to_s385;
[L3469]              havoc tokens_s385;
[L3470]              havoc success_s385;
[L3471]              havoc spender_s419;
[L3472]              havoc tokens_s419;
[L3473]              havoc success_s419;
[L3474]              havoc from_s510;
[L3475]              havoc to_s510;
[L3476]              havoc tokens_s510;
[L3477]              havoc success_s510;
[L3478]              havoc __ret_0_owner;
[L3479]              havoc __ret_0_symbol;
[L3480]              havoc __ret_0_name;
[L3481]              havoc __ret_0_decimals;
[L3482]              havoc spender_s582;
[L3483]              havoc tokens_s582;
[L3484]              havoc data_s582;
[L3485]              havoc success_s582;
[L3486]              havoc tokenAddress_s609;
[L3487]              havoc tokens_s609;
[L3488]              havoc success_s609;
[L3489]              havoc _value_s658;
[L3490]              havoc tmpNow;
[L3491]              havoc gas;
[L3492]              assume gas > 4000000 && gas <= 8000000;
[L3493]              tmpNow := now;
[L3494]              havoc now;
[L3495]              assume now > tmpNow;
[L3496]              assume msgsender_MSG != null;
[L3497]              assume DType[msgsender_MSG] != SafeMath;
[L3498]              assume DType[msgsender_MSG] != ERC20Interface;
[L3499]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3500]              assume DType[msgsender_MSG] != Owned;
[L3501]              assume DType[msgsender_MSG] != StreamProtocol;
[L3502]              Alloc[msgsender_MSG] := true;
[L3503]  COND FALSE  !(choice == 15)
[L3509]  COND FALSE  !(choice == 14)
[L3515]  COND FALSE  !(choice == 13)
[L3521]  COND FALSE  !(choice == 12)
[L3528]  COND FALSE  !(choice == 11)
[L3535]  COND TRUE   choice == 10
[L3536]              gas := gas - 21000;
[L3537]  COND TRUE   gas >= 0
[L3538]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3539]              assume msgvalue_MSG == 0;
[L3540]  CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L799]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L800]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L801]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L802]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L803]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L804]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2126]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2130]              __var_7 := null;
[L2131]  COND TRUE   !(from_s510 > null)
[L2132]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3617]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:51:30,664 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:30,664 INFO  L82        PathProgramCache]: Analyzing trace with hash 960197749, now seen corresponding path program 1 times
[2020-11-25 05:51:30,664 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:30,682 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:30,703 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:30,760 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:30,761 INFO  L82        PathProgramCache]: Analyzing trace with hash -1778409758, now seen corresponding path program 1 times
[2020-11-25 05:51:30,761 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:30,767 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:30,772 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:30,784 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:51:30,784 INFO  L82        PathProgramCache]: Analyzing trace with hash -1479639978, now seen corresponding path program 1 times
[2020-11-25 05:51:30,785 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:51:30,806 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:30,830 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
[2020-11-25 05:51:31,057 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 161
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 5281 to 10559
[2020-11-25 05:51:31,236 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification. DAG size of input: 116 DAG size of output: 110
[2020-11-25 05:51:31,416 WARN  L188               SmtUtils]: Spent 177.00 ms on a formula simplification that was a NOOP. DAG size: 260
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 05:51:32,015 WARN  L188               SmtUtils]: Spent 586.00 ms on a formula simplification. DAG size of input: 216 DAG size of output: 216
[2020-11-25 05:51:32,681 WARN  L188               SmtUtils]: Spent 663.00 ms on a formula simplification. DAG size of input: 275 DAG size of output: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 12073 to 24137
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8713 to 17419
[2020-11-25 05:51:33,136 WARN  L188               SmtUtils]: Spent 420.00 ms on a formula simplification. DAG size of input: 191 DAG size of output: 162
[2020-11-25 05:51:33,385 WARN  L188               SmtUtils]: Spent 246.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
[2020-11-25 05:51:33,929 WARN  L188               SmtUtils]: Spent 527.00 ms on a formula simplification. DAG size of input: 263 DAG size of output: 251
[2020-11-25 05:51:34,190 WARN  L188               SmtUtils]: Spent 259.00 ms on a formula simplification that was a NOOP. DAG size: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
[2020-11-25 05:51:39,706 WARN  L188               SmtUtils]: Spent 5.42 s on a formula simplification. DAG size of input: 637 DAG size of output: 201
[2020-11-25 05:51:39,714 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-25 05:51:40,389 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification that was a NOOP. DAG size: 260
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 05:51:40,871 WARN  L188               SmtUtils]: Spent 474.00 ms on a formula simplification. DAG size of input: 216 DAG size of output: 216
[2020-11-25 05:51:41,493 WARN  L188               SmtUtils]: Spent 619.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 12073 to 24137
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 05:51:41,765 WARN  L188               SmtUtils]: Spent 256.00 ms on a formula simplification. DAG size of input: 169 DAG size of output: 158
[2020-11-25 05:51:41,993 WARN  L188               SmtUtils]: Spent 226.00 ms on a formula simplification that was a NOOP. DAG size: 311
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 05:51:42,409 WARN  L188               SmtUtils]: Spent 405.00 ms on a formula simplification. DAG size of input: 256 DAG size of output: 247
[2020-11-25 05:51:43,546 WARN  L188               SmtUtils]: Spent 1.14 s on a formula simplification. DAG size of input: 438 DAG size of output: 424
Garbage collection #1: 167 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 167 to 331
Garbage collection #2: 331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 331 to 661
Garbage collection #3: 661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 661 to 1321
Garbage collection #4: 1321 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1321 to 2633
Garbage collection #5: 2633 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2633 to 5261
Garbage collection #6: 5261 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5261 to 10513
Garbage collection #7: 10513 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 10513 to 21023
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 05:51:43,971 WARN  L188               SmtUtils]: Spent 407.00 ms on a formula simplification. DAG size of input: 217 DAG size of output: 201
[2020-11-25 05:51:44,320 WARN  L188               SmtUtils]: Spent 335.00 ms on a formula simplification that was a NOOP. DAG size: 307
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 05:51:44,617 WARN  L188               SmtUtils]: Spent 277.00 ms on a formula simplification. DAG size of input: 202 DAG size of output: 191
[2020-11-25 05:51:45,093 WARN  L188               SmtUtils]: Spent 475.00 ms on a formula simplification. DAG size of input: 299 DAG size of output: 298
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 6271 to 12541
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
[2020-11-25 05:51:45,790 WARN  L188               SmtUtils]: Spent 685.00 ms on a formula simplification. DAG size of input: 305 DAG size of output: 293
[2020-11-25 05:51:45,804 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:45,821 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:51:45,829 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:51:45 BasicIcfg
[2020-11-25 05:51:45,829 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:51:45,829 INFO  L168              Benchmark]: Toolchain (without parser) took 20212.08 ms. Allocated memory was 1.0 GB in the beginning and 2.8 GB in the end (delta: 1.8 GB). Free memory was 940.6 MB in the beginning and 2.3 GB in the end (delta: -1.4 GB). Peak memory consumption was 2.0 GB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,830 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,830 INFO  L168              Benchmark]: Boogie Preprocessor took 104.83 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,830 INFO  L168              Benchmark]: UtopiaSpecLang took 61.34 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,830 INFO  L168              Benchmark]: Boogie Printer took 19.27 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,831 INFO  L168              Benchmark]: RCFGBuilder took 755.49 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 806.3 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,831 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.10 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,831 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1189.66 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 209.2 MB). Free memory was 802.8 MB in the beginning and 1.1 GB in the end (delta: -299.6 MB). Peak memory consumption was 179.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,832 INFO  L168              Benchmark]: BlockEncodingV2 took 109.28 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 45.3 MB). Peak memory consumption was 45.3 MB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,832 INFO  L168              Benchmark]: BuchiAutomizer took 17926.69 ms. Allocated memory was 1.2 GB in the beginning and 2.8 GB in the end (delta: 1.6 GB). Free memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: -1.3 GB). Peak memory consumption was 1.9 GB. Max. memory is 15.3 GB.
[2020-11-25 05:51:45,834 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3098 locations, 5279 edges
  - StatisticsResult: Encoded RCFG
    3058 locations, 5179 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 104.83 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 61.34 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 19.27 ms. Allocated memory is still 1.0 GB. Free memory is still 913.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 755.49 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 806.3 MB in the end (delta: 107.4 MB). Peak memory consumption was 107.4 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.10 ms. Allocated memory is still 1.0 GB. Free memory was 806.3 MB in the beginning and 802.8 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1189.66 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 209.2 MB). Free memory was 802.8 MB in the beginning and 1.1 GB in the end (delta: -299.6 MB). Peak memory consumption was 179.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 109.28 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 45.3 MB). Peak memory consumption was 45.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 17926.69 ms. Allocated memory was 1.2 GB in the beginning and 2.8 GB in the end (delta: 1.6 GB). Free memory was 1.1 GB in the beginning and 2.3 GB in the end (delta: -1.3 GB). Peak memory consumption was 1.9 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1312 locations, 1638 edges
  - StatisticsResult: BuchiProgram size
    3098 locations, 5279 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 2235 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 17.8s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 15.4s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 2294 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 2235 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 8368 SDtfs, 9896 SDslu, 10420 SDs, 0 SdLazy, 20967 SolverSat, 2093 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129638928) = (new StreamProtocol)({from : (- 1)});
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1747]              assume msgsender_MSG != null;
[L1748]              Balance[this] := 0;
[L1762]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1763]  COND FALSE  !(revert)
[L1923]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1924]  COND FALSE  !(revert)
[L1927]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1813]              assume msgsender_MSG != null;
[L1814]              Balance[this] := 0;
[L1815]              owner_Owned[this] := null;
[L1817]              owner_Owned[this] := msgsender_MSG;
[L1830]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1831]  COND FALSE  !(revert)
[L1927]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1928]  COND FALSE  !(revert)
[L1931]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1879]              assume msgsender_MSG != null;
[L1880]              Balance[this] := 0;
[L1881]              symbol_StreamProtocol[this] := 1491346165;
[L1882]              name_StreamProtocol[this] := 1491346165;
[L1883]              decimals_StreamProtocol[this] := 0;
[L1884]              _totalSupply_StreamProtocol[this] := 0;
[L1885]              _stopTrade_StreamProtocol[this] := false;
[L1886]              balances_StreamProtocol[this] := zeroRefintArr();
[L1887]              sum_balances0[this] := 0;
[L1888]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1889]              sum_allowed1[this] := 0;
[L1891]              symbol_StreamProtocol[this] := 1357906882;
[L1892]              name_StreamProtocol[this] := -1605590943;
[L1893]              decimals_StreamProtocol[this] := 18;
[L1894]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1896]              _stopTrade_StreamProtocol[this] := false;
[L1897]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1898]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1899]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1900]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1931]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1932]  COND FALSE  !(revert)
[L420]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3613]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
StreamProtocol(115792089237316195423570985008687907853269984665640564039457584007913129638928).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129638922, from : 0, to : (- 1), tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L799]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L800]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L801]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L802]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L803]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L804]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2126]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2130]              __var_7 := null;
[L2131]  COND TRUE   !(from_s510 > null)
[L2132]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);

Loop:
StreamProtocol(115792089237316195423570985008687907853269984665640564039457584007913129638928).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129638914, from : 0, to : (- 1), tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != from_s510 && p1 != to_s510) && (p2 != from_s510 || p3 != msgsender_MSG)) && from_s510 != to_s510) && tokens_s510 <= balances_StreamProtocol[this][from_s510]) && tokens_s510 <= allowed_StreamProtocol[this][from_s510][msgsender_MSG]) && balances_StreamProtocol[this][to_s510] + tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][to_s510] >= 0) && balances_StreamProtocol[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_StreamProtocol[this][from_s510] >= 0) && balances_StreamProtocol[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] >= 0) && allowed_StreamProtocol[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_StreamProtocol0 := true;
[L3]                 call_transferFrom_StreamProtocol0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L799]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L800]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L801]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L802]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L803]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L804]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2126]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2130]              __var_7 := null;
[L2131]  COND TRUE   !(from_s510 > null)
[L2132]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3540]  RET         call success_s510 := transferFrom~address~address~uint256_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
