This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 08:49:42,982 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 08:49:42,984 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 08:49:42,996 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 08:49:42,996 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 08:49:42,997 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 08:49:42,998 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 08:49:42,999 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 08:49:43,001 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 08:49:43,002 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 08:49:43,002 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 08:49:43,003 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 08:49:43,003 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 08:49:43,004 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 08:49:43,005 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 08:49:43,006 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 08:49:43,007 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 08:49:43,008 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 08:49:43,010 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 08:49:43,011 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 08:49:43,012 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 08:49:43,012 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 08:49:43,014 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 08:49:43,014 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 08:49:43,014 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 08:49:43,015 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 08:49:43,015 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 08:49:43,016 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 08:49:43,016 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 08:49:43,016 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 08:49:43,017 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 08:49:43,017 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 08:49:43,018 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 08:49:43,018 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 08:49:43,019 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 08:49:43,019 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 08:49:43,020 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 08:49:43,020 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 08:49:43,020 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 08:49:43,021 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 08:49:43,021 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 08:49:43,022 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 08:49:43,029 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 08:49:43,030 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 08:49:43,031 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 08:49:43,031 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 08:49:43,031 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 08:49:43,031 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 08:49:43,031 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 08:49:43,031 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 08:49:43,031 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 08:49:43,031 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 08:49:43,031 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 08:49:43,032 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 08:49:43,032 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 08:49:43,033 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 08:49:43,033 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 08:49:43,033 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 08:49:43,033 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 08:49:43,033 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 08:49:43,058 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 08:49:43,074 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 08:49:43,077 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 08:49:43,078 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 08:49:43,079 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 08:49:43,079 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl
[2020-11-25 08:49:43,080 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl'
[2020-11-25 08:49:43,138 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 08:49:43,139 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 08:49:43,139 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 08:49:43,140 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 08:49:43,140 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 08:49:43,156 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,157 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,186 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,187 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,205 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,212 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,216 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,222 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 08:49:43,223 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 08:49:43,223 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 08:49:43,225 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 08:49:43,229 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/1) ...
[2020-11-25 08:49:43,241 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(WXB.totalSupply, totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.totalSupply, return == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:43,246 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(WXB.totalSupply, totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.totalSupply, return == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:43,253 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(WXB.totalSupply, totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.totalSupply, return == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:43,258 INFO  L636   opiaSpecLangObserver]: Parsed ( totalSupply_WXB[this]>=0 && totalSupply_WXB[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 08:49:43,261 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==totalSupply_WXB[this] && totalSupply_WXB[this]==( old(totalSupply_WXB[this]) ) ) && holders_WXB[this]==( old(holders_WXB[this]) ) ) && approach_WXB[this]==( old(approach_WXB[this]) ) ) && decimals_WXB[this]==( old(decimals_WXB[this]) ) ) && symbol_WXB[this]==( old(symbol_WXB[this]) ) ) && name_WXB[this]==( old(name_WXB[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_WXB>],ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[holders_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[approach_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_WXB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_WXB>]]]]]]
[2020-11-25 08:49:43,263 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(WXB.totalSupply, totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(WXB.totalSupply, return == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this]) && holders_WXB[this] == old(holders_WXB[this]) && approach_WXB[this] == old(approach_WXB[this]) && decimals_WXB[this] == old(decimals_WXB[this]) && symbol_WXB[this] == old(symbol_WXB[this]) && name_WXB[this] == old(name_WXB[this]))))
[2020-11-25 08:49:43,263 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_WXB0) ==> ( <>AP(success_totalSupply_WXB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 08:49:43,268 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:43 PropertyContainer
[2020-11-25 08:49:43,268 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 08:49:43,268 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 08:49:43,269 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 08:49:43,269 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 08:49:43,269 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/2) ...
[2020-11-25 08:49:43,270 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 08:49:43,270 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 08:49:43,278 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:43" (2/2) ...
[2020-11-25 08:49:43,278 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 08:49:43,278 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 08:49:43,278 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 08:49:43,278 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 08:49:43,280 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/2) ...
[2020-11-25 08:49:43,338 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 08:49:43,338 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:49:43,338 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 08:49:43,338 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 08:49:43,338 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB
[2020-11-25 08:49:43,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__success
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB
[2020-11-25 08:49:43,339 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB
[2020-11-25 08:49:43,339 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB
[2020-11-25 08:49:43,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB
[2020-11-25 08:49:43,340 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 08:49:43,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB
[2020-11-25 08:49:43,340 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB
[2020-11-25 08:49:43,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB
[2020-11-25 08:49:43,340 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB
[2020-11-25 08:49:43,340 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB
[2020-11-25 08:49:43,341 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB
[2020-11-25 08:49:43,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB
[2020-11-25 08:49:43,341 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB
[2020-11-25 08:49:43,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB
[2020-11-25 08:49:43,341 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB
[2020-11-25 08:49:43,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB
[2020-11-25 08:49:43,341 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB
[2020-11-25 08:49:43,341 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB
[2020-11-25 08:49:43,341 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 08:49:43,341 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_WXB
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__success
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure WXB_WXB__fail
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_WXB__fail
[2020-11-25 08:49:43,342 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_WXB__fail
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_WXB__fail
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_WXB__fail
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_WXB__fail
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_WXB__fail
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__success
[2020-11-25 08:49:43,343 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_WXB__fail
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__success
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_WXB__fail
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__success
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure name_WXB__fail
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 08:49:43,344 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 08:49:43,344 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__fail
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB_NoBaseCtor__success
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__fail
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure WXB_WXB__success
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__fail
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_WXB__success
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__fail
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_WXB__success
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__fail
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_WXB__success
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__fail
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_WXB__success
[2020-11-25 08:49:43,345 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__fail
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_WXB__success
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__fail
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_WXB__success
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__fail
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_WXB__success
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__fail
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_WXB__success
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__fail
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_WXB__success
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__fail
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_WXB__success
[2020-11-25 08:49:43,346 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_WXB
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 08:49:43,347 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 08:49:43,347 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 08:49:43,550 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:43,550 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:43,551 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:49:43,850 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 08:49:43,850 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 08:49:43,851 INFO  L202        PluginConnector]: Adding new model WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:43 BoogieIcfgContainer
[2020-11-25 08:49:43,852 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:43" (2/2) ...
[2020-11-25 08:49:43,852 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 08:49:43,853 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6e79d8b3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:43, skipping insertion in model container
[2020-11-25 08:49:43,853 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 08:49:43,853 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 08:49:43,853 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 08:49:43,854 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 08:49:43,855 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/3) ...
[2020-11-25 08:49:43,855 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2f0f083b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:43, skipping insertion in model container
[2020-11-25 08:49:43,855 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:43" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 08:49:43,894 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:43 NWAContainer
[2020-11-25 08:49:43,894 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 08:49:43,894 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 08:49:43,894 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 08:49:43,895 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 08:49:43,896 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:43" (3/4) ...
[2020-11-25 08:49:43,896 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2062b377 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:43, skipping insertion in model container
[2020-11-25 08:49:43,897 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:43" (4/4) ...
[2020-11-25 08:49:43,900 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 08:49:43,902 INFO  L110   BuchiProductObserver]: Initial RCFG 657 locations, 785 edges
[2020-11-25 08:49:43,902 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 08:49:43,915 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 08:49:44,816 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 08:49:44,818 INFO  L110   BuchiProductObserver]: BuchiProgram size 1522 locations, 2540 edges
[2020-11-25 08:49:44,819 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:44 BoogieIcfgContainer
[2020-11-25 08:49:44,819 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 08:49:44,819 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 08:49:44,819 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 08:49:44,821 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 08:49:44,822 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:44" (1/1) ...
[2020-11-25 08:49:44,866 INFO  L313           BlockEncoder]: Initial Icfg 1522 locations, 2540 edges
[2020-11-25 08:49:44,867 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 08:49:44,867 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 08:49:44,867 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 08:49:44,868 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 08:49:44,875 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 08:49:44,879 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 08:49:44,885 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 08:49:44,887 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 08:49:44,888 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 08:49:44,889 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 08:49:44,891 INFO  L313           BlockEncoder]: Encoded RCFG 1504 locations, 2497 edges
[2020-11-25 08:49:44,892 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:49:44 BasicIcfg
[2020-11-25 08:49:44,892 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 08:49:44,892 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 08:49:44,892 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 08:49:44,894 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 08:49:44,895 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:44,895 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:49:43" (1/6) ...
[2020-11-25 08:49:44,896 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56ae60fe and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:49:44, skipping insertion in model container
[2020-11-25 08:49:44,896 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:44,896 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:49:43" (2/6) ...
[2020-11-25 08:49:44,896 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56ae60fe and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:49:44, skipping insertion in model container
[2020-11-25 08:49:44,896 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:44,896 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:49:43" (3/6) ...
[2020-11-25 08:49:44,896 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56ae60fe and model type WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:49:44, skipping insertion in model container
[2020-11-25 08:49:44,896 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:44,896 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:49:43" (4/6) ...
[2020-11-25 08:49:44,897 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56ae60fe and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:49:44, skipping insertion in model container
[2020-11-25 08:49:44,897 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:44,897 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:49:44" (5/6) ...
[2020-11-25 08:49:44,897 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@56ae60fe and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 08:49:44, skipping insertion in model container
[2020-11-25 08:49:44,897 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:49:44,897 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:49:44" (6/6) ...
[2020-11-25 08:49:44,898 INFO  L404   chiAutomizerObserver]: Analyzing ICFG WXB_0x549ed593defa6ce92fb8e8ce08bec1a804ca1fbe_totalsupply.bpl_BEv2
[2020-11-25 08:49:44,936 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 08:49:44,937 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 08:49:44,937 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 08:49:44,937 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 08:49:44,937 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 08:49:44,937 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 08:49:44,937 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 08:49:44,937 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 08:49:44,937 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 08:49:44,957 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1504 states.
[2020-11-25 08:49:44,996 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:44,996 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:44,996 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:45,005 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:45,005 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:45,005 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 08:49:45,005 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1504 states.
[2020-11-25 08:49:45,017 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:45,017 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:45,017 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:45,019 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:45,019 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_WXB0 := false;
[L2]                 call_totalSupply_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND TRUE   choice == 9
[L1695]              gas := gas - 21000;
[L1696]  COND FALSE  !(gas >= 0)
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:45,035 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:45,036 INFO  L82        PathProgramCache]: Analyzing trace with hash -884325968, now seen corresponding path program 1 times
[2020-11-25 08:49:45,040 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:45,062 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:45,109 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:45,111 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:45,111 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 08:49:45,114 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:45,202 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 08:49:45,202 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 08:49:45,204 INFO  L87              Difference]: Start difference. First operand 1504 states. Second operand 3 states.
[2020-11-25 08:49:45,331 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:45,331 INFO  L93              Difference]: Finished difference Result 1145 states and 1242 transitions.
[2020-11-25 08:49:45,331 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 08:49:45,333 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1145 states and 1242 transitions.
[2020-11-25 08:49:45,341 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:45,354 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1145 states to 1135 states and 1222 transitions.
[2020-11-25 08:49:45,355 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 08:49:45,356 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 501
[2020-11-25 08:49:45,357 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1135 states and 1222 transitions.
[2020-11-25 08:49:45,362 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:45,362 INFO  L728         BuchiCegarLoop]: Abstraction has 1135 states and 1222 transitions.
[2020-11-25 08:49:45,377 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1135 states and 1222 transitions.
[2020-11-25 08:49:45,407 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1135 to 1135.
[2020-11-25 08:49:45,407 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1135 states.
[2020-11-25 08:49:45,411 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1135 states to 1135 states and 1222 transitions.
[2020-11-25 08:49:45,412 INFO  L751         BuchiCegarLoop]: Abstraction has 1135 states and 1222 transitions.
[2020-11-25 08:49:45,412 INFO  L631         BuchiCegarLoop]: Abstraction has 1135 states and 1222 transitions.
[2020-11-25 08:49:45,412 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 08:49:45,412 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1135 states and 1222 transitions.
[2020-11-25 08:49:45,417 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:49:45,417 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:45,417 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:45,419 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:45,419 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_WXB0 := false;
[L2]                 call_totalSupply_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND TRUE   revert
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND TRUE   revert
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND FALSE  !(choice == 5)
[L1727]  COND TRUE   choice == 4
[L1728]              gas := gas - 21000;
[L1729]  COND TRUE   gas >= 0
[L1730]              assume msgvalue_MSG == 0;
[L1731]  CALL        call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_WXB0 := true;
[L2]                 call_totalSupply_WXB0 := false;
[L2]                 revert := revert_hold;
[L453]               havoc __exception;
[L454]               revert := false;
[L455]   COND FALSE  !(__exception)
[L476]   CALL        call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L1159]              __ret_0_ := totalSupply_WXB[this];
[L476]   RET         call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L477]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L2]                 revert := revert_hold;
[L1731]  RET         call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND FALSE  !(choice == 5)
[L1727]  COND TRUE   choice == 4
[L1728]              gas := gas - 21000;
[L1729]  COND TRUE   gas >= 0
[L1730]              assume msgvalue_MSG == 0;
[L1731]  CALL        call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_WXB0 := true;
[L2]                 call_totalSupply_WXB0 := false;
[L2]                 revert := revert_hold;
[L453]               havoc __exception;
[L454]               revert := false;
[L455]   COND FALSE  !(__exception)
[L476]   CALL        call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L1159]              __ret_0_ := totalSupply_WXB[this];
[L476]   RET         call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L477]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L2]                 revert := revert_hold;
[L1731]  RET         call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:45,423 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:45,424 INFO  L82        PathProgramCache]: Analyzing trace with hash -1036042040, now seen corresponding path program 1 times
[2020-11-25 08:49:45,425 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:45,437 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:45,457 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:45,457 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:45,457 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:49:45,458 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:45,459 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:49:45,459 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:49:45,459 INFO  L87              Difference]: Start difference. First operand 1135 states and 1222 transitions. cyclomatic complexity: 89 Second operand 4 states.
[2020-11-25 08:49:45,640 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:45,640 INFO  L93              Difference]: Finished difference Result 1655 states and 1876 transitions.
[2020-11-25 08:49:45,640 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:49:45,641 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1655 states and 1876 transitions.
[2020-11-25 08:49:45,658 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 08:49:45,669 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1655 states to 1621 states and 1838 transitions.
[2020-11-25 08:49:45,669 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 744
[2020-11-25 08:49:45,670 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 744
[2020-11-25 08:49:45,670 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1621 states and 1838 transitions.
[2020-11-25 08:49:45,673 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:45,674 INFO  L728         BuchiCegarLoop]: Abstraction has 1621 states and 1838 transitions.
[2020-11-25 08:49:45,675 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1621 states and 1838 transitions.
[2020-11-25 08:49:45,694 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1621 to 1210.
[2020-11-25 08:49:45,694 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1210 states.
[2020-11-25 08:49:45,697 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1210 states to 1210 states and 1301 transitions.
[2020-11-25 08:49:45,697 INFO  L751         BuchiCegarLoop]: Abstraction has 1210 states and 1301 transitions.
[2020-11-25 08:49:45,697 INFO  L631         BuchiCegarLoop]: Abstraction has 1210 states and 1301 transitions.
[2020-11-25 08:49:45,697 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 08:49:45,697 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1210 states and 1301 transitions.
[2020-11-25 08:49:45,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:49:45,701 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:45,701 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:45,703 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:45,703 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_WXB0 := false;
[L2]                 call_totalSupply_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND FALSE  !(choice == 5)
[L1727]  COND TRUE   choice == 4
[L1728]              gas := gas - 21000;
[L1729]  COND TRUE   gas >= 0
[L1730]              assume msgvalue_MSG == 0;
[L1731]  CALL        call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_WXB0 := true;
[L2]                 call_totalSupply_WXB0 := false;
[L2]                 revert := revert_hold;
[L453]               havoc __exception;
[L454]               revert := false;
[L455]   COND FALSE  !(__exception)
[L476]   CALL        call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L1159]              __ret_0_ := totalSupply_WXB[this];
[L476]   RET         call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L477]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L2]                 revert := revert_hold;
[L1731]  RET         call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND FALSE  !(choice == 5)
[L1727]  COND TRUE   choice == 4
[L1728]              gas := gas - 21000;
[L1729]  COND TRUE   gas >= 0
[L1730]              assume msgvalue_MSG == 0;
[L1731]  CALL        call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_WXB0 := true;
[L2]                 call_totalSupply_WXB0 := false;
[L2]                 revert := revert_hold;
[L453]               havoc __exception;
[L454]               revert := false;
[L455]   COND FALSE  !(__exception)
[L476]   CALL        call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L1159]              __ret_0_ := totalSupply_WXB[this];
[L476]   RET         call __ret_0_ := totalSupply_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L477]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == totalSupply_WXB[this] && totalSupply_WXB[this] == old(totalSupply_WXB[this])) && holders_WXB[this] == old(holders_WXB[this])) && approach_WXB[this] == old(approach_WXB[this])) && decimals_WXB[this] == old(decimals_WXB[this])) && symbol_WXB[this] == old(symbol_WXB[this])) && name_WXB[this] == old(name_WXB[this]));
[L2]                 revert := revert_hold;
[L1731]  RET         call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:45,707 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:45,707 INFO  L82        PathProgramCache]: Analyzing trace with hash -1874052365, now seen corresponding path program 1 times
[2020-11-25 08:49:45,708 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:45,722 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:45,759 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:45,759 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:45,759 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:49:45,760 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:45,760 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:49:45,760 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:49:45,760 INFO  L87              Difference]: Start difference. First operand 1210 states and 1301 transitions. cyclomatic complexity: 93 Second operand 4 states.
[2020-11-25 08:49:45,788 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:45,788 INFO  L93              Difference]: Finished difference Result 1211 states and 1300 transitions.
[2020-11-25 08:49:45,788 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:49:45,788 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1211 states and 1300 transitions.
[2020-11-25 08:49:45,793 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:49:45,798 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1211 states to 1201 states and 1290 transitions.
[2020-11-25 08:49:45,798 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 570
[2020-11-25 08:49:45,799 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 570
[2020-11-25 08:49:45,799 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1201 states and 1290 transitions.
[2020-11-25 08:49:45,800 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:45,800 INFO  L728         BuchiCegarLoop]: Abstraction has 1201 states and 1290 transitions.
[2020-11-25 08:49:45,801 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1201 states and 1290 transitions.
[2020-11-25 08:49:45,812 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1201 to 1199.
[2020-11-25 08:49:45,812 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1199 states.
[2020-11-25 08:49:45,814 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1199 states to 1199 states and 1288 transitions.
[2020-11-25 08:49:45,814 INFO  L751         BuchiCegarLoop]: Abstraction has 1199 states and 1288 transitions.
[2020-11-25 08:49:45,814 INFO  L631         BuchiCegarLoop]: Abstraction has 1199 states and 1288 transitions.
[2020-11-25 08:49:45,815 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 08:49:45,815 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1199 states and 1288 transitions.
[2020-11-25 08:49:45,818 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:49:45,818 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:49:45,818 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:49:45,820 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:49:45,820 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_WXB0 := false;
[L2]                 call_totalSupply_WXB0 := false;
[L2]     CALL        call main();
[L1759]              assume null == 0;
[L1760]  CALL        call this := FreshRefGenerator__success();
[L881]               havoc newRef;
[L882]               assume Alloc[newRef] == false;
[L883]               Alloc[newRef] := true;
[L884]               assume newRef != null;
[L1760]  RET         call this := FreshRefGenerator__success();
[L1761]              assume now >= 0;
[L1762]              assume DType[this] == WXB;
[L1763]              assume msgvalue_MSG == 0;
[L1764]              gas := gas - 53000;
[L1765]  CALL        call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L143]               havoc __exception;
[L144]               revert := false;
[L145]   COND FALSE  !(__exception)
[L166]   CALL        call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L985]   CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L913]   CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L898]               assume msgsender_MSG != null;
[L899]               Balance[this] := 0;
[L913]   RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L914]   COND FALSE  !(revert)
[L985]   RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L986]   COND FALSE  !(revert)
[L989]   CALL        call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L948]               assume msgsender_MSG != null;
[L949]               Balance[this] := 0;
[L950]               totalSupply_WXB[this] := 0;
[L951]               decimals_WXB[this] := 0;
[L952]               symbol_WXB[this] := 1199276259;
[L953]               name_WXB[this] := 1199276259;
[L954]               approach_WXB[this] := zeroRefRefintArr();
[L955]               sum_approach0[this] := 0;
[L956]               holders_WXB[this] := zeroRefintArr();
[L957]               sum_holders1[this] := 0;
[L959]               name_WXB[this] := -1225396598;
[L960]               symbol_WXB[this] := 397088534;
[L961]               decimals_WXB[this] := 18;
[L962]               __var_1 := decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L963]               totalSupply_WXB[this] := nonlinearMul(100000 * 10000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936 * 100, nonlinearPow(10, decimals_WXB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L964]               sum_holders1[this] := sum_holders1[this] - holders_WXB[this][msgsender_MSG];
[L965]               holders_WXB[this][msgsender_MSG] := totalSupply_WXB[this];
[L966]               sum_holders1[this] := sum_holders1[this] + holders_WXB[this][msgsender_MSG];
[L989]   RET         call WXB_WXB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L990]   COND FALSE  !(revert)
[L166]   RET         call WXB_WXB__success(this, msgsender_MSG, msgvalue_MSG);
[L167]               assume !revert && gas >= 0;
[L1765]  RET         call WXB_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1766]              assume !revert && gas >= 0;
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND FALSE  !(choice == 5)
[L1727]  COND TRUE   choice == 4
[L1728]              gas := gas - 21000;
[L1729]  COND TRUE   gas >= 0
[L1730]              assume msgvalue_MSG == 0;
[L1731]  CALL        call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_WXB0 := true;
[L2]                 call_totalSupply_WXB0 := false;
[L2]                 revert := revert_hold;
[L453]               havoc __exception;
[L454]               revert := false;
[L455]   COND TRUE   __exception
[L456]               __tmp__Balance := Balance;
[L457]               __tmp__DType := DType;
[L458]               __tmp__Alloc := Alloc;
[L459]               __tmp__balance_ADDR := balance_ADDR;
[L460]               __tmp__M_Ref_int := M_Ref_int;
[L461]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L462]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L463]               __tmp__sum_approach0 := sum_approach0;
[L464]               __tmp__sum_holders1 := sum_holders1;
[L465]               __tmp__Length := Length;
[L466]               __tmp__now := now;
[L467]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L468]               __tmp__decimals_WXB := decimals_WXB;
[L469]               __tmp__symbol_WXB := symbol_WXB;
[L470]               __tmp__name_WXB := name_WXB;
[L471]               __tmp__approach_WXB := approach_WXB;
[L472]               __tmp__holders_WXB := holders_WXB;
[L473]   CALL        call __ret_0_ := totalSupply_WXB__fail(this, msgsender_MSG, msgvalue_MSG);
[L1153]              __ret_0_ := __tmp__totalSupply_WXB[this];
[L473]   RET         call __ret_0_ := totalSupply_WXB__fail(this, msgsender_MSG, msgvalue_MSG);
[L474]               assume revert || gas < 0;
[L1731]  RET         call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1769]  RET         call CorralChoice_WXB(this);

Loop:
[L1769]  CALL        call CorralChoice_WXB(this);
[L1662]              havoc msgsender_MSG;
[L1663]              havoc msgvalue_MSG;
[L1664]              havoc choice;
[L1665]              havoc _from_s315;
[L1666]              havoc _to_s315;
[L1667]              havoc _val_s315;
[L1668]              havoc __ret_0_transferFrom;
[L1669]              havoc _to_s213;
[L1670]              havoc _val_s213;
[L1671]              havoc __ret_0_transfer;
[L1672]              havoc _own_s139;
[L1673]              havoc __ret_0_balanceOf;
[L1674]              havoc _owner_s368;
[L1675]              havoc _spender_s368;
[L1676]              havoc __ret_0_allowance;
[L1677]              havoc _spender_s352;
[L1678]              havoc _val_s352;
[L1679]              havoc __ret_0_approve;
[L1680]              havoc __ret_0_totalSupply;
[L1681]              havoc __ret_0_decimals;
[L1682]              havoc __ret_0_symbol;
[L1683]              havoc __ret_0_name;
[L1684]              havoc tmpNow;
[L1685]              havoc gas;
[L1686]              assume gas > 4000000 && gas <= 8000000;
[L1687]              tmpNow := now;
[L1688]              havoc now;
[L1689]              assume now > tmpNow;
[L1690]              assume msgsender_MSG != null;
[L1691]              assume DType[msgsender_MSG] != ERC20;
[L1692]              assume DType[msgsender_MSG] != WXB;
[L1693]              Alloc[msgsender_MSG] := true;
[L1694]  COND FALSE  !(choice == 9)
[L1701]  COND FALSE  !(choice == 8)
[L1708]  COND FALSE  !(choice == 7)
[L1714]  COND FALSE  !(choice == 6)
[L1720]  COND FALSE  !(choice == 5)
[L1727]  COND TRUE   choice == 4
[L1728]              gas := gas - 21000;
[L1729]  COND TRUE   gas >= 0
[L1730]              assume msgvalue_MSG == 0;
[L1731]  CALL        call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume totalSupply_WXB[this] >= 0 && totalSupply_WXB[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_WXB0 := true;
[L2]                 call_totalSupply_WXB0 := false;
[L2]                 revert := revert_hold;
[L453]               havoc __exception;
[L454]               revert := false;
[L455]   COND TRUE   __exception
[L456]               __tmp__Balance := Balance;
[L457]               __tmp__DType := DType;
[L458]               __tmp__Alloc := Alloc;
[L459]               __tmp__balance_ADDR := balance_ADDR;
[L460]               __tmp__M_Ref_int := M_Ref_int;
[L461]               __tmp__alloc_approach_WXB_lvl0 := alloc_approach_WXB_lvl0;
[L462]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L463]               __tmp__sum_approach0 := sum_approach0;
[L464]               __tmp__sum_holders1 := sum_holders1;
[L465]               __tmp__Length := Length;
[L466]               __tmp__now := now;
[L467]               __tmp__totalSupply_WXB := totalSupply_WXB;
[L468]               __tmp__decimals_WXB := decimals_WXB;
[L469]               __tmp__symbol_WXB := symbol_WXB;
[L470]               __tmp__name_WXB := name_WXB;
[L471]               __tmp__approach_WXB := approach_WXB;
[L472]               __tmp__holders_WXB := holders_WXB;
[L473]   CALL        call __ret_0_ := totalSupply_WXB__fail(this, msgsender_MSG, msgvalue_MSG);
[L1153]              __ret_0_ := __tmp__totalSupply_WXB[this];
[L473]   RET         call __ret_0_ := totalSupply_WXB__fail(this, msgsender_MSG, msgvalue_MSG);
[L474]               assume revert || gas < 0;
[L1731]  RET         call __ret_0_totalSupply := totalSupply_WXB(this, msgsender_MSG, msgvalue_MSG);
[L1769]  RET         call CorralChoice_WXB(this);

[2020-11-25 08:49:45,823 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:49:45,823 INFO  L82        PathProgramCache]: Analyzing trace with hash -744206250, now seen corresponding path program 1 times
[2020-11-25 08:49:45,824 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:49:45,834 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:49:45,858 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:49:45,858 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:49:45,858 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 08:49:45,858 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:49:45,859 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 08:49:45,859 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 08:49:45,859 INFO  L87              Difference]: Start difference. First operand 1199 states and 1288 transitions. cyclomatic complexity: 91 Second operand 5 states.
[2020-11-25 08:49:45,981 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:49:45,981 INFO  L93              Difference]: Finished difference Result 853 states and 915 transitions.
[2020-11-25 08:49:45,981 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 08:49:45,981 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 853 states and 915 transitions.
[2020-11-25 08:49:45,985 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 08:49:45,985 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 853 states to 0 states and 0 transitions.
[2020-11-25 08:49:45,985 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 08:49:45,985 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 08:49:45,985 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 08:49:45,985 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:49:45,985 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:49:45,986 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:49:45,986 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:49:45,986 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 08:49:45,986 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 08:49:45,986 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 08:49:45,986 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 08:49:45,990 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:49:45 BasicIcfg
[2020-11-25 08:49:45,990 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 08:49:45,991 INFO  L168              Benchmark]: Toolchain (without parser) took 2852.45 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 233.8 MB). Free memory was 940.6 MB in the beginning and 941.1 MB in the end (delta: -524.6 kB). Peak memory consumption was 233.3 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,994 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,995 INFO  L168              Benchmark]: Boogie Preprocessor took 83.26 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,996 INFO  L168              Benchmark]: UtopiaSpecLang took 45.37 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,996 INFO  L168              Benchmark]: Boogie Printer took 9.41 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,997 INFO  L168              Benchmark]: RCFGBuilder took 574.64 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,998 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.04 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:45,999 INFO  L168              Benchmark]: BÃ¼chi Program Product took 924.73 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.8 MB). Free memory was 877.9 MB in the beginning and 942.2 MB in the end (delta: -64.2 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:46,000 INFO  L168              Benchmark]: BlockEncodingV2 took 72.59 ms. Allocated memory is still 1.1 GB. Free memory was 938.8 MB in the beginning and 901.7 MB in the end (delta: 37.1 MB). Peak memory consumption was 37.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:46,001 INFO  L168              Benchmark]: BuchiAutomizer took 1098.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 185.1 MB). Free memory was 901.7 MB in the beginning and 941.1 MB in the end (delta: -39.4 MB). Peak memory consumption was 145.7 MB. Max. memory is 15.3 GB.
[2020-11-25 08:49:46,006 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1522 locations, 2540 edges
  - StatisticsResult: Encoded RCFG
    1504 locations, 2497 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 83.26 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 45.37 ms. Allocated memory is still 1.0 GB. Free memory is still 935.2 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Printer took 9.41 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 574.64 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 881.5 MB in the end (delta: 48.3 MB). Peak memory consumption was 48.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.04 ms. Allocated memory is still 1.0 GB. Free memory was 881.5 MB in the beginning and 877.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 924.73 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 48.8 MB). Free memory was 877.9 MB in the beginning and 942.2 MB in the end (delta: -64.2 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 72.59 ms. Allocated memory is still 1.1 GB. Free memory was 938.8 MB in the beginning and 901.7 MB in the end (delta: 37.1 MB). Peak memory consumption was 37.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1098.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 185.1 MB). Free memory was 901.7 MB in the beginning and 941.1 MB in the end (delta: -39.4 MB). Peak memory consumption was 145.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    657 locations, 785 edges
  - StatisticsResult: BuchiProgram size
    1522 locations, 2540 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.0s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.2s. BÃ¼chi inclusion checks took 0.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 413 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1210 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4823 SDtfs, 3973 SDslu, 4876 SDs, 0 SdLazy, 713 SolverSat, 848 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.2s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_WX(success_totalSupply_WXB0)0) ==> ( <>(success_totalSupply_WXB0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
