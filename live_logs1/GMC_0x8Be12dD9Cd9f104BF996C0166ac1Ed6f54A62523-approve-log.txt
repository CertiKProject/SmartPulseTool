This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:58:36,184 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:58:36,186 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:58:36,196 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:58:36,197 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:58:36,197 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:58:36,198 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:58:36,200 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:58:36,201 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:58:36,202 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:58:36,203 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:58:36,203 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:58:36,203 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:58:36,204 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:58:36,205 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:58:36,206 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:58:36,206 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:58:36,208 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:58:36,209 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:58:36,210 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:58:36,211 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:58:36,212 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:58:36,213 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:58:36,214 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:58:36,214 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:58:36,214 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:58:36,215 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:58:36,215 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:58:36,215 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:58:36,216 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:58:36,216 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:58:36,217 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:58:36,217 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:58:36,218 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:58:36,218 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:58:36,218 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:58:36,219 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:58:36,219 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:58:36,219 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:58:36,220 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:58:36,220 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:58:36,221 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:58:36,228 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:58:36,229 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:58:36,229 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:58:36,230 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:58:36,230 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:58:36,230 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:58:36,230 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:58:36,230 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:58:36,230 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:58:36,230 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:58:36,230 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:58:36,231 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:58:36,231 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:58:36,232 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:58:36,232 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:58:36,232 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:58:36,232 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:58:36,232 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:58:36,232 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:58:36,232 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:58:36,253 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:58:36,267 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:58:36,269 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:58:36,270 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:58:36,271 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:58:36,271 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl
[2020-11-25 16:58:36,272 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl'
[2020-11-25 16:58:36,364 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:58:36,365 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:58:36,365 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:58:36,365 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:58:36,366 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:58:36,382 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,384 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,418 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,419 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,440 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,451 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,459 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,470 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:58:36,470 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:58:36,470 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:58:36,472 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:58:36,476 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/1) ...
[2020-11-25 16:58:36,498 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 16:58:36,504 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 16:58:36,512 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 16:58:36,518 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s325 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s325,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]
[2020-11-25 16:58:36,521 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s325==true && allowance_TokenERC20[this][msg.sender][_spender_s325]==_value_s325 ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this]==( old(balanceOf_TokenERC20[this]) ) ) && allowance_TokenERC20[this][p1][p2]==( old(allowance_TokenERC20[this][p1][p2]) ) ) && frozenAccount_GMC[this]==( old(frozenAccount_GMC[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && released_TokenERC20[this]==( old(released_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s325,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[_spender_s325,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s325,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_GMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_GMC,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[released_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[released_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_TokenERC20>]]]]]]
[2020-11-25 16:58:36,530 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(TokenERC20.approve(spender, value), return == true && allowance_TokenERC20[this][msg.sender][spender] == value &&  totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this]) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2]) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && released_TokenERC20[this] == old(released_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 16:58:36,530 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_TokenERC200) ==> ( <>AP(success_approve_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:58:36,540 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:58:36 PropertyContainer
[2020-11-25 16:58:36,540 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:58:36,541 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:58:36,541 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:58:36,541 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:58:36,542 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/2) ...
[2020-11-25 16:58:36,542 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:58:36,542 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:58:36,562 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:58:36" (2/2) ...
[2020-11-25 16:58:36,563 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:58:36,563 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:58:36,563 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:58:36,563 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:58:36,564 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/2) ...
[2020-11-25 16:58:36,617 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:58:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:58:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:58:36,618 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:58:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,618 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 16:58:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 16:58:36,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 16:58:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 16:58:36,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 16:58:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 16:58:36,619 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 16:58:36,619 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:58:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:58:36,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 16:58:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 16:58:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 16:58:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 16:58:36,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 16:58:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20
[2020-11-25 16:58:36,620 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20
[2020-11-25 16:58:36,620 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 16:58:36,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 16:58:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 16:58:36,621 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 16:58:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 16:58:36,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 16:58:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 16:58:36,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 16:58:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 16:58:36,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 16:58:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 16:58:36,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 16:58:36,622 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 16:58:36,622 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20
[2020-11-25 16:58:36,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 16:58:36,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 16:58:36,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure GMC_GMC_NoBaseCtor__success
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure GMC_GMC
[2020-11-25 16:58:36,623 INFO  L138     BoogieDeclarations]: Found implementation of procedure GMC_GMC
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_GMC__success
[2020-11-25 16:58:36,623 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_GMC
[2020-11-25 16:58:36,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_GMC
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_GMC
[2020-11-25 16:58:36,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_GMC
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_GMC
[2020-11-25 16:58:36,624 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_GMC
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:58:36,624 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyReleased_pre__success
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_GMC
[2020-11-25 16:58:36,625 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,626 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 16:58:36,627 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20__success
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure release_TokenERC20__fail
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,628 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 16:58:36,629 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20__success
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure released_TokenERC20__fail
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 16:58:36,630 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure GMC_GMC_NoBaseCtor__fail
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure GMC_GMC__success
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure GMC_GMC__fail
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_GMC__fail
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_GMC__success
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_GMC__fail
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_GMC__success
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_GMC__fail
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_GMC__success
[2020-11-25 16:58:36,631 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_GMC__fail
[2020-11-25 16:58:36,632 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:58:36,632 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:58:36,632 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:58:36,632 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:58:36,632 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyReleased_pre__fail
[2020-11-25 16:58:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:58:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:58:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:58:36,632 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,633 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 16:58:36,634 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20__fail
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_TokenERC20__success
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,635 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 16:58:36,636 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure released_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure GMC_GMC_NoBaseCtor__fail
[2020-11-25 16:58:36,637 INFO  L138     BoogieDeclarations]: Found implementation of procedure GMC_GMC_NoBaseCtor__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure GMC_GMC__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure GMC_GMC__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_GMC__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_GMC__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_GMC__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_GMC__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_GMC__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_GMC__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_GMC__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_GMC__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:58:36,638 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyReleased_pre__fail
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyReleased_pre__success
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_GMC
[2020-11-25 16:58:36,639 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:58:36,640 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:58:36,640 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:58:37,062 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:58:37,200 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:58:37,201 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:58:37,201 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:58:37,337 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:58:37,337 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:58:37,340 INFO  L202        PluginConnector]: Adding new model GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:58:37 BoogieIcfgContainer
[2020-11-25 16:58:37,340 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:58:36" (2/2) ...
[2020-11-25 16:58:37,340 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:58:37,340 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1d72e696 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:58:37, skipping insertion in model container
[2020-11-25 16:58:37,340 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:58:37,340 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:58:37,341 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:58:37,342 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:58:37,342 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/3) ...
[2020-11-25 16:58:37,342 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@142a539c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:58:37, skipping insertion in model container
[2020-11-25 16:58:37,343 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:58:36" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:58:37,378 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:58:37 NWAContainer
[2020-11-25 16:58:37,378 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:58:37,378 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:58:37,378 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:58:37,379 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:58:37,379 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:58:37" (3/4) ...
[2020-11-25 16:58:37,380 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4ab3ca71 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:58:37, skipping insertion in model container
[2020-11-25 16:58:37,380 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:58:37" (4/4) ...
[2020-11-25 16:58:37,383 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:58:37,387 INFO  L110   BuchiProductObserver]: Initial RCFG 1829 locations, 2458 edges
[2020-11-25 16:58:37,387 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:58:37,398 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:58:38,701 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:58:38,707 INFO  L110   BuchiProductObserver]: BuchiProgram size 4504 locations, 8011 edges
[2020-11-25 16:58:38,707 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:58:38 BoogieIcfgContainer
[2020-11-25 16:58:38,708 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:58:38,708 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:58:38,708 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:58:38,709 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:58:38,710 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:58:38" (1/1) ...
[2020-11-25 16:58:38,825 INFO  L313           BlockEncoder]: Initial Icfg 4504 locations, 8011 edges
[2020-11-25 16:58:38,826 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:58:38,826 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:58:38,827 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:58:38,827 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:58:38,842 INFO  L70    emoveInfeasibleEdges]: Removed 78 edges and 13 locations because of local infeasibility
[2020-11-25 16:58:38,850 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 16:58:38,863 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:58:38,867 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:58:38,870 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:58:38,870 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:58:38,875 INFO  L313           BlockEncoder]: Encoded RCFG 4452 locations, 7875 edges
[2020-11-25 16:58:38,875 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:58:38 BasicIcfg
[2020-11-25 16:58:38,875 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:58:38,875 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:58:38,875 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:58:38,877 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:58:38,877 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:58:38,877 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:58:36" (1/6) ...
[2020-11-25 16:58:38,879 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddff5e3 and model type GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:58:38, skipping insertion in model container
[2020-11-25 16:58:38,879 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:58:38,879 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:58:36" (2/6) ...
[2020-11-25 16:58:38,879 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddff5e3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:58:38, skipping insertion in model container
[2020-11-25 16:58:38,879 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:58:38,879 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:58:37" (3/6) ...
[2020-11-25 16:58:38,879 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddff5e3 and model type GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:58:38, skipping insertion in model container
[2020-11-25 16:58:38,879 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:58:38,879 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:58:37" (4/6) ...
[2020-11-25 16:58:38,880 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddff5e3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:58:38, skipping insertion in model container
[2020-11-25 16:58:38,880 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:58:38,880 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:58:38" (5/6) ...
[2020-11-25 16:58:38,880 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3ddff5e3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:58:38, skipping insertion in model container
[2020-11-25 16:58:38,880 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:58:38,880 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:58:38" (6/6) ...
[2020-11-25 16:58:38,881 INFO  L404   chiAutomizerObserver]: Analyzing ICFG GMC_0x8Be12dD9Cd9f104BF996C0166ac1Ed6f54A62523_approve.bpl_BEv2
[2020-11-25 16:58:38,914 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:58:38,914 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:58:38,914 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:58:38,914 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:58:38,914 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:58:38,914 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:58:38,914 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:58:38,914 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:58:38,914 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:58:38,948 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4452 states.
[2020-11-25 16:58:38,999 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:58:38,999 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:58:38,999 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:58:39,007 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:39,007 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:39,007 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:58:39,007 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4452 states.
[2020-11-25 16:58:39,029 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:58:39,030 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:58:39,030 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:58:39,031 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:39,031 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == GMC;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND TRUE   revert
[L1392]  RET         call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;

Loop:
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND TRUE   choice == 19
[L4801]              gas := gas - 21000;
[L4802]  COND FALSE  !(gas >= 0)
[L4942]  RET         call CorralChoice_GMC(this);

[2020-11-25 16:58:39,044 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:39,045 INFO  L82        PathProgramCache]: Analyzing trace with hash 1453030520, now seen corresponding path program 1 times
[2020-11-25 16:58:39,048 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:39,069 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:58:39,106 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:58:39,108 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:58:39,108 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:58:39,390 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:58:39,405 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:58:39,406 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:58:39,407 INFO  L87              Difference]: Start difference. First operand 4452 states. Second operand 4 states.
[2020-11-25 16:58:39,792 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:58:39,792 INFO  L93              Difference]: Finished difference Result 3104 states and 3565 transitions.
[2020-11-25 16:58:39,792 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:58:39,794 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3104 states and 3565 transitions.
[2020-11-25 16:58:39,810 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:58:39,833 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3104 states to 3102 states and 3561 transitions.
[2020-11-25 16:58:39,834 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:58:39,836 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 711
[2020-11-25 16:58:39,836 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3102 states and 3561 transitions.
[2020-11-25 16:58:39,846 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:58:39,846 INFO  L728         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 16:58:39,863 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3102 states and 3561 transitions.
[2020-11-25 16:58:39,909 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3102 to 3102.
[2020-11-25 16:58:39,910 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3102 states.
[2020-11-25 16:58:39,915 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3102 states to 3102 states and 3561 transitions.
[2020-11-25 16:58:39,916 INFO  L751         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 16:58:39,917 INFO  L631         BuchiCegarLoop]: Abstraction has 3102 states and 3561 transitions.
[2020-11-25 16:58:39,917 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:58:39,917 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3102 states and 3561 transitions.
[2020-11-25 16:58:39,924 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:58:39,924 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:58:39,924 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:58:39,926 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:39,927 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == GMC;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND TRUE   revert
[L1392]  RET         call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L576]   CALL        call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2548]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2548]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND TRUE   revert
[L576]   RET         call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L577]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s325 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s325] == _value_s325) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

Loop:
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L576]   CALL        call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2548]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2548]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND TRUE   revert
[L576]   RET         call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L577]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s325 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s325] == _value_s325) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

[2020-11-25 16:58:39,932 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:39,932 INFO  L82        PathProgramCache]: Analyzing trace with hash -1046450822, now seen corresponding path program 1 times
[2020-11-25 16:58:39,933 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:39,943 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:58:39,966 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:58:39,966 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:58:39,966 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:58:39,967 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:58:39,968 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:58:39,968 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:58:39,968 INFO  L87              Difference]: Start difference. First operand 3102 states and 3561 transitions. cyclomatic complexity: 461 Second operand 4 states.
[2020-11-25 16:58:40,749 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:58:40,750 INFO  L93              Difference]: Finished difference Result 4524 states and 5227 transitions.
[2020-11-25 16:58:40,752 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:58:40,753 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4524 states and 5227 transitions.
[2020-11-25 16:58:40,778 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:58:40,794 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4524 states to 4254 states and 4887 transitions.
[2020-11-25 16:58:40,794 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 953
[2020-11-25 16:58:40,795 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 999
[2020-11-25 16:58:40,795 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4254 states and 4887 transitions.
[2020-11-25 16:58:40,802 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:58:40,802 INFO  L728         BuchiCegarLoop]: Abstraction has 4254 states and 4887 transitions.
[2020-11-25 16:58:40,805 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4254 states and 4887 transitions.
[2020-11-25 16:58:40,838 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4254 to 3220.
[2020-11-25 16:58:40,838 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3220 states.
[2020-11-25 16:58:40,842 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3220 states to 3220 states and 3553 transitions.
[2020-11-25 16:58:40,842 INFO  L751         BuchiCegarLoop]: Abstraction has 3220 states and 3553 transitions.
[2020-11-25 16:58:40,842 INFO  L631         BuchiCegarLoop]: Abstraction has 3220 states and 3553 transitions.
[2020-11-25 16:58:40,842 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:58:40,843 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3220 states and 3553 transitions.
[2020-11-25 16:58:40,850 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:58:40,850 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:58:40,850 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:58:40,852 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:40,852 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == GMC;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := -756920386;
[L2456]              symbol_TokenERC20[this] := -324062207;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 900000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := -756920386;
[L2471]              symbol_TokenERC20[this] := -324062207;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_GMC[this] := zeroRefboolArr();
[L3113]  RET         call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L576]   CALL        call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2548]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2548]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND FALSE  !(revert)
[L2552]              __var_2 := null;
[L2553]  COND FALSE  !(!(_spender_s325 != null))
[L2557]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s325];
[L2558]              allowance_TokenERC20[this][msgsender_MSG][_spender_s325] := _value_s325;
[L2559]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s325];
[L2560]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2561]              success_s325 := true;
[L576]   RET         call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L577]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s325 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s325] == _value_s325) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

Loop:
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND FALSE  !(__exception)
[L576]   CALL        call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2548]  CALL        call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(!released_TokenERC20[this])
[L2548]  RET         call onlyReleased_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L2549]  COND FALSE  !(revert)
[L2552]              __var_2 := null;
[L2553]  COND FALSE  !(!(_spender_s325 != null))
[L2557]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_TokenERC20[this][msgsender_MSG][_spender_s325];
[L2558]              allowance_TokenERC20[this][msgsender_MSG][_spender_s325] := _value_s325;
[L2559]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_TokenERC20[this][msgsender_MSG][_spender_s325];
[L2560]              assert { :EventEmitted "Approval_TokenERC20" } true;
[L2561]              success_s325 := true;
[L576]   RET         call success_s325 := approve~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L577]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s325 == true && allowance_TokenERC20[this][msgsender_MSG][_spender_s325] == _value_s325) && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this])) && balanceOf_TokenERC20[this] == old(balanceOf_TokenERC20[this])) && allowance_TokenERC20[this][p1][p2] == old(allowance_TokenERC20[this][p1][p2])) && frozenAccount_GMC[this] == old(frozenAccount_GMC[this])) && name_TokenERC20[this] == old(name_TokenERC20[this])) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this])) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this])) && released_TokenERC20[this] == old(released_TokenERC20[this])) && owner_owned[this] == old(owner_owned[this]));
[L3]                 revert := revert_hold;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

[2020-11-25 16:58:40,856 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:40,856 INFO  L82        PathProgramCache]: Analyzing trace with hash -617716273, now seen corresponding path program 1 times
[2020-11-25 16:58:40,857 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:40,887 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:58:41,049 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 16:58:41,050 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:58:41,050 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 16:58:41,051 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:58:41,051 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 16:58:41,051 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 16:58:41,051 INFO  L87              Difference]: Start difference. First operand 3220 states and 3553 transitions. cyclomatic complexity: 335 Second operand 14 states.
[2020-11-25 16:58:42,725 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:58:42,725 INFO  L93              Difference]: Finished difference Result 3349 states and 3706 transitions.
[2020-11-25 16:58:42,725 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 16:58:42,725 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3349 states and 3706 transitions.
[2020-11-25 16:58:42,732 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 16:58:42,745 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3349 states to 3349 states and 3706 transitions.
[2020-11-25 16:58:42,746 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 812
[2020-11-25 16:58:42,746 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 812
[2020-11-25 16:58:42,746 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3349 states and 3706 transitions.
[2020-11-25 16:58:42,751 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:58:42,751 INFO  L728         BuchiCegarLoop]: Abstraction has 3349 states and 3706 transitions.
[2020-11-25 16:58:42,754 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3349 states and 3706 transitions.
[2020-11-25 16:58:42,784 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3349 to 3315.
[2020-11-25 16:58:42,784 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3315 states.
[2020-11-25 16:58:42,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3315 states to 3315 states and 3662 transitions.
[2020-11-25 16:58:42,788 INFO  L751         BuchiCegarLoop]: Abstraction has 3315 states and 3662 transitions.
[2020-11-25 16:58:42,788 INFO  L631         BuchiCegarLoop]: Abstraction has 3315 states and 3662 transitions.
[2020-11-25 16:58:42,788 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:58:42,788 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3315 states and 3662 transitions.
[2020-11-25 16:58:42,792 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 16:58:42,792 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:58:42,792 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:58:42,794 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:42,794 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == GMC;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := -756920386;
[L2456]              symbol_TokenERC20[this] := -324062207;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 900000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := -756920386;
[L2471]              symbol_TokenERC20[this] := -324062207;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_GMC[this] := zeroRefboolArr();
[L3113]  RET         call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L557]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowance1 := sum_allowance1;
[L560]               __tmp__M_Ref_bool := M_Ref_bool;
[L561]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_owned := owner_owned;
[L565]               __tmp__name_TokenERC20 := name_TokenERC20;
[L566]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L567]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L568]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L569]               __tmp__released_TokenERC20 := released_TokenERC20;
[L570]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L571]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L572]               __tmp__frozenAccount_GMC := frozenAccount_GMC;
[L573]   CALL        call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2529]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   !__tmp__released_TokenERC20[this]
[L4316]              revert := true;
[L2529]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2530]  COND TRUE   revert
[L573]   RET         call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L574]               assume revert || gas < 0;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

Loop:
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L557]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowance1 := sum_allowance1;
[L560]               __tmp__M_Ref_bool := M_Ref_bool;
[L561]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_owned := owner_owned;
[L565]               __tmp__name_TokenERC20 := name_TokenERC20;
[L566]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L567]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L568]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L569]               __tmp__released_TokenERC20 := released_TokenERC20;
[L570]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L571]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L572]               __tmp__frozenAccount_GMC := frozenAccount_GMC;
[L573]   CALL        call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2529]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   !__tmp__released_TokenERC20[this]
[L4316]              revert := true;
[L2529]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2530]  COND TRUE   revert
[L573]   RET         call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L574]               assume revert || gas < 0;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

[2020-11-25 16:58:42,797 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:42,797 INFO  L82        PathProgramCache]: Analyzing trace with hash 1999641208, now seen corresponding path program 1 times
[2020-11-25 16:58:42,798 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:42,806 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:58:42,858 INFO  L134       CoverageAnalysis]: Checked inductivity of 12 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 12 trivial. 0 not checked.
[2020-11-25 16:58:42,858 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:58:42,859 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:58:42,859 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:58:42,859 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:58:42,859 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=23, Invalid=133, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:58:42,859 INFO  L87              Difference]: Start difference. First operand 3315 states and 3662 transitions. cyclomatic complexity: 351 Second operand 13 states.
[2020-11-25 16:58:44,855 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:58:44,855 INFO  L93              Difference]: Finished difference Result 5476 states and 6166 transitions.
[2020-11-25 16:58:44,855 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 15 states. 
[2020-11-25 16:58:44,855 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5476 states and 6166 transitions.
[2020-11-25 16:58:44,869 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 20
[2020-11-25 16:58:44,886 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5476 states to 5476 states and 6166 transitions.
[2020-11-25 16:58:44,886 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1347
[2020-11-25 16:58:44,887 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1347
[2020-11-25 16:58:44,887 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5476 states and 6166 transitions.
[2020-11-25 16:58:44,892 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:58:44,892 INFO  L728         BuchiCegarLoop]: Abstraction has 5476 states and 6166 transitions.
[2020-11-25 16:58:44,896 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5476 states and 6166 transitions.
[2020-11-25 16:58:44,942 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5476 to 4719.
[2020-11-25 16:58:44,943 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4719 states.
[2020-11-25 16:58:44,950 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4719 states to 4719 states and 5379 transitions.
[2020-11-25 16:58:44,950 INFO  L751         BuchiCegarLoop]: Abstraction has 4719 states and 5379 transitions.
[2020-11-25 16:58:44,950 INFO  L631         BuchiCegarLoop]: Abstraction has 4719 states and 5379 transitions.
[2020-11-25 16:58:44,951 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:58:44,951 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4719 states and 5379 transitions.
[2020-11-25 16:58:44,957 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 16
[2020-11-25 16:58:44,957 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:58:44,957 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:58:44,959 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:58:44,959 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_TokenERC200 := false;
[L3]                 call_approve_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4932]              assume null == 0;
[L4933]  CALL        call this := FreshRefGenerator__success();
[L2164]              havoc newRef;
[L2165]              assume Alloc[newRef] == false;
[L2166]              Alloc[newRef] := true;
[L2167]              assume newRef != null;
[L4933]  RET         call this := FreshRefGenerator__success();
[L4934]              assume now >= 0;
[L4935]              assume DType[this] == GMC;
[L4936]              assume msgvalue_MSG == 0;
[L4937]              gas := gas - 53000;
[L4938]  CALL        call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := -756920386;
[L2456]              symbol_TokenERC20[this] := -324062207;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 900000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := -756920386;
[L2471]              symbol_TokenERC20[this] := -324062207;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_GMC[this] := zeroRefboolArr();
[L3113]  RET         call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L4939]              assume !revert && gas >= 0;
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L557]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowance1 := sum_allowance1;
[L560]               __tmp__M_Ref_bool := M_Ref_bool;
[L561]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_owned := owner_owned;
[L565]               __tmp__name_TokenERC20 := name_TokenERC20;
[L566]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L567]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L568]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L569]               __tmp__released_TokenERC20 := released_TokenERC20;
[L570]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L571]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L572]               __tmp__frozenAccount_GMC := frozenAccount_GMC;
[L573]   CALL        call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2529]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2529]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2530]  COND FALSE  !(revert)
[L2533]              __var_2 := null;
[L2534]  COND TRUE   !(_spender_s325 != null)
[L2535]              revert := true;
[L573]   RET         call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L574]               assume revert || gas < 0;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

Loop:
[L4942]  CALL        call CorralChoice_GMC(this);
[L4741]              havoc msgsender_MSG;
[L4742]              havoc msgvalue_MSG;
[L4743]              havoc choice;
[L4744]              havoc __ret_0_owner;
[L4745]              havoc newOwner_s161;
[L4746]              havoc __ret_0_name;
[L4747]              havoc __ret_0_symbol;
[L4748]              havoc __ret_0_decimals;
[L4749]              havoc __ret_0_totalSupply;
[L4750]              havoc __ret_0_released;
[L4751]              havoc arg836_s0;
[L4752]              havoc __ret_0_balanceOf;
[L4753]              havoc arg837_s0;
[L4754]              havoc arg838_s0;
[L4755]              havoc __ret_0_allowance;
[L4756]              havoc initialSupply_s261;
[L4757]              havoc tokenName_s261;
[L4758]              havoc tokenSymbol_s261;
[L4759]              havoc _spender_s325;
[L4760]              havoc _value_s325;
[L4761]              havoc success_s325;
[L4762]              havoc _spender_s365;
[L4763]              havoc _value_s365;
[L4764]              havoc _extraData_s365;
[L4765]              havoc success_s365;
[L4766]              havoc _to_s478;
[L4767]              havoc _value_s478;
[L4768]              havoc success_s478;
[L4769]              havoc _from_s528;
[L4770]              havoc _to_s528;
[L4771]              havoc _value_s528;
[L4772]              havoc success_s528;
[L4773]              havoc _value_s575;
[L4774]              havoc success_s575;
[L4775]              havoc _from_s648;
[L4776]              havoc _value_s648;
[L4777]              havoc success_s648;
[L4778]              havoc arg839_s0;
[L4779]              havoc __ret_0_frozenAccount;
[L4780]              havoc initialSupply_s678;
[L4781]              havoc tokenName_s678;
[L4782]              havoc tokenSymbol_s678;
[L4783]              havoc target_s781;
[L4784]              havoc freeze_s781;
[L4785]              havoc target_s833;
[L4786]              havoc mintedAmount_s833;
[L4787]              havoc tmpNow;
[L4788]              havoc gas;
[L4789]              assume gas > 4000000 && gas <= 8000000;
[L4790]              tmpNow := now;
[L4791]              havoc now;
[L4792]              assume now > tmpNow;
[L4793]              assume msgsender_MSG != null;
[L4794]              assume DType[msgsender_MSG] != SafeMath;
[L4795]              assume DType[msgsender_MSG] != owned;
[L4796]              assume DType[msgsender_MSG] != tokenRecipient;
[L4797]              assume DType[msgsender_MSG] != TokenERC20;
[L4798]              assume DType[msgsender_MSG] != GMC;
[L4799]              Alloc[msgsender_MSG] := true;
[L4800]  COND FALSE  !(choice == 19)
[L4806]  COND FALSE  !(choice == 18)
[L4812]  COND FALSE  !(choice == 17)
[L4818]  COND FALSE  !(choice == 16)
[L4824]  COND FALSE  !(choice == 15)
[L4830]  COND FALSE  !(choice == 14)
[L4836]  COND FALSE  !(choice == 13)
[L4842]  COND FALSE  !(choice == 12)
[L4848]  COND FALSE  !(choice == 11)
[L4854]  COND FALSE  !(choice == 10)
[L4860]  COND TRUE   choice == 9
[L4861]              gas := gas - 21000;
[L4862]  COND TRUE   gas >= 0
[L4863]              assume _value_s325 >= 0 && _value_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4864]              assume msgvalue_MSG == 0;
[L4865]  CALL        call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L557]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowance1 := sum_allowance1;
[L560]               __tmp__M_Ref_bool := M_Ref_bool;
[L561]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_owned := owner_owned;
[L565]               __tmp__name_TokenERC20 := name_TokenERC20;
[L566]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L567]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L568]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L569]               __tmp__released_TokenERC20 := released_TokenERC20;
[L570]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L571]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L572]               __tmp__frozenAccount_GMC := frozenAccount_GMC;
[L573]   CALL        call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2529]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2529]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2530]  COND FALSE  !(revert)
[L2533]              __var_2 := null;
[L2534]  COND TRUE   !(_spender_s325 != null)
[L2535]              revert := true;
[L573]   RET         call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L574]               assume revert || gas < 0;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L4942]  RET         call CorralChoice_GMC(this);

[2020-11-25 16:58:44,962 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:44,962 INFO  L82        PathProgramCache]: Analyzing trace with hash 1899147533, now seen corresponding path program 1 times
[2020-11-25 16:58:44,963 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:44,972 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:44,983 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:45,035 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:45,036 INFO  L82        PathProgramCache]: Analyzing trace with hash 641336610, now seen corresponding path program 1 times
[2020-11-25 16:58:45,036 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:45,041 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:45,070 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:45,106 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:58:45,106 INFO  L82        PathProgramCache]: Analyzing trace with hash -577247082, now seen corresponding path program 1 times
[2020-11-25 16:58:45,107 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:58:45,124 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:45,144 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 2473 to 4943
[2020-11-25 16:58:45,538 WARN  L188               SmtUtils]: Spent 118.00 ms on a formula simplification that was a NOOP. DAG size: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 6037 to 12073
[2020-11-25 16:58:45,892 WARN  L188               SmtUtils]: Spent 338.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 199
[2020-11-25 16:58:46,377 WARN  L188               SmtUtils]: Spent 482.00 ms on a formula simplification. DAG size of input: 275 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.004s / 0.006s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 16:58:46,541 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification. DAG size of input: 145 DAG size of output: 139
[2020-11-25 16:58:46,699 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 16:58:47,069 WARN  L188               SmtUtils]: Spent 362.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 252
[2020-11-25 16:58:47,237 WARN  L188               SmtUtils]: Spent 166.00 ms on a formula simplification that was a NOOP. DAG size: 252
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 16:58:47,418 WARN  L188               SmtUtils]: Spent 168.00 ms on a formula simplification. DAG size of input: 167 DAG size of output: 152
[2020-11-25 16:58:47,426 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 16:58:47,954 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification that was a NOOP. DAG size: 263
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 16:58:48,427 WARN  L188               SmtUtils]: Spent 266.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 199
[2020-11-25 16:58:49,065 WARN  L188               SmtUtils]: Spent 636.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 243
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 16:58:49,188 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification. DAG size of input: 145 DAG size of output: 139
[2020-11-25 16:58:49,347 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification that was a NOOP. DAG size: 315
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 16:58:49,680 WARN  L188               SmtUtils]: Spent 326.00 ms on a formula simplification. DAG size of input: 252 DAG size of output: 252
[2020-11-25 16:58:50,574 WARN  L188               SmtUtils]: Spent 891.00 ms on a formula simplification. DAG size of input: 468 DAG size of output: 464
Garbage collection #1: 191 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 191 to 379
Garbage collection #2: 379 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 379 to 757
Garbage collection #3: 757 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 757 to 1511
Garbage collection #4: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #5: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #6: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #7: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 16:58:51,012 WARN  L188               SmtUtils]: Spent 418.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 205
[2020-11-25 16:58:51,225 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
[2020-11-25 16:58:51,799 WARN  L188               SmtUtils]: Spent 553.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 205
[2020-11-25 16:58:52,173 WARN  L188               SmtUtils]: Spent 372.00 ms on a formula simplification. DAG size of input: 321 DAG size of output: 320
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #8: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #9: 28099 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 28099 to 56197
[2020-11-25 16:58:52,708 WARN  L188               SmtUtils]: Spent 522.00 ms on a formula simplification. DAG size of input: 326 DAG size of output: 315
[2020-11-25 16:58:52,720 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:52,735 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 16:58:52,742 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:58:52 BasicIcfg
[2020-11-25 16:58:52,742 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:58:52,742 INFO  L168              Benchmark]: Toolchain (without parser) took 16378.32 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.2 GB). Free memory was 935.2 MB in the beginning and 989.9 MB in the end (delta: -54.7 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,743 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,743 INFO  L168              Benchmark]: Boogie Preprocessor took 104.72 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,743 INFO  L168              Benchmark]: UtopiaSpecLang took 70.06 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,744 INFO  L168              Benchmark]: Boogie Printer took 22.23 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,744 INFO  L168              Benchmark]: RCFGBuilder took 777.27 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,744 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.34 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,744 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1329.75 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.8 MB). Free memory was 775.9 MB in the beginning and 895.6 MB in the end (delta: -119.7 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,745 INFO  L168              Benchmark]: BlockEncodingV2 took 167.21 ms. Allocated memory is still 1.2 GB. Free memory was 895.6 MB in the beginning and 820.1 MB in the end (delta: 75.5 MB). Peak memory consumption was 75.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,745 INFO  L168              Benchmark]: BuchiAutomizer took 13866.81 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 996.7 MB). Free memory was 820.1 MB in the beginning and 989.9 MB in the end (delta: -169.8 MB). Peak memory consumption was 827.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:58:52,747 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4504 locations, 8011 edges
  - StatisticsResult: Encoded RCFG
    4452 locations, 7875 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 104.72 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 70.06 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 22.23 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 777.27 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.5 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.34 ms. Allocated memory is still 1.0 GB. Free memory was 779.5 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1329.75 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.8 MB). Free memory was 775.9 MB in the beginning and 895.6 MB in the end (delta: -119.7 MB). Peak memory consumption was 161.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 167.21 ms. Allocated memory is still 1.2 GB. Free memory was 895.6 MB in the beginning and 820.1 MB in the end (delta: 75.5 MB). Peak memory consumption was 75.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13866.81 ms. Allocated memory was 1.2 GB in the beginning and 2.2 GB in the end (delta: 996.7 MB). Free memory was 820.1 MB in the beginning and 989.9 MB in the end (delta: -169.8 MB). Peak memory consumption was 827.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1829 locations, 2458 edges
  - StatisticsResult: BuchiProgram size
    4504 locations, 8011 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 4719 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.8s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 8.4s. Construction of modules took 3.6s. BÃ¼chi inclusion checks took 1.2s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1825 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4719 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15489 SDtfs, 17264 SDslu, 23738 SDs, 0 SdLazy, 66354 SolverSat, 3453 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.6s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(900000000000000000000000015) = (new GMC)({from : 900000000000000000000000001, initialSupply : 900000000000000000000000016, tokenName : 900000000000000000000000018, tokenSymbol : 900000000000000000000000019});
[L1364]              havoc __exception;
[L1365]              revert := false;
[L1366]  COND FALSE  !(__exception)
[L1392]  CALL        call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3105]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L3105]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3106]  COND FALSE  !(revert)
[L3109]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L2490]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2356]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2339]              assume msgsender_MSG != null;
[L2340]              Balance[this] := 0;
[L2341]              owner_owned[this] := null;
[L2343]              owner_owned[this] := msgsender_MSG;
[L2356]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2357]  COND FALSE  !(revert)
[L2490]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2491]  COND FALSE  !(revert)
[L2494]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2453]              assume msgsender_MSG != null;
[L2454]              Balance[this] := 0;
[L2455]              name_TokenERC20[this] := -756920386;
[L2456]              symbol_TokenERC20[this] := -324062207;
[L2457]              decimals_TokenERC20[this] := 18;
[L2458]              totalSupply_TokenERC20[this] := 900000000000000000000000000;
[L2459]              released_TokenERC20[this] := true;
[L2460]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2461]              sum_balanceOf0[this] := 0;
[L2462]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2463]              sum_allowance1[this] := 0;
[L2465]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2466]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s261, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2467]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2468]              balanceOf_TokenERC20[this][msgsender_MSG] := 0;
[L2469]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2470]              name_TokenERC20[this] := -756920386;
[L2471]              symbol_TokenERC20[this] := -324062207;
[L2494]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s261, tokenName_s261, tokenSymbol_s261);
[L2495]  COND FALSE  !(revert)
[L3109]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3110]  COND FALSE  !(revert)
[L3113]  CALL        call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3081]              assume msgsender_MSG != null;
[L3082]              Balance[this] := 0;
[L3083]              frozenAccount_GMC[this] := zeroRefboolArr();
[L3113]  RET         call GMC_GMC_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L3114]  COND FALSE  !(revert)
[L1392]  RET         call GMC_GMC__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
[L1393]              assume !revert && gas >= 0;
[L4938]  RET         call GMC_GMC(this, msgsender_MSG, msgvalue_MSG, initialSupply_s678, tokenName_s678, tokenSymbol_s678);
TokenERC20(900000000000000000000000015).approve~address~uint256.gas(3979002)({from : 900000000000000000000000009, _spender : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L557]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowance1 := sum_allowance1;
[L560]               __tmp__M_Ref_bool := M_Ref_bool;
[L561]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_owned := owner_owned;
[L565]               __tmp__name_TokenERC20 := name_TokenERC20;
[L566]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L567]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L568]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L569]               __tmp__released_TokenERC20 := released_TokenERC20;
[L570]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L571]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L572]               __tmp__frozenAccount_GMC := frozenAccount_GMC;
[L573]   CALL        call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2529]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2529]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2530]  COND FALSE  !(revert)
[L2533]              __var_2 := null;
[L2534]  COND TRUE   !(_spender_s325 != null)
[L2535]              revert := true;
[L573]   RET         call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L574]               assume revert || gas < 0;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);

Loop:
TokenERC20(900000000000000000000000015).approve~address~uint256.gas(3979001)({from : 900000000000000000000000007, _spender : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s325;
[L3]                 call_approve_TokenERC200 := true;
[L3]                 call_approve_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L548]               havoc __exception;
[L549]               revert := false;
[L550]   COND TRUE   __exception
[L551]               __tmp__Balance := Balance;
[L552]               __tmp__DType := DType;
[L553]               __tmp__Alloc := Alloc;
[L554]               __tmp__balance_ADDR := balance_ADDR;
[L555]               __tmp__M_Ref_int := M_Ref_int;
[L556]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L557]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L558]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L559]               __tmp__sum_allowance1 := sum_allowance1;
[L560]               __tmp__M_Ref_bool := M_Ref_bool;
[L561]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L562]               __tmp__Length := Length;
[L563]               __tmp__now := now;
[L564]               __tmp__owner_owned := owner_owned;
[L565]               __tmp__name_TokenERC20 := name_TokenERC20;
[L566]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L567]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L568]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L569]               __tmp__released_TokenERC20 := released_TokenERC20;
[L570]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L571]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L572]               __tmp__frozenAccount_GMC := frozenAccount_GMC;
[L573]   CALL        call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L2529]  CALL        call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(!__tmp__released_TokenERC20[this])
[L2529]  RET         call onlyReleased_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L2530]  COND FALSE  !(revert)
[L2533]              __var_2 := null;
[L2534]  COND TRUE   !(_spender_s325 != null)
[L2535]              revert := true;
[L573]   RET         call success_s325 := approve~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);
[L574]               assume revert || gas < 0;
[L4865]  RET         call success_s325 := approve~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s325, _value_s325);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
