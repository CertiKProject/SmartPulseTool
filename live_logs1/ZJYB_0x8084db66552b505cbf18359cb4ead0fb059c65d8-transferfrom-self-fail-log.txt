This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:02:12,510 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:02:12,511 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:02:12,524 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:02:12,524 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:02:12,524 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:02:12,525 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:02:12,527 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:02:12,529 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:02:12,530 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:02:12,530 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:02:12,531 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:02:12,531 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:02:12,532 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:02:12,533 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:02:12,534 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:02:12,534 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:02:12,536 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:02:12,537 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:02:12,538 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:02:12,539 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:02:12,540 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:02:12,541 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:02:12,542 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:02:12,542 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:02:12,542 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:02:12,543 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:02:12,543 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:02:12,544 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:02:12,544 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:02:12,544 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:02:12,545 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:02:12,545 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:02:12,546 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:02:12,547 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:02:12,547 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:02:12,547 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:02:12,547 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:02:12,548 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:02:12,548 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:02:12,549 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:02:12,549 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:02:12,557 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:02:12,557 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:02:12,558 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:02:12,558 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:02:12,558 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:02:12,558 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:02:12,558 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:02:12,558 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:02:12,559 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:02:12,559 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:02:12,559 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:02:12,560 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:02:12,560 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:02:12,561 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:02:12,585 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:02:12,597 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:02:12,601 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:02:12,602 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:02:12,603 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:02:12,604 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl
[2020-11-25 11:02:12,604 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl'
[2020-11-25 11:02:12,678 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:02:12,679 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:02:12,680 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:02:12,680 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:02:12,680 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:02:12,697 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,699 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,734 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,735 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,760 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,771 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,777 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,785 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:02:12,786 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:02:12,786 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:02:12,788 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:02:12,792 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/1) ...
[2020-11-25 11:02:12,809 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZJYB.transferFrom(from, to, value), from == to && (value > _balances_ZJYB[this][from] || value > _allowed_ZJYB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][to] >= 0 && _balances_ZJYB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][from] >= 0 &&  _balances_ZJYB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ZJYB[this][from][msg.sender] >= 0 && _allowed_ZJYB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZJYB.transferFrom)))
[2020-11-25 11:02:12,815 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZJYB.transferFrom(from, to, value), from == to && (value > _balances_ZJYB[this][from] || value > _allowed_ZJYB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][to] >= 0 && _balances_ZJYB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][from] >= 0 &&  _balances_ZJYB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ZJYB[this][from][msg.sender] >= 0 && _allowed_ZJYB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZJYB.transferFrom)))
[2020-11-25 11:02:12,822 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZJYB.transferFrom(from, to, value), from == to && (value > _balances_ZJYB[this][from] || value > _allowed_ZJYB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][to] >= 0 && _balances_ZJYB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][from] >= 0 &&  _balances_ZJYB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ZJYB[this][from][msg.sender] >= 0 && _allowed_ZJYB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZJYB.transferFrom)))
[2020-11-25 11:02:12,829 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s499==_to_s499 && ( _value_s499>_balances_ZJYB[this][_from_s499] || _value_s499>_allowed_ZJYB[this][_from_s499][msg.sender] ) ) && _value_s499>=0 ) && _value_s499<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ZJYB[this][_to_s499]>=0 ) && _balances_ZJYB[this][_to_s499]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ZJYB[this][_from_s499]>=0 ) && _balances_ZJYB[this][_from_s499]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ZJYB[this][_from_s499][msg.sender]>=0 ) && _allowed_ZJYB[this][_from_s499][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>],IdentifierExpression[_to_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_to_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_to_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ZJYB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[_from_s499,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZJYB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:02:12,834 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZJYB.transferFrom(from, to, value), from == to && (value > _balances_ZJYB[this][from] || value > _allowed_ZJYB[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][to] >= 0 && _balances_ZJYB[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ZJYB[this][from] >= 0 &&  _balances_ZJYB[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ZJYB[this][from][msg.sender] >= 0 && _allowed_ZJYB[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ZJYB.transferFrom)))
[2020-11-25 11:02:12,834 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ZJYB0) ==> ( <>AP(fail_transferFrom_ZJYB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:02:12,841 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:02:12 PropertyContainer
[2020-11-25 11:02:12,841 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:02:12,841 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:02:12,842 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:02:12,842 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:02:12,842 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/2) ...
[2020-11-25 11:02:12,843 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:02:12,843 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:02:12,855 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:02:12" (2/2) ...
[2020-11-25 11:02:12,855 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:02:12,855 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:02:12,855 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:02:12,855 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:02:12,856 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/2) ...
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 11:02:12,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,909 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__success
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 11:02:12,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 11:02:12,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 11:02:12,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 11:02:12,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 11:02:12,910 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 11:02:12,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 11:02:12,911 INFO  L130     BoogieDeclarations]: Found specification of procedure ZJYB_ZJYB_NoBaseCtor__success
[2020-11-25 11:02:12,911 INFO  L130     BoogieDeclarations]: Found specification of procedure ZJYB_ZJYB
[2020-11-25 11:02:12,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZJYB_ZJYB
[2020-11-25 11:02:12,911 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZJYB
[2020-11-25 11:02:12,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZJYB
[2020-11-25 11:02:12,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZJYB
[2020-11-25 11:02:12,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZJYB
[2020-11-25 11:02:12,911 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZJYB
[2020-11-25 11:02:12,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZJYB
[2020-11-25 11:02:12,911 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZJYB
[2020-11-25 11:02:12,912 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZJYB
[2020-11-25 11:02:12,912 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZJYB
[2020-11-25 11:02:12,912 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZJYB
[2020-11-25 11:02:12,912 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZJYB
[2020-11-25 11:02:12,912 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZJYB
[2020-11-25 11:02:12,912 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_ZJYB
[2020-11-25 11:02:12,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_ZJYB
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZJYB
[2020-11-25 11:02:12,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZJYB
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZJYB
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:02:12,913 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure _assert~bool_SafeMath__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 11:02:12,914 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure ZJYB_ZJYB_NoBaseCtor__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure ZJYB_ZJYB__success
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure ZJYB_ZJYB__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZJYB__success
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZJYB__fail
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZJYB__success
[2020-11-25 11:02:12,915 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZJYB__fail
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZJYB__success
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZJYB__fail
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZJYB__success
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZJYB__fail
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZJYB__success
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZJYB__fail
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZJYB__success
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZJYB__fail
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZJYB__success
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZJYB__fail
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZJYB__success
[2020-11-25 11:02:12,916 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZJYB__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZJYB__success
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZJYB__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_ZJYB__success
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure _allowed~address~address_ZJYB__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZJYB__success
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZJYB__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:02:12,917 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 11:02:12,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:02:12,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:02:12,917 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 11:02:12,918 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__fail
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure _assert~bool_SafeMath__success
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 11:02:12,919 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZJYB_ZJYB_NoBaseCtor__fail
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZJYB_ZJYB_NoBaseCtor__success
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZJYB_ZJYB__fail
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZJYB_ZJYB__success
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZJYB__fail
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZJYB__success
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZJYB__fail
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZJYB__success
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZJYB__fail
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZJYB__success
[2020-11-25 11:02:12,920 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZJYB__fail
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZJYB__success
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZJYB__fail
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZJYB__success
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZJYB__fail
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZJYB__success
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZJYB__fail
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZJYB__success
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZJYB__fail
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZJYB__success
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZJYB__fail
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZJYB__success
[2020-11-25 11:02:12,921 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_ZJYB__fail
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure _allowed~address~address_ZJYB__success
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZJYB__fail
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZJYB__success
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 11:02:12,922 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 11:02:12,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 11:02:12,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZJYB
[2020-11-25 11:02:12,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:02:12,923 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:02:12,923 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:02:13,271 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:02:13,272 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:02:13,542 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:02:13,543 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 11:02:13,544 INFO  L202        PluginConnector]: Adding new model ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:02:13 BoogieIcfgContainer
[2020-11-25 11:02:13,545 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:02:12" (2/2) ...
[2020-11-25 11:02:13,545 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:02:13,545 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3c0f6820 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:02:13, skipping insertion in model container
[2020-11-25 11:02:13,545 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:02:13,545 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:02:13,545 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:02:13,547 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:02:13,547 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/3) ...
[2020-11-25 11:02:13,547 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@26e641bb and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:02:13, skipping insertion in model container
[2020-11-25 11:02:13,548 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:02:12" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:02:13,587 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:02:13 NWAContainer
[2020-11-25 11:02:13,588 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:02:13,588 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:02:13,588 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:02:13,589 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:02:13,589 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:02:13" (3/4) ...
[2020-11-25 11:02:13,590 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2220b784 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:02:13, skipping insertion in model container
[2020-11-25 11:02:13,590 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:02:13" (4/4) ...
[2020-11-25 11:02:13,594 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:02:13,597 INFO  L110   BuchiProductObserver]: Initial RCFG 1233 locations, 1604 edges
[2020-11-25 11:02:13,597 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:02:13,608 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:02:14,597 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:02:14,601 INFO  L110   BuchiProductObserver]: BuchiProgram size 2972 locations, 5213 edges
[2020-11-25 11:02:14,602 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:02:14 BoogieIcfgContainer
[2020-11-25 11:02:14,602 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:02:14,602 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:02:14,602 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:02:14,603 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:02:14,604 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:02:14" (1/1) ...
[2020-11-25 11:02:14,741 INFO  L313           BlockEncoder]: Initial Icfg 2972 locations, 5213 edges
[2020-11-25 11:02:14,741 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:02:14,742 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:02:14,742 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:02:14,742 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:02:14,751 INFO  L70    emoveInfeasibleEdges]: Removed 102 edges and 9 locations because of local infeasibility
[2020-11-25 11:02:14,756 INFO  L70        RemoveSinkStates]: Removed 104 edges and 62 locations by removing sink states
[2020-11-25 11:02:14,764 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:02:14,767 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:02:14,769 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:02:14,770 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:02:14,773 INFO  L313           BlockEncoder]: Encoded RCFG 2883 locations, 4981 edges
[2020-11-25 11:02:14,773 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:02:14 BasicIcfg
[2020-11-25 11:02:14,773 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:02:14,774 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:02:14,774 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:02:14,775 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:02:14,776 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:02:14,776 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:02:12" (1/6) ...
[2020-11-25 11:02:14,777 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:02:14, skipping insertion in model container
[2020-11-25 11:02:14,777 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:02:14,777 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:02:12" (2/6) ...
[2020-11-25 11:02:14,777 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:02:14, skipping insertion in model container
[2020-11-25 11:02:14,777 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:02:14,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:02:13" (3/6) ...
[2020-11-25 11:02:14,778 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:02:14, skipping insertion in model container
[2020-11-25 11:02:14,778 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:02:14,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:02:13" (4/6) ...
[2020-11-25 11:02:14,778 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:02:14, skipping insertion in model container
[2020-11-25 11:02:14,778 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:02:14,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:02:14" (5/6) ...
[2020-11-25 11:02:14,778 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f67969d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:02:14, skipping insertion in model container
[2020-11-25 11:02:14,778 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:02:14,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:02:14" (6/6) ...
[2020-11-25 11:02:14,779 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZJYB_0x8084db66552b505cbf18359cb4ead0fb059c65d8_transferfrom-self-fail.bpl_BEv2
[2020-11-25 11:02:14,815 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:02:14,815 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:02:14,815 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:02:14,815 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:02:14,815 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:02:14,815 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:02:14,815 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:02:14,815 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:02:14,815 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:02:14,842 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2883 states.
[2020-11-25 11:02:14,892 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:14,892 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:14,892 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:14,899 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:14,899 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:14,899 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:02:14,899 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2883 states.
[2020-11-25 11:02:14,912 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:14,912 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:14,912 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:14,914 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:14,914 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZJYB0 := false;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == ZJYB;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND TRUE   revert
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND TRUE   revert
[L464]   RET         call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_ZJYB(this);

[2020-11-25 11:02:14,928 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:02:14,928 INFO  L82        PathProgramCache]: Analyzing trace with hash -1254671462, now seen corresponding path program 1 times
[2020-11-25 11:02:14,933 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:02:14,953 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:02:14,997 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:02:14,999 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:02:15,000 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:02:15,004 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:02:15,140 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:02:15,141 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:02:15,145 INFO  L87              Difference]: Start difference. First operand 2883 states. Second operand 4 states.
[2020-11-25 11:02:15,725 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:02:15,726 INFO  L93              Difference]: Finished difference Result 2921 states and 4629 transitions.
[2020-11-25 11:02:15,726 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:02:15,727 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2921 states and 4629 transitions.
[2020-11-25 11:02:15,746 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:02:15,768 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2921 states to 2781 states and 4393 transitions.
[2020-11-25 11:02:15,769 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 12
[2020-11-25 11:02:15,772 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1000
[2020-11-25 11:02:15,773 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2781 states and 4393 transitions.
[2020-11-25 11:02:15,789 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:02:15,789 INFO  L728         BuchiCegarLoop]: Abstraction has 2781 states and 4393 transitions.
[2020-11-25 11:02:15,807 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2781 states and 4393 transitions.
[2020-11-25 11:02:15,861 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2781 to 2370.
[2020-11-25 11:02:15,861 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2370 states.
[2020-11-25 11:02:15,868 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2370 states to 2370 states and 3647 transitions.
[2020-11-25 11:02:15,869 INFO  L751         BuchiCegarLoop]: Abstraction has 2370 states and 3647 transitions.
[2020-11-25 11:02:15,869 INFO  L631         BuchiCegarLoop]: Abstraction has 2370 states and 3647 transitions.
[2020-11-25 11:02:15,869 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:02:15,869 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2370 states and 3647 transitions.
[2020-11-25 11:02:15,878 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:15,878 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:15,878 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:15,880 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:15,880 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZJYB0 := false;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == ZJYB;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_ZJYB[this] := 1113454875;
[L1845]              symbol_ZJYB[this] := 773017640;
[L1846]              decimals_ZJYB[this] := 18;
[L1847]              _balances_ZJYB[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_ZJYB[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_ZJYB[this] := 1000000000000 * (nonlinearPow(10, decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][msgsender_MSG];
[L1855]              _balances_ZJYB[this][msgsender_MSG] := totalSupply_ZJYB[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L1888]  RET         call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;

Loop:
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_ZJYB(this);

[2020-11-25 11:02:15,883 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:02:15,883 INFO  L82        PathProgramCache]: Analyzing trace with hash 574239203, now seen corresponding path program 1 times
[2020-11-25 11:02:15,884 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:02:15,892 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:02:15,908 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:02:15,908 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:02:15,908 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:02:15,909 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:02:15,910 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:02:15,910 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:02:15,910 INFO  L87              Difference]: Start difference. First operand 2370 states and 3647 transitions. cyclomatic complexity: 1279 Second operand 4 states.
[2020-11-25 11:02:16,284 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:02:16,284 INFO  L93              Difference]: Finished difference Result 2147 states and 2329 transitions.
[2020-11-25 11:02:16,284 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:02:16,285 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2147 states and 2329 transitions.
[2020-11-25 11:02:16,296 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:16,304 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2147 states to 2147 states and 2329 transitions.
[2020-11-25 11:02:16,304 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 682
[2020-11-25 11:02:16,305 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 689
[2020-11-25 11:02:16,305 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2147 states and 2329 transitions.
[2020-11-25 11:02:16,307 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:02:16,307 INFO  L728         BuchiCegarLoop]: Abstraction has 2147 states and 2329 transitions.
[2020-11-25 11:02:16,309 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2147 states and 2329 transitions.
[2020-11-25 11:02:16,322 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2147 to 2142.
[2020-11-25 11:02:16,322 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2142 states.
[2020-11-25 11:02:16,326 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2142 states to 2142 states and 2324 transitions.
[2020-11-25 11:02:16,326 INFO  L751         BuchiCegarLoop]: Abstraction has 2142 states and 2324 transitions.
[2020-11-25 11:02:16,327 INFO  L631         BuchiCegarLoop]: Abstraction has 2142 states and 2324 transitions.
[2020-11-25 11:02:16,327 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:02:16,327 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2142 states and 2324 transitions.
[2020-11-25 11:02:16,330 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:16,331 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:16,331 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:16,333 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:16,333 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZJYB0 := false;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == ZJYB;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_ZJYB[this] := 1113454875;
[L1845]              symbol_ZJYB[this] := 773017640;
[L1846]              decimals_ZJYB[this] := 18;
[L1847]              _balances_ZJYB[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_ZJYB[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_ZJYB[this] := 1000000000000 * (nonlinearPow(10, decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][msgsender_MSG];
[L1855]              _balances_ZJYB[this][msgsender_MSG] := totalSupply_ZJYB[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L1888]  RET         call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND FALSE  !(DType[this] == ZJYB)
[L1642]  COND TRUE   DType[this] == SafeMath
[L1643]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1643]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1644]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND FALSE  !(DType[this] == ZJYB)
[L1642]  COND TRUE   DType[this] == SafeMath
[L1643]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1643]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1644]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

Loop:
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND FALSE  !(DType[this] == ZJYB)
[L1642]  COND TRUE   DType[this] == SafeMath
[L1643]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1643]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1644]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND FALSE  !(DType[this] == ZJYB)
[L1642]  COND TRUE   DType[this] == SafeMath
[L1643]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1643]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1644]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

[2020-11-25 11:02:16,337 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:02:16,338 INFO  L82        PathProgramCache]: Analyzing trace with hash -1609541303, now seen corresponding path program 1 times
[2020-11-25 11:02:16,338 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:02:16,358 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:02:16,428 INFO  L134       CoverageAnalysis]: Checked inductivity of 18 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-25 11:02:16,428 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 11:02:16,428 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [6] total 6
[2020-11-25 11:02:16,428 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:02:16,429 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 11:02:16,429 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 11:02:16,429 INFO  L87              Difference]: Start difference. First operand 2142 states and 2324 transitions. cyclomatic complexity: 184 Second operand 7 states.
[2020-11-25 11:02:16,576 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:02:16,576 INFO  L93              Difference]: Finished difference Result 2192 states and 2379 transitions.
[2020-11-25 11:02:16,577 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:02:16,577 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2192 states and 2379 transitions.
[2020-11-25 11:02:16,584 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:16,590 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2192 states to 2148 states and 2334 transitions.
[2020-11-25 11:02:16,590 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 689
[2020-11-25 11:02:16,590 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 689
[2020-11-25 11:02:16,590 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2148 states and 2334 transitions.
[2020-11-25 11:02:16,592 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:02:16,593 INFO  L728         BuchiCegarLoop]: Abstraction has 2148 states and 2334 transitions.
[2020-11-25 11:02:16,595 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2148 states and 2334 transitions.
[2020-11-25 11:02:16,616 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2148 to 2148.
[2020-11-25 11:02:16,616 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2148 states.
[2020-11-25 11:02:16,621 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2148 states to 2148 states and 2334 transitions.
[2020-11-25 11:02:16,621 INFO  L751         BuchiCegarLoop]: Abstraction has 2148 states and 2334 transitions.
[2020-11-25 11:02:16,621 INFO  L631         BuchiCegarLoop]: Abstraction has 2148 states and 2334 transitions.
[2020-11-25 11:02:16,621 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:02:16,621 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2148 states and 2334 transitions.
[2020-11-25 11:02:16,628 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:16,628 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:16,628 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:16,631 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:16,631 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZJYB0 := false;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == ZJYB;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_ZJYB[this] := 1113454875;
[L1845]              symbol_ZJYB[this] := 773017640;
[L1846]              decimals_ZJYB[this] := 18;
[L1847]              _balances_ZJYB[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_ZJYB[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_ZJYB[this] := 1000000000000 * (nonlinearPow(10, decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][msgsender_MSG];
[L1855]              _balances_ZJYB[this][msgsender_MSG] := totalSupply_ZJYB[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L1888]  RET         call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

Loop:
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

[2020-11-25 11:02:16,636 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:02:16,637 INFO  L82        PathProgramCache]: Analyzing trace with hash 1053705953, now seen corresponding path program 1 times
[2020-11-25 11:02:16,637 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:02:16,655 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:02:16,803 INFO  L134       CoverageAnalysis]: Checked inductivity of 17 backedges. 9 proven. 0 refuted. 0 times theorem prover too weak. 8 trivial. 0 not checked.
[2020-11-25 11:02:16,803 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:02:16,803 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 11:02:16,803 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:02:16,803 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 11:02:16,804 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=33, Invalid=177, Unknown=0, NotChecked=0, Total=210
[2020-11-25 11:02:16,804 INFO  L87              Difference]: Start difference. First operand 2148 states and 2334 transitions. cyclomatic complexity: 188 Second operand 15 states.
[2020-11-25 11:02:17,814 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:02:17,814 INFO  L93              Difference]: Finished difference Result 2181 states and 2379 transitions.
[2020-11-25 11:02:17,814 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 11:02:17,815 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2181 states and 2379 transitions.
[2020-11-25 11:02:17,820 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:17,825 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2181 states to 2177 states and 2371 transitions.
[2020-11-25 11:02:17,825 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 696
[2020-11-25 11:02:17,826 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 696
[2020-11-25 11:02:17,826 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2177 states and 2371 transitions.
[2020-11-25 11:02:17,828 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:02:17,828 INFO  L728         BuchiCegarLoop]: Abstraction has 2177 states and 2371 transitions.
[2020-11-25 11:02:17,830 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2177 states and 2371 transitions.
[2020-11-25 11:02:17,843 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2177 to 2168.
[2020-11-25 11:02:17,843 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2168 states.
[2020-11-25 11:02:17,845 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2168 states to 2168 states and 2356 transitions.
[2020-11-25 11:02:17,845 INFO  L751         BuchiCegarLoop]: Abstraction has 2168 states and 2356 transitions.
[2020-11-25 11:02:17,845 INFO  L631         BuchiCegarLoop]: Abstraction has 2168 states and 2356 transitions.
[2020-11-25 11:02:17,845 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:02:17,845 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2168 states and 2356 transitions.
[2020-11-25 11:02:17,848 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:17,848 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:17,848 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:17,850 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:17,850 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZJYB0 := false;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == ZJYB;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND TRUE   __exception
[L442]               __tmp__Balance := Balance;
[L443]               __tmp__DType := DType;
[L444]               __tmp__Alloc := Alloc;
[L445]               __tmp__balance_ADDR := balance_ADDR;
[L446]               __tmp__M_Ref_int := M_Ref_int;
[L447]               __tmp__sum__balances0 := sum__balances0;
[L448]               __tmp__alloc__allowed_ZJYB_lvl0 := alloc__allowed_ZJYB_lvl0;
[L449]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L450]               __tmp__sum__allowed1 := sum__allowed1;
[L451]               __tmp__Length := Length;
[L452]               __tmp__now := now;
[L453]               __tmp__owner_Owned := owner_Owned;
[L454]               __tmp__newOwner_Owned := newOwner_Owned;
[L455]               __tmp__name_ZJYB := name_ZJYB;
[L456]               __tmp__symbol_ZJYB := symbol_ZJYB;
[L457]               __tmp__decimals_ZJYB := decimals_ZJYB;
[L458]               __tmp___balances_ZJYB := _balances_ZJYB;
[L459]               __tmp___allowed_ZJYB := _allowed_ZJYB;
[L460]               __tmp__totalSupply_ZJYB := totalSupply_ZJYB;
[L461]   CALL        call ZJYB_ZJYB__fail(this, msgsender_MSG, msgvalue_MSG);
[L1863]  CALL        call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L1492]  CALL        call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1477]              assume msgsender_MSG != null;
[L1478]              __tmp__Balance[this] := 0;
[L1492]  RET         call SafeMath_SafeMath_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1493]  COND FALSE  !(revert)
[L1863]  RET         call SafeMath_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG);
[L1864]  COND FALSE  !(revert)
[L1867]  CALL        call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L1736]  CALL        call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1715]              assume msgsender_MSG != null;
[L1716]              __tmp__Balance[this] := 0;
[L1717]              __tmp__owner_Owned[this] := null;
[L1718]              __tmp__newOwner_Owned[this] := null;
[L1720]              __tmp__owner_Owned[this] := msgsender_MSG;
[L1736]  RET         call Owned_Owned_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1737]  COND FALSE  !(revert)
[L1867]  RET         call Owned_Owned__fail(this, msgsender_MSG, msgvalue_MSG);
[L1868]  COND FALSE  !(revert)
[L1871]  CALL        call ZJYB_ZJYB_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1821]              assume msgsender_MSG != null;
[L1822]              __tmp__Balance[this] := 0;
[L1823]              __tmp__name_ZJYB[this] := 1113454875;
[L1824]              __tmp__symbol_ZJYB[this] := 773017640;
[L1825]              __tmp__decimals_ZJYB[this] := 18;
[L1826]              __tmp___balances_ZJYB[this] := zeroRefintArr();
[L1827]              __tmp__sum__balances0[this] := 0;
[L1828]              __tmp___allowed_ZJYB[this] := zeroRefRefintArr();
[L1829]              __tmp__sum__allowed1[this] := 0;
[L1830]              __var_2 := __tmp__decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1831]              __tmp__totalSupply_ZJYB[this] := 1000000000000 * (nonlinearPow(10, __tmp__decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1833]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ZJYB[this][msgsender_MSG];
[L1834]              __tmp___balances_ZJYB[this][msgsender_MSG] := __tmp__totalSupply_ZJYB[this];
[L1835]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ZJYB[this][msgsender_MSG];
[L1871]  RET         call ZJYB_ZJYB_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1872]  COND FALSE  !(revert)
[L461]   RET         call ZJYB_ZJYB__fail(this, msgsender_MSG, msgvalue_MSG);
[L462]               assume revert || gas < 0;
[L3221]  RET         call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

Loop:
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

[2020-11-25 11:02:17,853 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:02:17,853 INFO  L82        PathProgramCache]: Analyzing trace with hash 2017651811, now seen corresponding path program 1 times
[2020-11-25 11:02:17,853 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:02:17,860 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:02:17,885 INFO  L134       CoverageAnalysis]: Checked inductivity of 17 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 17 trivial. 0 not checked.
[2020-11-25 11:02:17,885 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:02:17,885 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:02:17,885 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:02:17,885 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:02:17,886 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:02:17,886 INFO  L87              Difference]: Start difference. First operand 2168 states and 2356 transitions. cyclomatic complexity: 191 Second operand 4 states.
[2020-11-25 11:02:18,038 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:02:18,038 INFO  L93              Difference]: Finished difference Result 2741 states and 3089 transitions.
[2020-11-25 11:02:18,038 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:02:18,038 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2741 states and 3089 transitions.
[2020-11-25 11:02:18,045 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:02:18,053 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2741 states to 2661 states and 3009 transitions.
[2020-11-25 11:02:18,053 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 870
[2020-11-25 11:02:18,054 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 870
[2020-11-25 11:02:18,054 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2661 states and 3009 transitions.
[2020-11-25 11:02:18,057 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:02:18,057 INFO  L728         BuchiCegarLoop]: Abstraction has 2661 states and 3009 transitions.
[2020-11-25 11:02:18,059 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2661 states and 3009 transitions.
[2020-11-25 11:02:18,072 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2661 to 2088.
[2020-11-25 11:02:18,073 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2088 states.
[2020-11-25 11:02:18,074 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2088 states to 2088 states and 2275 transitions.
[2020-11-25 11:02:18,075 INFO  L751         BuchiCegarLoop]: Abstraction has 2088 states and 2275 transitions.
[2020-11-25 11:02:18,075 INFO  L631         BuchiCegarLoop]: Abstraction has 2088 states and 2275 transitions.
[2020-11-25 11:02:18,075 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 11:02:18,075 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2088 states and 2275 transitions.
[2020-11-25 11:02:18,077 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:02:18,077 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:02:18,077 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:02:18,078 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:02:18,078 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_ZJYB0 := false;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]     CALL        call main();
[L3215]              assume null == 0;
[L3216]  CALL        call this := FreshRefGenerator__success();
[L1468]              havoc newRef;
[L1469]              assume Alloc[newRef] == false;
[L1470]              Alloc[newRef] := true;
[L1471]              assume newRef != null;
[L3216]  RET         call this := FreshRefGenerator__success();
[L3217]              assume now >= 0;
[L3218]              assume DType[this] == ZJYB;
[L3219]              assume msgvalue_MSG == 0;
[L3220]              gas := gas - 53000;
[L3221]  CALL        call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L439]               havoc __exception;
[L440]               revert := false;
[L441]   COND FALSE  !(__exception)
[L464]   CALL        call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L1880]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1485]              assume msgsender_MSG != null;
[L1486]              Balance[this] := 0;
[L1500]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L1880]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1881]  COND FALSE  !(revert)
[L1884]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1744]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1726]              assume msgsender_MSG != null;
[L1727]              Balance[this] := 0;
[L1728]              owner_Owned[this] := null;
[L1729]              newOwner_Owned[this] := null;
[L1731]              owner_Owned[this] := msgsender_MSG;
[L1744]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1745]  COND FALSE  !(revert)
[L1884]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1885]  COND FALSE  !(revert)
[L1888]  CALL        call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1842]              assume msgsender_MSG != null;
[L1843]              Balance[this] := 0;
[L1844]              name_ZJYB[this] := 1113454875;
[L1845]              symbol_ZJYB[this] := 773017640;
[L1846]              decimals_ZJYB[this] := 18;
[L1847]              _balances_ZJYB[this] := zeroRefintArr();
[L1848]              sum__balances0[this] := 0;
[L1849]              _allowed_ZJYB[this] := zeroRefRefintArr();
[L1850]              sum__allowed1[this] := 0;
[L1851]              __var_2 := decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1852]              totalSupply_ZJYB[this] := 1000000000000 * (nonlinearPow(10, decimals_ZJYB[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1854]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][msgsender_MSG];
[L1855]              _balances_ZJYB[this][msgsender_MSG] := totalSupply_ZJYB[this];
[L1856]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][msgsender_MSG];
[L1857]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L1888]  RET         call ZJYB_ZJYB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1889]  COND FALSE  !(revert)
[L464]   RET         call ZJYB_ZJYB__success(this, msgsender_MSG, msgvalue_MSG);
[L465]               assume !revert && gas >= 0;
[L3221]  RET         call ZJYB_ZJYB(this, msgsender_MSG, msgvalue_MSG);
[L3222]              assume !revert && gas >= 0;
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND FALSE  !(choice == 3)
[L3194]  COND TRUE   choice == 2
[L3195]              gas := gas - 21000;
[L3196]  COND TRUE   gas >= 0
[L3197]              assume value_s535 >= 0 && value_s535 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3198]              assume msgvalue_MSG == 0;
[L3199]  CALL        call __ret_0_approve := approve~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L721]               havoc __exception;
[L722]               revert := false;
[L723]   COND FALSE  !(__exception)
[L746]   CALL        call __ret_0_ := approve~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L2219]              __var_13 := null;
[L2220]  COND FALSE  !(!(spender_s535 != null))
[L2224]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_ZJYB[this][msgsender_MSG][spender_s535];
[L2225]              _allowed_ZJYB[this][msgsender_MSG][spender_s535] := value_s535;
[L2226]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_ZJYB[this][msgsender_MSG][spender_s535];
[L2227]              assert { :EventEmitted "Approval_ZJYB" } true;
[L2228]              __ret_0_ := true;
[L746]   RET         call __ret_0_ := approve~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L747]               assume !revert && gas >= 0;
[L3199]  RET         call __ret_0_approve := approve~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, spender_s535, value_s535);
[L3225]  RET         call CorralChoice_ZJYB(this);
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND FALSE  !(choice == 15)
[L3119]  COND FALSE  !(choice == 14)
[L3125]  COND FALSE  !(choice == 13)
[L3131]  COND FALSE  !(choice == 12)
[L3137]  COND FALSE  !(choice == 11)
[L3143]  COND FALSE  !(choice == 10)
[L3149]  COND FALSE  !(choice == 9)
[L3155]  COND FALSE  !(choice == 8)
[L3161]  COND FALSE  !(choice == 7)
[L3167]  COND FALSE  !(choice == 6)
[L3173]  COND FALSE  !(choice == 5)
[L3180]  COND FALSE  !(choice == 4)
[L3187]  COND TRUE   choice == 3
[L3188]              gas := gas - 21000;
[L3189]  COND TRUE   gas >= 0
[L3190]              assume _value_s499 >= 0 && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3191]              assume msgvalue_MSG == 0;
[L3192]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s499 == _to_s499 && (_value_s499 > _balances_ZJYB[this][_from_s499] || _value_s499 > _allowed_ZJYB[this][_from_s499][msgsender_MSG])) && _value_s499 >= 0) && _value_s499 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_to_s499] >= 0) && _balances_ZJYB[this][_to_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ZJYB[this][_from_s499] >= 0) && _balances_ZJYB[this][_from_s499] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] >= 0) && _allowed_ZJYB[this][_from_s499][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_ZJYB0 := true;
[L2]                 call_transferFrom_ZJYB0 := false;
[L2]                 revert := revert_hold;
[L665]               havoc __exception;
[L666]               revert := false;
[L667]   COND FALSE  !(__exception)
[L690]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L2146]              __var_9 := null;
[L2147]  COND FALSE  !(!(_to_s499 != null))
[L2151]  COND FALSE  !(!(_balances_ZJYB[this][_from_s499] >= _value_s499 && _value_s499 > 0))
[L2155]  COND FALSE  !(!((_balances_ZJYB[this][_to_s499] + _value_s499) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= _balances_ZJYB[this][_to_s499]))
[L2159]  COND FALSE  !(!(_allowed_ZJYB[this][_from_s499][msgsender_MSG] >= _value_s499))
[L2163]  COND TRUE   DType[this] == ZJYB
[L2164]  CALL        call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L1678]              c_s115 := (a_s115 + b_s115) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1679]  COND TRUE   DType[this] == ZJYB
[L1680]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1706]  COND FALSE  !(!assertion_s128)
[L1680]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, c_s115 >= a_s115 && c_s115 >= b_s115);
[L1681]  COND FALSE  !(revert)
[L1692]              __ret_0_ := c_s115;
[L2164]  RET         call __var_10 := safeAdd~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_to_s499], _value_s499);
[L2165]  COND FALSE  !(revert)
[L2171]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_to_s499];
[L2172]              _balances_ZJYB[this][_to_s499] := __var_10;
[L2173]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_to_s499];
[L2174]  COND TRUE   DType[this] == ZJYB
[L2175]  CALL        call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2175]  RET         call __var_11 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _balances_ZJYB[this][_from_s499], _value_s499);
[L2176]  COND FALSE  !(revert)
[L2182]              sum__balances0[this] := sum__balances0[this] - _balances_ZJYB[this][_from_s499];
[L2183]              _balances_ZJYB[this][_from_s499] := __var_11;
[L2184]              sum__balances0[this] := sum__balances0[this] + _balances_ZJYB[this][_from_s499];
[L2185]  COND TRUE   DType[this] == ZJYB
[L2186]  CALL        call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L1637]  COND TRUE   DType[this] == ZJYB
[L1638]  CALL        call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1706]  COND FALSE  !(!assertion_s128)
[L1638]  RET         call _assert~bool_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, b_s87 <= a_s87);
[L1639]  COND FALSE  !(revert)
[L1650]              __ret_0_ := (a_s87 - b_s87) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2186]  RET         call __var_12 := safeSub~uint256~uint256_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, _allowed_ZJYB[this][_from_s499][msgsender_MSG], _value_s499);
[L2187]  COND FALSE  !(revert)
[L2193]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] - _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2194]              _allowed_ZJYB[this][_from_s499][msgsender_MSG] := __var_12;
[L2195]              sum__allowed1[_from_s499] := sum__allowed1[_from_s499] + _allowed_ZJYB[this][_from_s499][msgsender_MSG];
[L2196]              assert { :EventEmitted "Transfer_ZJYB" } true;
[L2197]              __ret_0_ := true;
[L690]   RET         call __ret_0_ := transferFrom~address~address~uint256_ZJYB__success(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L691]               assume !revert && gas >= 0;
[L3192]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ZJYB(this, msgsender_MSG, msgvalue_MSG, _from_s499, _to_s499, _value_s499);
[L3225]  RET         call CorralChoice_ZJYB(this);

Loop:
[L3225]  CALL        call CorralChoice_ZJYB(this);
[L3072]              havoc msgsender_MSG;
[L3073]              havoc msgvalue_MSG;
[L3074]              havoc choice;
[L3075]              havoc __ret_0_owner;
[L3076]              havoc __ret_0_newOwner;
[L3077]              havoc _newOwner_s171;
[L3078]              havoc __ret_0_name;
[L3079]              havoc __ret_0_symbol;
[L3080]              havoc __ret_0_decimals;
[L3081]              havoc arg576_s0;
[L3082]              havoc arg577_s0;
[L3083]              havoc __ret_0__allowed;
[L3084]              havoc __ret_0_totalSupply;
[L3085]              havoc addr_s262;
[L3086]              havoc __ret_0_balanceOf;
[L3087]              havoc _to_s342;
[L3088]              havoc _value_s342;
[L3089]              havoc __ret_0_transfer;
[L3090]              havoc _value_s397;
[L3091]              havoc __ret_0_burn;
[L3092]              havoc _from_s499;
[L3093]              havoc _to_s499;
[L3094]              havoc _value_s499;
[L3095]              havoc __ret_0_transferFrom;
[L3096]              havoc spender_s535;
[L3097]              havoc value_s535;
[L3098]              havoc __ret_0_approve;
[L3099]              havoc _master_s551;
[L3100]              havoc _spender_s551;
[L3101]              havoc __ret_0_allowance;
[L3102]              havoc tmpNow;
[L3103]              havoc gas;
[L3104]              assume gas > 4000000 && gas <= 8000000;
[L3105]              tmpNow := now;
[L3106]              havoc now;
[L3107]              assume now > tmpNow;
[L3108]              assume msgsender_MSG != null;
[L3109]              assume DType[msgsender_MSG] != SafeMath;
[L3110]              assume DType[msgsender_MSG] != Owned;
[L3111]              assume DType[msgsender_MSG] != ZJYB;
[L3112]              Alloc[msgsender_MSG] := true;
[L3113]  COND TRUE   choice == 15
[L3114]              gas := gas - 21000;
[L3115]  COND FALSE  !(gas >= 0)
[L3225]  RET         call CorralChoice_ZJYB(this);

[2020-11-25 11:02:18,082 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:02:18,082 INFO  L82        PathProgramCache]: Analyzing trace with hash 880676451, now seen corresponding path program 1 times
[2020-11-25 11:02:18,082 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:02:18,094 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:02:18,188 INFO  L134       CoverageAnalysis]: Checked inductivity of 73 backedges. 9 proven. 0 refuted. 0 times theorem prover too weak. 64 trivial. 0 not checked.
[2020-11-25 11:02:18,189 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:02:18,189 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 11:02:18,189 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:02:18,189 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 11:02:18,189 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=84, Unknown=0, NotChecked=0, Total=110
[2020-11-25 11:02:18,189 INFO  L87              Difference]: Start difference. First operand 2088 states and 2275 transitions. cyclomatic complexity: 190 Second operand 11 states.
[2020-11-25 11:02:18,789 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:02:18,789 INFO  L93              Difference]: Finished difference Result 1255 states and 1367 transitions.
[2020-11-25 11:02:18,789 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 11:02:18,790 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1255 states and 1367 transitions.
[2020-11-25 11:02:18,791 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:02:18,791 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1255 states to 0 states and 0 transitions.
[2020-11-25 11:02:18,792 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:02:18,792 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:02:18,792 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:02:18,792 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:02:18,792 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:02:18,792 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:02:18,792 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:02:18,792 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 11:02:18,792 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:02:18,792 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:02:18,792 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:02:18,795 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:02:18 BasicIcfg
[2020-11-25 11:02:18,795 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:02:18,795 INFO  L168              Benchmark]: Toolchain (without parser) took 6116.81 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 542.6 MB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -404.6 MB). Peak memory consumption was 138.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,796 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.22 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,796 INFO  L168              Benchmark]: Boogie Preprocessor took 106.10 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,797 INFO  L168              Benchmark]: UtopiaSpecLang took 55.24 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,797 INFO  L168              Benchmark]: Boogie Printer took 13.41 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,798 INFO  L168              Benchmark]: RCFGBuilder took 690.04 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,798 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.33 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 829.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,798 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1013.94 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.3 MB). Free memory was 829.6 MB in the beginning and 728.8 MB in the end (delta: 100.8 MB). Peak memory consumption was 150.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,799 INFO  L168              Benchmark]: BlockEncodingV2 took 171.27 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 128.5 MB). Free memory was 728.8 MB in the beginning and 1.1 GB in the end (delta: -392.9 MB). Peak memory consumption was 47.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,799 INFO  L168              Benchmark]: BuchiAutomizer took 4021.42 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 364.9 MB). Free memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: -223.4 MB). Peak memory consumption was 141.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:02:18,801 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2972 locations, 5213 edges
  - StatisticsResult: Encoded RCFG
    2883 locations, 4981 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.22 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 106.10 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 55.24 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.41 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 690.04 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.33 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 829.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1013.94 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.3 MB). Free memory was 829.6 MB in the beginning and 728.8 MB in the end (delta: 100.8 MB). Peak memory consumption was 150.1 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 171.27 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 128.5 MB). Free memory was 728.8 MB in the beginning and 1.1 GB in the end (delta: -392.9 MB). Peak memory consumption was 47.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4021.42 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 364.9 MB). Free memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: -223.4 MB). Peak memory consumption was 141.5 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1233 locations, 1604 edges
  - StatisticsResult: BuchiProgram size
    2972 locations, 5213 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.9s and 7 iterations.  TraceHistogramMax:3. Analysis of lassos took 0.5s. Construction of modules took 2.0s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 998 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2370 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 14420 SDtfs, 13711 SDslu, 26733 SDs, 0 SdLazy, 28843 SolverSat, 2109 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ZJY(fail_transferFrom_ZJYB0)0) ==> ( <>(fail_transferFrom_ZJYB0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
