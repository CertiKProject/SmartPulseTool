This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:07:31,353 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:07:31,354 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:07:31,364 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:07:31,364 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:07:31,365 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:07:31,365 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:07:31,367 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:07:31,368 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:07:31,369 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:07:31,370 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:07:31,370 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:07:31,370 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:07:31,371 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:07:31,372 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:07:31,372 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:07:31,373 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:07:31,374 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:07:31,375 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:07:31,376 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:07:31,377 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:07:31,378 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:07:31,379 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:07:31,379 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:07:31,380 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:07:31,380 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:07:31,380 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:07:31,381 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:07:31,381 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:07:31,381 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:07:31,382 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:07:31,382 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:07:31,383 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:07:31,383 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:07:31,384 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:07:31,384 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:07:31,384 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:07:31,385 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:07:31,385 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:07:31,385 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:07:31,386 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:07:31,386 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:07:31,393 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:07:31,394 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:07:31,394 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:07:31,394 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:07:31,395 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:07:31,395 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:07:31,395 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:07:31,395 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:07:31,396 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:07:31,397 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:07:31,397 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:07:31,397 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:07:31,416 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:07:31,426 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:07:31,428 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:07:31,429 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:07:31,430 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:07:31,430 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl
[2020-11-24 20:07:31,431 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl'
[2020-11-24 20:07:31,524 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:07:31,525 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:07:31,526 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:07:31,526 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:07:31,526 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:07:31,542 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,544 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,586 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,587 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,610 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,623 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,633 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,648 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:07:31,649 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:07:31,649 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:07:31,652 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:07:31,655 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/1) ...
[2020-11-24 20:07:31,674 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:07:31,679 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:07:31,687 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:07:31,693 INFO  L636   opiaSpecLangObserver]: Parsed ( _totalSupply_ERC20[this]>=0 && _totalSupply_ERC20[this]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:07:31,695 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==_totalSupply_ERC20[this] && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this]==( old(_balances_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,totalSupply_ERC20>],ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,totalSupply_ERC20>]]]]]]
[2020-11-24 20:07:31,702 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.totalSupply, _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.totalSupply, return == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this] == old(_balances_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:07:31,702 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_totalSupply_ERC200) ==> ( <>AP(success_totalSupply_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:07:31,713 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:07:31 PropertyContainer
[2020-11-24 20:07:31,713 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:07:31,714 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:07:31,714 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:07:31,714 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:07:31,715 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/2) ...
[2020-11-24 20:07:31,715 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:07:31,715 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:07:31,738 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:07:31" (2/2) ...
[2020-11-24 20:07:31,739 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:07:31,739 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:07:31,739 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:07:31,739 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:07:31,740 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/2) ...
[2020-11-24 20:07:31,794 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:07:31,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:07:31,795 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:07:31,796 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:07:31,796 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-24 20:07:31,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-24 20:07:31,796 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 20:07:31,796 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:07:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:07:31,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:07:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:07:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:07:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:07:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:07:31,797 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:07:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:07:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:07:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:07:31,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:07:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:07:31,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:07:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:07:31,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:07:31,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:07:31,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:07:31,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:07:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:07:31,799 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:07:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:07:31,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:07:31,800 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:07:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:07:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:07:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:07:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:07:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:07:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:07:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:07:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:07:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:07:31,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:07:31,801 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:07:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:07:31,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:07:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-24 20:07:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:07:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken
[2020-11-24 20:07:31,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken
[2020-11-24 20:07:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:07:31,802 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:07:31,802 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken
[2020-11-24 20:07:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken
[2020-11-24 20:07:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken
[2020-11-24 20:07:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken
[2020-11-24 20:07:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken
[2020-11-24 20:07:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken
[2020-11-24 20:07:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:07:31,803 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:07:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:07:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:07:31,803 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:07:31,804 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KeepToken
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:07:31,805 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:07:31,806 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:07:31,807 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:07:31,808 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:07:31,809 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__success
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__fail
[2020-11-24 20:07:31,810 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__success
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__fail
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__success
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__success
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:07:31,811 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:07:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:07:31,812 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:07:31,812 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-24 20:07:31,813 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:07:31,814 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:07:31,815 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:07:31,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:07:31,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:07:31,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__fail
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__success
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__fail
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__success
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__success
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:07:31,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__success
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:07:31,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:07:31,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:07:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:07:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:07:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KeepToken
[2020-11-24 20:07:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:07:31,822 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:07:31,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:07:32,119 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:07:32,120 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:07:32,120 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:07:32,690 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:07:32,691 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:07:32,693 INFO  L202        PluginConnector]: Adding new model KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:07:32 BoogieIcfgContainer
[2020-11-24 20:07:32,693 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:07:31" (2/2) ...
[2020-11-24 20:07:32,693 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:07:32,693 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@42e3e872 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:07:32, skipping insertion in model container
[2020-11-24 20:07:32,693 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:07:32,694 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:07:32,694 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:07:32,695 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:07:32,695 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/3) ...
[2020-11-24 20:07:32,696 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1f7cbd57 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:07:32, skipping insertion in model container
[2020-11-24 20:07:32,696 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:07:31" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:07:32,731 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:07:32 NWAContainer
[2020-11-24 20:07:32,731 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:07:32,732 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:07:32,732 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:07:32,732 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:07:32,733 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:07:32" (3/4) ...
[2020-11-24 20:07:32,734 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@44812b4b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:07:32, skipping insertion in model container
[2020-11-24 20:07:32,734 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:07:32" (4/4) ...
[2020-11-24 20:07:32,737 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:07:32,741 INFO  L110   BuchiProductObserver]: Initial RCFG 2278 locations, 3328 edges
[2020-11-24 20:07:32,742 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:07:32,753 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:07:34,445 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:07:34,455 INFO  L110   BuchiProductObserver]: BuchiProgram size 5860 locations, 10879 edges
[2020-11-24 20:07:34,456 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:07:34 BoogieIcfgContainer
[2020-11-24 20:07:34,456 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:07:34,456 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:07:34,456 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:07:34,458 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:07:34,458 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:07:34" (1/1) ...
[2020-11-24 20:07:34,564 INFO  L313           BlockEncoder]: Initial Icfg 5860 locations, 10879 edges
[2020-11-24 20:07:34,564 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:07:34,565 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:07:34,565 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:07:34,565 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:07:34,578 INFO  L70    emoveInfeasibleEdges]: Removed 204 edges and 19 locations because of local infeasibility
[2020-11-24 20:07:34,589 INFO  L70        RemoveSinkStates]: Removed 140 edges and 93 locations by removing sink states
[2020-11-24 20:07:34,603 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:07:34,607 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:07:34,611 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:07:34,612 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:07:34,617 INFO  L313           BlockEncoder]: Encoded RCFG 5724 locations, 10500 edges
[2020-11-24 20:07:34,617 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:07:34 BasicIcfg
[2020-11-24 20:07:34,618 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:07:34,618 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:07:34,618 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:07:34,620 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:07:34,620 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:07:34,620 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:07:31" (1/6) ...
[2020-11-24 20:07:34,622 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:07:34, skipping insertion in model container
[2020-11-24 20:07:34,622 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:07:34,622 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:07:31" (2/6) ...
[2020-11-24 20:07:34,622 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:07:34, skipping insertion in model container
[2020-11-24 20:07:34,622 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:07:34,622 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:07:32" (3/6) ...
[2020-11-24 20:07:34,622 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:07:34, skipping insertion in model container
[2020-11-24 20:07:34,622 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:07:34,622 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:07:32" (4/6) ...
[2020-11-24 20:07:34,622 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:07:34, skipping insertion in model container
[2020-11-24 20:07:34,622 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:07:34,622 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:07:34" (5/6) ...
[2020-11-24 20:07:34,623 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@247bccfa and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:07:34, skipping insertion in model container
[2020-11-24 20:07:34,623 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:07:34,623 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:07:34" (6/6) ...
[2020-11-24 20:07:34,624 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_totalsupply.bpl_BEv2
[2020-11-24 20:07:34,654 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:07:34,654 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:07:34,654 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:07:34,654 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:07:34,654 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:07:34,654 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:07:34,654 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:07:34,654 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:07:34,654 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:07:34,693 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5724 states.
[2020-11-24 20:07:34,750 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:34,750 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:34,750 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:34,757 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:34,757 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:34,757 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:07:34,757 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5724 states.
[2020-11-24 20:07:34,780 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:34,780 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:34,780 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:34,782 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:34,782 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND TRUE   revert
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND FALSE  !(gas >= 0)
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:07:34,794 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:07:34,795 INFO  L82        PathProgramCache]: Analyzing trace with hash -330370792, now seen corresponding path program 1 times
[2020-11-24 20:07:34,799 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:07:34,818 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:07:34,855 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:07:34,857 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:07:34,857 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:07:35,206 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:07:35,214 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:07:35,214 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:07:35,215 INFO  L87              Difference]: Start difference. First operand 5724 states. Second operand 4 states.
[2020-11-24 20:07:35,845 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:07:35,845 INFO  L93              Difference]: Finished difference Result 3764 states and 4649 transitions.
[2020-11-24 20:07:35,846 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:07:35,847 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3764 states and 4649 transitions.
[2020-11-24 20:07:35,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:35,889 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3764 states to 3764 states and 4649 transitions.
[2020-11-24 20:07:35,889 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:07:35,891 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 817
[2020-11-24 20:07:35,892 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3764 states and 4649 transitions.
[2020-11-24 20:07:35,900 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:07:35,900 INFO  L728         BuchiCegarLoop]: Abstraction has 3764 states and 4649 transitions.
[2020-11-24 20:07:35,918 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3764 states and 4649 transitions.
[2020-11-24 20:07:35,974 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3764 to 3764.
[2020-11-24 20:07:35,975 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3764 states.
[2020-11-24 20:07:35,982 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3764 states to 3764 states and 4649 transitions.
[2020-11-24 20:07:35,982 INFO  L751         BuchiCegarLoop]: Abstraction has 3764 states and 4649 transitions.
[2020-11-24 20:07:35,982 INFO  L631         BuchiCegarLoop]: Abstraction has 3764 states and 4649 transitions.
[2020-11-24 20:07:35,982 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:07:35,982 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3764 states and 4649 transitions.
[2020-11-24 20:07:35,990 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:35,990 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:35,990 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:35,992 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:35,992 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND TRUE   revert
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:07:35,997 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:07:35,997 INFO  L82        PathProgramCache]: Analyzing trace with hash 1620852223, now seen corresponding path program 1 times
[2020-11-24 20:07:35,998 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:07:36,008 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:07:36,027 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:07:36,028 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:07:36,028 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:07:36,029 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:07:36,029 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:07:36,029 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:07:36,029 INFO  L87              Difference]: Start difference. First operand 3764 states and 4649 transitions. cyclomatic complexity: 887 Second operand 3 states.
[2020-11-24 20:07:36,130 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:07:36,130 INFO  L93              Difference]: Finished difference Result 4756 states and 5745 transitions.
[2020-11-24 20:07:36,130 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:07:36,130 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4756 states and 5745 transitions.
[2020-11-24 20:07:36,147 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:07:36,167 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4756 states to 4756 states and 5745 transitions.
[2020-11-24 20:07:36,167 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1098
[2020-11-24 20:07:36,168 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1098
[2020-11-24 20:07:36,168 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4756 states and 5745 transitions.
[2020-11-24 20:07:36,173 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:07:36,173 INFO  L728         BuchiCegarLoop]: Abstraction has 4756 states and 5745 transitions.
[2020-11-24 20:07:36,177 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4756 states and 5745 transitions.
[2020-11-24 20:07:36,220 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4756 to 4140.
[2020-11-24 20:07:36,220 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4140 states.
[2020-11-24 20:07:36,226 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4140 states to 4140 states and 4993 transitions.
[2020-11-24 20:07:36,227 INFO  L751         BuchiCegarLoop]: Abstraction has 4140 states and 4993 transitions.
[2020-11-24 20:07:36,227 INFO  L631         BuchiCegarLoop]: Abstraction has 4140 states and 4993 transitions.
[2020-11-24 20:07:36,227 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:07:36,227 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4140 states and 4993 transitions.
[2020-11-24 20:07:36,232 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:36,232 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:36,232 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:36,234 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:36,234 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND TRUE   !(account_s503 != null)
[L3410]              revert := true;
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND TRUE   revert
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:07:36,239 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:07:36,239 INFO  L82        PathProgramCache]: Analyzing trace with hash 1448555304, now seen corresponding path program 1 times
[2020-11-24 20:07:36,240 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:07:36,252 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:07:36,338 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 21 refuted. 0 times theorem prover too weak. 162 trivial. 0 not checked.
[2020-11-24 20:07:36,338 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:07:36,339 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-24 20:07:36,339 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:07:36,339 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 20:07:36,339 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 20:07:36,340 INFO  L87              Difference]: Start difference. First operand 4140 states and 4993 transitions. cyclomatic complexity: 855 Second operand 7 states.
[2020-11-24 20:07:36,403 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:07:36,403 INFO  L93              Difference]: Finished difference Result 4148 states and 5000 transitions.
[2020-11-24 20:07:36,403 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:07:36,403 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4148 states and 5000 transitions.
[2020-11-24 20:07:36,414 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:36,428 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4148 states to 4139 states and 4991 transitions.
[2020-11-24 20:07:36,429 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 937
[2020-11-24 20:07:36,429 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 937
[2020-11-24 20:07:36,429 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4139 states and 4991 transitions.
[2020-11-24 20:07:36,433 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:07:36,433 INFO  L728         BuchiCegarLoop]: Abstraction has 4139 states and 4991 transitions.
[2020-11-24 20:07:36,437 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4139 states and 4991 transitions.
[2020-11-24 20:07:36,470 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4139 to 4139.
[2020-11-24 20:07:36,470 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4139 states.
[2020-11-24 20:07:36,476 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4139 states to 4139 states and 4991 transitions.
[2020-11-24 20:07:36,476 INFO  L751         BuchiCegarLoop]: Abstraction has 4139 states and 4991 transitions.
[2020-11-24 20:07:36,476 INFO  L631         BuchiCegarLoop]: Abstraction has 4139 states and 4991 transitions.
[2020-11-24 20:07:36,476 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:07:36,476 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4139 states and 4991 transitions.
[2020-11-24 20:07:36,482 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:07:36,482 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:36,482 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:36,484 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:36,484 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND FALSE  !(!(account_s503 != null))
[L3413]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND TRUE   !(c_s26 >= a_s26)
[L2427]              revert := true;
[L3413]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3414]  COND TRUE   revert
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND TRUE   revert
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:07:36,487 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:07:36,487 INFO  L82        PathProgramCache]: Analyzing trace with hash 856975283, now seen corresponding path program 1 times
[2020-11-24 20:07:36,488 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:07:36,498 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:07:36,538 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 183 trivial. 0 not checked.
[2020-11-24 20:07:36,538 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:07:36,539 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:07:36,539 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:07:36,539 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:07:36,539 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:07:36,539 INFO  L87              Difference]: Start difference. First operand 4139 states and 4991 transitions. cyclomatic complexity: 854 Second operand 3 states.
[2020-11-24 20:07:36,605 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:07:36,605 INFO  L93              Difference]: Finished difference Result 4749 states and 5557 transitions.
[2020-11-24 20:07:36,605 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:07:36,605 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4749 states and 5557 transitions.
[2020-11-24 20:07:36,616 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:07:36,631 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4749 states to 4462 states and 5207 transitions.
[2020-11-24 20:07:36,631 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1003
[2020-11-24 20:07:36,632 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1036
[2020-11-24 20:07:36,632 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4462 states and 5207 transitions.
[2020-11-24 20:07:36,637 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:07:36,637 INFO  L728         BuchiCegarLoop]: Abstraction has 4462 states and 5207 transitions.
[2020-11-24 20:07:36,640 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4462 states and 5207 transitions.
[2020-11-24 20:07:36,671 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4462 to 4095.
[2020-11-24 20:07:36,671 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4095 states.
[2020-11-24 20:07:36,675 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4095 states to 4095 states and 4748 transitions.
[2020-11-24 20:07:36,676 INFO  L751         BuchiCegarLoop]: Abstraction has 4095 states and 4748 transitions.
[2020-11-24 20:07:36,676 INFO  L631         BuchiCegarLoop]: Abstraction has 4095 states and 4748 transitions.
[2020-11-24 20:07:36,676 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:07:36,676 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4095 states and 4748 transitions.
[2020-11-24 20:07:36,681 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:07:36,681 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:36,681 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:36,683 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:36,683 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND FALSE  !(!(account_s503 != null))
[L3413]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3413]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3414]  COND FALSE  !(revert)
[L3417]              _totalSupply_ERC20[this] := __var_17;
[L3418]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3418]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3419]  COND FALSE  !(revert)
[L3422]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3423]              _balances_ERC20[this][account_s503] := __var_18;
[L3424]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3425]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND FALSE  !(revert)
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND FALSE  !(__exception)
[L371]   CALL        call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2676]              __ret_0_ := _totalSupply_ERC20[this];
[L371]   RET         call __ret_0_ := totalSupply_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L372]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((__ret_0_ == _totalSupply_ERC20[this] && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this] == old(_balances_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L2]                 revert := revert_hold;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:07:36,686 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:07:36,686 INFO  L82        PathProgramCache]: Analyzing trace with hash 1549004625, now seen corresponding path program 1 times
[2020-11-24 20:07:36,687 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:07:36,697 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:07:36,747 INFO  L134       CoverageAnalysis]: Checked inductivity of 188 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 188 trivial. 0 not checked.
[2020-11-24 20:07:36,747 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:07:36,748 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:07:36,748 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:07:36,748 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:07:36,748 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:07:36,748 INFO  L87              Difference]: Start difference. First operand 4095 states and 4748 transitions. cyclomatic complexity: 655 Second operand 4 states.
[2020-11-24 20:07:36,783 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:07:36,783 INFO  L93              Difference]: Finished difference Result 4096 states and 4747 transitions.
[2020-11-24 20:07:36,783 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:07:36,783 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4096 states and 4747 transitions.
[2020-11-24 20:07:36,791 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:07:36,801 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4096 states to 4086 states and 4737 transitions.
[2020-11-24 20:07:36,801 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 975
[2020-11-24 20:07:36,802 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 975
[2020-11-24 20:07:36,802 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4086 states and 4737 transitions.
[2020-11-24 20:07:36,805 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:07:36,806 INFO  L728         BuchiCegarLoop]: Abstraction has 4086 states and 4737 transitions.
[2020-11-24 20:07:36,809 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4086 states and 4737 transitions.
[2020-11-24 20:07:36,840 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4086 to 4084.
[2020-11-24 20:07:36,841 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4084 states.
[2020-11-24 20:07:36,846 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4084 states to 4084 states and 4735 transitions.
[2020-11-24 20:07:36,846 INFO  L751         BuchiCegarLoop]: Abstraction has 4084 states and 4735 transitions.
[2020-11-24 20:07:36,846 INFO  L631         BuchiCegarLoop]: Abstraction has 4084 states and 4735 transitions.
[2020-11-24 20:07:36,846 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:07:36,846 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4084 states and 4735 transitions.
[2020-11-24 20:07:36,852 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:07:36,853 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:07:36,853 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:07:36,855 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:07:36,855 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_totalSupply_ERC200 := false;
[L2]                 call_totalSupply_ERC200 := false;
[L2]     CALL        call main();
[L6168]              assume null == 0;
[L6169]  CALL        call this := FreshRefGenerator__success();
[L2372]              havoc newRef;
[L2373]              assume Alloc[newRef] == false;
[L2374]              Alloc[newRef] := true;
[L2375]              assume newRef != null;
[L6169]  RET         call this := FreshRefGenerator__success();
[L6170]              assume now >= 0;
[L6171]              assume DType[this] == KeepToken;
[L6172]              assume msgvalue_MSG == 0;
[L6173]              gas := gas - 53000;
[L6174]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1368]              havoc __exception;
[L1369]              revert := false;
[L1370]  COND FALSE  !(__exception)
[L1395]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4024]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L4024]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  COND FALSE  !(revert)
[L4028]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L4028]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4029]  COND FALSE  !(revert)
[L4032]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L4032]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4033]  COND FALSE  !(revert)
[L4036]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3808]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L3808]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  COND FALSE  !(revert)
[L3812]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3812]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3813]  COND FALSE  !(revert)
[L3816]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2560]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2545]              assume msgsender_MSG != null;
[L2546]              Balance[this] := 0;
[L2560]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  COND FALSE  !(revert)
[L2654]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  COND FALSE  !(revert)
[L2658]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L2658]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2659]  COND FALSE  !(revert)
[L2662]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]              assume msgsender_MSG != null;
[L2627]              Balance[this] := 0;
[L2628]              _balances_ERC20[this] := zeroRefintArr();
[L2629]              sum__balances0[this] := 0;
[L2630]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2631]              sum__allowances1[this] := 0;
[L2632]              _totalSupply_ERC20[this] := 0;
[L2662]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2663]  COND FALSE  !(revert)
[L3816]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3817]  COND FALSE  !(revert)
[L3820]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3781]              assume msgsender_MSG != null;
[L3782]              Balance[this] := 0;
[L3820]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3821]  COND FALSE  !(revert)
[L4036]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4037]  COND FALSE  !(revert)
[L4040]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3724]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2604]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2589]              assume msgsender_MSG != null;
[L2590]              Balance[this] := 0;
[L2604]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  COND FALSE  !(revert)
[L3724]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3725]  COND FALSE  !(revert)
[L3728]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3699]              assume msgsender_MSG != null;
[L3700]              Balance[this] := 0;
[L3701]              _name_ERC20Detailed[this] := -708534286;
[L3702]              _symbol_ERC20Detailed[this] := -708534286;
[L3703]              _decimals_ERC20Detailed[this] := 0;
[L3705]              _name_ERC20Detailed[this] := name_s650;
[L3706]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3707]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3728]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3729]  COND FALSE  !(revert)
[L4040]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4041]  COND FALSE  !(revert)
[L4044]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3977]              assume msgsender_MSG != null;
[L3978]              Balance[this] := 0;
[L3979]              NAME_KeepToken[this] := 153019343;
[L3980]              SYMBOL_KeepToken[this] := 577946439;
[L3981]              DECIMALS_KeepToken[this] := 18;
[L3982]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3984]  COND TRUE   DType[this] == KeepToken
[L3985]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3408]              __var_16 := null;
[L3409]  COND FALSE  !(!(account_s503 != null))
[L3413]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3413]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3414]  COND FALSE  !(revert)
[L3417]              _totalSupply_ERC20[this] := __var_17;
[L3418]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2425]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2426]  COND FALSE  !(!(c_s26 >= a_s26))
[L2430]              __ret_0_ := c_s26;
[L3418]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3419]  COND FALSE  !(revert)
[L3422]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3423]              _balances_ERC20[this][account_s503] := __var_18;
[L3424]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3425]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3985]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3986]  COND FALSE  !(revert)
[L4044]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4045]  COND FALSE  !(revert)
[L1395]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1396]              assume !revert && gas >= 0;
[L6174]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6175]              assume !revert && gas >= 0;
[L6178]  CALL        call CorralChoice_KeepToken(this);
[L5986]              havoc msgsender_MSG;
[L5987]              havoc msgvalue_MSG;
[L5988]              havoc choice;
[L5989]              havoc __ret_0_totalSupply;
[L5990]              havoc account_s258;
[L5991]              havoc __ret_0_balanceOf;
[L5992]              havoc recipient_s277;
[L5993]              havoc amount_s277;
[L5994]              havoc __ret_0_transfer;
[L5995]              havoc owner_s293;
[L5996]              havoc spender_s293;
[L5997]              havoc __ret_0_allowance;
[L5998]              havoc spender_s312;
[L5999]              havoc amount_s312;
[L6000]              havoc __ret_0_approve;
[L6001]              havoc sender_s348;
[L6002]              havoc recipient_s348;
[L6003]              havoc amount_s348;
[L6004]              havoc __ret_0_transferFrom;
[L6005]              havoc spender_s375;
[L6006]              havoc addedValue_s375;
[L6007]              havoc __ret_0_increaseAllowance;
[L6008]              havoc spender_s403;
[L6009]              havoc subtractedValue_s403;
[L6010]              havoc __ret_0_decreaseAllowance;
[L6011]              havoc name_s650;
[L6012]              havoc symbol_s650;
[L6013]              havoc decimals_s650;
[L6014]              havoc __ret_0_name;
[L6015]              havoc __ret_0_symbol;
[L6016]              havoc __ret_0_decimals;
[L6017]              havoc amount_s691;
[L6018]              havoc account_s704;
[L6019]              havoc amount_s704;
[L6020]              havoc __ret_0_NAME;
[L6021]              havoc __ret_0_SYMBOL;
[L6022]              havoc __ret_0_DECIMALS;
[L6023]              havoc __ret_0_INITIAL_SUPPLY;
[L6024]              havoc _spender_s788;
[L6025]              havoc _value_s788;
[L6026]              havoc _extraData_s788;
[L6027]              havoc success_s788;
[L6028]              havoc tmpNow;
[L6029]              havoc gas;
[L6030]              assume gas > 4000000 && gas <= 8000000;
[L6031]              tmpNow := now;
[L6032]              havoc now;
[L6033]              assume now > tmpNow;
[L6034]              assume msgsender_MSG != null;
[L6035]              assume DType[msgsender_MSG] != SafeMath;
[L6036]              assume DType[msgsender_MSG] != Context;
[L6037]              assume DType[msgsender_MSG] != IERC20;
[L6038]              assume DType[msgsender_MSG] != ERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]              assume DType[msgsender_MSG] != tokenRecipient;
[L6042]              assume DType[msgsender_MSG] != KeepToken;
[L6043]              Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE   choice == 18
[L6045]              gas := gas - 21000;
[L6046]  COND TRUE   gas >= 0
[L6047]              assume msgvalue_MSG == 0;
[L6048]  CALL        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_totalSupply_ERC200 := true;
[L2]                 call_totalSupply_ERC200 := false;
[L2]                 revert := revert_hold;
[L344]               havoc __exception;
[L345]               revert := false;
[L346]   COND TRUE   __exception
[L347]               __tmp__Balance := Balance;
[L348]               __tmp__DType := DType;
[L349]               __tmp__Alloc := Alloc;
[L350]               __tmp__balance_ADDR := balance_ADDR;
[L351]               __tmp__M_Ref_int := M_Ref_int;
[L352]               __tmp__sum__balances0 := sum__balances0;
[L353]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L354]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L355]               __tmp__sum__allowances1 := sum__allowances1;
[L356]               __tmp__Length := Length;
[L357]               __tmp__now := now;
[L358]               __tmp___balances_ERC20 := _balances_ERC20;
[L359]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L360]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L361]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L362]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L363]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L364]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L365]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L366]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L367]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L368]   CALL        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2670]              __ret_0_ := __tmp___totalSupply_ERC20[this];
[L368]   RET         call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L369]               assume revert || gas < 0;
[L6048]  RET         call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6178]  CALL       call CorralChoice_KeepToken(this);
[L5986]             havoc msgsender_MSG;
[L5987]             havoc msgvalue_MSG;
[L5988]             havoc choice;
[L5989]             havoc __ret_0_totalSupply;
[L5990]             havoc account_s258;
[L5991]             havoc __ret_0_balanceOf;
[L5992]             havoc recipient_s277;
[L5993]             havoc amount_s277;
[L5994]             havoc __ret_0_transfer;
[L5995]             havoc owner_s293;
[L5996]             havoc spender_s293;
[L5997]             havoc __ret_0_allowance;
[L5998]             havoc spender_s312;
[L5999]             havoc amount_s312;
[L6000]             havoc __ret_0_approve;
[L6001]             havoc sender_s348;
[L6002]             havoc recipient_s348;
[L6003]             havoc amount_s348;
[L6004]             havoc __ret_0_transferFrom;
[L6005]             havoc spender_s375;
[L6006]             havoc addedValue_s375;
[L6007]             havoc __ret_0_increaseAllowance;
[L6008]             havoc spender_s403;
[L6009]             havoc subtractedValue_s403;
[L6010]             havoc __ret_0_decreaseAllowance;
[L6011]             havoc name_s650;
[L6012]             havoc symbol_s650;
[L6013]             havoc decimals_s650;
[L6014]             havoc __ret_0_name;
[L6015]             havoc __ret_0_symbol;
[L6016]             havoc __ret_0_decimals;
[L6017]             havoc amount_s691;
[L6018]             havoc account_s704;
[L6019]             havoc amount_s704;
[L6020]             havoc __ret_0_NAME;
[L6021]             havoc __ret_0_SYMBOL;
[L6022]             havoc __ret_0_DECIMALS;
[L6023]             havoc __ret_0_INITIAL_SUPPLY;
[L6024]             havoc _spender_s788;
[L6025]             havoc _value_s788;
[L6026]             havoc _extraData_s788;
[L6027]             havoc success_s788;
[L6028]             havoc tmpNow;
[L6029]             havoc gas;
[L6030]             assume gas > 4000000 && gas <= 8000000;
[L6031]             tmpNow := now;
[L6032]             havoc now;
[L6033]             assume now > tmpNow;
[L6034]             assume msgsender_MSG != null;
[L6035]             assume DType[msgsender_MSG] != SafeMath;
[L6036]             assume DType[msgsender_MSG] != Context;
[L6037]             assume DType[msgsender_MSG] != IERC20;
[L6038]             assume DType[msgsender_MSG] != ERC20;
[L6039]             assume DType[msgsender_MSG] != ERC20Detailed;
[L6040]             assume DType[msgsender_MSG] != ERC20Burnable;
[L6041]             assume DType[msgsender_MSG] != tokenRecipient;
[L6042]             assume DType[msgsender_MSG] != KeepToken;
[L6043]             Alloc[msgsender_MSG] := true;
[L6044]  COND TRUE  choice == 18
[L6045]             gas := gas - 21000;
[L6046]  COND TRUE  gas >= 0
[L6047]             assume msgvalue_MSG == 0;
[L6048]  CALL       call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume _totalSupply_ERC20[this] >= 0 && _totalSupply_ERC20[this] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_totalSupply_ERC200 := true;
[L2]                call_totalSupply_ERC200 := false;
[L2]                revert := revert_hold;
[L344]              havoc __exception;
[L345]              revert := false;
[L346]   COND TRUE  __exception
[L347]              __tmp__Balance := Balance;
[L348]              __tmp__DType := DType;
[L349]              __tmp__Alloc := Alloc;
[L350]              __tmp__balance_ADDR := balance_ADDR;
[L351]              __tmp__M_Ref_int := M_Ref_int;
[L352]              __tmp__sum__balances0 := sum__balances0;
[L353]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L354]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L355]              __tmp__sum__allowances1 := sum__allowances1;
[L356]              __tmp__Length := Length;
[L357]              __tmp__now := now;
[L358]              __tmp___balances_ERC20 := _balances_ERC20;
[L359]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L360]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L361]              __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L362]              __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L363]              __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L364]              __tmp__NAME_KeepToken := NAME_KeepToken;
[L365]              __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L366]              __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L367]              __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L368]   CALL       call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2670]             __ret_0_ := __tmp___totalSupply_ERC20[this];
[L368]   RET        call __ret_0_ := totalSupply_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L369]              assume revert || gas < 0;
[L6048]  RET        call __ret_0_totalSupply := totalSupply_ERC20(this, msgsender_MSG, msgvalue_MSG);
[L6178]  RET        call CorralChoice_KeepToken(this);

[2020-11-24 20:07:36,859 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:07:36,859 INFO  L82        PathProgramCache]: Analyzing trace with hash 799682079, now seen corresponding path program 1 times
[2020-11-24 20:07:36,860 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:07:36,873 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:07:36,945 INFO  L134       CoverageAnalysis]: Checked inductivity of 188 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 188 trivial. 0 not checked.
[2020-11-24 20:07:36,946 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:07:36,946 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-24 20:07:36,946 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:07:36,946 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-24 20:07:36,947 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-24 20:07:36,947 INFO  L87              Difference]: Start difference. First operand 4084 states and 4735 transitions. cyclomatic complexity: 653 Second operand 5 states.
[2020-11-24 20:07:37,228 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:07:37,228 INFO  L93              Difference]: Finished difference Result 2548 states and 2911 transitions.
[2020-11-24 20:07:37,228 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:07:37,228 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2548 states and 2911 transitions.
[2020-11-24 20:07:37,233 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:07:37,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2548 states to 0 states and 0 transitions.
[2020-11-24 20:07:37,233 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-24 20:07:37,233 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-24 20:07:37,233 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-24 20:07:37,233 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:07:37,233 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:07:37,234 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:07:37,234 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-24 20:07:37,234 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-24 20:07:37,234 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-24 20:07:37,234 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-24 20:07:37,234 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-24 20:07:37,237 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:07:37 BasicIcfg
[2020-11-24 20:07:37,237 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:07:37,237 INFO  L168              Benchmark]: Toolchain (without parser) took 5712.76 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 628.6 MB). Free memory was 929.8 MB in the beginning and 1.3 GB in the end (delta: -325.3 MB). Peak memory consumption was 303.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,238 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,238 INFO  L168              Benchmark]: Boogie Preprocessor took 122.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,239 INFO  L168              Benchmark]: UtopiaSpecLang took 64.75 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,239 INFO  L168              Benchmark]: Boogie Printer took 25.02 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,239 INFO  L168              Benchmark]: RCFGBuilder took 954.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.3 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -126.6 MB). Peak memory consumption was 196.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,239 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.93 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 13.3 MB). Peak memory consumption was 13.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,240 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1724.21 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 154.1 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -51.2 MB). Peak memory consumption was 540.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,240 INFO  L168              Benchmark]: BlockEncodingV2 took 161.41 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 975.9 MB in the end (delta: 97.0 MB). Peak memory consumption was 97.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,241 INFO  L168              Benchmark]: BuchiAutomizer took 2619.09 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 404.2 MB). Free memory was 975.9 MB in the beginning and 1.3 GB in the end (delta: -279.2 MB). Peak memory consumption was 125.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:07:37,243 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5860 locations, 10879 edges
  - StatisticsResult: Encoded RCFG
    5724 locations, 10500 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 122.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.75 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 25.02 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 954.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.3 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -126.6 MB). Peak memory consumption was 196.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.93 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 13.3 MB). Peak memory consumption was 13.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1724.21 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 154.1 MB). Free memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: -51.2 MB). Peak memory consumption was 540.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 161.41 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 975.9 MB in the end (delta: 97.0 MB). Peak memory consumption was 97.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2619.09 ms. Allocated memory was 1.3 GB in the beginning and 1.7 GB in the end (delta: 404.2 MB). Free memory was 975.9 MB in the beginning and 1.3 GB in the end (delta: -279.2 MB). Peak memory consumption was 125.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2278 locations, 3328 edges
  - StatisticsResult: BuchiProgram size
    5860 locations, 10879 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.5s and 7 iterations.  TraceHistogramMax:5. Analysis of lassos took 0.7s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 985 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4140 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 25728 SDtfs, 13749 SDslu, 42248 SDs, 0 SdLazy, 3481 SolverSat, 3465 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_totalSupply_ERC200) ==> ( <>(success_totalSupply_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
