This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:11:48,331 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:11:48,333 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:11:48,345 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:11:48,345 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:11:48,346 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:11:48,347 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:11:48,348 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:11:48,350 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:11:48,350 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:11:48,351 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:11:48,351 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:11:48,352 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:11:48,353 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:11:48,354 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:11:48,354 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:11:48,355 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:11:48,356 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:11:48,358 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:11:48,359 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:11:48,359 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:11:48,360 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:11:48,362 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:11:48,362 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:11:48,362 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:11:48,363 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:11:48,363 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:11:48,364 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:11:48,364 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:11:48,364 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:11:48,364 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:11:48,365 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:11:48,365 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:11:48,366 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:11:48,367 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:11:48,367 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:11:48,367 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:11:48,367 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:11:48,368 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:11:48,368 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:11:48,369 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:11:48,369 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:11:48,377 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:11:48,377 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:11:48,378 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:11:48,378 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:11:48,378 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:11:48,378 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:11:48,378 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:11:48,378 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:11:48,378 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:11:48,379 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:11:48,379 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:11:48,379 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:11:48,380 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:11:48,380 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:11:48,380 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:11:48,380 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:11:48,380 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:11:48,380 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:11:48,380 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:11:48,403 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:11:48,415 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:11:48,418 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:11:48,419 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:11:48,419 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:11:48,420 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl
[2020-11-25 16:11:48,420 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl'
[2020-11-25 16:11:48,527 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:11:48,528 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:11:48,528 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:11:48,528 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:11:48,528 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:11:48,545 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,547 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,592 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,593 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,623 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,637 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,648 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,663 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:11:48,663 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:11:48,664 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:11:48,666 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:11:48,670 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/1) ...
[2020-11-25 16:11:48,689 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(EXEToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(EXEToken.transferFrom)))
[2020-11-25 16:11:48,695 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(EXEToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(EXEToken.transferFrom)))
[2020-11-25 16:11:48,703 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(EXEToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(EXEToken.transferFrom)))
[2020-11-25 16:11:48,716 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( sender_s1113==recipient_s1113 && ( amount_s1113>_balances_ERC20[this][sender_s1113] || amount_s1113>_allowed_ERC20[this][sender_s1113][msg.sender] ) ) && amount_s1113>=0 ) && amount_s1113<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s1113]>=0 ) && _balances_ERC20[this][recipient_s1113]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s1113]>=0 ) && _balances_ERC20[this][sender_s1113]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][sender_s1113][msg.sender]>=0 ) && _allowed_ERC20[this][sender_s1113][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>],IdentifierExpression[recipient_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[amount_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[amount_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[recipient_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[sender_s1113,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_EXEToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 16:11:48,726 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(EXEToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(EXEToken.transferFrom)))
[2020-11-25 16:11:48,727 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_EXEToken0) ==> ( <>AP(fail_transferFrom_EXEToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:11:48,740 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:11:48 PropertyContainer
[2020-11-25 16:11:48,740 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:11:48,740 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:11:48,741 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:11:48,741 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:11:48,742 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/2) ...
[2020-11-25 16:11:48,742 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:11:48,742 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:11:48,762 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:11:48" (2/2) ...
[2020-11-25 16:11:48,762 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:11:48,762 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:11:48,762 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:11:48,763 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:11:48,763 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/2) ...
[2020-11-25 16:11:48,815 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:11:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:11:48,816 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 16:11:48,816 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 16:11:48,817 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 16:11:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 16:11:48,817 INFO  L130     BoogieDeclarations]: Found specification of procedure _isOwner_Ownable__success
[2020-11-25 16:11:48,817 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 16:11:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 16:11:48,817 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 16:11:48,817 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:11:48,817 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 16:11:48,817 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 16:11:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 16:11:48,818 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 16:11:48,818 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 16:11:48,819 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 16:11:48,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:11:48,819 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 16:11:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 16:11:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 16:11:48,820 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 16:11:48,820 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 16:11:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 16:11:48,821 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 16:11:48,821 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 16:11:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 16:11:48,821 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 16:11:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 16:11:48,821 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 16:11:48,821 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 16:11:48,821 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20Burnable__success
[2020-11-25 16:11:48,821 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable_NoBaseCtor__success
[2020-11-25 16:11:48,822 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable
[2020-11-25 16:11:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable
[2020-11-25 16:11:48,822 INFO  L130     BoogieDeclarations]: Found specification of procedure stop_Stoppable
[2020-11-25 16:11:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure stop_Stoppable
[2020-11-25 16:11:48,822 INFO  L130     BoogieDeclarations]: Found specification of procedure start_Stoppable
[2020-11-25 16:11:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure start_Stoppable
[2020-11-25 16:11:48,822 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_Stoppable
[2020-11-25 16:11:48,822 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_Stoppable
[2020-11-25 16:11:48,822 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken_NoBaseCtor__success
[2020-11-25 16:11:48,822 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken
[2020-11-25 16:11:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken
[2020-11-25 16:11:48,823 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_EXEToken__success
[2020-11-25 16:11:48,823 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_EXEToken
[2020-11-25 16:11:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_EXEToken
[2020-11-25 16:11:48,823 INFO  L130     BoogieDeclarations]: Found specification of procedure setLock~address~uint256~uint256_EXEToken
[2020-11-25 16:11:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLock~address~uint256~uint256_EXEToken
[2020-11-25 16:11:48,823 INFO  L130     BoogieDeclarations]: Found specification of procedure getLock~address_EXEToken
[2020-11-25 16:11:48,823 INFO  L138     BoogieDeclarations]: Found implementation of procedure getLock~address_EXEToken
[2020-11-25 16:11:48,823 INFO  L130     BoogieDeclarations]: Found specification of procedure _isLocked~address~uint256_EXEToken__success
[2020-11-25 16:11:48,823 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EXEToken
[2020-11-25 16:11:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_EXEToken
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EXEToken
[2020-11-25 16:11:48,824 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_EXEToken
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure enabled_pre__success
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:11:48,824 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Stoppable
[2020-11-25 16:11:48,825 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Stoppable
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_EXEToken
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,826 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure _isOwner_Ownable__fail
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:11:48,827 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 16:11:48,828 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:11:48,829 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 16:11:48,830 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 16:11:48,831 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20Burnable__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable_NoBaseCtor__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable__success
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure Stoppable_Stoppable__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure stop_Stoppable__success
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure stop_Stoppable__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure start_Stoppable__success
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure start_Stoppable__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_Stoppable__success
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure stopped_Stoppable__fail
[2020-11-25 16:11:48,832 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken_NoBaseCtor__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken__success
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure EXEToken_EXEToken__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_EXEToken__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_EXEToken__success
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure setLock~address~uint256~uint256_EXEToken__success
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure setLock~address~uint256~uint256_EXEToken__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure getLock~address_EXEToken__success
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure getLock~address_EXEToken__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure _isLocked~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,833 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EXEToken__success
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EXEToken__success
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:11:48,834 INFO  L130     BoogieDeclarations]: Found specification of procedure enabled_pre__fail
[2020-11-25 16:11:48,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:11:48,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:11:48,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:11:48,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:11:48,834 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 16:11:48,835 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isOwner_Ownable__fail
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isOwner_Ownable__success
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 16:11:48,836 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 16:11:48,837 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 16:11:48,838 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 16:11:48,839 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 16:11:48,840 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20Burnable__fail
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20Burnable__success
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable_NoBaseCtor__fail
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable_NoBaseCtor__success
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable__fail
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure Stoppable_Stoppable__success
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure stop_Stoppable__fail
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure stop_Stoppable__success
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure start_Stoppable__fail
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure start_Stoppable__success
[2020-11-25 16:11:48,841 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_Stoppable__fail
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopped_Stoppable__success
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken_NoBaseCtor__fail
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken_NoBaseCtor__success
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken__fail
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure EXEToken_EXEToken__success
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_EXEToken__fail
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_EXEToken__success
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_EXEToken__success
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLock~address~uint256~uint256_EXEToken__fail
[2020-11-25 16:11:48,842 INFO  L138     BoogieDeclarations]: Found implementation of procedure setLock~address~uint256~uint256_EXEToken__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure getLock~address_EXEToken__fail
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure getLock~address_EXEToken__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isLocked~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure _isLocked~address~uint256_EXEToken__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_EXEToken__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_EXEToken__fail
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_EXEToken__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:11:48,843 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure enabled_pre__fail
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure enabled_pre__success
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 16:11:48,844 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Stoppable
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Stoppable
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_EXEToken
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:11:48,845 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:11:48,845 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:11:49,578 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:11:49,579 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:11:49,780 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:11:49,780 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 16:11:49,783 INFO  L202        PluginConnector]: Adding new model EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:11:49 BoogieIcfgContainer
[2020-11-25 16:11:49,783 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:11:48" (2/2) ...
[2020-11-25 16:11:49,783 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:11:49,783 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@8078a8c and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:11:49, skipping insertion in model container
[2020-11-25 16:11:49,783 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:11:49,783 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:11:49,783 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:11:49,785 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:11:49,785 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/3) ...
[2020-11-25 16:11:49,785 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1c04d284 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:11:49, skipping insertion in model container
[2020-11-25 16:11:49,785 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:11:48" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:11:49,825 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:11:49 NWAContainer
[2020-11-25 16:11:49,826 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:11:49,826 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:11:49,826 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:11:49,826 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:11:49,827 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:11:49" (3/4) ...
[2020-11-25 16:11:49,828 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@79f082fc and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:11:49, skipping insertion in model container
[2020-11-25 16:11:49,828 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:11:49" (4/4) ...
[2020-11-25 16:11:49,831 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:11:49,836 INFO  L110   BuchiProductObserver]: Initial RCFG 2511 locations, 3418 edges
[2020-11-25 16:11:49,836 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:11:49,848 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:11:51,610 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:11:51,618 INFO  L110   BuchiProductObserver]: BuchiProgram size 6228 locations, 11157 edges
[2020-11-25 16:11:51,618 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:11:51 BoogieIcfgContainer
[2020-11-25 16:11:51,618 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:11:51,618 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:11:51,618 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:11:51,620 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:11:51,620 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:11:51" (1/1) ...
[2020-11-25 16:11:51,734 INFO  L313           BlockEncoder]: Initial Icfg 6228 locations, 11157 edges
[2020-11-25 16:11:51,734 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:11:51,735 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:11:51,735 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:11:51,735 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:11:51,748 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 19 locations because of local infeasibility
[2020-11-25 16:11:51,758 INFO  L70        RemoveSinkStates]: Removed 130 edges and 78 locations by removing sink states
[2020-11-25 16:11:51,769 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:11:51,773 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:11:51,776 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:11:51,777 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:11:51,780 INFO  L313           BlockEncoder]: Encoded RCFG 6097 locations, 10818 edges
[2020-11-25 16:11:51,780 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:11:51 BasicIcfg
[2020-11-25 16:11:51,780 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:11:51,781 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:11:51,781 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:11:51,782 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:11:51,783 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:11:51,783 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:11:48" (1/6) ...
[2020-11-25 16:11:51,784 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55849787 and model type EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:11:51, skipping insertion in model container
[2020-11-25 16:11:51,784 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:11:51,784 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:11:48" (2/6) ...
[2020-11-25 16:11:51,784 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55849787 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:11:51, skipping insertion in model container
[2020-11-25 16:11:51,784 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:11:51,784 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:11:49" (3/6) ...
[2020-11-25 16:11:51,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55849787 and model type EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:11:51, skipping insertion in model container
[2020-11-25 16:11:51,785 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:11:51,785 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:11:49" (4/6) ...
[2020-11-25 16:11:51,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55849787 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:11:51, skipping insertion in model container
[2020-11-25 16:11:51,785 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:11:51,785 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:11:51" (5/6) ...
[2020-11-25 16:11:51,785 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55849787 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:11:51, skipping insertion in model container
[2020-11-25 16:11:51,785 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:11:51,785 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:11:51" (6/6) ...
[2020-11-25 16:11:51,786 INFO  L404   chiAutomizerObserver]: Analyzing ICFG EXEToken_0x412d397ddca07d753e3e0c61e367fb1b474b3e7d_transferfrom-self-fail.bpl_BEv2
[2020-11-25 16:11:51,812 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:11:51,812 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:11:51,812 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:11:51,812 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:11:51,812 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:11:51,813 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:11:51,813 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:11:51,813 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:11:51,813 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:11:51,851 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6097 states.
[2020-11-25 16:11:51,902 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:11:51,903 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:11:51,904 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:11:51,914 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:51,915 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:51,915 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:11:51,915 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6097 states.
[2020-11-25 16:11:51,944 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:11:51,944 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:11:51,944 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:11:51,946 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:51,946 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_EXEToken0 := false;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]     CALL        call main();
[L7037]              assume null == 0;
[L7038]  CALL        call this := FreshRefGenerator__success();
[L3028]              havoc newRef;
[L3029]              assume Alloc[newRef] == false;
[L3030]              Alloc[newRef] := true;
[L3031]              assume newRef != null;
[L7038]  RET         call this := FreshRefGenerator__success();
[L7039]              assume now >= 0;
[L7040]              assume DType[this] == EXEToken;
[L7041]              assume msgvalue_MSG == 0;
[L7042]              gas := gas - 53000;
[L7043]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1769]              havoc __exception;
[L1770]              revert := false;
[L1771]  COND FALSE  !(__exception)
[L1798]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4314]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND TRUE   revert
[L4314]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   revert
[L1798]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1799]              assume !revert && gas >= 0;
[L7043]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7044]              assume !revert && gas >= 0;

Loop:
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND TRUE   choice == 21
[L6890]              gas := gas - 21000;
[L6891]  COND FALSE  !(gas >= 0)
[L7047]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:11:51,968 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:11:51,968 INFO  L82        PathProgramCache]: Analyzing trace with hash 1057475993, now seen corresponding path program 1 times
[2020-11-25 16:11:51,974 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:11:51,996 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:11:52,027 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:11:52,029 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:11:52,029 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:11:52,400 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:11:52,409 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:11:52,409 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:11:52,411 INFO  L87              Difference]: Start difference. First operand 6097 states. Second operand 3 states.
[2020-11-25 16:11:52,715 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:11:52,715 INFO  L93              Difference]: Finished difference Result 3750 states and 4316 transitions.
[2020-11-25 16:11:52,716 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:11:52,717 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3750 states and 4316 transitions.
[2020-11-25 16:11:52,736 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:11:52,766 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3750 states to 3750 states and 4316 transitions.
[2020-11-25 16:11:52,767 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 16:11:52,769 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 828
[2020-11-25 16:11:52,770 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3750 states and 4316 transitions.
[2020-11-25 16:11:52,778 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:11:52,778 INFO  L728         BuchiCegarLoop]: Abstraction has 3750 states and 4316 transitions.
[2020-11-25 16:11:52,793 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3750 states and 4316 transitions.
[2020-11-25 16:11:52,849 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3750 to 3750.
[2020-11-25 16:11:52,849 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3750 states.
[2020-11-25 16:11:52,856 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3750 states to 3750 states and 4316 transitions.
[2020-11-25 16:11:52,857 INFO  L751         BuchiCegarLoop]: Abstraction has 3750 states and 4316 transitions.
[2020-11-25 16:11:52,857 INFO  L631         BuchiCegarLoop]: Abstraction has 3750 states and 4316 transitions.
[2020-11-25 16:11:52,857 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:11:52,857 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3750 states and 4316 transitions.
[2020-11-25 16:11:52,866 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:11:52,866 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:11:52,866 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:11:52,868 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:52,868 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_EXEToken0 := false;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]     CALL        call main();
[L7037]              assume null == 0;
[L7038]  CALL        call this := FreshRefGenerator__success();
[L3028]              havoc newRef;
[L3029]              assume Alloc[newRef] == false;
[L3030]              Alloc[newRef] := true;
[L3031]              assume newRef != null;
[L7038]  RET         call this := FreshRefGenerator__success();
[L7039]              assume now >= 0;
[L7040]              assume DType[this] == EXEToken;
[L7041]              assume msgvalue_MSG == 0;
[L7042]              gas := gas - 53000;
[L7043]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1769]              havoc __exception;
[L1770]              revert := false;
[L1771]  COND FALSE  !(__exception)
[L1798]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4314]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4314]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND TRUE   revert
[L1798]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1799]              assume !revert && gas >= 0;
[L7043]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7044]              assume !revert && gas >= 0;
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND FALSE  !(!!stopped_Stoppable[this])
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND TRUE   revert
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND FALSE  !(!!stopped_Stoppable[this])
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND TRUE   revert
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:11:52,872 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:11:52,872 INFO  L82        PathProgramCache]: Analyzing trace with hash 1714052405, now seen corresponding path program 1 times
[2020-11-25 16:11:52,873 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:11:52,884 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:11:52,906 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:11:52,906 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:11:52,906 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:11:52,907 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:11:52,907 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:11:52,907 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:11:52,907 INFO  L87              Difference]: Start difference. First operand 3750 states and 4316 transitions. cyclomatic complexity: 568 Second operand 3 states.
[2020-11-25 16:11:53,003 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:11:53,003 INFO  L93              Difference]: Finished difference Result 4907 states and 5669 transitions.
[2020-11-25 16:11:53,003 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:11:53,003 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4907 states and 5669 transitions.
[2020-11-25 16:11:53,018 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:11:53,036 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4907 states to 4907 states and 5669 transitions.
[2020-11-25 16:11:53,036 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1152
[2020-11-25 16:11:53,037 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1152
[2020-11-25 16:11:53,037 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4907 states and 5669 transitions.
[2020-11-25 16:11:53,044 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:11:53,044 INFO  L728         BuchiCegarLoop]: Abstraction has 4907 states and 5669 transitions.
[2020-11-25 16:11:53,048 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4907 states and 5669 transitions.
[2020-11-25 16:11:53,087 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4907 to 4350.
[2020-11-25 16:11:53,087 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4350 states.
[2020-11-25 16:11:53,091 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4350 states to 4350 states and 5001 transitions.
[2020-11-25 16:11:53,092 INFO  L751         BuchiCegarLoop]: Abstraction has 4350 states and 5001 transitions.
[2020-11-25 16:11:53,092 INFO  L631         BuchiCegarLoop]: Abstraction has 4350 states and 5001 transitions.
[2020-11-25 16:11:53,092 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:11:53,092 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4350 states and 5001 transitions.
[2020-11-25 16:11:53,097 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:11:53,097 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:11:53,097 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:11:53,100 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:53,100 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_EXEToken0 := false;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]     CALL        call main();
[L7037]              assume null == 0;
[L7038]  CALL        call this := FreshRefGenerator__success();
[L3028]              havoc newRef;
[L3029]              assume Alloc[newRef] == false;
[L3030]              Alloc[newRef] := true;
[L3031]              assume newRef != null;
[L7038]  RET         call this := FreshRefGenerator__success();
[L7039]              assume now >= 0;
[L7040]              assume DType[this] == EXEToken;
[L7041]              assume msgvalue_MSG == 0;
[L7042]              gas := gas - 53000;
[L7043]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1769]              havoc __exception;
[L1770]              revert := false;
[L1771]  COND FALSE  !(__exception)
[L1798]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4314]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4314]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(revert)
[L4318]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3926]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3926]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3927]  COND FALSE  !(revert)
[L3930]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3901]              assume msgsender_MSG != null;
[L3902]              Balance[this] := 0;
[L3903]              _name_ERC20Detailed[this] := 427332508;
[L3904]              _symbol_ERC20Detailed[this] := 427332508;
[L3905]              _decimals_ERC20Detailed[this] := 0;
[L3907]              _name_ERC20Detailed[this] := name_s778;
[L3908]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3909]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3930]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3931]  COND FALSE  !(revert)
[L4318]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4319]  COND FALSE  !(revert)
[L4322]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3397]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3373]              assume msgsender_MSG != null;
[L3374]              Balance[this] := 0;
[L3375]              _balances_ERC20[this] := zeroRefintArr();
[L3376]              sum__balances0[this] := 0;
[L3377]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3378]              sum__allowed1[this] := 0;
[L3379]              _totalSupply_ERC20[this] := 0;
[L3401]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L4322]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(revert)
[L4326]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4006]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  COND FALSE  !(revert)
[L4010]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3397]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3373]              assume msgsender_MSG != null;
[L3374]              Balance[this] := 0;
[L3375]              _balances_ERC20[this] := zeroRefintArr();
[L3376]              sum__balances0[this] := 0;
[L3377]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3378]              sum__allowed1[this] := 0;
[L3379]              _totalSupply_ERC20[this] := 0;
[L3401]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L4010]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4011]  COND FALSE  !(revert)
[L4014]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3983]              assume msgsender_MSG != null;
[L3984]              Balance[this] := 0;
[L4014]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4015]  COND FALSE  !(revert)
[L4326]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4327]  COND FALSE  !(revert)
[L4330]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3220]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3203]              assume msgsender_MSG != null;
[L3204]              Balance[this] := 0;
[L3205]              _owner_Ownable[this] := null;
[L3207]              _owner_Ownable[this] := msgsender_MSG;
[L3220]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  COND FALSE  !(revert)
[L4330]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3220]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3203]              assume msgsender_MSG != null;
[L3204]              Balance[this] := 0;
[L3205]              _owner_Ownable[this] := null;
[L3207]              _owner_Ownable[this] := msgsender_MSG;
[L3220]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  COND FALSE  !(revert)
[L4156]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  COND FALSE  !(revert)
[L4160]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4136]              assume msgsender_MSG != null;
[L4137]              Balance[this] := 0;
[L4138]              stopped_Stoppable[this] := false;
[L4160]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4161]  COND FALSE  !(revert)
[L4334]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4250]              assume msgsender_MSG != null;
[L4251]              Balance[this] := 0;
[L4252]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4253]              sum__lockTimes2[this] := 0;
[L4254]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4255]              sum__lockAmounts3[this] := 0;
[L4257]  COND TRUE   DType[this] == EXEToken
[L4258]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3234]              __ret_0_ := _owner_Ownable[this];
[L4258]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]  COND FALSE  !(revert)
[L4265]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4266]  COND TRUE   DType[this] == EXEToken
[L4267]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3739]              __var_15 := null;
[L3740]  COND TRUE   !(account_s654 != null)
[L3741]              revert := true;
[L4267]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4268]  COND FALSE  !(revert)
[L4338]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4339]  COND FALSE  !(revert)
[L1798]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1799]              assume !revert && gas >= 0;
[L7043]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7044]              assume !revert && gas >= 0;
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND TRUE   !!stopped_Stoppable[this]
[L6068]              revert := true;
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND TRUE   revert
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND TRUE   !!stopped_Stoppable[this]
[L6068]              revert := true;
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND TRUE   revert
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:11:53,104 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:11:53,105 INFO  L82        PathProgramCache]: Analyzing trace with hash -308646277, now seen corresponding path program 1 times
[2020-11-25 16:11:53,105 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:11:53,120 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:11:53,194 INFO  L134       CoverageAnalysis]: Checked inductivity of 131 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 131 trivial. 0 not checked.
[2020-11-25 16:11:53,194 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:11:53,194 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 16:11:53,195 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:11:53,195 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 16:11:53,195 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 16:11:53,195 INFO  L87              Difference]: Start difference. First operand 4350 states and 5001 transitions. cyclomatic complexity: 653 Second operand 3 states.
[2020-11-25 16:11:53,274 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:11:53,274 INFO  L93              Difference]: Finished difference Result 4910 states and 5501 transitions.
[2020-11-25 16:11:53,274 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 16:11:53,274 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4910 states and 5501 transitions.
[2020-11-25 16:11:53,288 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:11:53,308 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4910 states to 4556 states and 5083 transitions.
[2020-11-25 16:11:53,308 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1025
[2020-11-25 16:11:53,309 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1055
[2020-11-25 16:11:53,309 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4556 states and 5083 transitions.
[2020-11-25 16:11:53,313 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:11:53,313 INFO  L728         BuchiCegarLoop]: Abstraction has 4556 states and 5083 transitions.
[2020-11-25 16:11:53,318 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4556 states and 5083 transitions.
[2020-11-25 16:11:53,366 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4556 to 4108.
[2020-11-25 16:11:53,366 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4108 states.
[2020-11-25 16:11:53,372 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4108 states to 4108 states and 4524 transitions.
[2020-11-25 16:11:53,372 INFO  L751         BuchiCegarLoop]: Abstraction has 4108 states and 4524 transitions.
[2020-11-25 16:11:53,372 INFO  L631         BuchiCegarLoop]: Abstraction has 4108 states and 4524 transitions.
[2020-11-25 16:11:53,372 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:11:53,372 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4108 states and 4524 transitions.
[2020-11-25 16:11:53,377 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:11:53,377 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:11:53,377 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:11:53,380 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:53,381 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_EXEToken0 := false;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]     CALL        call main();
[L7037]              assume null == 0;
[L7038]  CALL        call this := FreshRefGenerator__success();
[L3028]              havoc newRef;
[L3029]              assume Alloc[newRef] == false;
[L3030]              Alloc[newRef] := true;
[L3031]              assume newRef != null;
[L7038]  RET         call this := FreshRefGenerator__success();
[L7039]              assume now >= 0;
[L7040]              assume DType[this] == EXEToken;
[L7041]              assume msgvalue_MSG == 0;
[L7042]              gas := gas - 53000;
[L7043]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1769]              havoc __exception;
[L1770]              revert := false;
[L1771]  COND FALSE  !(__exception)
[L1798]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4314]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4314]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(revert)
[L4318]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3926]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3926]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3927]  COND FALSE  !(revert)
[L3930]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3901]              assume msgsender_MSG != null;
[L3902]              Balance[this] := 0;
[L3903]              _name_ERC20Detailed[this] := 427332508;
[L3904]              _symbol_ERC20Detailed[this] := 427332508;
[L3905]              _decimals_ERC20Detailed[this] := 0;
[L3907]              _name_ERC20Detailed[this] := name_s778;
[L3908]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3909]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3930]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3931]  COND FALSE  !(revert)
[L4318]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4319]  COND FALSE  !(revert)
[L4322]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3397]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3373]              assume msgsender_MSG != null;
[L3374]              Balance[this] := 0;
[L3375]              _balances_ERC20[this] := zeroRefintArr();
[L3376]              sum__balances0[this] := 0;
[L3377]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3378]              sum__allowed1[this] := 0;
[L3379]              _totalSupply_ERC20[this] := 0;
[L3401]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L4322]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(revert)
[L4326]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4006]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  COND FALSE  !(revert)
[L4010]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3397]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3373]              assume msgsender_MSG != null;
[L3374]              Balance[this] := 0;
[L3375]              _balances_ERC20[this] := zeroRefintArr();
[L3376]              sum__balances0[this] := 0;
[L3377]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3378]              sum__allowed1[this] := 0;
[L3379]              _totalSupply_ERC20[this] := 0;
[L3401]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L4010]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4011]  COND FALSE  !(revert)
[L4014]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3983]              assume msgsender_MSG != null;
[L3984]              Balance[this] := 0;
[L4014]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4015]  COND FALSE  !(revert)
[L4326]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4327]  COND FALSE  !(revert)
[L4330]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3220]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3203]              assume msgsender_MSG != null;
[L3204]              Balance[this] := 0;
[L3205]              _owner_Ownable[this] := null;
[L3207]              _owner_Ownable[this] := msgsender_MSG;
[L3220]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  COND FALSE  !(revert)
[L4330]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3220]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3203]              assume msgsender_MSG != null;
[L3204]              Balance[this] := 0;
[L3205]              _owner_Ownable[this] := null;
[L3207]              _owner_Ownable[this] := msgsender_MSG;
[L3220]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  COND FALSE  !(revert)
[L4156]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  COND FALSE  !(revert)
[L4160]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4136]              assume msgsender_MSG != null;
[L4137]              Balance[this] := 0;
[L4138]              stopped_Stoppable[this] := false;
[L4160]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4161]  COND FALSE  !(revert)
[L4334]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4250]              assume msgsender_MSG != null;
[L4251]              Balance[this] := 0;
[L4252]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4253]              sum__lockTimes2[this] := 0;
[L4254]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4255]              sum__lockAmounts3[this] := 0;
[L4257]  COND TRUE   DType[this] == EXEToken
[L4258]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3234]              __ret_0_ := _owner_Ownable[this];
[L4258]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]  COND FALSE  !(revert)
[L4265]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4266]  COND TRUE   DType[this] == EXEToken
[L4267]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3739]              __var_15 := null;
[L3740]  COND FALSE  !(!(account_s654 != null))
[L3744]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3744]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3745]  COND FALSE  !(revert)
[L3748]              _totalSupply_ERC20[this] := __var_16;
[L3749]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3749]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3750]  COND FALSE  !(revert)
[L3753]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3754]              _balances_ERC20[this][account_s654] := __var_17;
[L3755]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3756]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4267]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4268]  COND FALSE  !(revert)
[L4338]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4339]  COND FALSE  !(revert)
[L1798]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1799]              assume !revert && gas >= 0;
[L7043]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7044]              assume !revert && gas >= 0;
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND FALSE  !(!!stopped_Stoppable[this])
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND FALSE  !(revert)
[L4599]  CALL        call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4479]  COND TRUE   DType[this] == EXEToken
[L4480]  CALL        call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4480]  RET         call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4481]  COND FALSE  !(revert)
[L4487]  COND TRUE   DType[this] == EXEToken
[L4488]  CALL        call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4488]  RET         call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4489]  COND FALSE  !(revert)
[L4495]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L4495]  RET         call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L4496]  COND FALSE  !(revert)
[L4499]              __ret_0_ := ((_lockTimes_EXEToken[this][account_s1055] != 0 && _lockAmounts_EXEToken[this][account_s1055] != 0) && _lockTimes_EXEToken[this][account_s1055] > now) && (__var_25 <= _lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4599]  RET         call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4600]  COND FALSE  !(revert)
[L4603]  COND FALSE  !(!!__var_31)
[L4607]  COND TRUE   DType[this] == EXEToken
[L4608]  CALL        call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L3589]  COND FALSE  !(!(value_s512 <= _balances_ERC20[this][from_s512]))
[L3593]  COND FALSE  !(!(value_s512 <= _allowed_ERC20[this][from_s512][msgsender_MSG]))
[L3597]              __var_7 := null;
[L3598]  COND FALSE  !(!(to_s512 != null))
[L3602]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3602]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3603]  COND FALSE  !(revert)
[L3606]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s512];
[L3607]              _balances_ERC20[this][from_s512] := __var_8;
[L3608]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s512];
[L3609]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3609]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3610]  COND FALSE  !(revert)
[L3613]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s512];
[L3614]              _balances_ERC20[this][to_s512] := __var_9;
[L3615]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s512];
[L3616]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3616]  RET         call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3617]  COND FALSE  !(revert)
[L3620]              sum__allowed1[from_s512] := sum__allowed1[from_s512] - _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3621]              _allowed_ERC20[this][from_s512][msgsender_MSG] := __var_10;
[L3622]              sum__allowed1[from_s512] := sum__allowed1[from_s512] + _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3623]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3624]              __ret_0_ := true;
[L4608]  RET         call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4609]  COND FALSE  !(revert)
[L4615]              __ret_0_ := __var_32;
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND FALSE  !(!!stopped_Stoppable[this])
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND FALSE  !(revert)
[L4599]  CALL        call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4479]  COND TRUE   DType[this] == EXEToken
[L4480]  CALL        call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4480]  RET         call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4481]  COND FALSE  !(revert)
[L4487]  COND TRUE   DType[this] == EXEToken
[L4488]  CALL        call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4488]  RET         call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4489]  COND FALSE  !(revert)
[L4495]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L4495]  RET         call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L4496]  COND FALSE  !(revert)
[L4499]              __ret_0_ := ((_lockTimes_EXEToken[this][account_s1055] != 0 && _lockAmounts_EXEToken[this][account_s1055] != 0) && _lockTimes_EXEToken[this][account_s1055] > now) && (__var_25 <= _lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4599]  RET         call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4600]  COND FALSE  !(revert)
[L4603]  COND FALSE  !(!!__var_31)
[L4607]  COND TRUE   DType[this] == EXEToken
[L4608]  CALL        call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L3589]  COND FALSE  !(!(value_s512 <= _balances_ERC20[this][from_s512]))
[L3593]  COND FALSE  !(!(value_s512 <= _allowed_ERC20[this][from_s512][msgsender_MSG]))
[L3597]              __var_7 := null;
[L3598]  COND FALSE  !(!(to_s512 != null))
[L3602]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3602]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3603]  COND FALSE  !(revert)
[L3606]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s512];
[L3607]              _balances_ERC20[this][from_s512] := __var_8;
[L3608]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s512];
[L3609]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3609]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3610]  COND FALSE  !(revert)
[L3613]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s512];
[L3614]              _balances_ERC20[this][to_s512] := __var_9;
[L3615]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s512];
[L3616]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3616]  RET         call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3617]  COND FALSE  !(revert)
[L3620]              sum__allowed1[from_s512] := sum__allowed1[from_s512] - _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3621]              _allowed_ERC20[this][from_s512][msgsender_MSG] := __var_10;
[L3622]              sum__allowed1[from_s512] := sum__allowed1[from_s512] + _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3623]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3624]              __ret_0_ := true;
[L4608]  RET         call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4609]  COND FALSE  !(revert)
[L4615]              __ret_0_ := __var_32;
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:11:53,386 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:11:53,386 INFO  L82        PathProgramCache]: Analyzing trace with hash 1604812092, now seen corresponding path program 1 times
[2020-11-25 16:11:53,387 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:11:53,407 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:11:53,606 INFO  L134       CoverageAnalysis]: Checked inductivity of 154 backedges. 8 proven. 0 refuted. 0 times theorem prover too weak. 146 trivial. 0 not checked.
[2020-11-25 16:11:53,606 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:11:53,606 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 16:11:53,607 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:11:53,607 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 16:11:53,607 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=29, Invalid=181, Unknown=0, NotChecked=0, Total=210
[2020-11-25 16:11:53,607 INFO  L87              Difference]: Start difference. First operand 4108 states and 4524 transitions. cyclomatic complexity: 418 Second operand 15 states.
[2020-11-25 16:11:56,215 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:11:56,215 INFO  L93              Difference]: Finished difference Result 4222 states and 4650 transitions.
[2020-11-25 16:11:56,215 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 16:11:56,216 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4222 states and 4650 transitions.
[2020-11-25 16:11:56,224 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:11:56,236 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4222 states to 4222 states and 4650 transitions.
[2020-11-25 16:11:56,236 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1025
[2020-11-25 16:11:56,236 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1025
[2020-11-25 16:11:56,236 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4222 states and 4650 transitions.
[2020-11-25 16:11:56,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:11:56,240 INFO  L728         BuchiCegarLoop]: Abstraction has 4222 states and 4650 transitions.
[2020-11-25 16:11:56,243 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4222 states and 4650 transitions.
[2020-11-25 16:11:56,269 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4222 to 3962.
[2020-11-25 16:11:56,270 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3962 states.
[2020-11-25 16:11:56,273 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3962 states to 3962 states and 4339 transitions.
[2020-11-25 16:11:56,274 INFO  L751         BuchiCegarLoop]: Abstraction has 3962 states and 4339 transitions.
[2020-11-25 16:11:56,274 INFO  L631         BuchiCegarLoop]: Abstraction has 3962 states and 4339 transitions.
[2020-11-25 16:11:56,274 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:11:56,274 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3962 states and 4339 transitions.
[2020-11-25 16:11:56,278 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:11:56,278 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:11:56,278 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:11:56,281 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:11:56,281 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [3, 3, 3, 3, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_EXEToken0 := false;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]     CALL        call main();
[L7037]              assume null == 0;
[L7038]  CALL        call this := FreshRefGenerator__success();
[L3028]              havoc newRef;
[L3029]              assume Alloc[newRef] == false;
[L3030]              Alloc[newRef] := true;
[L3031]              assume newRef != null;
[L7038]  RET         call this := FreshRefGenerator__success();
[L7039]              assume now >= 0;
[L7040]              assume DType[this] == EXEToken;
[L7041]              assume msgvalue_MSG == 0;
[L7042]              gas := gas - 53000;
[L7043]  CALL        call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1769]              havoc __exception;
[L1770]              revert := false;
[L1771]  COND FALSE  !(__exception)
[L1798]  CALL        call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4314]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4314]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4315]  COND FALSE  !(revert)
[L4318]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L3926]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3926]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3927]  COND FALSE  !(revert)
[L3930]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3901]              assume msgsender_MSG != null;
[L3902]              Balance[this] := 0;
[L3903]              _name_ERC20Detailed[this] := 427332508;
[L3904]              _symbol_ERC20Detailed[this] := 427332508;
[L3905]              _decimals_ERC20Detailed[this] := 0;
[L3907]              _name_ERC20Detailed[this] := name_s778;
[L3908]              _symbol_ERC20Detailed[this] := symbol_s778;
[L3909]              _decimals_ERC20Detailed[this] := decimals_s778;
[L3930]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s778, symbol_s778, decimals_s778);
[L3931]  COND FALSE  !(revert)
[L4318]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, decimals_s916);
[L4319]  COND FALSE  !(revert)
[L4322]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3397]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3373]              assume msgsender_MSG != null;
[L3374]              Balance[this] := 0;
[L3375]              _balances_ERC20[this] := zeroRefintArr();
[L3376]              sum__balances0[this] := 0;
[L3377]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3378]              sum__allowed1[this] := 0;
[L3379]              _totalSupply_ERC20[this] := 0;
[L3401]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L4322]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4323]  COND FALSE  !(revert)
[L4326]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4006]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L4006]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4007]  COND FALSE  !(revert)
[L4010]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3397]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3351]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3336]              assume msgsender_MSG != null;
[L3337]              Balance[this] := 0;
[L3351]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3352]  COND FALSE  !(revert)
[L3397]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3398]  COND FALSE  !(revert)
[L3401]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3373]              assume msgsender_MSG != null;
[L3374]              Balance[this] := 0;
[L3375]              _balances_ERC20[this] := zeroRefintArr();
[L3376]              sum__balances0[this] := 0;
[L3377]              _allowed_ERC20[this] := zeroRefRefintArr();
[L3378]              sum__allowed1[this] := 0;
[L3379]              _totalSupply_ERC20[this] := 0;
[L3401]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3402]  COND FALSE  !(revert)
[L4010]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4011]  COND FALSE  !(revert)
[L4014]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3983]              assume msgsender_MSG != null;
[L3984]              Balance[this] := 0;
[L4014]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4015]  COND FALSE  !(revert)
[L4326]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4327]  COND FALSE  !(revert)
[L4330]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3220]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3203]              assume msgsender_MSG != null;
[L3204]              Balance[this] := 0;
[L3205]              _owner_Ownable[this] := null;
[L3207]              _owner_Ownable[this] := msgsender_MSG;
[L3220]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  COND FALSE  !(revert)
[L4330]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3220]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3203]              assume msgsender_MSG != null;
[L3204]              Balance[this] := 0;
[L3205]              _owner_Ownable[this] := null;
[L3207]              _owner_Ownable[this] := msgsender_MSG;
[L3220]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3221]  COND FALSE  !(revert)
[L4156]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4157]  COND FALSE  !(revert)
[L4160]  CALL        call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4136]              assume msgsender_MSG != null;
[L4137]              Balance[this] := 0;
[L4138]              stopped_Stoppable[this] := false;
[L4160]  RET         call Stoppable_Stoppable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4161]  COND FALSE  !(revert)
[L4334]  RET         call Stoppable_Stoppable__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4250]              assume msgsender_MSG != null;
[L4251]              Balance[this] := 0;
[L4252]              _lockTimes_EXEToken[this] := zeroRefintArr();
[L4253]              sum__lockTimes2[this] := 0;
[L4254]              _lockAmounts_EXEToken[this] := zeroRefintArr();
[L4255]              sum__lockAmounts3[this] := 0;
[L4257]  COND TRUE   DType[this] == EXEToken
[L4258]  CALL        call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3234]              __ret_0_ := _owner_Ownable[this];
[L4258]  RET         call __var_23 := owner_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]  COND FALSE  !(revert)
[L4265]              __var_24 := decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4266]  COND TRUE   DType[this] == EXEToken
[L4267]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L3739]              __var_15 := null;
[L3740]  COND FALSE  !(!(account_s654 != null))
[L3744]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3744]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s654);
[L3745]  COND FALSE  !(revert)
[L3748]              _totalSupply_ERC20[this] := __var_16;
[L3749]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3749]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s654], amount_s654);
[L3750]  COND FALSE  !(revert)
[L3753]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s654];
[L3754]              _balances_ERC20[this][account_s654] := __var_17;
[L3755]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s654];
[L3756]              assert { :EventEmitted "Transfer_ERC20" } true;
[L4267]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_23, nonlinearMul(totalSupply_s916, nonlinearPow(10, decimals_s916 % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L4268]  COND FALSE  !(revert)
[L4338]  RET         call EXEToken_EXEToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L4339]  COND FALSE  !(revert)
[L1798]  RET         call EXEToken_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L1799]              assume !revert && gas >= 0;
[L7043]  RET         call EXEToken_EXEToken(this, msgsender_MSG, msgvalue_MSG, name_s916, symbol_s916, totalSupply_s916, decimals_s916);
[L7044]              assume !revert && gas >= 0;
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND TRUE   choice == 15
[L6927]              gas := gas - 21000;
[L6928]  COND TRUE   gas >= 0
[L6929]              assume value_s425 >= 0 && value_s425 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6930]              assume msgvalue_MSG == 0;
[L6931]  CALL        call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s425, value_s425);
[L747]               havoc __exception;
[L748]               revert := false;
[L749]   COND FALSE  !(__exception)
[L776]   CALL        call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s425, value_s425);
[L3526]              __var_6 := null;
[L3527]  COND FALSE  !(!(spender_s425 != null))
[L3531]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] - _allowed_ERC20[this][msgsender_MSG][spender_s425];
[L3532]              _allowed_ERC20[this][msgsender_MSG][spender_s425] := value_s425;
[L3533]              sum__allowed1[msgsender_MSG] := sum__allowed1[msgsender_MSG] + _allowed_ERC20[this][msgsender_MSG][spender_s425];
[L3534]              assert { :EventEmitted "Approval_ERC20" } true;
[L3535]              __ret_0_ := true;
[L776]   RET         call __ret_0_ := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s425, value_s425);
[L777]               assume !revert && gas >= 0;
[L6931]  RET         call __ret_0_approve := approve~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, spender_s425, value_s425);
[L7047]  RET         call CorralChoice_EXEToken(this);
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND FALSE  !(!!stopped_Stoppable[this])
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND FALSE  !(revert)
[L4599]  CALL        call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4479]  COND TRUE   DType[this] == EXEToken
[L4480]  CALL        call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4480]  RET         call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4481]  COND FALSE  !(revert)
[L4487]  COND TRUE   DType[this] == EXEToken
[L4488]  CALL        call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4488]  RET         call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4489]  COND FALSE  !(revert)
[L4495]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L4495]  RET         call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L4496]  COND FALSE  !(revert)
[L4499]              __ret_0_ := ((_lockTimes_EXEToken[this][account_s1055] != 0 && _lockAmounts_EXEToken[this][account_s1055] != 0) && _lockTimes_EXEToken[this][account_s1055] > now) && (__var_25 <= _lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4599]  RET         call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4600]  COND FALSE  !(revert)
[L4603]  COND FALSE  !(!!__var_31)
[L4607]  COND TRUE   DType[this] == EXEToken
[L4608]  CALL        call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L3589]  COND FALSE  !(!(value_s512 <= _balances_ERC20[this][from_s512]))
[L3593]  COND FALSE  !(!(value_s512 <= _allowed_ERC20[this][from_s512][msgsender_MSG]))
[L3597]              __var_7 := null;
[L3598]  COND FALSE  !(!(to_s512 != null))
[L3602]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3602]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3603]  COND FALSE  !(revert)
[L3606]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s512];
[L3607]              _balances_ERC20[this][from_s512] := __var_8;
[L3608]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s512];
[L3609]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3609]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3610]  COND FALSE  !(revert)
[L3613]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s512];
[L3614]              _balances_ERC20[this][to_s512] := __var_9;
[L3615]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s512];
[L3616]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3616]  RET         call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3617]  COND FALSE  !(revert)
[L3620]              sum__allowed1[from_s512] := sum__allowed1[from_s512] - _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3621]              _allowed_ERC20[this][from_s512][msgsender_MSG] := __var_10;
[L3622]              sum__allowed1[from_s512] := sum__allowed1[from_s512] + _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3623]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3624]              __ret_0_ := true;
[L4608]  RET         call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4609]  COND FALSE  !(revert)
[L4615]              __ret_0_ := __var_32;
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

Loop:
[L7047]  CALL        call CorralChoice_EXEToken(this);
[L6823]              havoc msgsender_MSG;
[L6824]              havoc msgvalue_MSG;
[L6825]              havoc choice;
[L6826]              havoc __ret_0_owner;
[L6827]              havoc newOwner_s184;
[L6828]              havoc __ret_0_totalSupply;
[L6829]              havoc owner_s312;
[L6830]              havoc __ret_0_balanceOf;
[L6831]              havoc owner_s328;
[L6832]              havoc spender_s328;
[L6833]              havoc __ret_0_allowance;
[L6834]              havoc recipient_s1083;
[L6835]              havoc amount_s1083;
[L6836]              havoc __ret_0_transfer;
[L6837]              havoc spender_s425;
[L6838]              havoc value_s425;
[L6839]              havoc __ret_0_approve;
[L6840]              havoc sender_s1113;
[L6841]              havoc recipient_s1113;
[L6842]              havoc amount_s1113;
[L6843]              havoc __ret_0_transferFrom;
[L6844]              havoc spender_s562;
[L6845]              havoc addedValue_s562;
[L6846]              havoc __ret_0_increaseAllowance;
[L6847]              havoc spender_s612;
[L6848]              havoc subtractedValue_s612;
[L6849]              havoc __ret_0_decreaseAllowance;
[L6850]              havoc name_s778;
[L6851]              havoc symbol_s778;
[L6852]              havoc decimals_s778;
[L6853]              havoc __ret_0_name;
[L6854]              havoc __ret_0_symbol;
[L6855]              havoc __ret_0_decimals;
[L6856]              havoc value_s817;
[L6857]              havoc from_s830;
[L6858]              havoc value_s830;
[L6859]              havoc __ret_0_stopped;
[L6860]              havoc name_s916;
[L6861]              havoc symbol_s916;
[L6862]              havoc totalSupply_s916;
[L6863]              havoc decimals_s916;
[L6864]              havoc account_s942;
[L6865]              havoc amount_s942;
[L6866]              havoc __ret_0_mint;
[L6867]              havoc account_s988;
[L6868]              havoc releaseTime_s988;
[L6869]              havoc amount_s988;
[L6870]              havoc account_s1006;
[L6871]              havoc lockTime_s1006;
[L6872]              havoc lockAmount_s1006;
[L6873]              havoc tmpNow;
[L6874]              havoc gas;
[L6875]              assume gas > 4000000 && gas <= 8000000;
[L6876]              tmpNow := now;
[L6877]              havoc now;
[L6878]              assume now > tmpNow;
[L6879]              assume msgsender_MSG != null;
[L6880]              assume DType[msgsender_MSG] != SafeMath;
[L6881]              assume DType[msgsender_MSG] != Ownable;
[L6882]              assume DType[msgsender_MSG] != IERC20;
[L6883]              assume DType[msgsender_MSG] != ERC20;
[L6884]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6885]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6886]              assume DType[msgsender_MSG] != Stoppable;
[L6887]              assume DType[msgsender_MSG] != EXEToken;
[L6888]              Alloc[msgsender_MSG] := true;
[L6889]  COND FALSE  !(choice == 21)
[L6895]  COND FALSE  !(choice == 20)
[L6901]  COND FALSE  !(choice == 19)
[L6907]  COND FALSE  !(choice == 18)
[L6913]  COND FALSE  !(choice == 17)
[L6919]  COND FALSE  !(choice == 16)
[L6926]  COND FALSE  !(choice == 15)
[L6933]  COND TRUE   choice == 14
[L6934]              gas := gas - 21000;
[L6935]  COND TRUE   gas >= 0
[L6936]              assume amount_s1113 >= 0 && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6937]              assume msgvalue_MSG == 0;
[L6938]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((sender_s1113 == recipient_s1113 && (amount_s1113 > _balances_ERC20[this][sender_s1113] || amount_s1113 > _allowed_ERC20[this][sender_s1113][msgsender_MSG])) && amount_s1113 >= 0) && amount_s1113 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s1113] >= 0) && _balances_ERC20[this][recipient_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s1113] >= 0) && _balances_ERC20[this][sender_s1113] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] >= 0) && _allowed_ERC20[this][sender_s1113][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_EXEToken0 := true;
[L2]                 call_transferFrom_EXEToken0 := false;
[L2]                 revert := revert_hold;
[L2099]              havoc __exception;
[L2100]              revert := false;
[L2101]  COND FALSE  !(__exception)
[L2128]  CALL        call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4595]  CALL        call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6067]  COND FALSE  !(!!stopped_Stoppable[this])
[L4595]  RET         call enabled_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4596]  COND FALSE  !(revert)
[L4599]  CALL        call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4479]  COND TRUE   DType[this] == EXEToken
[L4480]  CALL        call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4480]  RET         call __var_25 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4481]  COND FALSE  !(revert)
[L4487]  COND TRUE   DType[this] == EXEToken
[L4488]  CALL        call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L3427]              __ret_0_ := _balances_ERC20[this][owner_s312];
[L4488]  RET         call __var_27 := balanceOf~address_ERC20__success(this, msgsender_MSG, msgvalue_MSG, account_s1055);
[L4489]  COND FALSE  !(revert)
[L4495]  CALL        call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L4495]  RET         call __var_26 := sub~uint256~uint256_SafeMath__success(this, this, 0, __var_27, _lockAmounts_EXEToken[this][account_s1055]);
[L4496]  COND FALSE  !(revert)
[L4499]              __ret_0_ := ((_lockTimes_EXEToken[this][account_s1055] != 0 && _lockAmounts_EXEToken[this][account_s1055] != 0) && _lockTimes_EXEToken[this][account_s1055] > now) && (__var_25 <= _lockAmounts_EXEToken[this][account_s1055] || __var_26 < amount_s1055);
[L4599]  RET         call __var_31 := _isLocked~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, amount_s1113);
[L4600]  COND FALSE  !(revert)
[L4603]  COND FALSE  !(!!__var_31)
[L4607]  COND TRUE   DType[this] == EXEToken
[L4608]  CALL        call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L3589]  COND FALSE  !(!(value_s512 <= _balances_ERC20[this][from_s512]))
[L3593]  COND FALSE  !(!(value_s512 <= _allowed_ERC20[this][from_s512][msgsender_MSG]))
[L3597]              __var_7 := null;
[L3598]  COND FALSE  !(!(to_s512 != null))
[L3602]  CALL        call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3602]  RET         call __var_8 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s512], value_s512);
[L3603]  COND FALSE  !(revert)
[L3606]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s512];
[L3607]              _balances_ERC20[this][from_s512] := __var_8;
[L3608]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s512];
[L3609]  CALL        call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3161]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3162]  COND FALSE  !(!(c_s106 >= a_s106))
[L3166]              __ret_0_ := c_s106;
[L3609]  RET         call __var_9 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s512], value_s512);
[L3610]  COND FALSE  !(revert)
[L3613]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s512];
[L3614]              _balances_ERC20[this][to_s512] := __var_9;
[L3615]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s512];
[L3616]  CALL        call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3137]  COND FALSE  !(!(b_s82 <= a_s82))
[L3141]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3142]              __ret_0_ := c_s82;
[L3616]  RET         call __var_10 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s512][msgsender_MSG], value_s512);
[L3617]  COND FALSE  !(revert)
[L3620]              sum__allowed1[from_s512] := sum__allowed1[from_s512] - _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3621]              _allowed_ERC20[this][from_s512][msgsender_MSG] := __var_10;
[L3622]              sum__allowed1[from_s512] := sum__allowed1[from_s512] + _allowed_ERC20[this][from_s512][msgsender_MSG];
[L3623]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3624]              __ret_0_ := true;
[L4608]  RET         call __var_32 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L4609]  COND FALSE  !(revert)
[L4615]              __ret_0_ := __var_32;
[L2128]  RET         call __ret_0_ := transferFrom~address~address~uint256_EXEToken__success(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L2129]              assume !revert && gas >= 0;
[L6938]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_EXEToken(this, msgsender_MSG, msgvalue_MSG, sender_s1113, recipient_s1113, amount_s1113);
[L7047]  RET         call CorralChoice_EXEToken(this);

[2020-11-25 16:11:56,287 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:11:56,287 INFO  L82        PathProgramCache]: Analyzing trace with hash -1495816100, now seen corresponding path program 1 times
[2020-11-25 16:11:56,288 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:11:56,308 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:11:56,528 INFO  L134       CoverageAnalysis]: Checked inductivity of 229 backedges. 10 proven. 0 refuted. 0 times theorem prover too weak. 219 trivial. 0 not checked.
[2020-11-25 16:11:56,528 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:11:56,528 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:11:56,528 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:11:56,529 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 16:11:56,529 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=107, Unknown=0, NotChecked=0, Total=132
[2020-11-25 16:11:56,529 INFO  L87              Difference]: Start difference. First operand 3962 states and 4339 transitions. cyclomatic complexity: 380 Second operand 12 states.
[2020-11-25 16:11:57,701 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:11:57,701 INFO  L93              Difference]: Finished difference Result 2349 states and 2560 transitions.
[2020-11-25 16:11:57,701 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 16:11:57,701 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2349 states and 2560 transitions.
[2020-11-25 16:11:57,705 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:11:57,705 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2349 states to 0 states and 0 transitions.
[2020-11-25 16:11:57,705 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:11:57,705 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:11:57,705 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:11:57,705 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:11:57,705 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:11:57,705 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:11:57,705 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:11:57,705 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:11:57,705 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:11:57,705 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:11:57,706 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:11:57,709 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:11:57 BasicIcfg
[2020-11-25 16:11:57,709 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:11:57,709 INFO  L168              Benchmark]: Toolchain (without parser) took 9182.01 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 929.6 MB). Free memory was 935.2 MB in the beginning and 1.5 GB in the end (delta: -548.8 MB). Peak memory consumption was 380.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,710 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,710 INFO  L168              Benchmark]: Boogie Preprocessor took 134.83 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 913.7 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,711 INFO  L168              Benchmark]: UtopiaSpecLang took 76.93 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,712 INFO  L168              Benchmark]: Boogie Printer took 21.61 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 902.9 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,712 INFO  L168              Benchmark]: RCFGBuilder took 1020.82 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 902.9 MB in the beginning and 992.9 MB in the end (delta: -89.9 MB). Peak memory consumption was 191.0 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,712 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.28 ms. Allocated memory is still 1.1 GB. Free memory was 992.9 MB in the beginning and 986.0 MB in the end (delta: 6.8 MB). Peak memory consumption was 6.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,713 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1792.43 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 165.2 MB). Free memory was 986.0 MB in the beginning and 897.8 MB in the end (delta: 88.3 MB). Peak memory consumption was 490.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,713 INFO  L168              Benchmark]: BlockEncodingV2 took 161.99 ms. Allocated memory is still 1.3 GB. Free memory was 897.8 MB in the beginning and 796.4 MB in the end (delta: 101.3 MB). Peak memory consumption was 101.3 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,713 INFO  L168              Benchmark]: BuchiAutomizer took 5928.11 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 705.2 MB). Free memory was 796.4 MB in the beginning and 1.5 GB in the end (delta: -687.6 MB). Peak memory consumption was 17.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:11:57,716 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6228 locations, 11157 edges
  - StatisticsResult: Encoded RCFG
    6097 locations, 10818 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 134.83 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 913.7 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 76.93 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.61 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 902.9 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1020.82 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 902.9 MB in the beginning and 992.9 MB in the end (delta: -89.9 MB). Peak memory consumption was 191.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.28 ms. Allocated memory is still 1.1 GB. Free memory was 992.9 MB in the beginning and 986.0 MB in the end (delta: 6.8 MB). Peak memory consumption was 6.8 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1792.43 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 165.2 MB). Free memory was 986.0 MB in the beginning and 897.8 MB in the end (delta: 88.3 MB). Peak memory consumption was 490.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 161.99 ms. Allocated memory is still 1.3 GB. Free memory was 897.8 MB in the beginning and 796.4 MB in the end (delta: 101.3 MB). Peak memory consumption was 101.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5928.11 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 705.2 MB). Free memory was 796.4 MB in the beginning and 1.5 GB in the end (delta: -687.6 MB). Peak memory consumption was 17.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2511 locations, 3418 edges
  - StatisticsResult: BuchiProgram size
    6228 locations, 11157 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 15 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.9s and 6 iterations.  TraceHistogramMax:5. Analysis of lassos took 1.0s. Construction of modules took 2.9s. BÃ¼chi inclusion checks took 1.2s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 1265 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4350 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19649 SDtfs, 14711 SDslu, 21926 SDs, 0 SdLazy, 54083 SolverSat, 3119 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.9s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_EXEToken0) ==> ( <>(fail_transferFrom_EXEToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
