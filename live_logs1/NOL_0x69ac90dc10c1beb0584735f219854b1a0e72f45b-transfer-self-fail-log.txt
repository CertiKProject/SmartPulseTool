This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 02:12:25,038 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 02:12:25,039 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 02:12:25,051 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 02:12:25,051 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 02:12:25,052 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 02:12:25,053 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 02:12:25,054 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 02:12:25,056 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 02:12:25,057 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 02:12:25,057 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 02:12:25,058 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 02:12:25,058 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 02:12:25,059 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 02:12:25,060 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 02:12:25,061 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 02:12:25,061 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 02:12:25,062 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 02:12:25,064 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 02:12:25,065 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 02:12:25,065 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 02:12:25,066 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 02:12:25,068 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 02:12:25,068 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 02:12:25,068 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 02:12:25,068 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 02:12:25,069 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 02:12:25,069 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 02:12:25,070 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 02:12:25,070 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 02:12:25,070 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 02:12:25,071 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 02:12:25,071 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 02:12:25,072 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 02:12:25,072 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 02:12:25,073 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 02:12:25,073 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 02:12:25,073 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 02:12:25,073 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 02:12:25,074 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 02:12:25,075 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 02:12:25,075 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 02:12:25,082 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 02:12:25,083 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 02:12:25,083 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 02:12:25,084 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 02:12:25,084 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 02:12:25,084 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 02:12:25,085 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 02:12:25,085 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 02:12:25,086 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 02:12:25,086 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 02:12:25,086 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 02:12:25,107 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 02:12:25,118 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 02:12:25,120 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 02:12:25,121 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 02:12:25,122 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 02:12:25,122 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl
[2020-11-25 02:12:25,123 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl'
[2020-11-25 02:12:25,211 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 02:12:25,212 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 02:12:25,212 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 02:12:25,213 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 02:12:25,213 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 02:12:25,229 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,231 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,270 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,271 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,297 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,308 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,317 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,332 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 02:12:25,333 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 02:12:25,333 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 02:12:25,335 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 02:12:25,339 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/1) ...
[2020-11-25 02:12:25,361 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 02:12:25,367 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 02:12:25,374 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 02:12:25,380 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s221 && _value_s221>balanceOf_TokenERC20[this][msg.sender] ) && _value_s221>=0 ) && _value_s221<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s221]>=0 ) && balanceOf_TokenERC20[this][_to_s221]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][msg.sender]>=0 ) && balanceOf_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[_to_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s221,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 02:12:25,386 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 02:12:25,386 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(fail_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 02:12:25,396 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:12:25 PropertyContainer
[2020-11-25 02:12:25,396 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 02:12:25,397 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 02:12:25,397 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 02:12:25,397 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 02:12:25,397 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/2) ...
[2020-11-25 02:12:25,398 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 02:12:25,398 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 02:12:25,413 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:12:25" (2/2) ...
[2020-11-25 02:12:25,413 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 02:12:25,414 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 02:12:25,414 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 02:12:25,414 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 02:12:25,415 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/2) ...
[2020-11-25 02:12:25,468 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 02:12:25,468 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 02:12:25,468 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 02:12:25,468 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 02:12:25,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 02:12:25,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:12:25,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 02:12:25,469 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 02:12:25,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 02:12:25,470 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,470 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 02:12:25,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 02:12:25,470 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 02:12:25,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 02:12:25,470 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 02:12:25,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 02:12:25,470 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 02:12:25,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 02:12:25,471 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 02:12:25,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 02:12:25,471 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 02:12:25,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 02:12:25,471 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 02:12:25,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 02:12:25,471 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 02:12:25,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 02:12:25,471 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 02:12:25,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 02:12:25,472 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 02:12:25,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 02:12:25,472 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 02:12:25,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 02:12:25,472 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 02:12:25,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 02:12:25,472 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL_NoBaseCtor__success
[2020-11-25 02:12:25,472 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL
[2020-11-25 02:12:25,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL
[2020-11-25 02:12:25,473 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_NOL__success
[2020-11-25 02:12:25,473 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_NOL
[2020-11-25 02:12:25,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_NOL
[2020-11-25 02:12:25,473 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_NOL
[2020-11-25 02:12:25,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_NOL
[2020-11-25 02:12:25,473 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_NOL
[2020-11-25 02:12:25,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_NOL
[2020-11-25 02:12:25,473 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_NOL
[2020-11-25 02:12:25,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_NOL
[2020-11-25 02:12:25,473 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_NOL
[2020-11-25 02:12:25,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_NOL
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_NOL
[2020-11-25 02:12:25,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_NOL
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_NOL
[2020-11-25 02:12:25,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_NOL
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_NOL
[2020-11-25 02:12:25,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_NOL
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 02:12:25,474 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_NOL
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 02:12:25,475 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:12:25,476 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,477 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 02:12:25,478 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 02:12:25,479 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL_NoBaseCtor__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL__success
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure NOL_NOL__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_NOL__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_NOL__success
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_NOL__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_NOL__success
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_NOL__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_NOL__success
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrices~uint256~uint256_NOL__fail
[2020-11-25 02:12:25,480 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_NOL__success
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure buy_NOL__fail
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_NOL__success
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure sell~uint256_NOL__fail
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_NOL__success
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure sellPrice_NOL__fail
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_NOL__success
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_NOL__fail
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_NOL__success
[2020-11-25 02:12:25,481 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_NOL__fail
[2020-11-25 02:12:25,482 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 02:12:25,482 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 02:12:25,482 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 02:12:25,482 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 02:12:25,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 02:12:25,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 02:12:25,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 02:12:25,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 02:12:25,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 02:12:25,482 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 02:12:25,483 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,484 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 02:12:25,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL_NoBaseCtor__fail
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL_NoBaseCtor__success
[2020-11-25 02:12:25,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL__fail
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure NOL_NOL__success
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_NOL__fail
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_NOL__success
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_NOL__fail
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_NOL__success
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_NOL__fail
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_NOL__success
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_NOL__fail
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrices~uint256~uint256_NOL__success
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_NOL__fail
[2020-11-25 02:12:25,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure buy_NOL__success
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_NOL__fail
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure sell~uint256_NOL__success
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_NOL__fail
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure sellPrice_NOL__success
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_NOL__fail
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_NOL__success
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_NOL__fail
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_NOL__success
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 02:12:25,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_NOL
[2020-11-25 02:12:25,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 02:12:25,489 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 02:12:25,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 02:12:26,163 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:12:26,163 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 02:12:26,202 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 02:12:26,203 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 02:12:26,205 INFO  L202        PluginConnector]: Adding new model NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:12:26 BoogieIcfgContainer
[2020-11-25 02:12:26,205 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:12:25" (2/2) ...
[2020-11-25 02:12:26,205 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 02:12:26,205 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4ad13763 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:12:26, skipping insertion in model container
[2020-11-25 02:12:26,205 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 02:12:26,205 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 02:12:26,206 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 02:12:26,207 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 02:12:26,207 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/3) ...
[2020-11-25 02:12:26,208 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@ded7b14 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:12:26, skipping insertion in model container
[2020-11-25 02:12:26,208 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:12:25" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 02:12:26,247 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:12:26 NWAContainer
[2020-11-25 02:12:26,248 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 02:12:26,248 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 02:12:26,248 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 02:12:26,249 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 02:12:26,250 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:12:26" (3/4) ...
[2020-11-25 02:12:26,251 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5244af6c and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:12:26, skipping insertion in model container
[2020-11-25 02:12:26,252 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:12:26" (4/4) ...
[2020-11-25 02:12:26,256 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 02:12:26,261 INFO  L110   BuchiProductObserver]: Initial RCFG 2323 locations, 3072 edges
[2020-11-25 02:12:26,262 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 02:12:26,274 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 02:12:27,569 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 02:12:27,576 INFO  L110   BuchiProductObserver]: BuchiProgram size 5488 locations, 9675 edges
[2020-11-25 02:12:27,576 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:12:27 BoogieIcfgContainer
[2020-11-25 02:12:27,576 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 02:12:27,577 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 02:12:27,577 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 02:12:27,578 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 02:12:27,578 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:12:27" (1/1) ...
[2020-11-25 02:12:27,666 INFO  L313           BlockEncoder]: Initial Icfg 5488 locations, 9675 edges
[2020-11-25 02:12:27,666 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 02:12:27,666 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 02:12:27,666 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 02:12:27,667 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 02:12:27,680 INFO  L70    emoveInfeasibleEdges]: Removed 87 edges and 12 locations because of local infeasibility
[2020-11-25 02:12:27,693 INFO  L70        RemoveSinkStates]: Removed 134 edges and 72 locations by removing sink states
[2020-11-25 02:12:27,706 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 02:12:27,710 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 02:12:27,714 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 02:12:27,715 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 02:12:27,724 INFO  L313           BlockEncoder]: Encoded RCFG 5380 locations, 9419 edges
[2020-11-25 02:12:27,724 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:12:27 BasicIcfg
[2020-11-25 02:12:27,725 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 02:12:27,725 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 02:12:27,726 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 02:12:27,729 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 02:12:27,729 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:12:27,729 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:12:25" (1/6) ...
[2020-11-25 02:12:27,731 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47c31d59 and model type NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:12:27, skipping insertion in model container
[2020-11-25 02:12:27,731 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:12:27,731 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:12:25" (2/6) ...
[2020-11-25 02:12:27,732 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47c31d59 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:12:27, skipping insertion in model container
[2020-11-25 02:12:27,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:12:27,732 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:12:26" (3/6) ...
[2020-11-25 02:12:27,732 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47c31d59 and model type NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:12:27, skipping insertion in model container
[2020-11-25 02:12:27,732 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:12:27,732 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:12:26" (4/6) ...
[2020-11-25 02:12:27,733 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47c31d59 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:12:27, skipping insertion in model container
[2020-11-25 02:12:27,733 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:12:27,733 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:12:27" (5/6) ...
[2020-11-25 02:12:27,733 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@47c31d59 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:12:27, skipping insertion in model container
[2020-11-25 02:12:27,733 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 02:12:27,733 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:12:27" (6/6) ...
[2020-11-25 02:12:27,734 INFO  L404   chiAutomizerObserver]: Analyzing ICFG NOL_0x69ac90dc10c1beb0584735f219854b1a0e72f45b_transfer-self-fail.bpl_BEv2
[2020-11-25 02:12:27,774 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 02:12:27,774 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 02:12:27,774 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 02:12:27,774 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 02:12:27,774 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 02:12:27,774 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 02:12:27,774 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 02:12:27,775 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 02:12:27,775 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 02:12:27,827 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5380 states.
[2020-11-25 02:12:27,905 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:12:27,905 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:12:27,906 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:12:27,915 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:12:27,916 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:12:27,916 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 02:12:27,916 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5380 states.
[2020-11-25 02:12:27,949 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:12:27,949 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:12:27,949 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:12:27,951 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:12:27,952 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == NOL;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND TRUE   revert
[L1233]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;

Loop:
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND TRUE   choice == 22
[L4746]              gas := gas - 21000;
[L4747]  COND FALSE  !(gas >= 0)
[L4908]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:12:27,969 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:12:27,970 INFO  L82        PathProgramCache]: Analyzing trace with hash -171423965, now seen corresponding path program 1 times
[2020-11-25 02:12:27,974 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:12:27,995 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:12:28,034 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:12:28,036 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:12:28,036 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 02:12:28,313 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:12:28,326 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 02:12:28,326 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 02:12:28,328 INFO  L87              Difference]: Start difference. First operand 5380 states. Second operand 3 states.
[2020-11-25 02:12:28,655 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:12:28,656 INFO  L93              Difference]: Finished difference Result 4581 states and 5523 transitions.
[2020-11-25 02:12:28,656 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 02:12:28,657 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4581 states and 5523 transitions.
[2020-11-25 02:12:28,687 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:12:28,717 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4581 states to 4579 states and 5519 transitions.
[2020-11-25 02:12:28,717 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 02:12:28,718 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 166
[2020-11-25 02:12:28,719 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4579 states and 5519 transitions.
[2020-11-25 02:12:28,729 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:12:28,729 INFO  L728         BuchiCegarLoop]: Abstraction has 4579 states and 5519 transitions.
[2020-11-25 02:12:28,746 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4579 states and 5519 transitions.
[2020-11-25 02:12:28,803 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4579 to 4579.
[2020-11-25 02:12:28,803 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4579 states.
[2020-11-25 02:12:28,812 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4579 states to 4579 states and 5519 transitions.
[2020-11-25 02:12:28,813 INFO  L751         BuchiCegarLoop]: Abstraction has 4579 states and 5519 transitions.
[2020-11-25 02:12:28,813 INFO  L631         BuchiCegarLoop]: Abstraction has 4579 states and 5519 transitions.
[2020-11-25 02:12:28,813 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 02:12:28,813 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4579 states and 5519 transitions.
[2020-11-25 02:12:28,822 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:12:28,823 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:12:28,823 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:12:28,825 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:12:28,825 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == NOL;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND TRUE   revert
[L1233]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND TRUE   choice == 14
[L4794]              gas := gas - 21000;
[L4795]  COND TRUE   gas >= 0
[L4796]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4797]              assume msgvalue_MSG == 0;
[L4798]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L423]               havoc __exception;
[L424]               revert := false;
[L425]   COND FALSE  !(__exception)
[L452]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2709]  COND TRUE   DType[this] == NOL
[L2710]  CALL        call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L3088]              __var_6 := null;
[L3089]  COND TRUE   !(_to_s522 != null)
[L3090]              revert := true;
[L2710]  RET         call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2711]  COND TRUE   revert
[L452]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L453]               assume !revert && gas >= 0;
[L4798]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L4908]  RET         call CorralChoice_NOL(this);

Loop:
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND TRUE   choice == 14
[L4794]              gas := gas - 21000;
[L4795]  COND TRUE   gas >= 0
[L4796]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4797]              assume msgvalue_MSG == 0;
[L4798]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L423]               havoc __exception;
[L424]               revert := false;
[L425]   COND FALSE  !(__exception)
[L452]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2709]  COND TRUE   DType[this] == NOL
[L2710]  CALL        call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L3088]              __var_6 := null;
[L3089]  COND TRUE   !(_to_s522 != null)
[L3090]              revert := true;
[L2710]  RET         call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2711]  COND TRUE   revert
[L452]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L453]               assume !revert && gas >= 0;
[L4798]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L4908]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:12:28,829 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:12:28,829 INFO  L82        PathProgramCache]: Analyzing trace with hash -685518088, now seen corresponding path program 1 times
[2020-11-25 02:12:28,830 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:12:28,847 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:12:28,879 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:12:28,879 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:12:28,879 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 02:12:28,881 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:12:28,881 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 02:12:28,881 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 02:12:28,881 INFO  L87              Difference]: Start difference. First operand 4579 states and 5519 transitions. cyclomatic complexity: 946 Second operand 4 states.
[2020-11-25 02:12:29,653 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:12:29,654 INFO  L93              Difference]: Finished difference Result 5677 states and 6654 transitions.
[2020-11-25 02:12:29,654 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 02:12:29,654 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5677 states and 6654 transitions.
[2020-11-25 02:12:29,672 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:12:29,694 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5677 states to 5429 states and 6352 transitions.
[2020-11-25 02:12:29,694 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 218
[2020-11-25 02:12:29,695 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 218
[2020-11-25 02:12:29,695 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5429 states and 6352 transitions.
[2020-11-25 02:12:29,702 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:12:29,702 INFO  L728         BuchiCegarLoop]: Abstraction has 5429 states and 6352 transitions.
[2020-11-25 02:12:29,708 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5429 states and 6352 transitions.
[2020-11-25 02:12:29,757 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5429 to 4935.
[2020-11-25 02:12:29,758 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4935 states.
[2020-11-25 02:12:29,765 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4935 states to 4935 states and 5748 transitions.
[2020-11-25 02:12:29,765 INFO  L751         BuchiCegarLoop]: Abstraction has 4935 states and 5748 transitions.
[2020-11-25 02:12:29,765 INFO  L631         BuchiCegarLoop]: Abstraction has 4935 states and 5748 transitions.
[2020-11-25 02:12:29,765 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 02:12:29,765 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4935 states and 5748 transitions.
[2020-11-25 02:12:29,772 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:12:29,772 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:12:29,772 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:12:29,774 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:12:29,774 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == NOL;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND FALSE  !(revert)
[L3043]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2628]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2598]              name_TokenERC20[this] := 1234253568;
[L2599]              symbol_TokenERC20[this] := 1234253568;
[L2600]              decimals_TokenERC20[this] := 18;
[L2601]              totalSupply_TokenERC20[this] := 0;
[L2602]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2603]              sum_balanceOf0[this] := 0;
[L2604]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2605]              sum_allowance1[this] := 0;
[L2607]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2608]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2610]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2611]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2612]              name_TokenERC20[this] := tokenName_s124;
[L2613]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2628]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2629]  COND FALSE  !(revert)
[L3043]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3044]  COND FALSE  !(revert)
[L3047]  CALL        call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3013]              assume msgsender_MSG != null;
[L3014]              Balance[this] := 0;
[L3015]              sellPrice_NOL[this] := 0;
[L3016]              buyPrice_NOL[this] := 0;
[L3017]              frozenAccount_NOL[this] := zeroRefboolArr();
[L3047]  RET         call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3048]  COND FALSE  !(revert)
[L1233]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND TRUE   choice == 14
[L4794]              gas := gas - 21000;
[L4795]  COND TRUE   gas >= 0
[L4796]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4797]              assume msgvalue_MSG == 0;
[L4798]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L423]               havoc __exception;
[L424]               revert := false;
[L425]   COND FALSE  !(__exception)
[L452]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2709]  COND TRUE   DType[this] == NOL
[L2710]  CALL        call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L3088]              __var_6 := null;
[L3089]  COND FALSE  !(!(_to_s522 != null))
[L3093]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L3097]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L3101]  COND FALSE  !(!!frozenAccount_NOL[this][_from_s522])
[L3105]  COND FALSE  !(!!frozenAccount_NOL[this][_to_s522])
[L3109]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L3110]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3111]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L3112]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L3113]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3114]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L3115]              assert { :EventEmitted "Transfer_NOL" } true;
[L2710]  RET         call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2711]  COND FALSE  !(revert)
[L2722]              success_s221 := true;
[L452]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L453]               assume !revert && gas >= 0;
[L4798]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L4908]  RET         call CorralChoice_NOL(this);

Loop:
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND TRUE   choice == 14
[L4794]              gas := gas - 21000;
[L4795]  COND TRUE   gas >= 0
[L4796]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4797]              assume msgvalue_MSG == 0;
[L4798]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L423]               havoc __exception;
[L424]               revert := false;
[L425]   COND FALSE  !(__exception)
[L452]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2709]  COND TRUE   DType[this] == NOL
[L2710]  CALL        call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L3088]              __var_6 := null;
[L3089]  COND FALSE  !(!(_to_s522 != null))
[L3093]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s522] >= _value_s522))
[L3097]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s522]))
[L3101]  COND FALSE  !(!!frozenAccount_NOL[this][_from_s522])
[L3105]  COND FALSE  !(!!frozenAccount_NOL[this][_to_s522])
[L3109]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s522];
[L3110]              balanceOf_TokenERC20[this][_from_s522] := (balanceOf_TokenERC20[this][_from_s522] - _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3111]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s522];
[L3112]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s522];
[L3113]              balanceOf_TokenERC20[this][_to_s522] := (balanceOf_TokenERC20[this][_to_s522] + _value_s522) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3114]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s522];
[L3115]              assert { :EventEmitted "Transfer_NOL" } true;
[L2710]  RET         call _transfer~address~address~uint256_NOL__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2711]  COND FALSE  !(revert)
[L2722]              success_s221 := true;
[L452]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L453]               assume !revert && gas >= 0;
[L4798]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L4908]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:12:29,778 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:12:29,778 INFO  L82        PathProgramCache]: Analyzing trace with hash -947223819, now seen corresponding path program 1 times
[2020-11-25 02:12:29,779 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:12:29,800 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:12:29,872 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:12:29,873 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:12:29,873 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 02:12:29,873 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:12:29,873 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 02:12:29,873 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 02:12:29,874 INFO  L87              Difference]: Start difference. First operand 4935 states and 5748 transitions. cyclomatic complexity: 819 Second operand 7 states.
[2020-11-25 02:12:31,218 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:12:31,218 INFO  L93              Difference]: Finished difference Result 5052 states and 5878 transitions.
[2020-11-25 02:12:31,219 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 02:12:31,219 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5052 states and 5878 transitions.
[2020-11-25 02:12:31,230 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 02:12:31,249 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5052 states to 5052 states and 5878 transitions.
[2020-11-25 02:12:31,249 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 230
[2020-11-25 02:12:31,250 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 230
[2020-11-25 02:12:31,250 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5052 states and 5878 transitions.
[2020-11-25 02:12:31,254 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:12:31,254 INFO  L728         BuchiCegarLoop]: Abstraction has 5052 states and 5878 transitions.
[2020-11-25 02:12:31,259 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5052 states and 5878 transitions.
[2020-11-25 02:12:31,302 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5052 to 4795.
[2020-11-25 02:12:31,302 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4795 states.
[2020-11-25 02:12:31,307 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4795 states to 4795 states and 5569 transitions.
[2020-11-25 02:12:31,307 INFO  L751         BuchiCegarLoop]: Abstraction has 4795 states and 5569 transitions.
[2020-11-25 02:12:31,307 INFO  L631         BuchiCegarLoop]: Abstraction has 4795 states and 5569 transitions.
[2020-11-25 02:12:31,307 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 02:12:31,307 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4795 states and 5569 transitions.
[2020-11-25 02:12:31,312 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 02:12:31,313 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 02:12:31,313 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 02:12:31,315 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 02:12:31,315 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L4898]              assume null == 0;
[L4899]  CALL        call this := FreshRefGenerator__success();
[L2464]              havoc newRef;
[L2465]              assume Alloc[newRef] == false;
[L2466]              Alloc[newRef] := true;
[L2467]              assume newRef != null;
[L4899]  RET         call this := FreshRefGenerator__success();
[L4900]              assume now >= 0;
[L4901]              assume DType[this] == NOL;
[L4902]              assume msgvalue_MSG == 0;
[L4903]              gas := gas - 53000;
[L4904]  CALL        call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1204]              havoc __exception;
[L1205]              revert := false;
[L1206]  COND FALSE  !(__exception)
[L1233]  CALL        call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3039]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2500]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2483]              assume msgsender_MSG != null;
[L2484]              Balance[this] := 0;
[L2485]              owner_owned[this] := null;
[L2487]              owner_owned[this] := msgsender_MSG;
[L2500]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2501]  COND FALSE  !(revert)
[L3039]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3040]  COND FALSE  !(revert)
[L3043]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L2628]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2596]              assume msgsender_MSG != null;
[L2597]              Balance[this] := 0;
[L2598]              name_TokenERC20[this] := 1234253568;
[L2599]              symbol_TokenERC20[this] := 1234253568;
[L2600]              decimals_TokenERC20[this] := 18;
[L2601]              totalSupply_TokenERC20[this] := 0;
[L2602]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2603]              sum_balanceOf0[this] := 0;
[L2604]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2605]              sum_allowance1[this] := 0;
[L2607]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2608]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s124, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2609]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2610]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2611]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2612]              name_TokenERC20[this] := tokenName_s124;
[L2613]              symbol_TokenERC20[this] := tokenSymbol_s124;
[L2628]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s124, tokenName_s124, tokenSymbol_s124);
[L2629]  COND FALSE  !(revert)
[L3043]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3044]  COND FALSE  !(revert)
[L3047]  CALL        call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3013]              assume msgsender_MSG != null;
[L3014]              Balance[this] := 0;
[L3015]              sellPrice_NOL[this] := 0;
[L3016]              buyPrice_NOL[this] := 0;
[L3017]              frozenAccount_NOL[this] := zeroRefboolArr();
[L3047]  RET         call NOL_NOL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L3048]  COND FALSE  !(revert)
[L1233]  RET         call NOL_NOL__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L1234]              assume !revert && gas >= 0;
[L4904]  RET         call NOL_NOL(this, msgsender_MSG, msgvalue_MSG, initialSupply_s452, tokenName_s452, tokenSymbol_s452);
[L4905]              assume !revert && gas >= 0;
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND TRUE   choice == 14
[L4794]              gas := gas - 21000;
[L4795]  COND TRUE   gas >= 0
[L4796]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4797]              assume msgvalue_MSG == 0;
[L4798]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L423]               havoc __exception;
[L424]               revert := false;
[L425]   COND FALSE  !(__exception)
[L452]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2709]  COND FALSE  !(DType[this] == NOL)
[L2714]  COND TRUE   DType[this] == TokenERC20
[L2715]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2664]              __var_2 := null;
[L2665]  COND FALSE  !(!(_to_s202 != null))
[L2669]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L2673]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L2677]              previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2678]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L2679]              balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2680]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L2681]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L2682]              balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2683]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L2684]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L2685]              assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L2715]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2716]  COND FALSE  !(revert)
[L2722]              success_s221 := true;
[L452]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L453]               assume !revert && gas >= 0;
[L4798]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L4908]  RET         call CorralChoice_NOL(this);

Loop:
[L4908]  CALL        call CorralChoice_NOL(this);
[L4683]              havoc msgsender_MSG;
[L4684]              havoc msgvalue_MSG;
[L4685]              havoc choice;
[L4686]              havoc __ret_0_owner;
[L4687]              havoc newOwner_s35;
[L4688]              havoc __ret_0_name;
[L4689]              havoc __ret_0_symbol;
[L4690]              havoc __ret_0_decimals;
[L4691]              havoc __ret_0_totalSupply;
[L4692]              havoc arg662_s0;
[L4693]              havoc __ret_0_balanceOf;
[L4694]              havoc arg663_s0;
[L4695]              havoc arg664_s0;
[L4696]              havoc __ret_0_allowance;
[L4697]              havoc initialSupply_s124;
[L4698]              havoc tokenName_s124;
[L4699]              havoc tokenSymbol_s124;
[L4700]              havoc _to_s221;
[L4701]              havoc _value_s221;
[L4702]              havoc success_s221;
[L4703]              havoc _from_s261;
[L4704]              havoc _to_s261;
[L4705]              havoc _value_s261;
[L4706]              havoc success_s261;
[L4707]              havoc _spender_s289;
[L4708]              havoc _value_s289;
[L4709]              havoc success_s289;
[L4710]              havoc _spender_s327;
[L4711]              havoc _value_s327;
[L4712]              havoc _extraData_s327;
[L4713]              havoc success_s327;
[L4714]              havoc _value_s363;
[L4715]              havoc success_s363;
[L4716]              havoc _from_s418;
[L4717]              havoc _value_s418;
[L4718]              havoc success_s418;
[L4719]              havoc __ret_0_sellPrice;
[L4720]              havoc __ret_0_buyPrice;
[L4721]              havoc arg665_s0;
[L4722]              havoc __ret_0_frozenAccount;
[L4723]              havoc initialSupply_s452;
[L4724]              havoc tokenName_s452;
[L4725]              havoc tokenSymbol_s452;
[L4726]              havoc target_s560;
[L4727]              havoc mintedAmount_s560;
[L4728]              havoc target_s581;
[L4729]              havoc freeze_s581;
[L4730]              havoc newSellPrice_s599;
[L4731]              havoc newBuyPrice_s599;
[L4732]              havoc amount_s659;
[L4733]              havoc tmpNow;
[L4734]              havoc gas;
[L4735]              assume gas > 4000000 && gas <= 8000000;
[L4736]              tmpNow := now;
[L4737]              havoc now;
[L4738]              assume now > tmpNow;
[L4739]              assume msgsender_MSG != null;
[L4740]              assume DType[msgsender_MSG] != owned;
[L4741]              assume DType[msgsender_MSG] != tokenRecipient;
[L4742]              assume DType[msgsender_MSG] != TokenERC20;
[L4743]              assume DType[msgsender_MSG] != NOL;
[L4744]              Alloc[msgsender_MSG] := true;
[L4745]  COND FALSE  !(choice == 22)
[L4751]  COND FALSE  !(choice == 21)
[L4757]  COND FALSE  !(choice == 20)
[L4763]  COND FALSE  !(choice == 19)
[L4769]  COND FALSE  !(choice == 18)
[L4775]  COND FALSE  !(choice == 17)
[L4781]  COND FALSE  !(choice == 16)
[L4787]  COND FALSE  !(choice == 15)
[L4793]  COND TRUE   choice == 14
[L4794]              gas := gas - 21000;
[L4795]  COND TRUE   gas >= 0
[L4796]              assume _value_s221 >= 0 && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4797]              assume msgvalue_MSG == 0;
[L4798]  CALL        call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s221 && _value_s221 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s221 >= 0) && _value_s221 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s221] >= 0) && balanceOf_TokenERC20[this][_to_s221] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L423]               havoc __exception;
[L424]               revert := false;
[L425]   COND FALSE  !(__exception)
[L452]   CALL        call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L2709]  COND FALSE  !(DType[this] == NOL)
[L2714]  COND TRUE   DType[this] == TokenERC20
[L2715]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2664]              __var_2 := null;
[L2665]  COND FALSE  !(!(_to_s202 != null))
[L2669]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s202] >= _value_s202))
[L2673]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s202]))
[L2677]              previousBalances_s202 := (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2678]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s202];
[L2679]              balanceOf_TokenERC20[this][_from_s202] := (balanceOf_TokenERC20[this][_from_s202] - _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2680]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s202];
[L2681]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s202];
[L2682]              balanceOf_TokenERC20[this][_to_s202] := (balanceOf_TokenERC20[this][_to_s202] + _value_s202) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2683]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s202];
[L2684]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L2685]              assert (balanceOf_TokenERC20[this][_from_s202] + balanceOf_TokenERC20[this][_to_s202]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s202;
[L2715]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s221, _value_s221);
[L2716]  COND FALSE  !(revert)
[L2722]              success_s221 := true;
[L452]   RET         call success_s221 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L453]               assume !revert && gas >= 0;
[L4798]  RET         call success_s221 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s221, _value_s221);
[L4908]  RET         call CorralChoice_NOL(this);

[2020-11-25 02:12:31,318 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 02:12:31,318 INFO  L82        PathProgramCache]: Analyzing trace with hash 525481955, now seen corresponding path program 1 times
[2020-11-25 02:12:31,319 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 02:12:31,327 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 02:12:31,353 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 02:12:31,354 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 02:12:31,354 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 02:12:31,354 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 02:12:31,354 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 02:12:31,354 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 02:12:31,354 INFO  L87              Difference]: Start difference. First operand 4795 states and 5569 transitions. cyclomatic complexity: 780 Second operand 6 states.
[2020-11-25 02:12:31,396 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 02:12:31,396 INFO  L93              Difference]: Finished difference Result 2600 states and 2999 transitions.
[2020-11-25 02:12:31,396 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 02:12:31,396 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2600 states and 2999 transitions.
[2020-11-25 02:12:31,401 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 02:12:31,401 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2600 states to 0 states and 0 transitions.
[2020-11-25 02:12:31,401 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 02:12:31,401 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 02:12:31,401 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 02:12:31,401 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 02:12:31,401 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:12:31,401 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:12:31,401 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 02:12:31,401 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 02:12:31,402 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 02:12:31,402 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 02:12:31,402 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 02:12:31,405 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:12:31 BasicIcfg
[2020-11-25 02:12:31,405 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 02:12:31,405 INFO  L168              Benchmark]: Toolchain (without parser) took 6194.03 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 625.5 MB). Free memory was 935.2 MB in the beginning and 1.3 GB in the end (delta: -360.4 MB). Peak memory consumption was 265.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,406 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,406 INFO  L168              Benchmark]: Boogie Preprocessor took 120.33 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,407 INFO  L168              Benchmark]: UtopiaSpecLang took 63.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,407 INFO  L168              Benchmark]: Boogie Printer took 16.99 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,407 INFO  L168              Benchmark]: RCFGBuilder took 791.54 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.6 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,407 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.39 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 786.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,408 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1328.23 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 786.7 MB in the beginning and 944.3 MB in the end (delta: -157.7 MB). Peak memory consumption was 176.2 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,408 INFO  L168              Benchmark]: BlockEncodingV2 took 148.18 ms. Allocated memory is still 1.2 GB. Free memory was 944.3 MB in the beginning and 877.6 MB in the end (delta: 66.7 MB). Peak memory consumption was 66.7 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,408 INFO  L168              Benchmark]: BuchiAutomizer took 3679.65 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 423.6 MB). Free memory was 877.6 MB in the beginning and 1.3 GB in the end (delta: -418.0 MB). Peak memory consumption was 5.6 MB. Max. memory is 15.3 GB.
[2020-11-25 02:12:31,411 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5488 locations, 9675 edges
  - StatisticsResult: Encoded RCFG
    5380 locations, 9419 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 120.33 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 63.27 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.99 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 791.54 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 795.6 MB in the end (delta: 118.1 MB). Peak memory consumption was 118.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.39 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 786.7 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1328.23 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 786.7 MB in the beginning and 944.3 MB in the end (delta: -157.7 MB). Peak memory consumption was 176.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 148.18 ms. Allocated memory is still 1.2 GB. Free memory was 944.3 MB in the beginning and 877.6 MB in the end (delta: 66.7 MB). Peak memory consumption was 66.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3679.65 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 423.6 MB). Free memory was 877.6 MB in the beginning and 1.3 GB in the end (delta: -418.0 MB). Peak memory consumption was 5.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2323 locations, 3072 edges
  - StatisticsResult: BuchiProgram size
    5488 locations, 9675 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 7 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.6s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.5s. Construction of modules took 1.8s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 751 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4935 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19525 SDtfs, 16324 SDslu, 24002 SDs, 0 SdLazy, 16369 SolverSat, 3163 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.8s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_TokenERC200) ==> ( <>(fail_transfer_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
