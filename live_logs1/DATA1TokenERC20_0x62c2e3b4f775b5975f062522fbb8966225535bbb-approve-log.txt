This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:21:08,216 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:21:08,217 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:21:08,228 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:21:08,228 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:21:08,228 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:21:08,229 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:21:08,231 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:21:08,232 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:21:08,233 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:21:08,234 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:21:08,234 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:21:08,235 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:21:08,236 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:21:08,237 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:21:08,237 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:21:08,238 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:21:08,239 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:21:08,240 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:21:08,242 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:21:08,243 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:21:08,243 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:21:08,245 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:21:08,245 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:21:08,246 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:21:08,246 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:21:08,246 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:21:08,247 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:21:08,247 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:21:08,248 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:21:08,248 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:21:08,249 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:21:08,249 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:21:08,250 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:21:08,250 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:21:08,251 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:21:08,251 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:21:08,251 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:21:08,251 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:21:08,252 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:21:08,252 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:21:08,253 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:21:08,260 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:21:08,260 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:21:08,261 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:21:08,261 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:21:08,261 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:21:08,262 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:21:08,262 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:21:08,262 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:21:08,262 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:21:08,262 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:21:08,262 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:21:08,262 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:21:08,263 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:21:08,263 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:21:08,264 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:21:08,264 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:21:08,264 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:21:08,264 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:21:08,284 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:21:08,294 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:21:08,298 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:21:08,299 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:21:08,300 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:21:08,301 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl
[2020-11-25 13:21:08,301 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl'
[2020-11-25 13:21:08,364 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:21:08,365 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:21:08,365 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:21:08,366 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:21:08,366 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:21:08,381 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,383 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,405 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,406 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,421 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,427 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,431 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,437 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:21:08,437 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:21:08,437 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:21:08,440 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:21:08,443 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/1) ...
[2020-11-25 13:21:08,456 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DATA1TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(DATA1TokenERC20.approve(spender, value), return == true && allowance_DATA1TokenERC20[this][msg.sender][spender] == value &&  totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:08,461 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DATA1TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(DATA1TokenERC20.approve(spender, value), return == true && allowance_DATA1TokenERC20[this][msg.sender][spender] == value &&  totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:08,468 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DATA1TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(DATA1TokenERC20.approve(spender, value), return == true && allowance_DATA1TokenERC20[this][msg.sender][spender] == value &&  totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:08,473 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s248 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s248,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]]
[2020-11-25 13:21:08,476 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( success_s248==true && allowance_DATA1TokenERC20[this][msg.sender][_spender_s248]==_value_s248 ) && totalSupply_DATA1TokenERC20[this]==( old(totalSupply_DATA1TokenERC20[this]) ) ) && balanceOf_DATA1TokenERC20[this]==( old(balanceOf_DATA1TokenERC20[this]) ) ) && allowance_DATA1TokenERC20[this][p1][p2]==( old(allowance_DATA1TokenERC20[this][p1][p2]) ) ) && name_DATA1TokenERC20[this]==( old(name_DATA1TokenERC20[this]) ) ) && symbol_DATA1TokenERC20[this]==( old(symbol_DATA1TokenERC20[this]) ) ) && decimals_DATA1TokenERC20[this]==( old(decimals_DATA1TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s248,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_DATA1TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_spender_s248,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],IdentifierExpression[_value_s248,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_DATA1TokenERC20>]]]]]]
[2020-11-25 13:21:08,479 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DATA1TokenERC20.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(DATA1TokenERC20.approve(spender, value), return == true && allowance_DATA1TokenERC20[this][msg.sender][spender] == value &&  totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:08,480 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_DATA1TokenERC200) ==> ( <>AP(success_approve_DATA1TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:21:08,484 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:08 PropertyContainer
[2020-11-25 13:21:08,485 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:21:08,485 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:21:08,485 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:21:08,485 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:21:08,486 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/2) ...
[2020-11-25 13:21:08,486 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:21:08,486 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:21:08,494 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:08" (2/2) ...
[2020-11-25 13:21:08,494 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:21:08,495 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:21:08,495 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:21:08,495 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:21:08,496 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/2) ...
[2020-11-25 13:21:08,548 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:21:08,548 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:21:08,548 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:21:08,548 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:21:08,548 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:08,549 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:21:08,550 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:21:08,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:21:08,551 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:21:08,551 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,552 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:21:08,553 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:21:08,554 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:21:08,554 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:21:08,554 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__success
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:21:08,555 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:21:08,556 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:21:08,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:21:08,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 13:21:08,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 13:21:08,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:21:08,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:21:08,557 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:21:08,557 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:21:08,703 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:08,938 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:08,938 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:08,938 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:08,972 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:21:08,972 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 13:21:08,974 INFO  L202        PluginConnector]: Adding new model DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:08 BoogieIcfgContainer
[2020-11-25 13:21:08,974 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:08" (2/2) ...
[2020-11-25 13:21:08,974 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:21:08,974 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4f55c588 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:08, skipping insertion in model container
[2020-11-25 13:21:08,974 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:21:08,975 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:21:08,975 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:21:08,976 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:21:08,976 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/3) ...
[2020-11-25 13:21:08,977 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@453f81d6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:08, skipping insertion in model container
[2020-11-25 13:21:08,977 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:08" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:21:09,011 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:09 NWAContainer
[2020-11-25 13:21:09,011 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:21:09,011 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:21:09,011 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:21:09,012 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:21:09,013 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:08" (3/4) ...
[2020-11-25 13:21:09,013 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@10807f8f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:09, skipping insertion in model container
[2020-11-25 13:21:09,014 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:09" (4/4) ...
[2020-11-25 13:21:09,016 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:21:09,019 INFO  L110   BuchiProductObserver]: Initial RCFG 695 locations, 841 edges
[2020-11-25 13:21:09,019 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:21:09,028 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:21:09,879 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:21:09,881 INFO  L110   BuchiProductObserver]: BuchiProgram size 1624 locations, 2708 edges
[2020-11-25 13:21:09,881 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:09 BoogieIcfgContainer
[2020-11-25 13:21:09,882 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:21:09,882 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:21:09,882 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:21:09,884 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:21:09,884 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:09" (1/1) ...
[2020-11-25 13:21:09,927 INFO  L313           BlockEncoder]: Initial Icfg 1624 locations, 2708 edges
[2020-11-25 13:21:09,927 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:21:09,927 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:21:09,928 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:21:09,928 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:21:09,934 INFO  L70    emoveInfeasibleEdges]: Removed 24 edges and 7 locations because of local infeasibility
[2020-11-25 13:21:09,938 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 13:21:09,943 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:21:09,944 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:21:09,946 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:21:09,946 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:21:09,948 INFO  L313           BlockEncoder]: Encoded RCFG 1608 locations, 2671 edges
[2020-11-25 13:21:09,948 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:21:09 BasicIcfg
[2020-11-25 13:21:09,948 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:21:09,948 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:21:09,948 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:21:09,950 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:21:09,950 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:09,950 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:08" (1/6) ...
[2020-11-25 13:21:09,951 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4364fdd4 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:09, skipping insertion in model container
[2020-11-25 13:21:09,951 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:09,951 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:08" (2/6) ...
[2020-11-25 13:21:09,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4364fdd4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:09, skipping insertion in model container
[2020-11-25 13:21:09,952 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:09,952 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:08" (3/6) ...
[2020-11-25 13:21:09,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4364fdd4 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:21:09, skipping insertion in model container
[2020-11-25 13:21:09,952 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:09,952 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:09" (4/6) ...
[2020-11-25 13:21:09,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4364fdd4 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:09, skipping insertion in model container
[2020-11-25 13:21:09,952 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:09,952 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:09" (5/6) ...
[2020-11-25 13:21:09,952 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4364fdd4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:21:09, skipping insertion in model container
[2020-11-25 13:21:09,952 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:09,953 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:21:09" (6/6) ...
[2020-11-25 13:21:09,953 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_approve.bpl_BEv2
[2020-11-25 13:21:10,001 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:21:10,002 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:21:10,002 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:21:10,002 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:21:10,002 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:21:10,002 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:21:10,002 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:21:10,003 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:21:10,003 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:21:10,024 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1608 states.
[2020-11-25 13:21:10,065 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:10,066 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:10,066 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:10,075 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:10,075 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:10,075 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:21:10,076 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1608 states.
[2020-11-25 13:21:10,087 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:10,087 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:10,087 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:10,089 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:10,089 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_DATA1TokenERC200 := false;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND TRUE   choice == 10
[L1819]              gas := gas - 21000;
[L1820]  COND FALSE  !(gas >= 0)
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:10,107 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:10,108 INFO  L82        PathProgramCache]: Analyzing trace with hash 1998094395, now seen corresponding path program 1 times
[2020-11-25 13:21:10,112 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:10,134 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:10,178 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:10,180 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:10,180 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:21:10,184 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:10,280 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:21:10,280 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:21:10,282 INFO  L87              Difference]: Start difference. First operand 1608 states. Second operand 4 states.
[2020-11-25 13:21:10,506 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:10,506 INFO  L93              Difference]: Finished difference Result 1253 states and 1364 transitions.
[2020-11-25 13:21:10,506 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:21:10,508 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1253 states and 1364 transitions.
[2020-11-25 13:21:10,517 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:10,530 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1253 states to 1251 states and 1360 transitions.
[2020-11-25 13:21:10,531 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 13:21:10,533 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 573
[2020-11-25 13:21:10,534 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1251 states and 1360 transitions.
[2020-11-25 13:21:10,539 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:10,540 INFO  L728         BuchiCegarLoop]: Abstraction has 1251 states and 1360 transitions.
[2020-11-25 13:21:10,556 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1251 states and 1360 transitions.
[2020-11-25 13:21:10,587 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1251 to 1251.
[2020-11-25 13:21:10,588 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1251 states.
[2020-11-25 13:21:10,592 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1251 states to 1251 states and 1360 transitions.
[2020-11-25 13:21:10,593 INFO  L751         BuchiCegarLoop]: Abstraction has 1251 states and 1360 transitions.
[2020-11-25 13:21:10,593 INFO  L631         BuchiCegarLoop]: Abstraction has 1251 states and 1360 transitions.
[2020-11-25 13:21:10,593 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:21:10,593 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1251 states and 1360 transitions.
[2020-11-25 13:21:10,599 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:10,599 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:10,600 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:10,602 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:10,602 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_DATA1TokenERC200 := false;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s248;
[L3]                 call_approve_DATA1TokenERC200 := true;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L325]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1162]              allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1163]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1164]              assert { :EventEmitted "Approval_DATA1TokenERC20" } true;
[L1165]              success_s248 := true;
[L325]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L326]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s248 == true && allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] == _value_s248) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s248;
[L3]                 call_approve_DATA1TokenERC200 := true;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L325]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1162]              allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1163]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1164]              assert { :EventEmitted "Approval_DATA1TokenERC20" } true;
[L1165]              success_s248 := true;
[L325]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L326]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s248 == true && allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] == _value_s248) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:10,607 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:10,607 INFO  L82        PathProgramCache]: Analyzing trace with hash 1493261777, now seen corresponding path program 1 times
[2020-11-25 13:21:10,608 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:10,641 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:10,776 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:10,776 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:10,776 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 13:21:10,777 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:10,778 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 13:21:10,778 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 13:21:10,778 INFO  L87              Difference]: Start difference. First operand 1251 states and 1360 transitions. cyclomatic complexity: 111 Second operand 13 states.
[2020-11-25 13:21:11,779 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:11,779 INFO  L93              Difference]: Finished difference Result 1372 states and 1503 transitions.
[2020-11-25 13:21:11,779 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 13:21:11,780 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1372 states and 1503 transitions.
[2020-11-25 13:21:11,786 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 13:21:11,792 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1372 states to 1372 states and 1503 transitions.
[2020-11-25 13:21:11,792 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 630
[2020-11-25 13:21:11,793 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 630
[2020-11-25 13:21:11,793 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1372 states and 1503 transitions.
[2020-11-25 13:21:11,796 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:11,796 INFO  L728         BuchiCegarLoop]: Abstraction has 1372 states and 1503 transitions.
[2020-11-25 13:21:11,797 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1372 states and 1503 transitions.
[2020-11-25 13:21:11,813 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1372 to 1343.
[2020-11-25 13:21:11,813 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1343 states.
[2020-11-25 13:21:11,816 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1343 states to 1343 states and 1465 transitions.
[2020-11-25 13:21:11,816 INFO  L751         BuchiCegarLoop]: Abstraction has 1343 states and 1465 transitions.
[2020-11-25 13:21:11,816 INFO  L631         BuchiCegarLoop]: Abstraction has 1343 states and 1465 transitions.
[2020-11-25 13:21:11,816 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:21:11,816 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1343 states and 1465 transitions.
[2020-11-25 13:21:11,819 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:11,819 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:11,820 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:11,821 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:11,822 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_DATA1TokenERC200 := false;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s248;
[L3]                 call_approve_DATA1TokenERC200 := true;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND TRUE   __exception
[L305]               __tmp__Balance := Balance;
[L306]               __tmp__DType := DType;
[L307]               __tmp__Alloc := Alloc;
[L308]               __tmp__balance_ADDR := balance_ADDR;
[L309]               __tmp__M_Ref_int := M_Ref_int;
[L310]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L311]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L312]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L313]               __tmp__sum_allowance1 := sum_allowance1;
[L314]               __tmp__Length := Length;
[L315]               __tmp__now := now;
[L316]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L317]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L318]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L319]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L320]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L321]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L322]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1152]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1153]              __tmp__allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1154]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1155]              success_s248 := true;
[L322]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L323]               assume revert || gas < 0;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s248;
[L3]                 call_approve_DATA1TokenERC200 := true;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND TRUE   __exception
[L305]               __tmp__Balance := Balance;
[L306]               __tmp__DType := DType;
[L307]               __tmp__Alloc := Alloc;
[L308]               __tmp__balance_ADDR := balance_ADDR;
[L309]               __tmp__M_Ref_int := M_Ref_int;
[L310]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L311]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L312]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L313]               __tmp__sum_allowance1 := sum_allowance1;
[L314]               __tmp__Length := Length;
[L315]               __tmp__now := now;
[L316]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L317]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L318]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L319]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L320]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L321]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L322]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1152]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] - __tmp__allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1153]              __tmp__allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1154]              __tmp__sum_allowance1[msgsender_MSG] := __tmp__sum_allowance1[msgsender_MSG] + __tmp__allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1155]              success_s248 := true;
[L322]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L323]               assume revert || gas < 0;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:11,825 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:11,825 INFO  L82        PathProgramCache]: Analyzing trace with hash -233495336, now seen corresponding path program 1 times
[2020-11-25 13:21:11,825 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:11,837 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:11,858 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:11,858 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:11,858 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 13:21:11,859 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:11,859 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 13:21:11,859 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 13:21:11,859 INFO  L87              Difference]: Start difference. First operand 1343 states and 1465 transitions. cyclomatic complexity: 126 Second operand 5 states.
[2020-11-25 13:21:12,004 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:12,004 INFO  L93              Difference]: Finished difference Result 1805 states and 2022 transitions.
[2020-11-25 13:21:12,004 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 13:21:12,004 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1805 states and 2022 transitions.
[2020-11-25 13:21:12,011 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 13:21:12,019 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1805 states to 1281 states and 1488 transitions.
[2020-11-25 13:21:12,019 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 607
[2020-11-25 13:21:12,019 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 607
[2020-11-25 13:21:12,019 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1281 states and 1488 transitions.
[2020-11-25 13:21:12,022 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:12,023 INFO  L728         BuchiCegarLoop]: Abstraction has 1281 states and 1488 transitions.
[2020-11-25 13:21:12,024 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1281 states and 1488 transitions.
[2020-11-25 13:21:12,035 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1281 to 834.
[2020-11-25 13:21:12,035 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 834 states.
[2020-11-25 13:21:12,036 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 834 states to 834 states and 917 transitions.
[2020-11-25 13:21:12,036 INFO  L751         BuchiCegarLoop]: Abstraction has 834 states and 917 transitions.
[2020-11-25 13:21:12,036 INFO  L631         BuchiCegarLoop]: Abstraction has 834 states and 917 transitions.
[2020-11-25 13:21:12,036 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:21:12,036 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 834 states and 917 transitions.
[2020-11-25 13:21:12,038 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:12,038 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:12,038 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:12,040 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:12,040 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_DATA1TokenERC200 := false;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != _spender_s248);
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L325]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1162]              allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1163]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1164]              assert { :EventEmitted "Approval_DATA1TokenERC20" } true;
[L1165]              success_s248 := true;
[L325]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L326]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s248 == true && allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] == _value_s248) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s248;
[L3]                 call_approve_DATA1TokenERC200 := true;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L325]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1162]              allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1163]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1164]              assert { :EventEmitted "Approval_DATA1TokenERC20" } true;
[L1165]              success_s248 := true;
[L325]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L326]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s248 == true && allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] == _value_s248) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND FALSE  !(choice == 4)
[L1861]  COND FALSE  !(choice == 3)
[L1868]  COND TRUE   choice == 2
[L1869]              gas := gas - 21000;
[L1870]  COND TRUE   gas >= 0
[L1871]              assume _value_s248 >= 0 && _value_s248 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1872]              assume msgvalue_MSG == 0;
[L1873]  CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s248;
[L3]                 call_approve_DATA1TokenERC200 := true;
[L3]                 call_approve_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L302]               havoc __exception;
[L303]               revert := false;
[L304]   COND FALSE  !(__exception)
[L325]   CALL        call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1161]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] - allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1162]              allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] := _value_s248;
[L1163]              sum_allowance1[msgsender_MSG] := sum_allowance1[msgsender_MSG] + allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248];
[L1164]              assert { :EventEmitted "Approval_DATA1TokenERC20" } true;
[L1165]              success_s248 := true;
[L325]   RET         call success_s248 := approve~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L326]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((success_s248 == true && allowance_DATA1TokenERC20[this][msgsender_MSG][_spender_s248] == _value_s248) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this] == old(balanceOf_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this][p1][p2] == old(allowance_DATA1TokenERC20[this][p1][p2])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1873]  RET         call success_s248 := approve~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _spender_s248, _value_s248);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:12,042 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:12,043 INFO  L82        PathProgramCache]: Analyzing trace with hash -1616044636, now seen corresponding path program 1 times
[2020-11-25 13:21:12,043 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:12,061 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:12,117 INFO  L134       CoverageAnalysis]: Checked inductivity of 59 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 55 trivial. 0 not checked.
[2020-11-25 13:21:12,117 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:12,117 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 13:21:12,117 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:12,117 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 13:21:12,118 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 13:21:12,118 INFO  L87              Difference]: Start difference. First operand 834 states and 917 transitions. cyclomatic complexity: 86 Second operand 7 states.
[2020-11-25 13:21:12,202 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:12,202 INFO  L93              Difference]: Finished difference Result 468 states and 509 transitions.
[2020-11-25 13:21:12,202 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 13:21:12,202 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 468 states and 509 transitions.
[2020-11-25 13:21:12,204 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 13:21:12,204 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 468 states to 0 states and 0 transitions.
[2020-11-25 13:21:12,204 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 13:21:12,204 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 13:21:12,204 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 13:21:12,204 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:12,204 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:21:12,204 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:21:12,204 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 13:21:12,204 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:21:12,204 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 13:21:12,204 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 13:21:12,204 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 13:21:12,207 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:21:12 BasicIcfg
[2020-11-25 13:21:12,207 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:21:12,208 INFO  L168              Benchmark]: Toolchain (without parser) took 3843.30 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 242.7 MB). Free memory was 940.6 MB in the beginning and 917.9 MB in the end (delta: 22.7 MB). Peak memory consumption was 265.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,209 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,209 INFO  L168              Benchmark]: Boogie Preprocessor took 71.62 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,209 INFO  L168              Benchmark]: UtopiaSpecLang took 47.45 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,209 INFO  L168              Benchmark]: Boogie Printer took 9.71 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,210 INFO  L168              Benchmark]: RCFGBuilder took 479.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,210 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.59 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,210 INFO  L168              Benchmark]: BÃ¼chi Program Product took 870.44 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 872.6 MB in the beginning and 930.0 MB in the end (delta: -57.4 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,210 INFO  L168              Benchmark]: BlockEncodingV2 took 66.19 ms. Allocated memory is still 1.1 GB. Free memory was 926.5 MB in the beginning and 907.7 MB in the end (delta: 18.7 MB). Peak memory consumption was 18.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,211 INFO  L168              Benchmark]: BuchiAutomizer took 2258.98 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 173.5 MB). Free memory was 907.7 MB in the beginning and 917.9 MB in the end (delta: -10.2 MB). Peak memory consumption was 163.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:12,213 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1624 locations, 2708 edges
  - StatisticsResult: Encoded RCFG
    1608 locations, 2671 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.23 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 71.62 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 47.45 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 9.71 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 479.53 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.59 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 870.44 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 69.2 MB). Free memory was 872.6 MB in the beginning and 930.0 MB in the end (delta: -57.4 MB). Peak memory consumption was 156.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 66.19 ms. Allocated memory is still 1.1 GB. Free memory was 926.5 MB in the beginning and 907.7 MB in the end (delta: 18.7 MB). Peak memory consumption was 18.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2258.98 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 173.5 MB). Free memory was 907.7 MB in the beginning and 917.9 MB in the end (delta: -10.2 MB). Peak memory consumption was 163.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    695 locations, 841 edges
  - StatisticsResult: BuchiProgram size
    1624 locations, 2708 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.2s and 5 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.3s. Construction of modules took 1.0s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 476 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1343 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 4692 SDtfs, 5273 SDslu, 8831 SDs, 0 SdLazy, 9580 SolverSat, 1222 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.0s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_DATA1TokenERC200) ==> ( <>(success_approve_DATA1TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
