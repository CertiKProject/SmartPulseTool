This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:25:23,291 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:25:23,293 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:25:23,303 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:25:23,303 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:25:23,304 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:25:23,305 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:25:23,307 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:25:23,308 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:25:23,309 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:25:23,309 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:25:23,310 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:25:23,310 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:25:23,311 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:25:23,312 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:25:23,313 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:25:23,313 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:25:23,314 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:25:23,316 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:25:23,317 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:25:23,318 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:25:23,318 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:25:23,320 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:25:23,321 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:25:23,321 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:25:23,321 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:25:23,322 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:25:23,322 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:25:23,322 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:25:23,323 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:25:23,323 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:25:23,324 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:25:23,324 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:25:23,325 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:25:23,325 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:25:23,326 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:25:23,326 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:25:23,326 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:25:23,326 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:25:23,327 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:25:23,327 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:25:23,328 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:25:23,335 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:25:23,335 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:25:23,336 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:25:23,336 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:25:23,336 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:25:23,337 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:25:23,337 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:25:23,337 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:25:23,337 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:25:23,338 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:25:23,338 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:25:23,339 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:25:23,359 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:25:23,369 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:25:23,371 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:25:23,373 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:25:23,373 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:25:23,374 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl
[2020-11-25 14:25:23,374 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl'
[2020-11-25 14:25:23,448 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:25:23,449 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:25:23,449 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:25:23,450 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:25:23,450 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:25:23,466 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,468 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,494 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,495 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,511 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,520 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,526 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,534 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:25:23,535 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:25:23,535 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:25:23,537 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:25:23,541 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/1) ...
[2020-11-25 14:25:23,558 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DUCATOProtocolToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DUCATOProtocolToken[this][msg.sender] && balances_DUCATOProtocolToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][msg.sender] >= 0 &&  balances_DUCATOProtocolToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transfer(to, value), return == true && balances_DUCATOProtocolToken[this][msg.sender] == old(balances_DUCATOProtocolToken[this][msg.sender]) - value && balances_DUCATOProtocolToken[this][to] == old(balances_DUCATOProtocolToken[this][to]) + value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this][p1] == old(balances_DUCATOProtocolToken[this][p1]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:25:23,564 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DUCATOProtocolToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DUCATOProtocolToken[this][msg.sender] && balances_DUCATOProtocolToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][msg.sender] >= 0 &&  balances_DUCATOProtocolToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transfer(to, value), return == true && balances_DUCATOProtocolToken[this][msg.sender] == old(balances_DUCATOProtocolToken[this][msg.sender]) - value && balances_DUCATOProtocolToken[this][to] == old(balances_DUCATOProtocolToken[this][to]) + value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this][p1] == old(balances_DUCATOProtocolToken[this][p1]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:25:23,571 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DUCATOProtocolToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DUCATOProtocolToken[this][msg.sender] && balances_DUCATOProtocolToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][msg.sender] >= 0 &&  balances_DUCATOProtocolToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transfer(to, value), return == true && balances_DUCATOProtocolToken[this][msg.sender] == old(balances_DUCATOProtocolToken[this][msg.sender]) - value && balances_DUCATOProtocolToken[this][to] == old(balances_DUCATOProtocolToken[this][to]) + value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this][p1] == old(balances_DUCATOProtocolToken[this][p1]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:25:23,578 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=to_s385 ) && msg.sender!=to_s385 ) && tokens_s385<=balances_DUCATOProtocolToken[this][msg.sender] ) && ( balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && tokens_s385>=0 ) && tokens_s385<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DUCATOProtocolToken[this][to_s385]>=0 ) && balances_DUCATOProtocolToken[this][to_s385]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DUCATOProtocolToken[this][msg.sender]>=0 ) && balances_DUCATOProtocolToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>],IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:25:23,581 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s385==true && balances_DUCATOProtocolToken[this][msg.sender]==( ( old(balances_DUCATOProtocolToken[this][msg.sender]) ) - tokens_s385 ) ) && balances_DUCATOProtocolToken[this][to_s385]==( ( old(balances_DUCATOProtocolToken[this][to_s385]) ) + tokens_s385 ) ) && _totalSupply_DUCATOProtocolToken[this]==( old(_totalSupply_DUCATOProtocolToken[this]) ) ) && allowed_DUCATOProtocolToken[this]==( old(allowed_DUCATOProtocolToken[this]) ) ) && balances_DUCATOProtocolToken[this][p1]==( old(balances_DUCATOProtocolToken[this][p1]) ) ) && symbol_DUCATOProtocolToken[this]==( old(symbol_DUCATOProtocolToken[this]) ) ) && name_DUCATOProtocolToken[this]==( old(name_DUCATOProtocolToken[this]) ) ) && decimals_DUCATOProtocolToken[this]==( old(decimals_DUCATOProtocolToken[this]) ) ) && _stopTrade_DUCATOProtocolToken[this]==( old(_stopTrade_DUCATOProtocolToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s385,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_DUCATOProtocolToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]],IdentifierExpression[tokens_s385,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_stopTrade_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_stopTrade_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DUCATOProtocolToken>]]]]]]
[2020-11-25 14:25:23,586 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DUCATOProtocolToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balances_DUCATOProtocolToken[this][msg.sender] && balances_DUCATOProtocolToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][msg.sender] >= 0 &&  balances_DUCATOProtocolToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transfer(to, value), return == true && balances_DUCATOProtocolToken[this][msg.sender] == old(balances_DUCATOProtocolToken[this][msg.sender]) - value && balances_DUCATOProtocolToken[this][to] == old(balances_DUCATOProtocolToken[this][to]) + value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this][p1] == old(balances_DUCATOProtocolToken[this][p1]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:25:23,586 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_DUCATOProtocolToken0) ==> ( <>AP(success_transfer_DUCATOProtocolToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:25:23,593 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:23 PropertyContainer
[2020-11-25 14:25:23,593 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:25:23,593 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:25:23,594 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:25:23,594 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:25:23,594 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/2) ...
[2020-11-25 14:25:23,595 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:25:23,595 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:25:23,607 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:23" (2/2) ...
[2020-11-25 14:25:23,607 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:25:23,607 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:25:23,608 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:25:23,608 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:25:23,608 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/2) ...
[2020-11-25 14:25:23,658 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:25:23,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:25:23,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:25:23,659 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 14:25:23,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 14:25:23,660 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 14:25:23,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 14:25:23,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken
[2020-11-25 14:25:23,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken
[2020-11-25 14:25:23,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken
[2020-11-25 14:25:23,661 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken
[2020-11-25 14:25:23,661 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken
[2020-11-25 14:25:23,662 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DUCATOProtocolToken__success
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 14:25:23,663 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DUCATOProtocolToken
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:25:23,664 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 14:25:23,665 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken__success
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken__success
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken__success
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken__success
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,666 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken__success
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken__success
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__success
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,667 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken__success
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken__success
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken__success
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:25:23,668 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:25:23,669 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,669 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:25:23,670 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 14:25:23,671 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__fail
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken__success
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken__success
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken__success
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken__success
[2020-11-25 14:25:23,672 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken__success
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken__success
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__success
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DUCATOProtocolToken__success
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken__success
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken__success
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken__fail
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken__success
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:25:23,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 14:25:23,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 14:25:23,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 14:25:23,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 14:25:23,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 14:25:23,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DUCATOProtocolToken
[2020-11-25 14:25:23,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:25:23,676 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:25:23,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:25:23,859 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:25:23,859 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:25:23,860 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:25:24,089 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:25:24,238 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:25:24,238 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:25:24,240 INFO  L202        PluginConnector]: Adding new model DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:24 BoogieIcfgContainer
[2020-11-25 14:25:24,240 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:23" (2/2) ...
[2020-11-25 14:25:24,240 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:25:24,240 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2a66ffea and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:24, skipping insertion in model container
[2020-11-25 14:25:24,241 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:25:24,241 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:25:24,241 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:25:24,242 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:25:24,242 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/3) ...
[2020-11-25 14:25:24,243 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@48539d64 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:24, skipping insertion in model container
[2020-11-25 14:25:24,243 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:23" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:25:24,280 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:24 NWAContainer
[2020-11-25 14:25:24,280 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:25:24,280 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:25:24,280 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:25:24,281 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:25:24,282 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:24" (3/4) ...
[2020-11-25 14:25:24,282 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4c40de5e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:24, skipping insertion in model container
[2020-11-25 14:25:24,282 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:24" (4/4) ...
[2020-11-25 14:25:24,285 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:25:24,288 INFO  L110   BuchiProductObserver]: Initial RCFG 1245 locations, 1547 edges
[2020-11-25 14:25:24,289 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:25:24,301 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:25:25,593 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:25:25,596 INFO  L110   BuchiProductObserver]: BuchiProgram size 2932 locations, 4983 edges
[2020-11-25 14:25:25,596 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:25 BoogieIcfgContainer
[2020-11-25 14:25:25,597 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:25:25,597 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:25:25,597 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:25:25,598 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:25:25,599 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:25" (1/1) ...
[2020-11-25 14:25:25,659 INFO  L313           BlockEncoder]: Initial Icfg 2932 locations, 4983 edges
[2020-11-25 14:25:25,660 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:25:25,660 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:25:25,660 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:25:25,661 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:25:25,671 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 13 locations because of local infeasibility
[2020-11-25 14:25:25,677 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 14:25:25,685 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:25:25,688 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:25:25,690 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:25:25,691 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:25:25,694 INFO  L313           BlockEncoder]: Encoded RCFG 2894 locations, 4889 edges
[2020-11-25 14:25:25,694 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:25:25 BasicIcfg
[2020-11-25 14:25:25,694 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:25:25,695 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:25:25,695 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:25:25,697 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:25:25,697 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:25:25,697 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:25:23" (1/6) ...
[2020-11-25 14:25:25,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4aae46ef and model type DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:25:25, skipping insertion in model container
[2020-11-25 14:25:25,699 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:25:25,699 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:25:23" (2/6) ...
[2020-11-25 14:25:25,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4aae46ef and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:25:25, skipping insertion in model container
[2020-11-25 14:25:25,699 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:25:25,699 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:25:24" (3/6) ...
[2020-11-25 14:25:25,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4aae46ef and model type DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:25:25, skipping insertion in model container
[2020-11-25 14:25:25,699 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:25:25,699 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:25:24" (4/6) ...
[2020-11-25 14:25:25,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4aae46ef and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:25:25, skipping insertion in model container
[2020-11-25 14:25:25,700 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:25:25,700 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:25:25" (5/6) ...
[2020-11-25 14:25:25,700 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4aae46ef and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:25:25, skipping insertion in model container
[2020-11-25 14:25:25,700 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:25:25,700 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:25:25" (6/6) ...
[2020-11-25 14:25:25,701 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transfer-normal.bpl_BEv2
[2020-11-25 14:25:25,738 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:25:25,738 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:25:25,738 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:25:25,738 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:25:25,738 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:25:25,738 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:25:25,738 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:25:25,738 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:25:25,738 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:25:25,763 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2894 states.
[2020-11-25 14:25:25,812 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:25:25,812 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:25:25,813 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:25:25,822 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:25:25,822 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:25:25,822 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:25:25,822 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2894 states.
[2020-11-25 14:25:25,837 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:25:25,837 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:25:25,837 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:25:25,839 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:25:25,839 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DUCATOProtocolToken0 := false;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND TRUE   revert
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND TRUE   revert
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND TRUE   choice == 14
[L3358]              gas := gas - 21000;
[L3359]  COND FALSE  !(gas >= 0)
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:25:25,853 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:25:25,853 INFO  L82        PathProgramCache]: Analyzing trace with hash -321338882, now seen corresponding path program 1 times
[2020-11-25 14:25:25,858 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:25:25,879 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:25:25,917 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:25:25,920 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:25:25,920 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:25:25,924 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:25:26,050 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:25:26,051 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:25:26,053 INFO  L87              Difference]: Start difference. First operand 2894 states. Second operand 4 states.
[2020-11-25 14:25:26,297 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:25:26,298 INFO  L93              Difference]: Finished difference Result 2003 states and 2232 transitions.
[2020-11-25 14:25:26,299 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:25:26,302 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2003 states and 2232 transitions.
[2020-11-25 14:25:26,315 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:25:26,338 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2003 states to 2003 states and 2232 transitions.
[2020-11-25 14:25:26,340 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 14:25:26,342 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 584
[2020-11-25 14:25:26,343 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2003 states and 2232 transitions.
[2020-11-25 14:25:26,348 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:25:26,348 INFO  L728         BuchiCegarLoop]: Abstraction has 2003 states and 2232 transitions.
[2020-11-25 14:25:26,361 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2003 states and 2232 transitions.
[2020-11-25 14:25:26,395 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2003 to 2003.
[2020-11-25 14:25:26,396 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2003 states.
[2020-11-25 14:25:26,399 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2003 states to 2003 states and 2232 transitions.
[2020-11-25 14:25:26,400 INFO  L751         BuchiCegarLoop]: Abstraction has 2003 states and 2232 transitions.
[2020-11-25 14:25:26,400 INFO  L631         BuchiCegarLoop]: Abstraction has 2003 states and 2232 transitions.
[2020-11-25 14:25:26,400 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:25:26,400 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2003 states and 2232 transitions.
[2020-11-25 14:25:26,405 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:25:26,406 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:25:26,406 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:25:26,407 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:25:26,407 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DUCATOProtocolToken0 := false;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND TRUE   revert
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND TRUE   choice == 11
[L3376]              gas := gas - 21000;
[L3377]  COND TRUE   gas >= 0
[L3378]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND FALSE  !(__exception)
[L694]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1991]  COND TRUE   !(_stopTrade_DUCATOProtocolToken[this] != true)
[L1992]              revert := true;
[L694]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L695]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s385 == true && balances_DUCATOProtocolToken[this][msgsender_MSG] == old(balances_DUCATOProtocolToken[this][msgsender_MSG]) - tokens_s385) && balances_DUCATOProtocolToken[this][to_s385] == old(balances_DUCATOProtocolToken[this][to_s385]) + tokens_s385) && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this][p1] == old(balances_DUCATOProtocolToken[this][p1])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND TRUE   choice == 11
[L3376]              gas := gas - 21000;
[L3377]  COND TRUE   gas >= 0
[L3378]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND FALSE  !(__exception)
[L694]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1991]  COND TRUE   !(_stopTrade_DUCATOProtocolToken[this] != true)
[L1992]              revert := true;
[L694]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L695]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s385 == true && balances_DUCATOProtocolToken[this][msgsender_MSG] == old(balances_DUCATOProtocolToken[this][msgsender_MSG]) - tokens_s385) && balances_DUCATOProtocolToken[this][to_s385] == old(balances_DUCATOProtocolToken[this][to_s385]) + tokens_s385) && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this] == old(allowed_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this][p1] == old(balances_DUCATOProtocolToken[this][p1])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:25:26,411 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:25:26,411 INFO  L82        PathProgramCache]: Analyzing trace with hash -1349790492, now seen corresponding path program 1 times
[2020-11-25 14:25:26,412 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:25:26,422 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:25:26,444 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:25:26,444 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:25:26,444 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:25:26,447 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:25:26,448 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:25:26,448 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:25:26,448 INFO  L87              Difference]: Start difference. First operand 2003 states and 2232 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 14:25:26,856 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:25:26,857 INFO  L93              Difference]: Finished difference Result 2971 states and 3396 transitions.
[2020-11-25 14:25:26,857 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:25:26,857 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2971 states and 3396 transitions.
[2020-11-25 14:25:26,869 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 14:25:26,884 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2971 states to 2821 states and 3224 transitions.
[2020-11-25 14:25:26,884 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 797
[2020-11-25 14:25:26,886 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 807
[2020-11-25 14:25:26,886 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2821 states and 3224 transitions.
[2020-11-25 14:25:26,892 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:25:26,893 INFO  L728         BuchiCegarLoop]: Abstraction has 2821 states and 3224 transitions.
[2020-11-25 14:25:26,895 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2821 states and 3224 transitions.
[2020-11-25 14:25:26,919 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2821 to 2033.
[2020-11-25 14:25:26,919 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2033 states.
[2020-11-25 14:25:26,922 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2033 states to 2033 states and 2200 transitions.
[2020-11-25 14:25:26,922 INFO  L751         BuchiCegarLoop]: Abstraction has 2033 states and 2200 transitions.
[2020-11-25 14:25:26,922 INFO  L631         BuchiCegarLoop]: Abstraction has 2033 states and 2200 transitions.
[2020-11-25 14:25:26,922 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:25:26,922 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2033 states and 2200 transitions.
[2020-11-25 14:25:26,926 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:25:26,926 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:25:26,926 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:25:26,927 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:25:26,927 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DUCATOProtocolToken0 := false;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND FALSE  !(revert)
[L1854]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]              assume msgsender_MSG != null;
[L1741]              Balance[this] := 0;
[L1742]              owner_Owned[this] := null;
[L1744]              owner_Owned[this] := msgsender_MSG;
[L1757]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1758]  COND FALSE  !(revert)
[L1854]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1855]  COND FALSE  !(revert)
[L1858]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1806]              assume msgsender_MSG != null;
[L1807]              Balance[this] := 0;
[L1808]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1809]              name_DUCATOProtocolToken[this] := 1405682701;
[L1810]              decimals_DUCATOProtocolToken[this] := 0;
[L1811]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1812]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1813]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1814]              sum_balances0[this] := 0;
[L1815]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1816]              sum_allowed1[this] := 0;
[L1818]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1819]              name_DUCATOProtocolToken[this] := -2134480732;
[L1820]              decimals_DUCATOProtocolToken[this] := 18;
[L1821]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1823]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1824]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1825]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1826]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1827]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1858]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND TRUE   choice == 11
[L3376]              gas := gas - 21000;
[L3377]  COND TRUE   gas >= 0
[L3378]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L685]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L686]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L687]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L688]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L689]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L690]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L691]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1959]  COND TRUE   !(__tmp___stopTrade_DUCATOProtocolToken[this] != true)
[L1960]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND TRUE   choice == 11
[L3376]              gas := gas - 21000;
[L3377]  COND TRUE   gas >= 0
[L3378]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L685]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L686]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L687]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L688]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L689]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L690]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L691]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1959]  COND TRUE   !(__tmp___stopTrade_DUCATOProtocolToken[this] != true)
[L1960]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:25:26,931 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:25:26,931 INFO  L82        PathProgramCache]: Analyzing trace with hash 452701264, now seen corresponding path program 1 times
[2020-11-25 14:25:26,931 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:25:26,943 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:25:26,991 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:25:26,991 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:25:26,991 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 14:25:26,992 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:25:26,992 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 14:25:26,992 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-25 14:25:26,992 INFO  L87              Difference]: Start difference. First operand 2033 states and 2200 transitions. cyclomatic complexity: 169 Second operand 11 states.
[2020-11-25 14:25:28,403 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:25:28,403 INFO  L93              Difference]: Finished difference Result 3423 states and 3792 transitions.
[2020-11-25 14:25:28,404 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 14:25:28,404 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3423 states and 3792 transitions.
[2020-11-25 14:25:28,415 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 14:25:28,449 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3423 states to 3423 states and 3792 transitions.
[2020-11-25 14:25:28,449 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1035
[2020-11-25 14:25:28,451 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1035
[2020-11-25 14:25:28,451 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3423 states and 3792 transitions.
[2020-11-25 14:25:28,454 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:25:28,454 INFO  L728         BuchiCegarLoop]: Abstraction has 3423 states and 3792 transitions.
[2020-11-25 14:25:28,456 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3423 states and 3792 transitions.
[2020-11-25 14:25:28,480 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3423 to 2075.
[2020-11-25 14:25:28,480 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2075 states.
[2020-11-25 14:25:28,483 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2075 states to 2075 states and 2251 transitions.
[2020-11-25 14:25:28,483 INFO  L751         BuchiCegarLoop]: Abstraction has 2075 states and 2251 transitions.
[2020-11-25 14:25:28,483 INFO  L631         BuchiCegarLoop]: Abstraction has 2075 states and 2251 transitions.
[2020-11-25 14:25:28,483 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:25:28,483 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2075 states and 2251 transitions.
[2020-11-25 14:25:28,487 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 14:25:28,487 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:25:28,487 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:25:28,489 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:25:28,489 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DUCATOProtocolToken0 := false;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND FALSE  !(revert)
[L1854]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]              assume msgsender_MSG != null;
[L1741]              Balance[this] := 0;
[L1742]              owner_Owned[this] := null;
[L1744]              owner_Owned[this] := msgsender_MSG;
[L1757]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1758]  COND FALSE  !(revert)
[L1854]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1855]  COND FALSE  !(revert)
[L1858]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1806]              assume msgsender_MSG != null;
[L1807]              Balance[this] := 0;
[L1808]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1809]              name_DUCATOProtocolToken[this] := 1405682701;
[L1810]              decimals_DUCATOProtocolToken[this] := 0;
[L1811]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1812]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1813]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1814]              sum_balances0[this] := 0;
[L1815]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1816]              sum_allowed1[this] := 0;
[L1818]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1819]              name_DUCATOProtocolToken[this] := -2134480732;
[L1820]              decimals_DUCATOProtocolToken[this] := 18;
[L1821]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1823]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1824]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1825]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1826]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1827]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1858]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND TRUE   choice == 11
[L3376]              gas := gas - 21000;
[L3377]  COND TRUE   gas >= 0
[L3378]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L685]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L686]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L687]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L688]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L689]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L690]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L691]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1959]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L1963]              __var_4 := null;
[L1964]  COND TRUE   !(to_s385 > null)
[L1965]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND TRUE   choice == 11
[L3376]              gas := gas - 21000;
[L3377]  COND TRUE   gas >= 0
[L3378]              assume tokens_s385 >= 0 && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3379]              assume msgvalue_MSG == 0;
[L3380]  CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L685]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L686]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L687]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L688]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L689]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L690]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L691]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1959]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L1963]              __var_4 := null;
[L1964]  COND TRUE   !(to_s385 > null)
[L1965]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:25:28,496 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:25:28,496 INFO  L82        PathProgramCache]: Analyzing trace with hash -630279659, now seen corresponding path program 1 times
[2020-11-25 14:25:28,497 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:25:28,515 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:28,533 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:28,578 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:25:28,579 INFO  L82        PathProgramCache]: Analyzing trace with hash 1829581537, now seen corresponding path program 1 times
[2020-11-25 14:25:28,579 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:25:28,583 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:28,587 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:28,595 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:25:28,595 INFO  L82        PathProgramCache]: Analyzing trace with hash 1151354957, now seen corresponding path program 1 times
[2020-11-25 14:25:28,595 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:25:28,610 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:28,627 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 2503 to 5003
[2020-11-25 14:25:28,964 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification that was a NOOP. DAG size: 236
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
[2020-11-25 14:25:29,120 WARN  L188               SmtUtils]: Spent 145.00 ms on a formula simplification that was a NOOP. DAG size: 190
[2020-11-25 14:25:29,490 WARN  L188               SmtUtils]: Spent 367.00 ms on a formula simplification. DAG size of input: 243 DAG size of output: 230
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.002s / 0.006s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
[2020-11-25 14:25:29,713 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification that was a NOOP. DAG size: 286
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3967 to 7933
[2020-11-25 14:25:29,824 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification that was a NOOP. DAG size: 229
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
[2020-11-25 14:25:29,975 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 14:25:31,056 WARN  L188               SmtUtils]: Spent 357.00 ms on a formula simplification. DAG size of input: 242 DAG size of output: 230
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 14:25:31,189 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 141 DAG size of output: 137
[2020-11-25 14:25:31,315 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification that was a NOOP. DAG size: 286
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 14:25:31,481 WARN  L188               SmtUtils]: Spent 159.00 ms on a formula simplification that was a NOOP. DAG size: 229
[2020-11-25 14:25:32,265 WARN  L188               SmtUtils]: Spent 780.00 ms on a formula simplification. DAG size of input: 421 DAG size of output: 411
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 14:25:32,374 WARN  L188               SmtUtils]: Spent 101.00 ms on a formula simplification. DAG size of input: 178 DAG size of output: 175
[2020-11-25 14:25:32,487 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification that was a NOOP. DAG size: 274
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
[2020-11-25 14:25:32,740 WARN  L188               SmtUtils]: Spent 196.00 ms on a formula simplification. DAG size of input: 276 DAG size of output: 275
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 14:25:32,848 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:32,866 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:25:32,874 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:25:32 BasicIcfg
[2020-11-25 14:25:32,874 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:25:32,874 INFO  L168              Benchmark]: Toolchain (without parser) took 9426.02 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 905.4 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -263.4 MB). Peak memory consumption was 931.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,875 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,875 INFO  L168              Benchmark]: Boogie Preprocessor took 85.23 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,875 INFO  L168              Benchmark]: UtopiaSpecLang took 58.44 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,876 INFO  L168              Benchmark]: Boogie Printer took 13.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,876 INFO  L168              Benchmark]: RCFGBuilder took 633.17 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 833.2 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,876 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.17 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,877 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1316.54 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 824.2 MB in the beginning and 1.1 GB in the end (delta: -313.9 MB). Peak memory consumption was 200.2 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,877 INFO  L168              Benchmark]: BlockEncodingV2 took 97.70 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 61.7 MB). Peak memory consumption was 61.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,877 INFO  L168              Benchmark]: BuchiAutomizer took 7179.23 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 703.6 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -127.5 MB). Peak memory consumption was 865.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:25:32,880 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2932 locations, 4983 edges
  - StatisticsResult: Encoded RCFG
    2894 locations, 4889 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 85.23 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.44 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.69 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 633.17 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 833.2 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.17 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1316.54 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 201.9 MB). Free memory was 824.2 MB in the beginning and 1.1 GB in the end (delta: -313.9 MB). Peak memory consumption was 200.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 97.70 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 61.7 MB). Peak memory consumption was 61.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7179.23 ms. Allocated memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: 703.6 MB). Free memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: -127.5 MB). Peak memory consumption was 865.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1245 locations, 1547 edges
  - StatisticsResult: BuchiProgram size
    2932 locations, 4983 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 2075 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.1s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 4.5s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 2136 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2075 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7713 SDtfs, 9182 SDslu, 9868 SDs, 0 SdLazy, 19015 SolverSat, 1935 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639693) = (new DUCATOProtocolToken)({from : (- 1)});
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND FALSE  !(revert)
[L1854]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]              assume msgsender_MSG != null;
[L1741]              Balance[this] := 0;
[L1742]              owner_Owned[this] := null;
[L1744]              owner_Owned[this] := msgsender_MSG;
[L1757]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1758]  COND FALSE  !(revert)
[L1854]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1855]  COND FALSE  !(revert)
[L1858]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1806]              assume msgsender_MSG != null;
[L1807]              Balance[this] := 0;
[L1808]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1809]              name_DUCATOProtocolToken[this] := 1405682701;
[L1810]              decimals_DUCATOProtocolToken[this] := 0;
[L1811]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1812]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1813]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1814]              sum_balances0[this] := 0;
[L1815]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1816]              sum_allowed1[this] := 0;
[L1818]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1819]              name_DUCATOProtocolToken[this] := -2134480732;
[L1820]              decimals_DUCATOProtocolToken[this] := 18;
[L1821]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1823]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1824]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1825]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1826]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1827]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1858]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
DUCATOProtocolToken(115792089237316195423570985008687907853269984665640564039457584007913129639693).transfer~address~uint256.gas(3979002)({from : (- 1), to : 0, tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L685]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L686]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L687]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L688]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L689]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L690]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L691]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1959]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L1963]              __var_4 := null;
[L1964]  COND TRUE   !(to_s385 > null)
[L1965]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);

Loop:
DUCATOProtocolToken(115792089237316195423570985008687907853269984665640564039457584007913129639693).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639686, to : (- 1), tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != to_s385) && msgsender_MSG != to_s385) && tokens_s385 <= balances_DUCATOProtocolToken[this][msgsender_MSG]) && balances_DUCATOProtocolToken[this][to_s385] + tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && tokens_s385 >= 0) && tokens_s385 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s385] >= 0) && balances_DUCATOProtocolToken[this][to_s385] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][msgsender_MSG] >= 0) && balances_DUCATOProtocolToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DUCATOProtocolToken0 := true;
[L3]                 call_transfer_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L669]               havoc __exception;
[L670]               revert := false;
[L671]   COND TRUE   __exception
[L672]               __tmp__Balance := Balance;
[L673]               __tmp__DType := DType;
[L674]               __tmp__Alloc := Alloc;
[L675]               __tmp__balance_ADDR := balance_ADDR;
[L676]               __tmp__M_Ref_int := M_Ref_int;
[L677]               __tmp__sum_balances0 := sum_balances0;
[L678]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L679]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L680]               __tmp__sum_allowed1 := sum_allowed1;
[L681]               __tmp__Length := Length;
[L682]               __tmp__now := now;
[L683]               __tmp__owner_Owned := owner_Owned;
[L684]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L685]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L686]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L687]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L688]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L689]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L690]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L691]   CALL        call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L1959]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L1963]              __var_4 := null;
[L1964]  COND TRUE   !(to_s385 > null)
[L1965]              revert := true;
[L691]   RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);
[L692]               assume revert || gas < 0;
[L3380]  RET         call success_s385 := transfer~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, to_s385, tokens_s385);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
