This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:07:16,719 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:07:16,721 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:07:16,737 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:07:16,737 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:07:16,738 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:07:16,739 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:07:16,740 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:07:16,742 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:07:16,742 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:07:16,743 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:07:16,743 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:07:16,744 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:07:16,745 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:07:16,745 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:07:16,746 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:07:16,747 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:07:16,748 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:07:16,749 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:07:16,750 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:07:16,751 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:07:16,752 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:07:16,753 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:07:16,753 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:07:16,754 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:07:16,754 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:07:16,754 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:07:16,755 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:07:16,755 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:07:16,755 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:07:16,756 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:07:16,756 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:07:16,757 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:07:16,757 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:07:16,758 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:07:16,758 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:07:16,758 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:07:16,759 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:07:16,759 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:07:16,759 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:07:16,760 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:07:16,760 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:07:16,768 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:07:16,768 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:07:16,769 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:07:16,769 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:07:16,769 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:07:16,769 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:07:16,769 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:07:16,769 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:07:16,769 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:07:16,770 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:07:16,770 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:07:16,770 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:07:16,770 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:07:16,770 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:07:16,770 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:07:16,770 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:07:16,770 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:07:16,771 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:07:16,771 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:07:16,772 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:07:16,796 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:07:16,810 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:07:16,812 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:07:16,813 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:07:16,813 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:07:16,814 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl
[2020-11-25 15:07:16,814 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl'
[2020-11-25 15:07:16,897 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:07:16,898 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:07:16,899 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:07:16,899 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:07:16,899 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:07:16,915 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,917 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,947 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,948 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,969 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,979 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,988 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:16,997 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:07:16,998 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:07:16,998 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:07:17,000 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:07:17,004 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/1) ...
[2020-11-25 15:07:17,020 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 15:07:17,026 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 15:07:17,033 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 15:07:17,039 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==_to_s365 && _value_s365>balanceOf_TokenERC20[this][msg.sender] ) && _value_s365>=0 ) && _value_s365<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s365]>=0 ) && balanceOf_TokenERC20[this][_to_s365]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][msg.sender]>=0 ) && balanceOf_TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IdentifierExpression[_to_s365,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]],BinaryExpression[COMPGT,IdentifierExpression[_value_s365,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s365,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s365,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s365,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s365,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:07:17,045 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transfer(to, value), msg.sender == to && value > balanceOf_TokenERC20[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][msg.sender] >= 0 &&  balanceOf_TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(TokenERC20.transfer)))
[2020-11-25 15:07:17,045 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_TokenERC200) ==> ( <>AP(fail_transfer_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:07:17,054 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:17 PropertyContainer
[2020-11-25 15:07:17,054 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:07:17,055 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:07:17,055 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:07:17,055 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:07:17,056 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/2) ...
[2020-11-25 15:07:17,056 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:07:17,056 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:07:17,071 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:17" (2/2) ...
[2020-11-25 15:07:17,071 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:07:17,072 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:07:17,072 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:07:17,072 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:07:17,072 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/2) ...
[2020-11-25 15:07:17,123 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:07:17,124 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,124 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,125 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 15:07:17,125 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 15:07:17,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 15:07:17,125 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 15:07:17,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 15:07:17,125 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 15:07:17,125 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 15:07:17,125 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 15:07:17,126 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 15:07:17,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 15:07:17,126 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 15:07:17,126 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 15:07:17,126 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 15:07:17,126 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 15:07:17,126 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,126 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 15:07:17,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 15:07:17,127 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 15:07:17,127 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 15:07:17,128 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 15:07:17,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 15:07:17,128 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 15:07:17,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 15:07:17,128 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 15:07:17,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 15:07:17,128 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 15:07:17,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 15:07:17,128 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 15:07:17,128 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 15:07:17,129 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 15:07:17,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 15:07:17,129 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext_NoBaseCtor__success
[2020-11-25 15:07:17,129 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext
[2020-11-25 15:07:17,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext
[2020-11-25 15:07:17,129 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20ext__success
[2020-11-25 15:07:17,129 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext
[2020-11-25 15:07:17,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext
[2020-11-25 15:07:17,129 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext
[2020-11-25 15:07:17,129 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext
[2020-11-25 15:07:17,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext
[2020-11-25 15:07:17,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext
[2020-11-25 15:07:17,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext
[2020-11-25 15:07:17,130 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:07:17,130 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 15:07:17,131 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20ext
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,132 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 15:07:17,133 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,134 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 15:07:17,135 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext_NoBaseCtor__fail
[2020-11-25 15:07:17,136 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext__success
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext__fail
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20ext__fail
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext__success
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext__fail
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext__success
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext__fail
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext__success
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext__fail
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext__success
[2020-11-25 15:07:17,137 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext__fail
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext__success
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext__fail
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext__success
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext__fail
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:07:17,138 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:07:17,138 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,139 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 15:07:17,140 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 15:07:17,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 15:07:17,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext_NoBaseCtor__fail
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext_NoBaseCtor__success
[2020-11-25 15:07:17,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext__success
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext__fail
[2020-11-25 15:07:17,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext__success
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 15:07:17,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 15:07:17,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20ext
[2020-11-25 15:07:17,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:07:17,146 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:07:17,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:07:17,792 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:07:17,793 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:07:17,839 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:07:17,839 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 15:07:17,841 INFO  L202        PluginConnector]: Adding new model ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:17 BoogieIcfgContainer
[2020-11-25 15:07:17,841 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:17" (2/2) ...
[2020-11-25 15:07:17,841 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:07:17,841 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@5b4f50a8 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:17, skipping insertion in model container
[2020-11-25 15:07:17,841 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:07:17,842 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:07:17,842 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:07:17,843 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:07:17,843 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/3) ...
[2020-11-25 15:07:17,844 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@214e4b39 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:17, skipping insertion in model container
[2020-11-25 15:07:17,844 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:17" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:07:17,879 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:17 NWAContainer
[2020-11-25 15:07:17,879 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:07:17,880 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:07:17,880 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:07:17,881 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:07:17,881 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:17" (3/4) ...
[2020-11-25 15:07:17,882 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3af7c099 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:17, skipping insertion in model container
[2020-11-25 15:07:17,882 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:17" (4/4) ...
[2020-11-25 15:07:17,885 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:07:17,889 INFO  L110   BuchiProductObserver]: Initial RCFG 1885 locations, 2421 edges
[2020-11-25 15:07:17,889 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:07:17,907 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:07:19,416 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:07:19,422 INFO  L110   BuchiProductObserver]: BuchiProgram size 4512 locations, 7833 edges
[2020-11-25 15:07:19,422 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:19 BoogieIcfgContainer
[2020-11-25 15:07:19,422 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:07:19,422 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:07:19,423 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:07:19,424 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:07:19,425 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:19" (1/1) ...
[2020-11-25 15:07:19,517 INFO  L313           BlockEncoder]: Initial Icfg 4512 locations, 7833 edges
[2020-11-25 15:07:19,517 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:07:19,518 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:07:19,518 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:07:19,518 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:07:19,531 INFO  L70    emoveInfeasibleEdges]: Removed 78 edges and 14 locations because of local infeasibility
[2020-11-25 15:07:19,548 INFO  L70        RemoveSinkStates]: Removed 130 edges and 68 locations by removing sink states
[2020-11-25 15:07:19,564 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:07:19,570 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:07:19,575 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:07:19,575 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:07:19,583 INFO  L313           BlockEncoder]: Encoded RCFG 4406 locations, 7590 edges
[2020-11-25 15:07:19,583 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:07:19 BasicIcfg
[2020-11-25 15:07:19,583 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:07:19,584 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:07:19,584 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:07:19,586 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:07:19,586 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:19,586 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:16" (1/6) ...
[2020-11-25 15:07:19,588 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5385fad7 and model type ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:07:19, skipping insertion in model container
[2020-11-25 15:07:19,588 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:19,588 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:17" (2/6) ...
[2020-11-25 15:07:19,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5385fad7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:07:19, skipping insertion in model container
[2020-11-25 15:07:19,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:19,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:17" (3/6) ...
[2020-11-25 15:07:19,589 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5385fad7 and model type ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:07:19, skipping insertion in model container
[2020-11-25 15:07:19,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:19,590 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:17" (4/6) ...
[2020-11-25 15:07:19,590 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5385fad7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:07:19, skipping insertion in model container
[2020-11-25 15:07:19,590 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:19,590 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:19" (5/6) ...
[2020-11-25 15:07:19,591 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@5385fad7 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:07:19, skipping insertion in model container
[2020-11-25 15:07:19,591 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:19,591 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:07:19" (6/6) ...
[2020-11-25 15:07:19,592 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transfer-self-fail.bpl_BEv2
[2020-11-25 15:07:19,631 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:07:19,632 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:07:19,632 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:07:19,632 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:07:19,632 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:07:19,632 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:07:19,632 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:07:19,632 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:07:19,632 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:07:19,673 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4406 states.
[2020-11-25 15:07:19,740 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:19,740 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:19,740 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:19,751 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:19,751 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:19,752 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:07:19,752 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4406 states.
[2020-11-25 15:07:19,775 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:19,775 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:19,775 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:19,777 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:19,777 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L5089]              assume null == 0;
[L5090]  CALL        call this := FreshRefGenerator__success();
[L2432]              havoc newRef;
[L2433]              assume Alloc[newRef] == false;
[L2434]              Alloc[newRef] := true;
[L2435]              assume newRef != null;
[L5090]  RET         call this := FreshRefGenerator__success();
[L5091]              assume now >= 0;
[L5092]              assume DType[this] == ERC20ext;
[L5093]              assume msgvalue_MSG == 0;
[L5094]              gas := gas - 53000;
[L5095]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1391]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3247]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2607]              assume msgsender_MSG != null;
[L2608]              Balance[this] := 0;
[L2609]              owner_owned[this] := null;
[L2611]              owner_owned[this] := msgsender_MSG;
[L2624]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L3247]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3248]  COND TRUE   revert
[L1391]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1392]              assume !revert && gas >= 0;
[L5095]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5096]              assume !revert && gas >= 0;

Loop:
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND TRUE   choice == 20
[L4950]              gas := gas - 21000;
[L4951]  COND FALSE  !(gas >= 0)
[L5099]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:19,791 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:19,791 INFO  L82        PathProgramCache]: Analyzing trace with hash 189994867, now seen corresponding path program 1 times
[2020-11-25 15:07:19,795 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:19,818 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:19,865 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:19,867 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:19,867 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:07:19,871 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:20,162 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:07:20,163 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:07:20,164 INFO  L87              Difference]: Start difference. First operand 4406 states. Second operand 4 states.
[2020-11-25 15:07:20,571 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:20,571 INFO  L93              Difference]: Finished difference Result 3029 states and 3373 transitions.
[2020-11-25 15:07:20,571 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:07:20,572 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3029 states and 3373 transitions.
[2020-11-25 15:07:20,589 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:20,614 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3029 states to 3027 states and 3369 transitions.
[2020-11-25 15:07:20,615 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 15:07:20,617 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 838
[2020-11-25 15:07:20,617 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3027 states and 3369 transitions.
[2020-11-25 15:07:20,625 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:20,625 INFO  L728         BuchiCegarLoop]: Abstraction has 3027 states and 3369 transitions.
[2020-11-25 15:07:20,643 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3027 states and 3369 transitions.
[2020-11-25 15:07:20,689 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3027 to 3027.
[2020-11-25 15:07:20,689 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3027 states.
[2020-11-25 15:07:20,694 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3027 states to 3027 states and 3369 transitions.
[2020-11-25 15:07:20,695 INFO  L751         BuchiCegarLoop]: Abstraction has 3027 states and 3369 transitions.
[2020-11-25 15:07:20,695 INFO  L631         BuchiCegarLoop]: Abstraction has 3027 states and 3369 transitions.
[2020-11-25 15:07:20,695 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:07:20,695 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3027 states and 3369 transitions.
[2020-11-25 15:07:20,701 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:20,701 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:20,701 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:20,703 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:20,703 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L5089]              assume null == 0;
[L5090]  CALL        call this := FreshRefGenerator__success();
[L2432]              havoc newRef;
[L2433]              assume Alloc[newRef] == false;
[L2434]              Alloc[newRef] := true;
[L2435]              assume newRef != null;
[L5090]  RET         call this := FreshRefGenerator__success();
[L5091]              assume now >= 0;
[L5092]              assume DType[this] == ERC20ext;
[L5093]              assume msgvalue_MSG == 0;
[L5094]              gas := gas - 53000;
[L5095]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1391]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3247]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2607]              assume msgsender_MSG != null;
[L2608]              Balance[this] := 0;
[L2609]              owner_owned[this] := null;
[L2611]              owner_owned[this] := msgsender_MSG;
[L2624]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L3247]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3248]  COND TRUE   revert
[L1391]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1392]              assume !revert && gas >= 0;
[L5095]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5096]              assume !revert && gas >= 0;
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND FALSE  !(choice == 20)
[L4955]  COND FALSE  !(choice == 19)
[L4961]  COND FALSE  !(choice == 18)
[L4967]  COND FALSE  !(choice == 17)
[L4973]  COND FALSE  !(choice == 16)
[L4979]  COND FALSE  !(choice == 15)
[L4985]  COND FALSE  !(choice == 14)
[L4991]  COND FALSE  !(choice == 13)
[L4997]  COND TRUE   choice == 12
[L4998]              gas := gas - 21000;
[L4999]  COND TRUE   gas >= 0
[L5000]              assume _value_s365 >= 0 && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5001]              assume msgvalue_MSG == 0;
[L5002]  CALL        call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s365 && _value_s365 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s365 >= 0) && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s365] >= 0) && balanceOf_TokenERC20[this][_to_s365] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L527]               havoc __exception;
[L528]               revert := false;
[L529]   COND FALSE  !(__exception)
[L558]   CALL        call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2853]  COND TRUE   DType[this] == ERC20ext
[L2854]  CALL        call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L3312]  COND TRUE   !(now > lockedAccount_ERC20ext[this][_from_s739] || (lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < balanceOf_TokenERC20[this][_from_s739])
[L3313]              revert := true;
[L2854]  RET         call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L2855]  COND TRUE   revert
[L558]   RET         call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L559]               assume !revert && gas >= 0;
[L5002]  RET         call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L5099]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND FALSE  !(choice == 20)
[L4955]  COND FALSE  !(choice == 19)
[L4961]  COND FALSE  !(choice == 18)
[L4967]  COND FALSE  !(choice == 17)
[L4973]  COND FALSE  !(choice == 16)
[L4979]  COND FALSE  !(choice == 15)
[L4985]  COND FALSE  !(choice == 14)
[L4991]  COND FALSE  !(choice == 13)
[L4997]  COND TRUE   choice == 12
[L4998]              gas := gas - 21000;
[L4999]  COND TRUE   gas >= 0
[L5000]              assume _value_s365 >= 0 && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5001]              assume msgvalue_MSG == 0;
[L5002]  CALL        call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s365 && _value_s365 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s365 >= 0) && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s365] >= 0) && balanceOf_TokenERC20[this][_to_s365] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L527]               havoc __exception;
[L528]               revert := false;
[L529]   COND FALSE  !(__exception)
[L558]   CALL        call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2853]  COND TRUE   DType[this] == ERC20ext
[L2854]  CALL        call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L3312]  COND TRUE   !(now > lockedAccount_ERC20ext[this][_from_s739] || (lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < balanceOf_TokenERC20[this][_from_s739])
[L3313]              revert := true;
[L2854]  RET         call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L2855]  COND TRUE   revert
[L558]   RET         call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L559]               assume !revert && gas >= 0;
[L5002]  RET         call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L5099]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:20,708 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:20,708 INFO  L82        PathProgramCache]: Analyzing trace with hash 529484526, now seen corresponding path program 1 times
[2020-11-25 15:07:20,709 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:20,717 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:20,738 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:20,738 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:20,738 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:07:20,739 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:20,740 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:07:20,740 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:07:20,740 INFO  L87              Difference]: Start difference. First operand 3027 states and 3369 transitions. cyclomatic complexity: 344 Second operand 4 states.
[2020-11-25 15:07:21,300 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:21,300 INFO  L93              Difference]: Finished difference Result 3886 states and 4332 transitions.
[2020-11-25 15:07:21,300 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:07:21,301 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3886 states and 4332 transitions.
[2020-11-25 15:07:21,314 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:07:21,328 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3886 states to 3690 states and 4090 transitions.
[2020-11-25 15:07:21,328 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 977
[2020-11-25 15:07:21,329 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 996
[2020-11-25 15:07:21,329 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3690 states and 4090 transitions.
[2020-11-25 15:07:21,334 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:21,334 INFO  L728         BuchiCegarLoop]: Abstraction has 3690 states and 4090 transitions.
[2020-11-25 15:07:21,337 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3690 states and 4090 transitions.
[2020-11-25 15:07:21,367 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3690 to 3273.
[2020-11-25 15:07:21,367 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3273 states.
[2020-11-25 15:07:21,371 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3273 states to 3273 states and 3575 transitions.
[2020-11-25 15:07:21,371 INFO  L751         BuchiCegarLoop]: Abstraction has 3273 states and 3575 transitions.
[2020-11-25 15:07:21,371 INFO  L631         BuchiCegarLoop]: Abstraction has 3273 states and 3575 transitions.
[2020-11-25 15:07:21,371 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:07:21,371 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3273 states and 3575 transitions.
[2020-11-25 15:07:21,377 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:07:21,377 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:21,377 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:21,379 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:21,379 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L5089]              assume null == 0;
[L5090]  CALL        call this := FreshRefGenerator__success();
[L2432]              havoc newRef;
[L2433]              assume Alloc[newRef] == false;
[L2434]              Alloc[newRef] := true;
[L2435]              assume newRef != null;
[L5090]  RET         call this := FreshRefGenerator__success();
[L5091]              assume now >= 0;
[L5092]              assume DType[this] == ERC20ext;
[L5093]              assume msgvalue_MSG == 0;
[L5094]              gas := gas - 53000;
[L5095]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1391]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3247]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2607]              assume msgsender_MSG != null;
[L2608]              Balance[this] := 0;
[L2609]              owner_owned[this] := null;
[L2611]              owner_owned[this] := msgsender_MSG;
[L2624]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L3247]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3248]  COND FALSE  !(revert)
[L3251]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2752]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2720]              assume msgsender_MSG != null;
[L2721]              Balance[this] := 0;
[L2722]              name_TokenERC20[this] := 1101944712;
[L2723]              symbol_TokenERC20[this] := 1101944712;
[L2724]              decimals_TokenERC20[this] := 18;
[L2725]              totalSupply_TokenERC20[this] := 0;
[L2726]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2727]              sum_balanceOf0[this] := 0;
[L2728]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2729]              sum_allowance1[this] := 0;
[L2731]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2732]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2734]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2735]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2736]              name_TokenERC20[this] := tokenName_s258;
[L2737]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2752]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2753]  COND FALSE  !(revert)
[L3251]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3252]  COND FALSE  !(revert)
[L3255]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3219]              assume msgsender_MSG != null;
[L3220]              Balance[this] := 0;
[L3221]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3222]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3223]              sum_lockedAccount3[this] := 0;
[L3224]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3225]              sum_lockedAmount4[this] := 0;
[L3255]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3256]  COND FALSE  !(revert)
[L1391]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1392]              assume !revert && gas >= 0;
[L5095]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5096]              assume !revert && gas >= 0;
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND FALSE  !(choice == 20)
[L4955]  COND FALSE  !(choice == 19)
[L4961]  COND FALSE  !(choice == 18)
[L4967]  COND FALSE  !(choice == 17)
[L4973]  COND FALSE  !(choice == 16)
[L4979]  COND FALSE  !(choice == 15)
[L4985]  COND FALSE  !(choice == 14)
[L4991]  COND FALSE  !(choice == 13)
[L4997]  COND TRUE   choice == 12
[L4998]              gas := gas - 21000;
[L4999]  COND TRUE   gas >= 0
[L5000]              assume _value_s365 >= 0 && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5001]              assume msgvalue_MSG == 0;
[L5002]  CALL        call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s365 && _value_s365 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s365 >= 0) && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s365] >= 0) && balanceOf_TokenERC20[this][_to_s365] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L527]               havoc __exception;
[L528]               revert := false;
[L529]   COND FALSE  !(__exception)
[L558]   CALL        call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2853]  COND TRUE   DType[this] == ERC20ext
[L2854]  CALL        call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L3312]  COND FALSE  !(!(now > lockedAccount_ERC20ext[this][_from_s739] || (lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < balanceOf_TokenERC20[this][_from_s739]))
[L3316]              __var_14 := null;
[L3317]  COND FALSE  !(!(_to_s739 != null))
[L3321]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s739] >= _value_s739))
[L3325]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s739]))
[L3329]  COND FALSE  !(!!frozenAccount_ERC20ext[this][_from_s739])
[L3333]  COND FALSE  !(!!frozenAccount_ERC20ext[this][_to_s739])
[L3337]  CALL        call __var_15 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_from_s739], _value_s739);
[L2509]  COND FALSE  !(!(b_s51 <= a_s51))
[L2513]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2514]              __ret_0_ := c_s51;
[L3337]  RET         call __var_15 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_from_s739], _value_s739);
[L3338]  COND FALSE  !(revert)
[L3341]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s739];
[L3342]              balanceOf_TokenERC20[this][_from_s739] := __var_15;
[L3343]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s739];
[L3344]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_to_s739], _value_s739);
[L2485]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2486]  COND FALSE  !(!(c_s26 >= a_s26))
[L2490]              __ret_0_ := c_s26;
[L3344]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_to_s739], _value_s739);
[L3345]  COND FALSE  !(revert)
[L3348]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s739];
[L3349]              balanceOf_TokenERC20[this][_to_s739] := __var_16;
[L3350]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s739];
[L3351]              assert { :EventEmitted "Transfer_ERC20ext" } true;
[L2854]  RET         call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L2855]  COND FALSE  !(revert)
[L2866]              success_s365 := true;
[L558]   RET         call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L559]               assume !revert && gas >= 0;
[L5002]  RET         call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L5099]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND FALSE  !(choice == 20)
[L4955]  COND FALSE  !(choice == 19)
[L4961]  COND FALSE  !(choice == 18)
[L4967]  COND FALSE  !(choice == 17)
[L4973]  COND FALSE  !(choice == 16)
[L4979]  COND FALSE  !(choice == 15)
[L4985]  COND FALSE  !(choice == 14)
[L4991]  COND FALSE  !(choice == 13)
[L4997]  COND TRUE   choice == 12
[L4998]              gas := gas - 21000;
[L4999]  COND TRUE   gas >= 0
[L5000]              assume _value_s365 >= 0 && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5001]              assume msgvalue_MSG == 0;
[L5002]  CALL        call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s365 && _value_s365 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s365 >= 0) && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s365] >= 0) && balanceOf_TokenERC20[this][_to_s365] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L527]               havoc __exception;
[L528]               revert := false;
[L529]   COND FALSE  !(__exception)
[L558]   CALL        call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2853]  COND TRUE   DType[this] == ERC20ext
[L2854]  CALL        call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L3312]  COND FALSE  !(!(now > lockedAccount_ERC20ext[this][_from_s739] || (lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < balanceOf_TokenERC20[this][_from_s739]))
[L3316]              __var_14 := null;
[L3317]  COND FALSE  !(!(_to_s739 != null))
[L3321]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s739] >= _value_s739))
[L3325]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_TokenERC20[this][_to_s739]))
[L3329]  COND FALSE  !(!!frozenAccount_ERC20ext[this][_from_s739])
[L3333]  COND FALSE  !(!!frozenAccount_ERC20ext[this][_to_s739])
[L3337]  CALL        call __var_15 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_from_s739], _value_s739);
[L2509]  COND FALSE  !(!(b_s51 <= a_s51))
[L2513]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2514]              __ret_0_ := c_s51;
[L3337]  RET         call __var_15 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_from_s739], _value_s739);
[L3338]  COND FALSE  !(revert)
[L3341]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s739];
[L3342]              balanceOf_TokenERC20[this][_from_s739] := __var_15;
[L3343]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s739];
[L3344]  CALL        call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_to_s739], _value_s739);
[L2485]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2486]  COND FALSE  !(!(c_s26 >= a_s26))
[L2490]              __ret_0_ := c_s26;
[L3344]  RET         call __var_16 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_to_s739], _value_s739);
[L3345]  COND FALSE  !(revert)
[L3348]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s739];
[L3349]              balanceOf_TokenERC20[this][_to_s739] := __var_16;
[L3350]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s739];
[L3351]              assert { :EventEmitted "Transfer_ERC20ext" } true;
[L2854]  RET         call _transfer~address~address~uint256_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L2855]  COND FALSE  !(revert)
[L2866]              success_s365 := true;
[L558]   RET         call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L559]               assume !revert && gas >= 0;
[L5002]  RET         call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L5099]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:21,383 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:21,383 INFO  L82        PathProgramCache]: Analyzing trace with hash 434039848, now seen corresponding path program 1 times
[2020-11-25 15:07:21,384 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:21,403 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:21,494 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:21,495 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:21,495 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 15:07:21,495 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:21,495 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 15:07:21,496 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=15, Invalid=41, Unknown=0, NotChecked=0, Total=56
[2020-11-25 15:07:21,496 INFO  L87              Difference]: Start difference. First operand 3273 states and 3575 transitions. cyclomatic complexity: 304 Second operand 8 states.
[2020-11-25 15:07:22,534 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:22,534 INFO  L93              Difference]: Finished difference Result 3360 states and 3670 transitions.
[2020-11-25 15:07:22,534 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 15:07:22,534 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3360 states and 3670 transitions.
[2020-11-25 15:07:22,544 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 15:07:22,559 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3360 states to 3360 states and 3670 transitions.
[2020-11-25 15:07:22,560 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 943
[2020-11-25 15:07:22,561 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 943
[2020-11-25 15:07:22,561 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3360 states and 3670 transitions.
[2020-11-25 15:07:22,566 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:22,566 INFO  L728         BuchiCegarLoop]: Abstraction has 3360 states and 3670 transitions.
[2020-11-25 15:07:22,570 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3360 states and 3670 transitions.
[2020-11-25 15:07:22,604 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3360 to 3125.
[2020-11-25 15:07:22,604 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3125 states.
[2020-11-25 15:07:22,609 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3125 states to 3125 states and 3388 transitions.
[2020-11-25 15:07:22,609 INFO  L751         BuchiCegarLoop]: Abstraction has 3125 states and 3388 transitions.
[2020-11-25 15:07:22,609 INFO  L631         BuchiCegarLoop]: Abstraction has 3125 states and 3388 transitions.
[2020-11-25 15:07:22,609 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:07:22,609 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3125 states and 3388 transitions.
[2020-11-25 15:07:22,614 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:22,614 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:22,614 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:22,617 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:22,617 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_TokenERC200 := false;
[L2]                 call_transfer_TokenERC200 := false;
[L2]     CALL        call main();
[L5089]              assume null == 0;
[L5090]  CALL        call this := FreshRefGenerator__success();
[L2432]              havoc newRef;
[L2433]              assume Alloc[newRef] == false;
[L2434]              Alloc[newRef] := true;
[L2435]              assume newRef != null;
[L5090]  RET         call this := FreshRefGenerator__success();
[L5091]              assume now >= 0;
[L5092]              assume DType[this] == ERC20ext;
[L5093]              assume msgvalue_MSG == 0;
[L5094]              gas := gas - 53000;
[L5095]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1391]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3247]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2624]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2607]              assume msgsender_MSG != null;
[L2608]              Balance[this] := 0;
[L2609]              owner_owned[this] := null;
[L2611]              owner_owned[this] := msgsender_MSG;
[L2624]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  COND FALSE  !(revert)
[L3247]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3248]  COND FALSE  !(revert)
[L3251]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2752]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2720]              assume msgsender_MSG != null;
[L2721]              Balance[this] := 0;
[L2722]              name_TokenERC20[this] := 1101944712;
[L2723]              symbol_TokenERC20[this] := 1101944712;
[L2724]              decimals_TokenERC20[this] := 18;
[L2725]              totalSupply_TokenERC20[this] := 0;
[L2726]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2727]              sum_balanceOf0[this] := 0;
[L2728]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2729]              sum_allowance1[this] := 0;
[L2731]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2732]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2734]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2735]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2736]              name_TokenERC20[this] := tokenName_s258;
[L2737]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2752]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2753]  COND FALSE  !(revert)
[L3251]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3252]  COND FALSE  !(revert)
[L3255]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3219]              assume msgsender_MSG != null;
[L3220]              Balance[this] := 0;
[L3221]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3222]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3223]              sum_lockedAccount3[this] := 0;
[L3224]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3225]              sum_lockedAmount4[this] := 0;
[L3255]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3256]  COND FALSE  !(revert)
[L1391]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1392]              assume !revert && gas >= 0;
[L5095]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5096]              assume !revert && gas >= 0;
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND FALSE  !(choice == 20)
[L4955]  COND FALSE  !(choice == 19)
[L4961]  COND FALSE  !(choice == 18)
[L4967]  COND FALSE  !(choice == 17)
[L4973]  COND FALSE  !(choice == 16)
[L4979]  COND FALSE  !(choice == 15)
[L4985]  COND FALSE  !(choice == 14)
[L4991]  COND FALSE  !(choice == 13)
[L4997]  COND TRUE   choice == 12
[L4998]              gas := gas - 21000;
[L4999]  COND TRUE   gas >= 0
[L5000]              assume _value_s365 >= 0 && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5001]              assume msgvalue_MSG == 0;
[L5002]  CALL        call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == _to_s365 && _value_s365 > balanceOf_TokenERC20[this][msgsender_MSG]) && _value_s365 >= 0) && _value_s365 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s365] >= 0) && balanceOf_TokenERC20[this][_to_s365] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_TokenERC200 := true;
[L2]                 call_transfer_TokenERC200 := false;
[L2]                 revert := revert_hold;
[L527]               havoc __exception;
[L528]               revert := false;
[L529]   COND FALSE  !(__exception)
[L558]   CALL        call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L2853]  COND FALSE  !(DType[this] == ERC20ext)
[L2858]  COND TRUE   DType[this] == TokenERC20
[L2859]  CALL        call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L2800]              __var_2 := null;
[L2801]  COND FALSE  !(!(_to_s346 != null))
[L2805]  COND FALSE  !(!(balanceOf_TokenERC20[this][_from_s346] >= _value_s346))
[L2809]  COND FALSE  !(!((balanceOf_TokenERC20[this][_to_s346] + _value_s346) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_TokenERC20[this][_to_s346]))
[L2813]              previousBalances_s346 := (balanceOf_TokenERC20[this][_from_s346] + balanceOf_TokenERC20[this][_to_s346]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2814]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_from_s346], _value_s346);
[L2509]  COND FALSE  !(!(b_s51 <= a_s51))
[L2513]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2514]              __ret_0_ := c_s51;
[L2814]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_from_s346], _value_s346);
[L2815]  COND FALSE  !(revert)
[L2818]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_from_s346];
[L2819]              balanceOf_TokenERC20[this][_from_s346] := __var_3;
[L2820]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_from_s346];
[L2821]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_to_s346], _value_s346);
[L2485]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2486]  COND FALSE  !(!(c_s26 >= a_s26))
[L2490]              __ret_0_ := c_s26;
[L2821]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_TokenERC20[this][_to_s346], _value_s346);
[L2822]  COND FALSE  !(revert)
[L2825]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][_to_s346];
[L2826]              balanceOf_TokenERC20[this][_to_s346] := __var_4;
[L2827]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][_to_s346];
[L2828]              assert { :EventEmitted "Transfer_TokenERC20" } true;
[L2829]              assert (balanceOf_TokenERC20[this][_from_s346] + balanceOf_TokenERC20[this][_to_s346]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s346;
[L2859]  RET         call _transfer~address~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s365, _value_s365);
[L2860]  COND FALSE  !(revert)
[L2866]              success_s365 := true;
[L558]   RET         call success_s365 := transfer~address~uint256_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L559]               assume !revert && gas >= 0;
[L5002]  RET         call success_s365 := transfer~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s365, _value_s365);
[L5099]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5099]  CALL        call CorralChoice_ERC20ext(this);
[L4881]              havoc msgsender_MSG;
[L4882]              havoc msgvalue_MSG;
[L4883]              havoc choice;
[L4884]              havoc __ret_0_owner;
[L4885]              havoc newOwner_s166;
[L4886]              havoc __ret_0_name;
[L4887]              havoc __ret_0_symbol;
[L4888]              havoc __ret_0_decimals;
[L4889]              havoc __ret_0_totalSupply;
[L4890]              havoc arg835_s0;
[L4891]              havoc __ret_0_balanceOf;
[L4892]              havoc arg836_s0;
[L4893]              havoc arg837_s0;
[L4894]              havoc __ret_0_allowance;
[L4895]              havoc initialSupply_s258;
[L4896]              havoc tokenName_s258;
[L4897]              havoc tokenSymbol_s258;
[L4898]              havoc _to_s365;
[L4899]              havoc _value_s365;
[L4900]              havoc success_s365;
[L4901]              havoc _from_s413;
[L4902]              havoc _to_s413;
[L4903]              havoc _value_s413;
[L4904]              havoc success_s413;
[L4905]              havoc _spender_s441;
[L4906]              havoc _value_s441;
[L4907]              havoc success_s441;
[L4908]              havoc _spender_s479;
[L4909]              havoc _value_s479;
[L4910]              havoc _extraData_s479;
[L4911]              havoc success_s479;
[L4912]              havoc _value_s527;
[L4913]              havoc success_s527;
[L4914]              havoc _from_s598;
[L4915]              havoc _value_s598;
[L4916]              havoc success_s598;
[L4917]              havoc arg838_s0;
[L4918]              havoc __ret_0_frozenAccount;
[L4919]              havoc arg839_s0;
[L4920]              havoc __ret_0_lockedAccount;
[L4921]              havoc arg840_s0;
[L4922]              havoc __ret_0_lockedAmount;
[L4923]              havoc initialSupply_s639;
[L4924]              havoc tokenName_s639;
[L4925]              havoc tokenSymbol_s639;
[L4926]              havoc target_s779;
[L4927]              havoc mintedAmount_s779;
[L4928]              havoc success_s779;
[L4929]              havoc target_s804;
[L4930]              havoc freeze_s804;
[L4931]              havoc success_s804;
[L4932]              havoc target_s832;
[L4933]              havoc time_s832;
[L4934]              havoc amount_s832;
[L4935]              havoc success_s832;
[L4936]              havoc tmpNow;
[L4937]              havoc gas;
[L4938]              assume gas > 4000000 && gas <= 8000000;
[L4939]              tmpNow := now;
[L4940]              havoc now;
[L4941]              assume now > tmpNow;
[L4942]              assume msgsender_MSG != null;
[L4943]              assume DType[msgsender_MSG] != SafeMath;
[L4944]              assume DType[msgsender_MSG] != owned;
[L4945]              assume DType[msgsender_MSG] != tokenRecipient;
[L4946]              assume DType[msgsender_MSG] != TokenERC20;
[L4947]              assume DType[msgsender_MSG] != ERC20ext;
[L4948]              Alloc[msgsender_MSG] := true;
[L4949]  COND TRUE   choice == 20
[L4950]              gas := gas - 21000;
[L4951]  COND FALSE  !(gas >= 0)
[L5099]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:22,620 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:22,620 INFO  L82        PathProgramCache]: Analyzing trace with hash -1276788450, now seen corresponding path program 1 times
[2020-11-25 15:07:22,621 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:22,634 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:22,679 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:22,680 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:22,680 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 15:07:22,680 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:22,680 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 15:07:22,680 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 15:07:22,681 INFO  L87              Difference]: Start difference. First operand 3125 states and 3388 transitions. cyclomatic complexity: 265 Second operand 6 states.
[2020-11-25 15:07:22,755 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:22,755 INFO  L93              Difference]: Finished difference Result 1842 states and 1996 transitions.
[2020-11-25 15:07:22,756 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 15:07:22,756 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1842 states and 1996 transitions.
[2020-11-25 15:07:22,758 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:07:22,759 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1842 states to 0 states and 0 transitions.
[2020-11-25 15:07:22,759 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 15:07:22,759 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 15:07:22,759 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 15:07:22,759 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:22,759 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:07:22,759 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:07:22,759 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 15:07:22,759 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:07:22,759 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 15:07:22,759 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 15:07:22,759 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 15:07:22,762 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:07:22 BasicIcfg
[2020-11-25 15:07:22,762 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 15:07:22,763 INFO  L168              Benchmark]: Toolchain (without parser) took 5865.19 ms. Allocated memory was 1.0 GB in the beginning and 1.7 GB in the end (delta: 646.4 MB). Free memory was 935.2 MB in the beginning and 1.6 GB in the end (delta: -615.6 MB). Peak memory consumption was 30.8 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,764 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,764 INFO  L168              Benchmark]: Boogie Preprocessor took 99.22 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,765 INFO  L168              Benchmark]: UtopiaSpecLang took 56.29 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,765 INFO  L168              Benchmark]: Boogie Printer took 16.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,765 INFO  L168              Benchmark]: RCFGBuilder took 769.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.4 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,765 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.86 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,766 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1542.39 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 199.2 MB). Free memory was 775.9 MB in the beginning and 887.3 MB in the end (delta: -111.5 MB). Peak memory consumption was 167.9 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,766 INFO  L168              Benchmark]: BlockEncodingV2 took 160.98 ms. Allocated memory is still 1.2 GB. Free memory was 887.3 MB in the beginning and 815.3 MB in the end (delta: 72.0 MB). Peak memory consumption was 72.0 MB. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,766 INFO  L168              Benchmark]: BuchiAutomizer took 3178.72 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 447.2 MB). Free memory was 815.3 MB in the beginning and 1.6 GB in the end (delta: -735.5 MB). There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:07:22,769 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4512 locations, 7833 edges
  - StatisticsResult: Encoded RCFG
    4406 locations, 7590 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 99.22 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 56.29 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.74 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 913.7 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 769.89 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 779.4 MB in the end (delta: 134.3 MB). Peak memory consumption was 134.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.86 ms. Allocated memory is still 1.0 GB. Free memory was 779.4 MB in the beginning and 775.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1542.39 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 199.2 MB). Free memory was 775.9 MB in the beginning and 887.3 MB in the end (delta: -111.5 MB). Peak memory consumption was 167.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 160.98 ms. Allocated memory is still 1.2 GB. Free memory was 887.3 MB in the beginning and 815.3 MB in the end (delta: 72.0 MB). Peak memory consumption was 72.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3178.72 ms. Allocated memory was 1.2 GB in the beginning and 1.7 GB in the end (delta: 447.2 MB). Free memory was 815.3 MB in the beginning and 1.6 GB in the end (delta: -735.5 MB). There was no memory consumed. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1885 locations, 2421 edges
  - StatisticsResult: BuchiProgram size
    4512 locations, 7833 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 8 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.1s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.3s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 652 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3273 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12339 SDtfs, 10180 SDslu, 19050 SDs, 0 SdLazy, 13267 SolverSat, 2019 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_TokenERC200) ==> ( <>(fail_transfer_TokenERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
