This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 01:31:24,119 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 01:31:24,120 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 01:31:24,139 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 01:31:24,140 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 01:31:24,140 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 01:31:24,141 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 01:31:24,143 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 01:31:24,144 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 01:31:24,145 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 01:31:24,145 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 01:31:24,146 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 01:31:24,146 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 01:31:24,147 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 01:31:24,148 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 01:31:24,148 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 01:31:24,149 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 01:31:24,150 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 01:31:24,151 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 01:31:24,152 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 01:31:24,153 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 01:31:24,154 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 01:31:24,155 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 01:31:24,155 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 01:31:24,156 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 01:31:24,156 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 01:31:24,156 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 01:31:24,157 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 01:31:24,157 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 01:31:24,157 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 01:31:24,158 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 01:31:24,158 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 01:31:24,159 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 01:31:24,159 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 01:31:24,160 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 01:31:24,160 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 01:31:24,160 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 01:31:24,161 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 01:31:24,161 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 01:31:24,161 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 01:31:24,162 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 01:31:24,162 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 01:31:24,169 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 01:31:24,169 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 01:31:24,170 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 01:31:24,170 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 01:31:24,170 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 01:31:24,170 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 01:31:24,170 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 01:31:24,170 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 01:31:24,171 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 01:31:24,171 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 01:31:24,171 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 01:31:24,172 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 01:31:24,172 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 01:31:24,193 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 01:31:24,204 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 01:31:24,207 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 01:31:24,208 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 01:31:24,208 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 01:31:24,209 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl
[2020-11-25 01:31:24,209 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl'
[2020-11-25 01:31:24,287 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 01:31:24,288 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 01:31:24,289 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 01:31:24,289 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 01:31:24,289 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 01:31:24,305 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,306 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,333 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,333 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,349 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,357 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,363 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,371 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 01:31:24,372 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 01:31:24,372 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 01:31:24,374 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 01:31:24,378 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/1) ...
[2020-11-25 01:31:24,395 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:31:24,401 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:31:24,407 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:31:24,414 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s307 && ( value_s307>_balances_ERC20[this][msg.sender] || ( _balances_ERC20[this][to_s307] + value_s307 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s307>=0 ) && value_s307<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][to_s307]>=0 ) && _balances_ERC20[this][to_s307]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[to_s307,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 01:31:24,419 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), msg.sender != to && (value > _balances_ERC20[this][msg.sender] || _balances_ERC20[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ERC20.transfer)))
[2020-11-25 01:31:24,419 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(fail_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 01:31:24,427 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:24 PropertyContainer
[2020-11-25 01:31:24,427 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 01:31:24,427 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 01:31:24,427 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 01:31:24,427 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 01:31:24,428 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/2) ...
[2020-11-25 01:31:24,428 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 01:31:24,428 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 01:31:24,440 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:24" (2/2) ...
[2020-11-25 01:31:24,440 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 01:31:24,440 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 01:31:24,440 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 01:31:24,440 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 01:31:24,442 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/2) ...
[2020-11-25 01:31:24,493 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 01:31:24,493 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:31:24,493 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 01:31:24,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 01:31:24,493 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 01:31:24,493 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 01:31:24,493 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 01:31:24,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,494 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,495 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,495 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,495 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:31:24,495 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 01:31:24,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 01:31:24,495 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 01:31:24,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 01:31:24,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 01:31:24,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:24,496 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:24,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT
[2020-11-25 01:31:24,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT
[2020-11-25 01:31:24,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT
[2020-11-25 01:31:24,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT
[2020-11-25 01:31:24,497 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT
[2020-11-25 01:31:24,497 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT
[2020-11-25 01:31:24,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT
[2020-11-25 01:31:24,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:31:24,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 01:31:24,498 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BT
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,499 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 01:31:24,500 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:31:24,501 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__success
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure BT_BT__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__success
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BT__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__success
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BT__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__success
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BT__fail
[2020-11-25 01:31:24,502 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__success
[2020-11-25 01:31:24,503 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BT__fail
[2020-11-25 01:31:24,503 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:31:24,503 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:31:24,503 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 01:31:24,503 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 01:31:24,503 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 01:31:24,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 01:31:24,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 01:31:24,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 01:31:24,506 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__fail
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT_NoBaseCtor__success
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__fail
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure BT_BT__success
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__fail
[2020-11-25 01:31:24,507 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BT__success
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__fail
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BT__success
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__fail
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BT__success
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__fail
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BT__success
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__fail
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BT__success
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__fail
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_BT__success
[2020-11-25 01:31:24,508 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 01:31:24,509 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BT
[2020-11-25 01:31:24,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 01:31:24,510 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 01:31:24,510 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 01:31:24,678 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:31:24,678 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 01:31:25,097 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 01:31:25,097 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 01:31:25,100 INFO  L202        PluginConnector]: Adding new model BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:25 BoogieIcfgContainer
[2020-11-25 01:31:25,100 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:24" (2/2) ...
[2020-11-25 01:31:25,100 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 01:31:25,100 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@659fa18f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:25, skipping insertion in model container
[2020-11-25 01:31:25,100 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 01:31:25,101 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 01:31:25,101 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 01:31:25,102 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 01:31:25,102 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/3) ...
[2020-11-25 01:31:25,103 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@eca6918 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:25, skipping insertion in model container
[2020-11-25 01:31:25,103 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:24" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 01:31:25,142 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:25 NWAContainer
[2020-11-25 01:31:25,143 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 01:31:25,143 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 01:31:25,143 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 01:31:25,144 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 01:31:25,144 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:25" (3/4) ...
[2020-11-25 01:31:25,145 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3518ceef and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:25, skipping insertion in model container
[2020-11-25 01:31:25,145 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:25" (4/4) ...
[2020-11-25 01:31:25,149 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 01:31:25,152 INFO  L110   BuchiProductObserver]: Initial RCFG 1244 locations, 1629 edges
[2020-11-25 01:31:25,152 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 01:31:25,164 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 01:31:26,324 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 01:31:26,329 INFO  L110   BuchiProductObserver]: BuchiProgram size 3030 locations, 5310 edges
[2020-11-25 01:31:26,330 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:26 BoogieIcfgContainer
[2020-11-25 01:31:26,330 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 01:31:26,330 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 01:31:26,330 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 01:31:26,332 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 01:31:26,333 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:26" (1/1) ...
[2020-11-25 01:31:26,472 INFO  L313           BlockEncoder]: Initial Icfg 3030 locations, 5310 edges
[2020-11-25 01:31:26,472 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 01:31:26,472 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 01:31:26,473 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 01:31:26,473 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 01:31:26,484 INFO  L70    emoveInfeasibleEdges]: Removed 78 edges and 12 locations because of local infeasibility
[2020-11-25 01:31:26,491 INFO  L70        RemoveSinkStates]: Removed 108 edges and 58 locations by removing sink states
[2020-11-25 01:31:26,501 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 01:31:26,505 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 01:31:26,508 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 01:31:26,509 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 01:31:26,513 INFO  L313           BlockEncoder]: Encoded RCFG 2938 locations, 5092 edges
[2020-11-25 01:31:26,514 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:31:26 BasicIcfg
[2020-11-25 01:31:26,514 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 01:31:26,514 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 01:31:26,514 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 01:31:26,517 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 01:31:26,517 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:26,517 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:31:24" (1/6) ...
[2020-11-25 01:31:26,519 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4b297b11 and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:31:26, skipping insertion in model container
[2020-11-25 01:31:26,519 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:26,519 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:31:24" (2/6) ...
[2020-11-25 01:31:26,520 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4b297b11 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:31:26, skipping insertion in model container
[2020-11-25 01:31:26,520 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:26,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:31:25" (3/6) ...
[2020-11-25 01:31:26,520 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4b297b11 and model type BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:31:26, skipping insertion in model container
[2020-11-25 01:31:26,520 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:26,520 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:31:25" (4/6) ...
[2020-11-25 01:31:26,521 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4b297b11 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:31:26, skipping insertion in model container
[2020-11-25 01:31:26,521 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:26,521 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:31:26" (5/6) ...
[2020-11-25 01:31:26,521 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@4b297b11 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:31:26, skipping insertion in model container
[2020-11-25 01:31:26,521 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 01:31:26,521 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:31:26" (6/6) ...
[2020-11-25 01:31:26,522 INFO  L404   chiAutomizerObserver]: Analyzing ICFG BT_0xBC52a198619553fc1A0F925bB5B2E6EfaA9e45F1_transfer-fail.bpl_BEv2
[2020-11-25 01:31:26,561 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 01:31:26,561 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 01:31:26,561 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 01:31:26,562 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 01:31:26,562 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 01:31:26,562 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 01:31:26,562 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 01:31:26,562 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 01:31:26,562 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 01:31:26,594 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2938 states.
[2020-11-25 01:31:26,645 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:26,645 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:26,645 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:26,654 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:26,654 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:26,655 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 01:31:26,655 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2938 states.
[2020-11-25 01:31:26,671 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:26,672 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:26,672 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:26,674 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:26,674 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND TRUE   choice == 14
[L3365]              gas := gas - 21000;
[L3366]  COND FALSE  !(gas >= 0)
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:26,690 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:26,690 INFO  L82        PathProgramCache]: Analyzing trace with hash 187682904, now seen corresponding path program 1 times
[2020-11-25 01:31:26,695 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:26,719 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:26,765 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:31:26,767 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:26,767 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:31:26,771 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:26,882 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:31:26,882 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:31:26,884 INFO  L87              Difference]: Start difference. First operand 2938 states. Second operand 3 states.
[2020-11-25 01:31:27,048 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:27,048 INFO  L93              Difference]: Finished difference Result 2014 states and 2265 transitions.
[2020-11-25 01:31:27,048 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:31:27,050 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2014 states and 2265 transitions.
[2020-11-25 01:31:27,062 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:27,081 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2014 states to 2014 states and 2265 transitions.
[2020-11-25 01:31:27,082 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 01:31:27,084 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 552
[2020-11-25 01:31:27,084 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2014 states and 2265 transitions.
[2020-11-25 01:31:27,091 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:27,091 INFO  L728         BuchiCegarLoop]: Abstraction has 2014 states and 2265 transitions.
[2020-11-25 01:31:27,109 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2014 states and 2265 transitions.
[2020-11-25 01:31:27,150 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2014 to 2014.
[2020-11-25 01:31:27,151 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2014 states.
[2020-11-25 01:31:27,156 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2014 states to 2014 states and 2265 transitions.
[2020-11-25 01:31:27,157 INFO  L751         BuchiCegarLoop]: Abstraction has 2014 states and 2265 transitions.
[2020-11-25 01:31:27,158 INFO  L631         BuchiCegarLoop]: Abstraction has 2014 states and 2265 transitions.
[2020-11-25 01:31:27,158 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 01:31:27,158 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2014 states and 2265 transitions.
[2020-11-25 01:31:27,165 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:27,165 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:27,165 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:27,167 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:27,168 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND TRUE   revert
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1818]              revert := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1818]              revert := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:27,172 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:27,173 INFO  L82        PathProgramCache]: Analyzing trace with hash -922416873, now seen corresponding path program 1 times
[2020-11-25 01:31:27,173 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:27,186 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:27,207 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 01:31:27,207 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:27,207 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:31:27,209 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:27,209 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:31:27,209 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:31:27,209 INFO  L87              Difference]: Start difference. First operand 2014 states and 2265 transitions. cyclomatic complexity: 253 Second operand 3 states.
[2020-11-25 01:31:27,282 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:27,282 INFO  L93              Difference]: Finished difference Result 2660 states and 3041 transitions.
[2020-11-25 01:31:27,282 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:31:27,283 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2660 states and 3041 transitions.
[2020-11-25 01:31:27,298 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:27,313 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2660 states to 2660 states and 3041 transitions.
[2020-11-25 01:31:27,313 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 726
[2020-11-25 01:31:27,314 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 726
[2020-11-25 01:31:27,314 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2660 states and 3041 transitions.
[2020-11-25 01:31:27,319 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:27,319 INFO  L728         BuchiCegarLoop]: Abstraction has 2660 states and 3041 transitions.
[2020-11-25 01:31:27,322 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2660 states and 3041 transitions.
[2020-11-25 01:31:27,353 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2660 to 2297.
[2020-11-25 01:31:27,353 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2297 states.
[2020-11-25 01:31:27,358 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2297 states to 2297 states and 2606 transitions.
[2020-11-25 01:31:27,359 INFO  L751         BuchiCegarLoop]: Abstraction has 2297 states and 2606 transitions.
[2020-11-25 01:31:27,359 INFO  L631         BuchiCegarLoop]: Abstraction has 2297 states and 2606 transitions.
[2020-11-25 01:31:27,359 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 01:31:27,359 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2297 states and 2606 transitions.
[2020-11-25 01:31:27,366 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:27,366 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:27,366 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:27,368 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:27,368 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND TRUE   !(account_s571 != null)
[L2078]              revert := true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND TRUE   revert
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1818]              revert := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1818]              revert := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:27,372 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:27,372 INFO  L82        PathProgramCache]: Analyzing trace with hash 255337778, now seen corresponding path program 1 times
[2020-11-25 01:31:27,373 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:27,383 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:27,424 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 7 refuted. 0 times theorem prover too weak. 3 trivial. 0 not checked.
[2020-11-25 01:31:27,424 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 01:31:27,424 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-25 01:31:27,424 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:27,425 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 01:31:27,425 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 01:31:27,425 INFO  L87              Difference]: Start difference. First operand 2297 states and 2606 transitions. cyclomatic complexity: 311 Second operand 7 states.
[2020-11-25 01:31:27,465 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:27,465 INFO  L93              Difference]: Finished difference Result 2305 states and 2613 transitions.
[2020-11-25 01:31:27,465 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 01:31:27,465 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2305 states and 2613 transitions.
[2020-11-25 01:31:27,476 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:27,485 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2305 states to 2296 states and 2604 transitions.
[2020-11-25 01:31:27,485 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 651
[2020-11-25 01:31:27,486 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 651
[2020-11-25 01:31:27,486 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2296 states and 2604 transitions.
[2020-11-25 01:31:27,489 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:27,489 INFO  L728         BuchiCegarLoop]: Abstraction has 2296 states and 2604 transitions.
[2020-11-25 01:31:27,492 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2296 states and 2604 transitions.
[2020-11-25 01:31:27,513 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2296 to 2296.
[2020-11-25 01:31:27,513 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2296 states.
[2020-11-25 01:31:27,517 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2296 states to 2296 states and 2604 transitions.
[2020-11-25 01:31:27,517 INFO  L751         BuchiCegarLoop]: Abstraction has 2296 states and 2604 transitions.
[2020-11-25 01:31:27,517 INFO  L631         BuchiCegarLoop]: Abstraction has 2296 states and 2604 transitions.
[2020-11-25 01:31:27,517 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 01:31:27,517 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2296 states and 2604 transitions.
[2020-11-25 01:31:27,523 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:27,524 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:27,524 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:27,525 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:27,525 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND FALSE  !(!(account_s571 != null))
[L2081]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND TRUE   !(c_s173 >= a_s173)
[L1667]              revert := true;
[L2081]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2082]  COND TRUE   revert
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND TRUE   revert
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1818]              revert := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND TRUE   !(value_s307 <= _balances_ERC20[this][msgsender_MSG])
[L1818]              revert := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:27,529 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:27,529 INFO  L82        PathProgramCache]: Analyzing trace with hash 153868547, now seen corresponding path program 1 times
[2020-11-25 01:31:27,530 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:27,541 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:27,569 INFO  L134       CoverageAnalysis]: Checked inductivity of 10 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 10 trivial. 0 not checked.
[2020-11-25 01:31:27,569 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:27,569 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 01:31:27,570 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:27,570 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 01:31:27,570 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 01:31:27,570 INFO  L87              Difference]: Start difference. First operand 2296 states and 2604 transitions. cyclomatic complexity: 310 Second operand 3 states.
[2020-11-25 01:31:27,616 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:27,616 INFO  L93              Difference]: Finished difference Result 2664 states and 2972 transitions.
[2020-11-25 01:31:27,616 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 01:31:27,617 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2664 states and 2972 transitions.
[2020-11-25 01:31:27,628 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:27,639 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2664 states to 2473 states and 2746 transitions.
[2020-11-25 01:31:27,639 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 665
[2020-11-25 01:31:27,640 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 672
[2020-11-25 01:31:27,640 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2473 states and 2746 transitions.
[2020-11-25 01:31:27,643 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:27,644 INFO  L728         BuchiCegarLoop]: Abstraction has 2473 states and 2746 transitions.
[2020-11-25 01:31:27,646 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2473 states and 2746 transitions.
[2020-11-25 01:31:27,670 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2473 to 2179.
[2020-11-25 01:31:27,670 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2179 states.
[2020-11-25 01:31:27,674 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2179 states to 2179 states and 2380 transitions.
[2020-11-25 01:31:27,675 INFO  L751         BuchiCegarLoop]: Abstraction has 2179 states and 2380 transitions.
[2020-11-25 01:31:27,675 INFO  L631         BuchiCegarLoop]: Abstraction has 2179 states and 2380 transitions.
[2020-11-25 01:31:27,675 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 01:31:27,675 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2179 states and 2380 transitions.
[2020-11-25 01:31:27,680 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:27,680 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:27,680 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:27,683 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:27,683 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND FALSE  !(!(account_s571 != null))
[L2081]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2081]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2082]  COND FALSE  !(revert)
[L2085]              _totalSupply_ERC20[this] := __var_14;
[L2086]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2086]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2087]  COND FALSE  !(revert)
[L2090]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2091]              _balances_ERC20[this][account_s571] := __var_15;
[L2092]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2093]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND FALSE  !(revert)
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND FALSE  !(!(value_s307 <= _balances_ERC20[this][msgsender_MSG]))
[L1821]              __var_1 := null;
[L1822]  COND FALSE  !(!(to_s307 != null))
[L1826]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1641]  COND FALSE  !(!(b_s149 <= a_s149))
[L1645]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1646]              __ret_0_ := c_s149;
[L1826]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1827]  COND FALSE  !(revert)
[L1830]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][msgsender_MSG];
[L1831]              _balances_ERC20[this][msgsender_MSG] := __var_2;
[L1832]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][msgsender_MSG];
[L1833]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L1833]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1834]  COND FALSE  !(revert)
[L1837]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s307];
[L1838]              _balances_ERC20[this][to_s307] := __var_3;
[L1839]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s307];
[L1840]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1841]              __ret_0_ := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND FALSE  !(!(value_s307 <= _balances_ERC20[this][msgsender_MSG]))
[L1821]              __var_1 := null;
[L1822]  COND FALSE  !(!(to_s307 != null))
[L1826]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1641]  COND FALSE  !(!(b_s149 <= a_s149))
[L1645]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1646]              __ret_0_ := c_s149;
[L1826]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1827]  COND FALSE  !(revert)
[L1830]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][msgsender_MSG];
[L1831]              _balances_ERC20[this][msgsender_MSG] := __var_2;
[L1832]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][msgsender_MSG];
[L1833]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L1833]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1834]  COND FALSE  !(revert)
[L1837]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s307];
[L1838]              _balances_ERC20[this][to_s307] := __var_3;
[L1839]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s307];
[L1840]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1841]              __ret_0_ := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:27,687 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:27,688 INFO  L82        PathProgramCache]: Analyzing trace with hash -2103350274, now seen corresponding path program 1 times
[2020-11-25 01:31:27,688 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:27,710 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:28,073 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 11 trivial. 0 not checked.
[2020-11-25 01:31:28,073 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:28,325 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-25 01:31:28,325 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:28,325 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 01:31:28,325 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=49, Invalid=371, Unknown=0, NotChecked=0, Total=420
[2020-11-25 01:31:28,326 INFO  L87              Difference]: Start difference. First operand 2179 states and 2380 transitions. cyclomatic complexity: 203 Second operand 21 states.
[2020-11-25 01:31:30,361 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:30,362 INFO  L93              Difference]: Finished difference Result 2263 states and 2476 transitions.
[2020-11-25 01:31:30,362 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 20 states. 
[2020-11-25 01:31:30,362 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2263 states and 2476 transitions.
[2020-11-25 01:31:30,367 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 01:31:30,375 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2263 states to 2263 states and 2476 transitions.
[2020-11-25 01:31:30,375 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 641
[2020-11-25 01:31:30,375 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 641
[2020-11-25 01:31:30,375 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2263 states and 2476 transitions.
[2020-11-25 01:31:30,377 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:30,377 INFO  L728         BuchiCegarLoop]: Abstraction has 2263 states and 2476 transitions.
[2020-11-25 01:31:30,379 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2263 states and 2476 transitions.
[2020-11-25 01:31:30,397 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2263 to 2097.
[2020-11-25 01:31:30,397 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2097 states.
[2020-11-25 01:31:30,401 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2097 states to 2097 states and 2273 transitions.
[2020-11-25 01:31:30,401 INFO  L751         BuchiCegarLoop]: Abstraction has 2097 states and 2273 transitions.
[2020-11-25 01:31:30,401 INFO  L631         BuchiCegarLoop]: Abstraction has 2097 states and 2273 transitions.
[2020-11-25 01:31:30,401 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 01:31:30,401 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2097 states and 2273 transitions.
[2020-11-25 01:31:30,405 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:30,405 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:30,405 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:30,423 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:30,423 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND TRUE   __exception
[L729]               __tmp__Balance := Balance;
[L730]               __tmp__DType := DType;
[L731]               __tmp__Alloc := Alloc;
[L732]               __tmp__balance_ADDR := balance_ADDR;
[L733]               __tmp__M_Ref_int := M_Ref_int;
[L734]               __tmp__sum__balances0 := sum__balances0;
[L735]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L736]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L737]               __tmp__sum__allowed1 := sum__allowed1;
[L738]               __tmp__Length := Length;
[L739]               __tmp__now := now;
[L740]               __tmp___balances_ERC20 := _balances_ERC20;
[L741]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L742]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L743]               __tmp__name_BT := name_BT;
[L744]               __tmp__symbol_BT := symbol_BT;
[L745]               __tmp__decimals_BT := decimals_BT;
[L746]               __tmp__INITIAL_SUPPLY_BT := INITIAL_SUPPLY_BT;
[L747]   CALL        call BT_BT__fail(this, msgsender_MSG, msgvalue_MSG);
[L2258]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1524]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1509]              assume msgsender_MSG != null;
[L1510]              __tmp__Balance[this] := 0;
[L1524]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1525]  COND FALSE  !(revert)
[L2258]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2259]  COND FALSE  !(revert)
[L2262]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1722]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1524]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1509]              assume msgsender_MSG != null;
[L1510]              __tmp__Balance[this] := 0;
[L1524]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1525]  COND FALSE  !(revert)
[L1722]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L1723]  COND FALSE  !(revert)
[L1726]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1697]              assume msgsender_MSG != null;
[L1698]              __tmp__Balance[this] := 0;
[L1699]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L1700]              __tmp__sum__balances0[this] := 0;
[L1701]              __tmp___allowed_ERC20[this] := zeroRefRefintArr();
[L1702]              __tmp__sum__allowed1[this] := 0;
[L1703]              __tmp___totalSupply_ERC20[this] := 0;
[L1726]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1727]  COND FALSE  !(revert)
[L2262]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L2263]  COND FALSE  !(revert)
[L2266]  CALL        call BT_BT_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2215]              assume msgsender_MSG != null;
[L2216]              __tmp__Balance[this] := 0;
[L2217]              __tmp__name_BT[this] := 876474985;
[L2218]              __tmp__symbol_BT[this] := 95884948;
[L2219]              __tmp__decimals_BT[this] := 18;
[L2220]              __var_20 := __tmp__decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2221]              __tmp__INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, __tmp__decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2223]  COND TRUE   __tmp__DType[this] == BT
[L2224]  CALL        call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, __tmp__INITIAL_SUPPLY_BT[this]);
[L2052]              __var_13 := null;
[L2053]  COND FALSE  !(!(account_s571 != null))
[L2057]  CALL        call __var_14 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], amount_s571);
[L1653]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1654]  COND FALSE  !(!(c_s173 >= a_s173))
[L1658]              __ret_0_ := c_s173;
[L2057]  RET         call __var_14 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___totalSupply_ERC20[this], amount_s571);
[L2058]  COND FALSE  !(revert)
[L2061]              __tmp___totalSupply_ERC20[this] := __var_14;
[L2062]  CALL        call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s571], amount_s571);
[L1653]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1654]  COND FALSE  !(!(c_s173 >= a_s173))
[L1658]              __ret_0_ := c_s173;
[L2062]  RET         call __var_15 := add~uint256~uint256_SafeMath__fail(this, this, 0, __tmp___balances_ERC20[this][account_s571], amount_s571);
[L2063]  COND FALSE  !(revert)
[L2066]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_ERC20[this][account_s571];
[L2067]              __tmp___balances_ERC20[this][account_s571] := __var_15;
[L2068]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_ERC20[this][account_s571];
[L2224]  RET         call _mint~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, __tmp__INITIAL_SUPPLY_BT[this]);
[L2225]  COND FALSE  !(revert)
[L2266]  RET         call BT_BT_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L2267]  COND FALSE  !(revert)
[L747]   RET         call BT_BT__fail(this, msgsender_MSG, msgvalue_MSG);
[L748]               assume revert || gas < 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND FALSE  !(!(value_s307 <= _balances_ERC20[this][msgsender_MSG]))
[L1821]              __var_1 := null;
[L1822]  COND FALSE  !(!(to_s307 != null))
[L1826]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1641]  COND FALSE  !(!(b_s149 <= a_s149))
[L1645]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1646]              __ret_0_ := c_s149;
[L1826]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1827]  COND FALSE  !(revert)
[L1830]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][msgsender_MSG];
[L1831]              _balances_ERC20[this][msgsender_MSG] := __var_2;
[L1832]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][msgsender_MSG];
[L1833]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L1833]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1834]  COND FALSE  !(revert)
[L1837]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s307];
[L1838]              _balances_ERC20[this][to_s307] := __var_3;
[L1839]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s307];
[L1840]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1841]              __ret_0_ := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND TRUE   choice == 14
[L3365]              gas := gas - 21000;
[L3366]  COND FALSE  !(gas >= 0)
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:30,436 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:30,436 INFO  L82        PathProgramCache]: Analyzing trace with hash 1590259643, now seen corresponding path program 1 times
[2020-11-25 01:31:30,437 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:30,444 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:30,470 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 01:31:30,471 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:30,471 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 01:31:30,471 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:30,471 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 01:31:30,471 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 01:31:30,471 INFO  L87              Difference]: Start difference. First operand 2097 states and 2273 transitions. cyclomatic complexity: 179 Second operand 4 states.
[2020-11-25 01:31:30,533 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:30,534 INFO  L93              Difference]: Finished difference Result 2746 states and 3094 transitions.
[2020-11-25 01:31:30,534 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-25 01:31:30,534 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2746 states and 3094 transitions.
[2020-11-25 01:31:30,540 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 01:31:30,548 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2746 states to 2647 states and 2992 transitions.
[2020-11-25 01:31:30,548 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 724
[2020-11-25 01:31:30,549 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 724
[2020-11-25 01:31:30,549 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2647 states and 2992 transitions.
[2020-11-25 01:31:30,551 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:30,551 INFO  L728         BuchiCegarLoop]: Abstraction has 2647 states and 2992 transitions.
[2020-11-25 01:31:30,553 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2647 states and 2992 transitions.
[2020-11-25 01:31:30,568 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2647 to 1998.
[2020-11-25 01:31:30,568 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1998 states.
[2020-11-25 01:31:30,571 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1998 states to 1998 states and 2170 transitions.
[2020-11-25 01:31:30,571 INFO  L751         BuchiCegarLoop]: Abstraction has 1998 states and 2170 transitions.
[2020-11-25 01:31:30,571 INFO  L631         BuchiCegarLoop]: Abstraction has 1998 states and 2170 transitions.
[2020-11-25 01:31:30,571 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 01:31:30,571 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1998 states and 2170 transitions.
[2020-11-25 01:31:30,575 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 01:31:30,575 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 01:31:30,575 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 01:31:30,577 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 01:31:30,577 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_ERC200 := false;
[L2]                 call_transfer_ERC200 := false;
[L2]     CALL        call main();
[L3463]              assume null == 0;
[L3464]  CALL        call this := FreshRefGenerator__success();
[L1500]              havoc newRef;
[L1501]              assume Alloc[newRef] == false;
[L1502]              Alloc[newRef] := true;
[L1503]              assume newRef != null;
[L3464]  RET         call this := FreshRefGenerator__success();
[L3465]              assume now >= 0;
[L3466]              assume DType[this] == BT;
[L3467]              assume msgvalue_MSG == 0;
[L3468]              gas := gas - 53000;
[L3469]  CALL        call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L726]               havoc __exception;
[L727]               revert := false;
[L728]   COND FALSE  !(__exception)
[L750]   CALL        call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L2275]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L2275]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  COND FALSE  !(revert)
[L2279]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1734]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1532]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1517]              assume msgsender_MSG != null;
[L1518]              Balance[this] := 0;
[L1532]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1533]  COND FALSE  !(revert)
[L1734]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L1735]  COND FALSE  !(revert)
[L1738]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1710]              assume msgsender_MSG != null;
[L1711]              Balance[this] := 0;
[L1712]              _balances_ERC20[this] := zeroRefintArr();
[L1713]              sum__balances0[this] := 0;
[L1714]              _allowed_ERC20[this] := zeroRefRefintArr();
[L1715]              sum__allowed1[this] := 0;
[L1716]              _totalSupply_ERC20[this] := 0;
[L1738]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1739]  COND FALSE  !(revert)
[L2279]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2280]  COND FALSE  !(revert)
[L2283]  CALL        call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2237]              assume msgsender_MSG != null;
[L2238]              Balance[this] := 0;
[L2239]              name_BT[this] := 876474985;
[L2240]              symbol_BT[this] := 95884948;
[L2241]              decimals_BT[this] := 18;
[L2242]              __var_20 := decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2243]              INITIAL_SUPPLY_BT[this] := 100000000 * (nonlinearPow(10, decimals_BT[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2245]  COND TRUE   DType[this] == BT
[L2246]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2076]              __var_13 := null;
[L2077]  COND FALSE  !(!(account_s571 != null))
[L2081]  CALL        call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2081]  RET         call __var_14 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s571);
[L2082]  COND FALSE  !(revert)
[L2085]              _totalSupply_ERC20[this] := __var_14;
[L2086]  CALL        call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L2086]  RET         call __var_15 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s571], amount_s571);
[L2087]  COND FALSE  !(revert)
[L2090]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s571];
[L2091]              _balances_ERC20[this][account_s571] := __var_15;
[L2092]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s571];
[L2093]              assert { :EventEmitted "Transfer_ERC20" } true;
[L2246]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_BT[this]);
[L2247]  COND FALSE  !(revert)
[L2283]  RET         call BT_BT_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2284]  COND FALSE  !(revert)
[L750]   RET         call BT_BT__success(this, msgsender_MSG, msgvalue_MSG);
[L751]               assume !revert && gas >= 0;
[L3469]  RET         call BT_BT(this, msgsender_MSG, msgvalue_MSG);
[L3470]              assume !revert && gas >= 0;
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND FALSE  !(!(value_s307 <= _balances_ERC20[this][msgsender_MSG]))
[L1821]              __var_1 := null;
[L1822]  COND FALSE  !(!(to_s307 != null))
[L1826]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1641]  COND FALSE  !(!(b_s149 <= a_s149))
[L1645]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1646]              __ret_0_ := c_s149;
[L1826]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1827]  COND FALSE  !(revert)
[L1830]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][msgsender_MSG];
[L1831]              _balances_ERC20[this][msgsender_MSG] := __var_2;
[L1832]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][msgsender_MSG];
[L1833]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L1833]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1834]  COND FALSE  !(revert)
[L1837]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s307];
[L1838]              _balances_ERC20[this][to_s307] := __var_3;
[L1839]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s307];
[L1840]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1841]              __ret_0_ := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND FALSE  !(!(value_s307 <= _balances_ERC20[this][msgsender_MSG]))
[L1821]              __var_1 := null;
[L1822]  COND FALSE  !(!(to_s307 != null))
[L1826]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1641]  COND FALSE  !(!(b_s149 <= a_s149))
[L1645]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1646]              __ret_0_ := c_s149;
[L1826]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1827]  COND FALSE  !(revert)
[L1830]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][msgsender_MSG];
[L1831]              _balances_ERC20[this][msgsender_MSG] := __var_2;
[L1832]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][msgsender_MSG];
[L1833]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L1833]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1834]  COND FALSE  !(revert)
[L1837]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s307];
[L1838]              _balances_ERC20[this][to_s307] := __var_3;
[L1839]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s307];
[L1840]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1841]              __ret_0_ := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

Loop:
[L3473]  CALL        call CorralChoice_BT(this);
[L3320]              havoc msgsender_MSG;
[L3321]              havoc msgvalue_MSG;
[L3322]              havoc choice;
[L3323]              havoc __ret_0_totalSupply;
[L3324]              havoc owner_s231;
[L3325]              havoc __ret_0_balanceOf;
[L3326]              havoc owner_s247;
[L3327]              havoc spender_s247;
[L3328]              havoc __ret_0_allowance;
[L3329]              havoc to_s307;
[L3330]              havoc value_s307;
[L3331]              havoc __ret_0_transfer;
[L3332]              havoc spender_s343;
[L3333]              havoc value_s343;
[L3334]              havoc __ret_0_approve;
[L3335]              havoc from_s429;
[L3336]              havoc to_s429;
[L3337]              havoc value_s429;
[L3338]              havoc __ret_0_transferFrom;
[L3339]              havoc spender_s479;
[L3340]              havoc addedValue_s479;
[L3341]              havoc __ret_0_increaseAllowance;
[L3342]              havoc spender_s529;
[L3343]              havoc subtractedValue_s529;
[L3344]              havoc __ret_0_decreaseAllowance;
[L3345]              havoc __ret_0_name;
[L3346]              havoc __ret_0_symbol;
[L3347]              havoc __ret_0_decimals;
[L3348]              havoc __ret_0_INITIAL_SUPPLY;
[L3349]              havoc amount_s706;
[L3350]              havoc account_s719;
[L3351]              havoc amount_s719;
[L3352]              havoc tmpNow;
[L3353]              havoc gas;
[L3354]              assume gas > 4000000 && gas <= 8000000;
[L3355]              tmpNow := now;
[L3356]              havoc now;
[L3357]              assume now > tmpNow;
[L3358]              assume msgsender_MSG != null;
[L3359]              assume DType[msgsender_MSG] != IERC20;
[L3360]              assume DType[msgsender_MSG] != SafeMath;
[L3361]              assume DType[msgsender_MSG] != ERC20;
[L3362]              assume DType[msgsender_MSG] != BT;
[L3363]              Alloc[msgsender_MSG] := true;
[L3364]  COND FALSE  !(choice == 14)
[L3370]  COND FALSE  !(choice == 13)
[L3376]  COND FALSE  !(choice == 12)
[L3382]  COND TRUE   choice == 11
[L3383]              gas := gas - 21000;
[L3384]  COND TRUE   gas >= 0
[L3385]              assume value_s307 >= 0 && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3386]              assume msgvalue_MSG == 0;
[L3387]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s307 && (value_s307 > _balances_ERC20[this][msgsender_MSG] || _balances_ERC20[this][to_s307] + value_s307 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s307 >= 0) && value_s307 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][to_s307] >= 0) && _balances_ERC20[this][to_s307] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_ERC200 := true;
[L2]                 call_transfer_ERC200 := false;
[L2]                 revert := revert_hold;
[L415]               havoc __exception;
[L416]               revert := false;
[L417]   COND FALSE  !(__exception)
[L439]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L1817]  COND FALSE  !(!(value_s307 <= _balances_ERC20[this][msgsender_MSG]))
[L1821]              __var_1 := null;
[L1822]  COND FALSE  !(!(to_s307 != null))
[L1826]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1641]  COND FALSE  !(!(b_s149 <= a_s149))
[L1645]              c_s149 := (a_s149 - b_s149) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1646]              __ret_0_ := c_s149;
[L1826]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][msgsender_MSG], value_s307);
[L1827]  COND FALSE  !(revert)
[L1830]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][msgsender_MSG];
[L1831]              _balances_ERC20[this][msgsender_MSG] := __var_2;
[L1832]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][msgsender_MSG];
[L1833]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1665]              c_s173 := (a_s173 + b_s173) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1666]  COND FALSE  !(!(c_s173 >= a_s173))
[L1670]              __ret_0_ := c_s173;
[L1833]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s307], value_s307);
[L1834]  COND FALSE  !(revert)
[L1837]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s307];
[L1838]              _balances_ERC20[this][to_s307] := __var_3;
[L1839]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s307];
[L1840]              assert { :EventEmitted "Transfer_ERC20" } true;
[L1841]              __ret_0_ := true;
[L439]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L440]               assume !revert && gas >= 0;
[L3387]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, to_s307, value_s307);
[L3473]  RET         call CorralChoice_BT(this);

[2020-11-25 01:31:30,587 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 01:31:30,587 INFO  L82        PathProgramCache]: Analyzing trace with hash 634653970, now seen corresponding path program 1 times
[2020-11-25 01:31:30,588 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 01:31:30,623 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 01:31:30,752 INFO  L134       CoverageAnalysis]: Checked inductivity of 84 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 84 trivial. 0 not checked.
[2020-11-25 01:31:30,752 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 01:31:30,752 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [11] imperfect sequences [] total 11
[2020-11-25 01:31:30,752 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 01:31:30,753 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 01:31:30,753 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=22, Invalid=88, Unknown=0, NotChecked=0, Total=110
[2020-11-25 01:31:30,753 INFO  L87              Difference]: Start difference. First operand 1998 states and 2170 transitions. cyclomatic complexity: 175 Second operand 11 states.
[2020-11-25 01:31:31,400 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 01:31:31,400 INFO  L93              Difference]: Finished difference Result 1180 states and 1277 transitions.
[2020-11-25 01:31:31,400 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 11 states. 
[2020-11-25 01:31:31,401 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1180 states and 1277 transitions.
[2020-11-25 01:31:31,402 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:31:31,402 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1180 states to 0 states and 0 transitions.
[2020-11-25 01:31:31,402 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 01:31:31,402 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 01:31:31,402 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 01:31:31,402 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 01:31:31,402 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:31:31,402 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:31:31,402 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 01:31:31,402 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 01:31:31,402 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 01:31:31,403 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 01:31:31,403 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 01:31:31,405 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:31:31 BasicIcfg
[2020-11-25 01:31:31,406 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 01:31:31,406 INFO  L168              Benchmark]: Toolchain (without parser) took 7118.15 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 730.3 MB). Free memory was 940.6 MB in the beginning and 1.6 GB in the end (delta: -677.1 MB). Peak memory consumption was 53.2 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,407 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,407 INFO  L168              Benchmark]: Boogie Preprocessor took 83.08 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,407 INFO  L168              Benchmark]: UtopiaSpecLang took 54.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,408 INFO  L168              Benchmark]: Boogie Printer took 12.88 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,408 INFO  L168              Benchmark]: RCFGBuilder took 660.15 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,408 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.99 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,408 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1187.30 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 824.2 MB in the beginning and 697.4 MB in the end (delta: 126.8 MB). Peak memory consumption was 190.8 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,409 INFO  L168              Benchmark]: BlockEncodingV2 took 183.65 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 137.9 MB). Free memory was 697.4 MB in the beginning and 1.1 GB in the end (delta: -409.5 MB). Peak memory consumption was 11.4 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,409 INFO  L168              Benchmark]: BuchiAutomizer took 4891.23 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 528.5 MB). Free memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: -510.8 MB). Peak memory consumption was 17.7 MB. Max. memory is 15.3 GB.
[2020-11-25 01:31:31,411 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3030 locations, 5310 edges
  - StatisticsResult: Encoded RCFG
    2938 locations, 5092 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 83.08 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 54.84 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.88 ms. Allocated memory is still 1.0 GB. Free memory is still 924.5 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 660.15 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 833.2 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.99 ms. Allocated memory is still 1.0 GB. Free memory was 833.2 MB in the beginning and 824.2 MB in the end (delta: 8.9 MB). Peak memory consumption was 8.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1187.30 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 824.2 MB in the beginning and 697.4 MB in the end (delta: 126.8 MB). Peak memory consumption was 190.8 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 183.65 ms. Allocated memory was 1.1 GB in the beginning and 1.2 GB in the end (delta: 137.9 MB). Free memory was 697.4 MB in the beginning and 1.1 GB in the end (delta: -409.5 MB). Peak memory consumption was 11.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4891.23 ms. Allocated memory was 1.2 GB in the beginning and 1.8 GB in the end (delta: 528.5 MB). Free memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: -510.8 MB). Peak memory consumption was 17.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1244 locations, 1629 edges
  - StatisticsResult: BuchiProgram size
    3030 locations, 5310 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 21 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.8s and 8 iterations.  TraceHistogramMax:3. Analysis of lassos took 1.1s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 1472 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2297 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15063 SDtfs, 10038 SDslu, 33779 SDs, 0 SdLazy, 31384 SolverSat, 1816 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_ERC200) ==> ( <>(fail_transfer_ERC200) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
