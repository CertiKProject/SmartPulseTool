This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:55:04,303 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:55:04,304 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:55:04,311 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:55:04,311 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:55:04,312 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:55:04,312 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:55:04,313 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:55:04,314 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:55:04,315 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:55:04,315 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:55:04,315 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:55:04,316 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:55:04,316 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:55:04,317 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:55:04,317 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:55:04,318 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:55:04,319 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:55:04,319 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:55:04,320 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:55:04,321 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:55:04,321 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:55:04,323 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:55:04,323 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:55:04,323 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:55:04,324 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:55:04,324 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:55:04,324 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:55:04,324 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:55:04,324 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:55:04,325 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:55:04,325 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:55:04,325 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:55:04,326 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:55:04,326 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:55:04,326 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:55:04,327 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:55:04,327 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:55:04,327 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:55:04,327 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:55:04,328 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:55:04,328 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:55:04,333 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:55:04,333 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:55:04,334 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:55:04,334 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:55:04,334 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:55:04,334 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:55:04,334 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:55:04,334 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:55:04,334 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:55:04,335 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:55:04,335 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:55:04,335 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:55:04,336 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:55:04,336 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:55:04,336 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:55:04,353 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:55:04,365 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:55:04,367 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:55:04,368 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:55:04,368 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:55:04,369 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl
[2020-11-25 12:55:04,369 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl'
[2020-11-25 12:55:04,443 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:55:04,444 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:55:04,445 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:55:04,445 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:55:04,445 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:55:04,461 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,463 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,491 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,492 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,512 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,521 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,528 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,537 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:55:04,537 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:55:04,538 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:55:04,540 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:55:04,543 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/1) ...
[2020-11-25 12:55:04,562 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(cUSD.allowance(owner, spender), allowance_cUSD[this][owner][spender] >= 0 && allowance_cUSD[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.allowance(owner, spender), return == allowance_cUSD[this][owner][spender] &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this] == old(allowance_cUSD[this]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:04,567 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(cUSD.allowance(owner, spender), allowance_cUSD[this][owner][spender] >= 0 && allowance_cUSD[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.allowance(owner, spender), return == allowance_cUSD[this][owner][spender] &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this] == old(allowance_cUSD[this]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:04,575 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(cUSD.allowance(owner, spender), allowance_cUSD[this][owner][spender] >= 0 && allowance_cUSD[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.allowance(owner, spender), return == allowance_cUSD[this][owner][spender] &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this] == old(allowance_cUSD[this]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:04,581 INFO  L636   opiaSpecLangObserver]: Parsed ( allowance_cUSD[this][arg838_s0][arg839_s0]>=0 && allowance_cUSD[this][arg838_s0][arg839_s0]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],[IdentifierExpression[arg838_s0,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],[IdentifierExpression[arg839_s0,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],[IdentifierExpression[arg838_s0,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],[IdentifierExpression[arg839_s0,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:55:04,584 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==allowance_cUSD[this][arg838_s0][arg839_s0] && totalSupply_cUSD[this]==( old(totalSupply_cUSD[this]) ) ) && balanceOf_cUSD[this]==( old(balanceOf_cUSD[this]) ) ) && allowance_cUSD[this]==( old(allowance_cUSD[this]) ) ) && name_cUSD[this]==( old(name_cUSD[this]) ) ) && symbol_cUSD[this]==( old(symbol_cUSD[this]) ) ) && decimals_cUSD[this]==( old(decimals_cUSD[this]) ) ) && owner_cUSD[this]==( old(owner_cUSD[this]) ) ) && mintingFinished_cUSD[this]==( old(mintingFinished_cUSD[this]) ) ) && creator_cUSD[this]==( old(creator_cUSD[this]) ) ) && destroyer_cUSD[this]==( old(destroyer_cUSD[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_cUSD>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],[IdentifierExpression[arg838_s0,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],[IdentifierExpression[arg839_s0,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[mintingFinished_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[mintingFinished_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[creator_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[creator_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[destroyer_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[destroyer_cUSD,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_cUSD>]]]]]]
[2020-11-25 12:55:04,590 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(cUSD.allowance(owner, spender), allowance_cUSD[this][owner][spender] >= 0 && allowance_cUSD[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(cUSD.allowance(owner, spender), return == allowance_cUSD[this][owner][spender] &&  totalSupply_cUSD[this] == old(totalSupply_cUSD[this]) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this]) && allowance_cUSD[this] == old(allowance_cUSD[this]) && name_cUSD[this] == old(name_cUSD[this]) && symbol_cUSD[this] == old(symbol_cUSD[this]) && decimals_cUSD[this] == old(decimals_cUSD[this]) && owner_cUSD[this] == old(owner_cUSD[this]) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this]) && creator_cUSD[this] == old(creator_cUSD[this]) && destroyer_cUSD[this] == old(destroyer_cUSD[this]))))
[2020-11-25 12:55:04,590 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_cUSD0) ==> ( <>AP(success_allowance_cUSD0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:55:04,601 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:04 PropertyContainer
[2020-11-25 12:55:04,601 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:55:04,602 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:55:04,602 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:55:04,602 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:55:04,603 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/2) ...
[2020-11-25 12:55:04,603 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:55:04,603 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:55:04,619 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:04" (2/2) ...
[2020-11-25 12:55:04,619 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:55:04,619 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:55:04,619 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:55:04,620 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:55:04,620 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/2) ...
[2020-11-25 12:55:04,672 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:55:04,672 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:55:04,672 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:55:04,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMod~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD_NoBaseCtor__success
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD
[2020-11-25 12:55:04,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD
[2020-11-25 12:55:04,673 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD
[2020-11-25 12:55:04,673 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD
[2020-11-25 12:55:04,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD
[2020-11-25 12:55:04,674 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD
[2020-11-25 12:55:04,674 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD
[2020-11-25 12:55:04,675 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD
[2020-11-25 12:55:04,675 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD
[2020-11-25 12:55:04,675 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD
[2020-11-25 12:55:04,675 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD
[2020-11-25 12:55:04,675 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD
[2020-11-25 12:55:04,675 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD
[2020-11-25 12:55:04,675 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD
[2020-11-25 12:55:04,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD
[2020-11-25 12:55:04,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD
[2020-11-25 12:55:04,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD
[2020-11-25 12:55:04,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD
[2020-11-25 12:55:04,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD
[2020-11-25 12:55:04,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD
[2020-11-25 12:55:04,676 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD
[2020-11-25 12:55:04,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD
[2020-11-25 12:55:04,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD
[2020-11-25 12:55:04,677 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure whenMintingFinished_pre__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyCreator_pre__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyDestroyer_pre__success
[2020-11-25 12:55:04,677 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_cUSD
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMod~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,678 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD_NoBaseCtor__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD__success
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure cUSD_cUSD__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD__success
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_cUSD__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD__success
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_cUSD__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD__success
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransfer~arr~arr_cUSD__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD__success
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure multiTransferSingleValue~arr~uint256_cUSD__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD__success
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_cUSD__fail
[2020-11-25 12:55:04,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD__success
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_cUSD__fail
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD__success
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure setCreator~address_cUSD__fail
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD__success
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_cUSD__fail
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD__success
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure finishMinting_cUSD__fail
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD__success
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure setDestroyer~address_cUSD__fail
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD__success
[2020-11-25 12:55:04,680 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_cUSD__fail
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD__success
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure name_cUSD__fail
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD__success
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_cUSD__fail
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD__success
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_cUSD__fail
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD__success
[2020-11-25 12:55:04,681 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_cUSD__fail
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD__success
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_cUSD__fail
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD__success
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_cUSD__fail
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD__success
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_cUSD__fail
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD__success
[2020-11-25 12:55:04,682 INFO  L130     BoogieDeclarations]: Found specification of procedure mintingFinished_cUSD__fail
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD__success
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure creator_cUSD__fail
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD__success
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure destroyer_cUSD__fail
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:55:04,683 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 12:55:04,684 INFO  L130     BoogieDeclarations]: Found specification of procedure canMint_pre__fail
[2020-11-25 12:55:04,684 INFO  L130     BoogieDeclarations]: Found specification of procedure whenMintingFinished_pre__fail
[2020-11-25 12:55:04,684 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyCreator_pre__fail
[2020-11-25 12:55:04,684 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyDestroyer_pre__fail
[2020-11-25 12:55:04,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:55:04,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:55:04,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:55:04,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:55:04,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:55:04,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMod~uint256~uint256_SafeMath__fail
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMod~uint256~uint256_SafeMath__success
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD_NoBaseCtor__fail
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD_NoBaseCtor__success
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD__fail
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure cUSD_cUSD__success
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD__fail
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_cUSD__success
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD__fail
[2020-11-25 12:55:04,686 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_cUSD__success
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD__fail
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransfer~arr~arr_cUSD__success
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD__fail
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure multiTransferSingleValue~arr~uint256_cUSD__success
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD__fail
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_cUSD__success
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD__fail
[2020-11-25 12:55:04,687 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_cUSD__success
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD__fail
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure setCreator~address_cUSD__success
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD__fail
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_cUSD__success
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD__fail
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure finishMinting_cUSD__success
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD__fail
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure setDestroyer~address_cUSD__success
[2020-11-25 12:55:04,688 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD__fail
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_cUSD__success
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD__fail
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_cUSD__success
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD__fail
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_cUSD__success
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD__fail
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_cUSD__success
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD__fail
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_cUSD__success
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD__fail
[2020-11-25 12:55:04,689 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_cUSD__success
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD__fail
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_cUSD__success
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD__fail
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_cUSD__success
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD__fail
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintingFinished_cUSD__success
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD__fail
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure creator_cUSD__success
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD__fail
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure destroyer_cUSD__success
[2020-11-25 12:55:04,690 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__fail
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure canMint_pre__success
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenMintingFinished_pre__fail
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenMintingFinished_pre__success
[2020-11-25 12:55:04,691 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyCreator_pre__fail
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyCreator_pre__success
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyDestroyer_pre__fail
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyDestroyer_pre__success
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_cUSD
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:55:04,692 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:55:04,692 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:55:05,193 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:05,193 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:05,194 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:55:05,264 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:55:05,264 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 12:55:05,266 INFO  L202        PluginConnector]: Adding new model cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:05 BoogieIcfgContainer
[2020-11-25 12:55:05,266 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:04" (2/2) ...
[2020-11-25 12:55:05,266 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:55:05,267 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1d775a89 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:05, skipping insertion in model container
[2020-11-25 12:55:05,267 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:55:05,267 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:55:05,267 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:55:05,268 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:55:05,268 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/3) ...
[2020-11-25 12:55:05,269 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@4e640578 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:05, skipping insertion in model container
[2020-11-25 12:55:05,269 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:04" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:55:05,306 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:05 NWAContainer
[2020-11-25 12:55:05,306 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:55:05,306 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:55:05,306 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:55:05,307 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:55:05,308 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:05" (3/4) ...
[2020-11-25 12:55:05,309 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@44e7bb8b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:05, skipping insertion in model container
[2020-11-25 12:55:05,309 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:05" (4/4) ...
[2020-11-25 12:55:05,312 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:55:05,315 INFO  L110   BuchiProductObserver]: Initial RCFG 1549 locations, 1944 edges
[2020-11-25 12:55:05,315 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:55:05,327 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:55:06,493 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:55:06,498 INFO  L110   BuchiProductObserver]: BuchiProgram size 3644 locations, 6232 edges
[2020-11-25 12:55:06,498 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:06 BoogieIcfgContainer
[2020-11-25 12:55:06,498 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:55:06,498 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:55:06,498 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:55:06,500 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:55:06,500 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:06" (1/1) ...
[2020-11-25 12:55:06,567 INFO  L313           BlockEncoder]: Initial Icfg 3644 locations, 6232 edges
[2020-11-25 12:55:06,567 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:55:06,567 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:55:06,568 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:55:06,568 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:55:06,578 INFO  L70    emoveInfeasibleEdges]: Removed 39 edges and 7 locations because of local infeasibility
[2020-11-25 12:55:06,585 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:55:06,599 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:55:06,603 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:55:06,607 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:55:06,608 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:55:06,612 INFO  L313           BlockEncoder]: Encoded RCFG 3618 locations, 6165 edges
[2020-11-25 12:55:06,612 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:55:06 BasicIcfg
[2020-11-25 12:55:06,612 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:55:06,612 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:55:06,612 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:55:06,614 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:55:06,614 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:06,614 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:55:04" (1/6) ...
[2020-11-25 12:55:06,616 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e15cf46 and model type cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:55:06, skipping insertion in model container
[2020-11-25 12:55:06,616 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:06,616 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:55:04" (2/6) ...
[2020-11-25 12:55:06,616 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e15cf46 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:55:06, skipping insertion in model container
[2020-11-25 12:55:06,616 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:06,616 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:55:05" (3/6) ...
[2020-11-25 12:55:06,617 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e15cf46 and model type cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:55:06, skipping insertion in model container
[2020-11-25 12:55:06,617 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:06,617 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:55:05" (4/6) ...
[2020-11-25 12:55:06,617 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e15cf46 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:55:06, skipping insertion in model container
[2020-11-25 12:55:06,617 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:06,617 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:55:06" (5/6) ...
[2020-11-25 12:55:06,617 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7e15cf46 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:55:06, skipping insertion in model container
[2020-11-25 12:55:06,617 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:55:06,617 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:55:06" (6/6) ...
[2020-11-25 12:55:06,618 INFO  L404   chiAutomizerObserver]: Analyzing ICFG cUSD_0x5c406d99e04b8494dc253fcc52943ef82bca7d75_allowance.bpl_BEv2
[2020-11-25 12:55:06,653 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:55:06,654 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:55:06,654 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:55:06,654 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:55:06,654 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:55:06,654 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:55:06,654 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:55:06,654 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:55:06,654 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:55:06,686 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3618 states.
[2020-11-25 12:55:06,736 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:06,736 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:06,736 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:06,744 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:06,744 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:06,744 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:55:06,744 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3618 states.
[2020-11-25 12:55:06,766 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:06,767 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:06,767 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:06,768 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:06,769 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_cUSD0 := false;
[L2]                 call_allowance_cUSD0 := false;
[L2]     CALL        call main();
[L4009]              assume null == 0;
[L4010]  CALL        call this := FreshRefGenerator__success();
[L2019]              havoc newRef;
[L2020]              assume Alloc[newRef] == false;
[L2021]              Alloc[newRef] := true;
[L2022]              assume newRef != null;
[L4010]  RET         call this := FreshRefGenerator__success();
[L4011]              assume now >= 0;
[L4012]              assume DType[this] == cUSD;
[L4013]              assume msgvalue_MSG == 0;
[L4014]              gas := gas - 53000;
[L4015]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L183]               havoc __exception;
[L184]               revert := false;
[L185]   COND FALSE  !(__exception)
[L213]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2247]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2212]              assume msgsender_MSG != null;
[L2213]              Balance[this] := 0;
[L2214]              name_cUSD[this] := -1245093804;
[L2215]              symbol_cUSD[this] := -1245093804;
[L2216]              decimals_cUSD[this] := 0;
[L2217]              totalSupply_cUSD[this] := 0;
[L2218]              owner_cUSD[this] := null;
[L2219]              balanceOf_cUSD[this] := zeroRefintArr();
[L2220]              sum_balanceOf0[this] := 0;
[L2221]              allowance_cUSD[this] := zeroRefRefintArr();
[L2222]              sum_allowance1[this] := 0;
[L2223]              mintingFinished_cUSD[this] := false;
[L2224]              creator_cUSD[this] := null;
[L2225]              destroyer_cUSD[this] := null;
[L2227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2228]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2230]              totalSupply_cUSD[this] := initialSupply_s229;
[L2231]              name_cUSD[this] := tokenName_s229;
[L2232]              symbol_cUSD[this] := tokenSymbol_s229;
[L2233]              decimals_cUSD[this] := decimalUnits_s229;
[L2234]              owner_cUSD[this] := msgsender_MSG;
[L2247]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  COND TRUE   revert
[L213]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L214]               assume !revert && gas >= 0;
[L4015]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4016]              assume !revert && gas >= 0;

Loop:
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND TRUE   choice == 21
[L3863]              gas := gas - 21000;
[L3864]  COND FALSE  !(gas >= 0)
[L4019]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:06,783 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:06,783 INFO  L82        PathProgramCache]: Analyzing trace with hash 1028509566, now seen corresponding path program 1 times
[2020-11-25 12:55:06,788 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:06,808 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:06,854 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:06,856 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:06,856 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:55:06,861 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:07,037 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:55:07,037 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:55:07,039 INFO  L87              Difference]: Start difference. First operand 3618 states. Second operand 4 states.
[2020-11-25 12:55:07,389 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:07,389 INFO  L93              Difference]: Finished difference Result 3122 states and 3496 transitions.
[2020-11-25 12:55:07,389 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:55:07,390 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3122 states and 3496 transitions.
[2020-11-25 12:55:07,405 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:07,425 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3122 states to 3120 states and 3492 transitions.
[2020-11-25 12:55:07,425 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:55:07,428 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 896
[2020-11-25 12:55:07,428 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3120 states and 3492 transitions.
[2020-11-25 12:55:07,435 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:07,435 INFO  L728         BuchiCegarLoop]: Abstraction has 3120 states and 3492 transitions.
[2020-11-25 12:55:07,450 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3120 states and 3492 transitions.
[2020-11-25 12:55:07,500 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3120 to 3120.
[2020-11-25 12:55:07,501 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3120 states.
[2020-11-25 12:55:07,507 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3120 states to 3120 states and 3492 transitions.
[2020-11-25 12:55:07,508 INFO  L751         BuchiCegarLoop]: Abstraction has 3120 states and 3492 transitions.
[2020-11-25 12:55:07,508 INFO  L631         BuchiCegarLoop]: Abstraction has 3120 states and 3492 transitions.
[2020-11-25 12:55:07,508 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:55:07,508 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3120 states and 3492 transitions.
[2020-11-25 12:55:07,516 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:55:07,516 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:07,516 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:07,518 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:07,518 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_cUSD0 := false;
[L2]                 call_allowance_cUSD0 := false;
[L2]     CALL        call main();
[L4009]              assume null == 0;
[L4010]  CALL        call this := FreshRefGenerator__success();
[L2019]              havoc newRef;
[L2020]              assume Alloc[newRef] == false;
[L2021]              Alloc[newRef] := true;
[L2022]              assume newRef != null;
[L4010]  RET         call this := FreshRefGenerator__success();
[L4011]              assume now >= 0;
[L4012]              assume DType[this] == cUSD;
[L4013]              assume msgvalue_MSG == 0;
[L4014]              gas := gas - 53000;
[L4015]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L183]               havoc __exception;
[L184]               revert := false;
[L185]   COND FALSE  !(__exception)
[L213]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2247]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2212]              assume msgsender_MSG != null;
[L2213]              Balance[this] := 0;
[L2214]              name_cUSD[this] := -1245093804;
[L2215]              symbol_cUSD[this] := -1245093804;
[L2216]              decimals_cUSD[this] := 0;
[L2217]              totalSupply_cUSD[this] := 0;
[L2218]              owner_cUSD[this] := null;
[L2219]              balanceOf_cUSD[this] := zeroRefintArr();
[L2220]              sum_balanceOf0[this] := 0;
[L2221]              allowance_cUSD[this] := zeroRefRefintArr();
[L2222]              sum_allowance1[this] := 0;
[L2223]              mintingFinished_cUSD[this] := false;
[L2224]              creator_cUSD[this] := null;
[L2225]              destroyer_cUSD[this] := null;
[L2227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2228]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2230]              totalSupply_cUSD[this] := initialSupply_s229;
[L2231]              name_cUSD[this] := tokenName_s229;
[L2232]              symbol_cUSD[this] := tokenSymbol_s229;
[L2233]              decimals_cUSD[this] := decimalUnits_s229;
[L2234]              owner_cUSD[this] := msgsender_MSG;
[L2247]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  COND TRUE   revert
[L213]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L214]               assume !revert && gas >= 0;
[L4015]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4016]              assume !revert && gas >= 0;
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND FALSE  !(choice == 21)
[L3868]  COND FALSE  !(choice == 20)
[L3874]  COND FALSE  !(choice == 19)
[L3880]  COND FALSE  !(choice == 18)
[L3886]  COND FALSE  !(choice == 17)
[L3892]  COND FALSE  !(choice == 16)
[L3898]  COND TRUE   choice == 15
[L3899]              gas := gas - 21000;
[L3900]  COND TRUE   gas >= 0
[L3901]              assume msgvalue_MSG == 0;
[L3902]  CALL        call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowance_cUSD[this][arg838_s0][arg839_s0] >= 0 && allowance_cUSD[this][arg838_s0][arg839_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_cUSD0 := true;
[L2]                 call_allowance_cUSD0 := false;
[L2]                 revert := revert_hold;
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1390]  CALL        call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2899]              __ret_0_ := allowance_cUSD[this][arg838_s0][arg839_s0];
[L1390]  RET         call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L1391]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == allowance_cUSD[this][arg838_s0][arg839_s0] && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this] == old(allowance_cUSD[this])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L2]                 revert := revert_hold;
[L3902]  RET         call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L4019]  RET         call CorralChoice_cUSD(this);

Loop:
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND FALSE  !(choice == 21)
[L3868]  COND FALSE  !(choice == 20)
[L3874]  COND FALSE  !(choice == 19)
[L3880]  COND FALSE  !(choice == 18)
[L3886]  COND FALSE  !(choice == 17)
[L3892]  COND FALSE  !(choice == 16)
[L3898]  COND TRUE   choice == 15
[L3899]              gas := gas - 21000;
[L3900]  COND TRUE   gas >= 0
[L3901]              assume msgvalue_MSG == 0;
[L3902]  CALL        call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowance_cUSD[this][arg838_s0][arg839_s0] >= 0 && allowance_cUSD[this][arg838_s0][arg839_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_cUSD0 := true;
[L2]                 call_allowance_cUSD0 := false;
[L2]                 revert := revert_hold;
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1390]  CALL        call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2899]              __ret_0_ := allowance_cUSD[this][arg838_s0][arg839_s0];
[L1390]  RET         call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L1391]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == allowance_cUSD[this][arg838_s0][arg839_s0] && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this] == old(allowance_cUSD[this])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L2]                 revert := revert_hold;
[L3902]  RET         call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L4019]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:07,522 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:07,523 INFO  L82        PathProgramCache]: Analyzing trace with hash 801522253, now seen corresponding path program 1 times
[2020-11-25 12:55:07,523 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:07,536 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:07,557 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:07,557 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:07,557 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:55:07,558 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:07,558 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:55:07,558 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:55:07,559 INFO  L87              Difference]: Start difference. First operand 3120 states and 3492 transitions. cyclomatic complexity: 382 Second operand 4 states.
[2020-11-25 12:55:08,172 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:08,172 INFO  L93              Difference]: Finished difference Result 4540 states and 5194 transitions.
[2020-11-25 12:55:08,172 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:55:08,172 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4540 states and 5194 transitions.
[2020-11-25 12:55:08,190 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 12:55:08,211 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4540 states to 4308 states and 4910 transitions.
[2020-11-25 12:55:08,211 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1178
[2020-11-25 12:55:08,213 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1222
[2020-11-25 12:55:08,213 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4308 states and 4910 transitions.
[2020-11-25 12:55:08,221 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:08,221 INFO  L728         BuchiCegarLoop]: Abstraction has 4308 states and 4910 transitions.
[2020-11-25 12:55:08,226 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4308 states and 4910 transitions.
[2020-11-25 12:55:08,266 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4308 to 3497.
[2020-11-25 12:55:08,266 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3497 states.
[2020-11-25 12:55:08,271 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3497 states to 3497 states and 3860 transitions.
[2020-11-25 12:55:08,271 INFO  L751         BuchiCegarLoop]: Abstraction has 3497 states and 3860 transitions.
[2020-11-25 12:55:08,271 INFO  L631         BuchiCegarLoop]: Abstraction has 3497 states and 3860 transitions.
[2020-11-25 12:55:08,271 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:55:08,271 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3497 states and 3860 transitions.
[2020-11-25 12:55:08,279 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:55:08,279 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:08,279 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:08,281 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:08,281 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_cUSD0 := false;
[L2]                 call_allowance_cUSD0 := false;
[L2]     CALL        call main();
[L4009]              assume null == 0;
[L4010]  CALL        call this := FreshRefGenerator__success();
[L2019]              havoc newRef;
[L2020]              assume Alloc[newRef] == false;
[L2021]              Alloc[newRef] := true;
[L2022]              assume newRef != null;
[L4010]  RET         call this := FreshRefGenerator__success();
[L4011]              assume now >= 0;
[L4012]              assume DType[this] == cUSD;
[L4013]              assume msgvalue_MSG == 0;
[L4014]              gas := gas - 53000;
[L4015]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L183]               havoc __exception;
[L184]               revert := false;
[L185]   COND FALSE  !(__exception)
[L213]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2247]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2212]              assume msgsender_MSG != null;
[L2213]              Balance[this] := 0;
[L2214]              name_cUSD[this] := -1245093804;
[L2215]              symbol_cUSD[this] := -1245093804;
[L2216]              decimals_cUSD[this] := 0;
[L2217]              totalSupply_cUSD[this] := 0;
[L2218]              owner_cUSD[this] := null;
[L2219]              balanceOf_cUSD[this] := zeroRefintArr();
[L2220]              sum_balanceOf0[this] := 0;
[L2221]              allowance_cUSD[this] := zeroRefRefintArr();
[L2222]              sum_allowance1[this] := 0;
[L2223]              mintingFinished_cUSD[this] := false;
[L2224]              creator_cUSD[this] := null;
[L2225]              destroyer_cUSD[this] := null;
[L2227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2228]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2230]              totalSupply_cUSD[this] := initialSupply_s229;
[L2231]              name_cUSD[this] := tokenName_s229;
[L2232]              symbol_cUSD[this] := tokenSymbol_s229;
[L2233]              decimals_cUSD[this] := decimalUnits_s229;
[L2234]              owner_cUSD[this] := msgsender_MSG;
[L2247]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  COND FALSE  !(revert)
[L213]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L214]               assume !revert && gas >= 0;
[L4015]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4016]              assume !revert && gas >= 0;
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND FALSE  !(choice == 21)
[L3868]  COND FALSE  !(choice == 20)
[L3874]  COND FALSE  !(choice == 19)
[L3880]  COND FALSE  !(choice == 18)
[L3886]  COND FALSE  !(choice == 17)
[L3892]  COND FALSE  !(choice == 16)
[L3898]  COND TRUE   choice == 15
[L3899]              gas := gas - 21000;
[L3900]  COND TRUE   gas >= 0
[L3901]              assume msgvalue_MSG == 0;
[L3902]  CALL        call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowance_cUSD[this][arg838_s0][arg839_s0] >= 0 && allowance_cUSD[this][arg838_s0][arg839_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_cUSD0 := true;
[L2]                 call_allowance_cUSD0 := false;
[L2]                 revert := revert_hold;
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1390]  CALL        call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2899]              __ret_0_ := allowance_cUSD[this][arg838_s0][arg839_s0];
[L1390]  RET         call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L1391]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == allowance_cUSD[this][arg838_s0][arg839_s0] && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this] == old(allowance_cUSD[this])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L2]                 revert := revert_hold;
[L3902]  RET         call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L4019]  RET         call CorralChoice_cUSD(this);

Loop:
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND FALSE  !(choice == 21)
[L3868]  COND FALSE  !(choice == 20)
[L3874]  COND FALSE  !(choice == 19)
[L3880]  COND FALSE  !(choice == 18)
[L3886]  COND FALSE  !(choice == 17)
[L3892]  COND FALSE  !(choice == 16)
[L3898]  COND TRUE   choice == 15
[L3899]              gas := gas - 21000;
[L3900]  COND TRUE   gas >= 0
[L3901]              assume msgvalue_MSG == 0;
[L3902]  CALL        call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowance_cUSD[this][arg838_s0][arg839_s0] >= 0 && allowance_cUSD[this][arg838_s0][arg839_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_cUSD0 := true;
[L2]                 call_allowance_cUSD0 := false;
[L2]                 revert := revert_hold;
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND FALSE  !(__exception)
[L1390]  CALL        call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2899]              __ret_0_ := allowance_cUSD[this][arg838_s0][arg839_s0];
[L1390]  RET         call __ret_0_ := allowance~address~address_cUSD__success(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L1391]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((((__ret_0_ == allowance_cUSD[this][arg838_s0][arg839_s0] && totalSupply_cUSD[this] == old(totalSupply_cUSD[this])) && balanceOf_cUSD[this] == old(balanceOf_cUSD[this])) && allowance_cUSD[this] == old(allowance_cUSD[this])) && name_cUSD[this] == old(name_cUSD[this])) && symbol_cUSD[this] == old(symbol_cUSD[this])) && decimals_cUSD[this] == old(decimals_cUSD[this])) && owner_cUSD[this] == old(owner_cUSD[this])) && mintingFinished_cUSD[this] == old(mintingFinished_cUSD[this])) && creator_cUSD[this] == old(creator_cUSD[this])) && destroyer_cUSD[this] == old(destroyer_cUSD[this]));
[L2]                 revert := revert_hold;
[L3902]  RET         call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L4019]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:08,284 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:08,284 INFO  L82        PathProgramCache]: Analyzing trace with hash -505620145, now seen corresponding path program 1 times
[2020-11-25 12:55:08,285 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:08,297 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:08,348 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:08,348 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:08,348 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:55:08,349 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:08,349 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:55:08,349 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:55:08,349 INFO  L87              Difference]: Start difference. First operand 3497 states and 3860 transitions. cyclomatic complexity: 373 Second operand 4 states.
[2020-11-25 12:55:08,411 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:08,411 INFO  L93              Difference]: Finished difference Result 3496 states and 3857 transitions.
[2020-11-25 12:55:08,411 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:55:08,412 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3496 states and 3857 transitions.
[2020-11-25 12:55:08,420 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:55:08,430 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3496 states to 3486 states and 3847 transitions.
[2020-11-25 12:55:08,430 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1034
[2020-11-25 12:55:08,430 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1034
[2020-11-25 12:55:08,430 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3486 states and 3847 transitions.
[2020-11-25 12:55:08,433 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:08,433 INFO  L728         BuchiCegarLoop]: Abstraction has 3486 states and 3847 transitions.
[2020-11-25 12:55:08,436 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3486 states and 3847 transitions.
[2020-11-25 12:55:08,462 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3486 to 3486.
[2020-11-25 12:55:08,462 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3486 states.
[2020-11-25 12:55:08,466 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3486 states to 3486 states and 3847 transitions.
[2020-11-25 12:55:08,466 INFO  L751         BuchiCegarLoop]: Abstraction has 3486 states and 3847 transitions.
[2020-11-25 12:55:08,466 INFO  L631         BuchiCegarLoop]: Abstraction has 3486 states and 3847 transitions.
[2020-11-25 12:55:08,466 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:55:08,466 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3486 states and 3847 transitions.
[2020-11-25 12:55:08,471 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:55:08,472 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:55:08,472 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:55:08,473 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:55:08,473 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_cUSD0 := false;
[L2]                 call_allowance_cUSD0 := false;
[L2]     CALL        call main();
[L4009]              assume null == 0;
[L4010]  CALL        call this := FreshRefGenerator__success();
[L2019]              havoc newRef;
[L2020]              assume Alloc[newRef] == false;
[L2021]              Alloc[newRef] := true;
[L2022]              assume newRef != null;
[L4010]  RET         call this := FreshRefGenerator__success();
[L4011]              assume now >= 0;
[L4012]              assume DType[this] == cUSD;
[L4013]              assume msgvalue_MSG == 0;
[L4014]              gas := gas - 53000;
[L4015]  CALL        call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L183]               havoc __exception;
[L184]               revert := false;
[L185]   COND FALSE  !(__exception)
[L213]   CALL        call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2247]  CALL        call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2212]              assume msgsender_MSG != null;
[L2213]              Balance[this] := 0;
[L2214]              name_cUSD[this] := -1245093804;
[L2215]              symbol_cUSD[this] := -1245093804;
[L2216]              decimals_cUSD[this] := 0;
[L2217]              totalSupply_cUSD[this] := 0;
[L2218]              owner_cUSD[this] := null;
[L2219]              balanceOf_cUSD[this] := zeroRefintArr();
[L2220]              sum_balanceOf0[this] := 0;
[L2221]              allowance_cUSD[this] := zeroRefRefintArr();
[L2222]              sum_allowance1[this] := 0;
[L2223]              mintingFinished_cUSD[this] := false;
[L2224]              creator_cUSD[this] := null;
[L2225]              destroyer_cUSD[this] := null;
[L2227]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_cUSD[this][msgsender_MSG];
[L2228]              balanceOf_cUSD[this][msgsender_MSG] := initialSupply_s229;
[L2229]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_cUSD[this][msgsender_MSG];
[L2230]              totalSupply_cUSD[this] := initialSupply_s229;
[L2231]              name_cUSD[this] := tokenName_s229;
[L2232]              symbol_cUSD[this] := tokenSymbol_s229;
[L2233]              decimals_cUSD[this] := decimalUnits_s229;
[L2234]              owner_cUSD[this] := msgsender_MSG;
[L2247]  RET         call cUSD_cUSD_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L2248]  COND FALSE  !(revert)
[L213]   RET         call cUSD_cUSD__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L214]               assume !revert && gas >= 0;
[L4015]  RET         call cUSD_cUSD(this, msgsender_MSG, msgvalue_MSG, initialSupply_s229, tokenName_s229, decimalUnits_s229, tokenSymbol_s229);
[L4016]              assume !revert && gas >= 0;
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND FALSE  !(choice == 21)
[L3868]  COND FALSE  !(choice == 20)
[L3874]  COND FALSE  !(choice == 19)
[L3880]  COND FALSE  !(choice == 18)
[L3886]  COND FALSE  !(choice == 17)
[L3892]  COND FALSE  !(choice == 16)
[L3898]  COND TRUE   choice == 15
[L3899]              gas := gas - 21000;
[L3900]  COND TRUE   gas >= 0
[L3901]              assume msgvalue_MSG == 0;
[L3902]  CALL        call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowance_cUSD[this][arg838_s0][arg839_s0] >= 0 && allowance_cUSD[this][arg838_s0][arg839_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_cUSD0 := true;
[L2]                 call_allowance_cUSD0 := false;
[L2]                 revert := revert_hold;
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND TRUE   __exception
[L1363]              __tmp__Balance := Balance;
[L1364]              __tmp__DType := DType;
[L1365]              __tmp__Alloc := Alloc;
[L1366]              __tmp__balance_ADDR := balance_ADDR;
[L1367]              __tmp__M_Ref_int := M_Ref_int;
[L1368]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L1369]              __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L1370]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1371]              __tmp__sum_allowance1 := sum_allowance1;
[L1372]              __tmp__M_int_Ref := M_int_Ref;
[L1373]              __tmp__sum := sum;
[L1374]              __tmp__M_int_int := M_int_int;
[L1375]              __tmp__Length := Length;
[L1376]              __tmp__now := now;
[L1377]              __tmp__name_cUSD := name_cUSD;
[L1378]              __tmp__symbol_cUSD := symbol_cUSD;
[L1379]              __tmp__decimals_cUSD := decimals_cUSD;
[L1380]              __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L1381]              __tmp__owner_cUSD := owner_cUSD;
[L1382]              __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L1383]              __tmp__allowance_cUSD := allowance_cUSD;
[L1384]              __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L1385]              __tmp__creator_cUSD := creator_cUSD;
[L1386]              __tmp__destroyer_cUSD := destroyer_cUSD;
[L1387]  CALL        call __ret_0_ := allowance~address~address_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2893]              __ret_0_ := __tmp__allowance_cUSD[this][arg838_s0][arg839_s0];
[L1387]  RET         call __ret_0_ := allowance~address~address_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L1388]              assume revert || gas < 0;
[L3902]  RET         call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L4019]  RET         call CorralChoice_cUSD(this);

Loop:
[L4019]  CALL        call CorralChoice_cUSD(this);
[L3809]              havoc msgsender_MSG;
[L3810]              havoc msgvalue_MSG;
[L3811]              havoc choice;
[L3812]              havoc __ret_0_name;
[L3813]              havoc __ret_0_symbol;
[L3814]              havoc __ret_0_decimals;
[L3815]              havoc __ret_0_totalSupply;
[L3816]              havoc __ret_0_owner;
[L3817]              havoc arg837_s0;
[L3818]              havoc __ret_0_balanceOf;
[L3819]              havoc arg838_s0;
[L3820]              havoc arg839_s0;
[L3821]              havoc __ret_0_allowance;
[L3822]              havoc initialSupply_s229;
[L3823]              havoc tokenName_s229;
[L3824]              havoc decimalUnits_s229;
[L3825]              havoc tokenSymbol_s229;
[L3826]              havoc _to_s341;
[L3827]              havoc _value_s341;
[L3828]              havoc _spender_s376;
[L3829]              havoc _value_s376;
[L3830]              havoc success_s376;
[L3831]              havoc _receivers_s420;
[L3832]              havoc _values_s420;
[L3833]              havoc success_s420;
[L3834]              havoc _receivers_s469;
[L3835]              havoc _value_s469;
[L3836]              havoc success_s469;
[L3837]              havoc _from_s581;
[L3838]              havoc _to_s581;
[L3839]              havoc _value_s581;
[L3840]              havoc success_s581;
[L3841]              havoc newOwner_s615;
[L3842]              havoc __ret_0_mintingFinished;
[L3843]              havoc __ret_0_creator;
[L3844]              havoc __ret_0_destroyer;
[L3845]              havoc _creator_s671;
[L3846]              havoc _to_s741;
[L3847]              havoc _amount_s741;
[L3848]              havoc __ret_0_mint;
[L3849]              havoc __ret_0_finishMinting;
[L3850]              havoc _destroyer_s790;
[L3851]              havoc _amount_s834;
[L3852]              havoc tmpNow;
[L3853]              havoc gas;
[L3854]              assume gas > 4000000 && gas <= 8000000;
[L3855]              tmpNow := now;
[L3856]              havoc now;
[L3857]              assume now > tmpNow;
[L3858]              assume msgsender_MSG != null;
[L3859]              assume DType[msgsender_MSG] != SafeMath;
[L3860]              assume DType[msgsender_MSG] != cUSD;
[L3861]              Alloc[msgsender_MSG] := true;
[L3862]  COND FALSE  !(choice == 21)
[L3868]  COND FALSE  !(choice == 20)
[L3874]  COND FALSE  !(choice == 19)
[L3880]  COND FALSE  !(choice == 18)
[L3886]  COND FALSE  !(choice == 17)
[L3892]  COND FALSE  !(choice == 16)
[L3898]  COND TRUE   choice == 15
[L3899]              gas := gas - 21000;
[L3900]  COND TRUE   gas >= 0
[L3901]              assume msgvalue_MSG == 0;
[L3902]  CALL        call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowance_cUSD[this][arg838_s0][arg839_s0] >= 0 && allowance_cUSD[this][arg838_s0][arg839_s0] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_cUSD0 := true;
[L2]                 call_allowance_cUSD0 := false;
[L2]                 revert := revert_hold;
[L1360]              havoc __exception;
[L1361]              revert := false;
[L1362]  COND TRUE   __exception
[L1363]              __tmp__Balance := Balance;
[L1364]              __tmp__DType := DType;
[L1365]              __tmp__Alloc := Alloc;
[L1366]              __tmp__balance_ADDR := balance_ADDR;
[L1367]              __tmp__M_Ref_int := M_Ref_int;
[L1368]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L1369]              __tmp__alloc_allowance_cUSD_lvl0 := alloc_allowance_cUSD_lvl0;
[L1370]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1371]              __tmp__sum_allowance1 := sum_allowance1;
[L1372]              __tmp__M_int_Ref := M_int_Ref;
[L1373]              __tmp__sum := sum;
[L1374]              __tmp__M_int_int := M_int_int;
[L1375]              __tmp__Length := Length;
[L1376]              __tmp__now := now;
[L1377]              __tmp__name_cUSD := name_cUSD;
[L1378]              __tmp__symbol_cUSD := symbol_cUSD;
[L1379]              __tmp__decimals_cUSD := decimals_cUSD;
[L1380]              __tmp__totalSupply_cUSD := totalSupply_cUSD;
[L1381]              __tmp__owner_cUSD := owner_cUSD;
[L1382]              __tmp__balanceOf_cUSD := balanceOf_cUSD;
[L1383]              __tmp__allowance_cUSD := allowance_cUSD;
[L1384]              __tmp__mintingFinished_cUSD := mintingFinished_cUSD;
[L1385]              __tmp__creator_cUSD := creator_cUSD;
[L1386]              __tmp__destroyer_cUSD := destroyer_cUSD;
[L1387]  CALL        call __ret_0_ := allowance~address~address_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L2893]              __ret_0_ := __tmp__allowance_cUSD[this][arg838_s0][arg839_s0];
[L1387]  RET         call __ret_0_ := allowance~address~address_cUSD__fail(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L1388]              assume revert || gas < 0;
[L3902]  RET         call __ret_0_allowance := allowance~address~address_cUSD(this, msgsender_MSG, msgvalue_MSG, arg838_s0, arg839_s0);
[L4019]  RET         call CorralChoice_cUSD(this);

[2020-11-25 12:55:08,476 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:55:08,476 INFO  L82        PathProgramCache]: Analyzing trace with hash 1511102585, now seen corresponding path program 1 times
[2020-11-25 12:55:08,477 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:55:08,486 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:55:08,532 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:55:08,532 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:55:08,533 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 12:55:08,533 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:55:08,533 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 12:55:08,534 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 12:55:08,534 INFO  L87              Difference]: Start difference. First operand 3486 states and 3847 transitions. cyclomatic complexity: 371 Second operand 5 states.
[2020-11-25 12:55:08,725 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:55:08,725 INFO  L93              Difference]: Finished difference Result 2291 states and 2537 transitions.
[2020-11-25 12:55:08,725 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:55:08,725 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2291 states and 2537 transitions.
[2020-11-25 12:55:08,730 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:55:08,730 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2291 states to 0 states and 0 transitions.
[2020-11-25 12:55:08,730 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 12:55:08,730 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 12:55:08,730 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 12:55:08,730 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:55:08,730 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:55:08,730 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:55:08,730 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:55:08,730 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:55:08,730 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 12:55:08,730 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:55:08,731 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 12:55:08,738 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:55:08 BasicIcfg
[2020-11-25 12:55:08,738 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:55:08,739 INFO  L168              Benchmark]: Toolchain (without parser) took 4294.80 ms. Allocated memory was 1.0 GB in the beginning and 1.4 GB in the end (delta: 364.9 MB). Free memory was 940.6 MB in the beginning and 1.2 GB in the end (delta: -267.4 MB). Peak memory consumption was 97.5 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,740 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.13 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,741 INFO  L168              Benchmark]: Boogie Preprocessor took 92.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,742 INFO  L168              Benchmark]: UtopiaSpecLang took 64.07 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,742 INFO  L168              Benchmark]: Boogie Printer took 17.27 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,742 INFO  L168              Benchmark]: RCFGBuilder took 647.34 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 817.1 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,743 INFO  L168              Benchmark]: UtopiaLTL2Aut took 39.34 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 813.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,744 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1191.67 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.7 MB). Free memory was 813.5 MB in the beginning and 1.1 GB in the end (delta: -289.0 MB). Peak memory consumption was 190.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,744 INFO  L168              Benchmark]: BlockEncodingV2 took 113.94 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 53.1 MB). Peak memory consumption was 53.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,745 INFO  L168              Benchmark]: BuchiAutomizer took 2125.86 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 166.2 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -158.6 MB). Peak memory consumption was 7.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:55:08,749 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3644 locations, 6232 edges
  - StatisticsResult: Encoded RCFG
    3618 locations, 6165 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.13 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 92.32 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.07 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 17.27 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 647.34 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 817.1 MB in the end (delta: 102.0 MB). Peak memory consumption was 102.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 39.34 ms. Allocated memory is still 1.0 GB. Free memory was 817.1 MB in the beginning and 813.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1191.67 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 198.7 MB). Free memory was 813.5 MB in the beginning and 1.1 GB in the end (delta: -289.0 MB). Peak memory consumption was 190.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 113.94 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.0 GB in the end (delta: 53.1 MB). Peak memory consumption was 53.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 2125.86 ms. Allocated memory was 1.2 GB in the beginning and 1.4 GB in the end (delta: 166.2 MB). Free memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: -158.6 MB). Peak memory consumption was 7.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1549 locations, 1944 edges
  - StatisticsResult: BuchiProgram size
    3644 locations, 6232 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 2.0s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.2s. Construction of modules took 0.8s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 811 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 3497 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13282 SDtfs, 11101 SDslu, 15888 SDs, 0 SdLazy, 2721 SolverSat, 2411 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.8s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_cUSD0) ==> ( <>(success_allowance_cUSD0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
