This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:50:22,286 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:50:22,287 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:50:22,298 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:50:22,298 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:50:22,299 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:50:22,300 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:50:22,301 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:50:22,303 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:50:22,303 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:50:22,304 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:50:22,304 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:50:22,305 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:50:22,306 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:50:22,306 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:50:22,307 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:50:22,308 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:50:22,309 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:50:22,310 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:50:22,311 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:50:22,312 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:50:22,313 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:50:22,315 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:50:22,315 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:50:22,315 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:50:22,316 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:50:22,316 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:50:22,316 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:50:22,317 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:50:22,317 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:50:22,317 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:50:22,318 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:50:22,318 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:50:22,319 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:50:22,319 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:50:22,320 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:50:22,320 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:50:22,320 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:50:22,320 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:50:22,322 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:50:22,322 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:50:22,323 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:50:22,335 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:50:22,335 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:50:22,336 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:50:22,336 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:50:22,336 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:50:22,336 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:50:22,337 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:50:22,337 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:50:22,337 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:50:22,338 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:50:22,338 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:50:22,361 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:50:22,372 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:50:22,374 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:50:22,376 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:50:22,376 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:50:22,376 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl
[2020-11-25 05:50:22,377 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl'
[2020-11-25 05:50:22,452 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:50:22,453 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:50:22,453 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:50:22,454 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:50:22,454 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:50:22,471 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,473 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,509 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,510 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,533 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,543 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,551 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,560 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:50:22,560 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:50:22,560 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:50:22,562 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:50:22,566 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/1) ...
[2020-11-25 05:50:22,588 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StreamProtocol.allowance(owner, spender), allowed_StreamProtocol[this][owner][spender] >= 0 && allowed_StreamProtocol[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.allowance(owner, spender), return == allowed_StreamProtocol[this][owner][spender] &&  _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:22,594 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StreamProtocol.allowance(owner, spender), allowed_StreamProtocol[this][owner][spender] >= 0 && allowed_StreamProtocol[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.allowance(owner, spender), return == allowed_StreamProtocol[this][owner][spender] &&  _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:22,602 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StreamProtocol.allowance(owner, spender), allowed_StreamProtocol[this][owner][spender] >= 0 && allowed_StreamProtocol[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.allowance(owner, spender), return == allowed_StreamProtocol[this][owner][spender] &&  _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:22,608 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_StreamProtocol[this][tokenOwner_s532][spender_s532]>=0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],[IdentifierExpression[tokenOwner_s532,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],[IdentifierExpression[spender_s532,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],[IdentifierExpression[tokenOwner_s532,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],[IdentifierExpression[spender_s532,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:50:22,611 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( remaining_s532==allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] && _totalSupply_StreamProtocol[this]==( old(_totalSupply_StreamProtocol[this]) ) ) && balances_StreamProtocol[this]==( old(balances_StreamProtocol[this]) ) ) && allowed_StreamProtocol[this]==( old(allowed_StreamProtocol[this]) ) ) && symbol_StreamProtocol[this]==( old(symbol_StreamProtocol[this]) ) ) && name_StreamProtocol[this]==( old(name_StreamProtocol[this]) ) ) && decimals_StreamProtocol[this]==( old(decimals_StreamProtocol[this]) ) ) && _stopTrade_StreamProtocol[this]==( old(_stopTrade_StreamProtocol[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[remaining_s532,<IMPLEMENTATION_OUTPARAM,allowance~address~address_StreamProtocol>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],[IdentifierExpression[tokenOwner_s532,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],[IdentifierExpression[spender_s532,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_stopTrade_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_stopTrade_StreamProtocol,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StreamProtocol>]]]]]]
[2020-11-25 05:50:22,615 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StreamProtocol.allowance(owner, spender), allowed_StreamProtocol[this][owner][spender] >= 0 && allowed_StreamProtocol[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StreamProtocol.allowance(owner, spender), return == allowed_StreamProtocol[this][owner][spender] &&  _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this]) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this]) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this]) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this]) && name_StreamProtocol[this] == old(name_StreamProtocol[this]) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this]) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 05:50:22,616 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_StreamProtocol0) ==> ( <>AP(success_allowance_StreamProtocol0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:50:22,624 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:22 PropertyContainer
[2020-11-25 05:50:22,624 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:50:22,624 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:50:22,624 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:50:22,625 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:50:22,625 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/2) ...
[2020-11-25 05:50:22,626 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:50:22,626 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:50:22,638 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:22" (2/2) ...
[2020-11-25 05:50:22,638 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:50:22,639 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:50:22,639 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:50:22,639 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:50:22,641 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/2) ...
[2020-11-25 05:50:22,698 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:50:22,698 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:50:22,698 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 05:50:22,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:50:22,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 05:50:22,699 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:50:22,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 05:50:22,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 05:50:22,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 05:50:22,700 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol
[2020-11-25 05:50:22,701 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol
[2020-11-25 05:50:22,702 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol
[2020-11-25 05:50:22,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol
[2020-11-25 05:50:22,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol
[2020-11-25 05:50:22,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 05:50:22,703 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StreamProtocol
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,704 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 05:50:22,705 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__success
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,706 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,707 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__success
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_StreamProtocol__fail
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__success
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure name_StreamProtocol__fail
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__success
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_StreamProtocol__fail
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:50:22,708 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:50:22,709 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,709 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 05:50:22,710 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 05:50:22,711 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__fail
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol_NoBaseCtor__success
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__fail
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure StreamProtocol_StreamProtocol__success
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__fail
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StreamProtocol__success
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__fail
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_StreamProtocol__success
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__fail
[2020-11-25 05:50:22,712 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_StreamProtocol__success
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__fail
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StreamProtocol__success
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__fail
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StreamProtocol__success
[2020-11-25 05:50:22,713 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__fail
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_StreamProtocol__success
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__fail
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_StreamProtocol__success
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_StreamProtocol__success
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__fail
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_StreamProtocol__success
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__fail
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_StreamProtocol__success
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__fail
[2020-11-25 05:50:22,714 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_StreamProtocol__success
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__fail
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_StreamProtocol__success
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 05:50:22,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StreamProtocol
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:50:22,716 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:50:22,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:50:22,958 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:22,959 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:22,959 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:50:23,285 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:50:23,286 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 05:50:23,287 INFO  L202        PluginConnector]: Adding new model StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:23 BoogieIcfgContainer
[2020-11-25 05:50:23,288 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:22" (2/2) ...
[2020-11-25 05:50:23,288 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:50:23,288 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@58d1e2e and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:23, skipping insertion in model container
[2020-11-25 05:50:23,288 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:50:23,288 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:50:23,288 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:50:23,290 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:50:23,290 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/3) ...
[2020-11-25 05:50:23,290 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@1bd6613 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:23, skipping insertion in model container
[2020-11-25 05:50:23,290 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:22" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:50:23,327 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:23 NWAContainer
[2020-11-25 05:50:23,327 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:50:23,327 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:50:23,327 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:50:23,328 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:50:23,329 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:23" (3/4) ...
[2020-11-25 05:50:23,330 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@6a21db13 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:23, skipping insertion in model container
[2020-11-25 05:50:23,330 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:23" (4/4) ...
[2020-11-25 05:50:23,333 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:50:23,336 INFO  L110   BuchiProductObserver]: Initial RCFG 1309 locations, 1635 edges
[2020-11-25 05:50:23,336 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:50:23,346 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:50:24,658 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:50:24,662 INFO  L110   BuchiProductObserver]: BuchiProgram size 3092 locations, 5270 edges
[2020-11-25 05:50:24,662 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:24 BoogieIcfgContainer
[2020-11-25 05:50:24,662 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:50:24,662 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:50:24,662 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:50:24,664 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:50:24,664 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:24" (1/1) ...
[2020-11-25 05:50:24,727 INFO  L313           BlockEncoder]: Initial Icfg 3092 locations, 5270 edges
[2020-11-25 05:50:24,728 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:50:24,728 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:50:24,728 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:50:24,729 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:50:24,738 INFO  L70    emoveInfeasibleEdges]: Removed 60 edges and 13 locations because of local infeasibility
[2020-11-25 05:50:24,745 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 05:50:24,755 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:50:24,758 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:50:24,761 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:50:24,761 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:50:24,764 INFO  L313           BlockEncoder]: Encoded RCFG 3052 locations, 5170 edges
[2020-11-25 05:50:24,765 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:50:24 BasicIcfg
[2020-11-25 05:50:24,765 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:50:24,765 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:50:24,765 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:50:24,767 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:50:24,767 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:24,767 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:50:22" (1/6) ...
[2020-11-25 05:50:24,768 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@253606b6 and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:50:24, skipping insertion in model container
[2020-11-25 05:50:24,768 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:24,768 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:50:22" (2/6) ...
[2020-11-25 05:50:24,769 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@253606b6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:50:24, skipping insertion in model container
[2020-11-25 05:50:24,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:24,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:50:23" (3/6) ...
[2020-11-25 05:50:24,769 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@253606b6 and model type StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:50:24, skipping insertion in model container
[2020-11-25 05:50:24,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:24,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:50:23" (4/6) ...
[2020-11-25 05:50:24,769 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@253606b6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:50:24, skipping insertion in model container
[2020-11-25 05:50:24,769 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:24,769 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:50:24" (5/6) ...
[2020-11-25 05:50:24,770 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@253606b6 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:50:24, skipping insertion in model container
[2020-11-25 05:50:24,770 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:50:24,770 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:50:24" (6/6) ...
[2020-11-25 05:50:24,771 INFO  L404   chiAutomizerObserver]: Analyzing ICFG StreamProtocol_0x9b5C2BE869a19e84BDBcb1386dAD83a2ec8DAe82_allowance.bpl_BEv2
[2020-11-25 05:50:24,806 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:50:24,806 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:50:24,806 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:50:24,806 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:50:24,806 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:50:24,806 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:50:24,806 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:50:24,806 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:50:24,806 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:50:24,832 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3052 states.
[2020-11-25 05:50:24,877 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:24,877 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:24,877 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:24,886 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:24,886 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:24,886 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:50:24,886 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3052 states.
[2020-11-25 05:50:24,902 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:24,903 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:24,903 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:24,905 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:24,905 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StreamProtocol0 := false;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND TRUE   revert
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND TRUE   choice == 15
[L3503]              gas := gas - 21000;
[L3504]  COND FALSE  !(gas >= 0)
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:24,918 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:24,918 INFO  L82        PathProgramCache]: Analyzing trace with hash -867976996, now seen corresponding path program 1 times
[2020-11-25 05:50:24,923 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:24,941 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:24,971 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:24,973 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:24,973 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:50:24,976 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:25,119 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:50:25,120 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:50:25,122 INFO  L87              Difference]: Start difference. First operand 3052 states. Second operand 4 states.
[2020-11-25 05:50:25,385 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:25,385 INFO  L93              Difference]: Finished difference Result 2154 states and 2409 transitions.
[2020-11-25 05:50:25,385 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:50:25,386 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2154 states and 2409 transitions.
[2020-11-25 05:50:25,396 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:25,411 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2154 states to 2154 states and 2409 transitions.
[2020-11-25 05:50:25,412 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:50:25,413 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 598
[2020-11-25 05:50:25,414 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2154 states and 2409 transitions.
[2020-11-25 05:50:25,420 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:25,420 INFO  L728         BuchiCegarLoop]: Abstraction has 2154 states and 2409 transitions.
[2020-11-25 05:50:25,442 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2154 states and 2409 transitions.
[2020-11-25 05:50:25,486 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2154 to 2154.
[2020-11-25 05:50:25,486 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2154 states.
[2020-11-25 05:50:25,491 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2154 states to 2154 states and 2409 transitions.
[2020-11-25 05:50:25,492 INFO  L751         BuchiCegarLoop]: Abstraction has 2154 states and 2409 transitions.
[2020-11-25 05:50:25,492 INFO  L631         BuchiCegarLoop]: Abstraction has 2154 states and 2409 transitions.
[2020-11-25 05:50:25,492 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:50:25,493 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2154 states and 2409 transitions.
[2020-11-25 05:50:25,500 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:25,501 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:25,501 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:25,503 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:25,503 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StreamProtocol0 := false;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND TRUE   revert
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND FALSE  !(__exception)
[L861]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2227]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2228]              revert := true;
[L861]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L862]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s532 == allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this])) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND FALSE  !(__exception)
[L861]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2227]  COND TRUE   !(_stopTrade_StreamProtocol[this] != true)
[L2228]              revert := true;
[L861]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L862]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s532 == allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this])) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:25,507 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:25,507 INFO  L82        PathProgramCache]: Analyzing trace with hash -1754577838, now seen corresponding path program 1 times
[2020-11-25 05:50:25,508 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:25,518 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:25,540 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:25,541 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:25,541 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:50:25,542 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:25,542 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:50:25,542 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:50:25,543 INFO  L87              Difference]: Start difference. First operand 2154 states and 2409 transitions. cyclomatic complexity: 257 Second operand 4 states.
[2020-11-25 05:50:25,954 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:25,954 INFO  L93              Difference]: Finished difference Result 3200 states and 3665 transitions.
[2020-11-25 05:50:25,954 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:50:25,954 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3200 states and 3665 transitions.
[2020-11-25 05:50:25,969 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:50:25,986 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3200 states to 3032 states and 3471 transitions.
[2020-11-25 05:50:25,986 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 803
[2020-11-25 05:50:25,987 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 815
[2020-11-25 05:50:25,988 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3032 states and 3471 transitions.
[2020-11-25 05:50:25,992 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:25,993 INFO  L728         BuchiCegarLoop]: Abstraction has 3032 states and 3471 transitions.
[2020-11-25 05:50:25,995 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3032 states and 3471 transitions.
[2020-11-25 05:50:26,018 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3032 to 2190.
[2020-11-25 05:50:26,018 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2190 states.
[2020-11-25 05:50:26,021 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2190 states to 2190 states and 2377 transitions.
[2020-11-25 05:50:26,021 INFO  L751         BuchiCegarLoop]: Abstraction has 2190 states and 2377 transitions.
[2020-11-25 05:50:26,021 INFO  L631         BuchiCegarLoop]: Abstraction has 2190 states and 2377 transitions.
[2020-11-25 05:50:26,021 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:50:26,021 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2190 states and 2377 transitions.
[2020-11-25 05:50:26,026 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:26,026 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:26,027 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:26,028 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:26,028 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StreamProtocol0 := false;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND FALSE  !(__exception)
[L861]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2227]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2231]              remaining_s532 := allowed_StreamProtocol[this][tokenOwner_s532][spender_s532];
[L861]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L862]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s532 == allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this])) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND FALSE  !(__exception)
[L861]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2227]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L2231]              remaining_s532 := allowed_StreamProtocol[this][tokenOwner_s532][spender_s532];
[L861]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L862]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((((remaining_s532 == allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] && _totalSupply_StreamProtocol[this] == old(_totalSupply_StreamProtocol[this])) && balances_StreamProtocol[this] == old(balances_StreamProtocol[this])) && allowed_StreamProtocol[this] == old(allowed_StreamProtocol[this])) && symbol_StreamProtocol[this] == old(symbol_StreamProtocol[this])) && name_StreamProtocol[this] == old(name_StreamProtocol[this])) && decimals_StreamProtocol[this] == old(decimals_StreamProtocol[this])) && _stopTrade_StreamProtocol[this] == old(_stopTrade_StreamProtocol[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L2]                 revert := revert_hold;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:26,032 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:26,032 INFO  L82        PathProgramCache]: Analyzing trace with hash -2069394803, now seen corresponding path program 1 times
[2020-11-25 05:50:26,033 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:26,049 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:26,103 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:26,103 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:26,103 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:50:26,104 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:26,104 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:50:26,104 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:50:26,104 INFO  L87              Difference]: Start difference. First operand 2190 states and 2377 transitions. cyclomatic complexity: 189 Second operand 4 states.
[2020-11-25 05:50:26,176 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:26,176 INFO  L93              Difference]: Finished difference Result 2191 states and 2376 transitions.
[2020-11-25 05:50:26,176 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:50:26,176 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2191 states and 2376 transitions.
[2020-11-25 05:50:26,185 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:26,193 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2191 states to 2180 states and 2365 transitions.
[2020-11-25 05:50:26,193 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 608
[2020-11-25 05:50:26,194 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 608
[2020-11-25 05:50:26,194 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2180 states and 2365 transitions.
[2020-11-25 05:50:26,196 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:26,196 INFO  L728         BuchiCegarLoop]: Abstraction has 2180 states and 2365 transitions.
[2020-11-25 05:50:26,199 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2180 states and 2365 transitions.
[2020-11-25 05:50:26,221 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2180 to 2178.
[2020-11-25 05:50:26,221 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2178 states.
[2020-11-25 05:50:26,225 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2178 states to 2178 states and 2363 transitions.
[2020-11-25 05:50:26,225 INFO  L751         BuchiCegarLoop]: Abstraction has 2178 states and 2363 transitions.
[2020-11-25 05:50:26,225 INFO  L631         BuchiCegarLoop]: Abstraction has 2178 states and 2363 transitions.
[2020-11-25 05:50:26,225 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:50:26,225 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2178 states and 2363 transitions.
[2020-11-25 05:50:26,232 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:26,232 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:26,232 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:26,235 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:26,235 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StreamProtocol0 := false;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum_balances0 := sum_balances0;
[L845]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum_allowed1 := sum_allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__owner_Owned := owner_Owned;
[L851]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2218]              revert := true;
[L858]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]               assume revert || gas < 0;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum_balances0 := sum_balances0;
[L845]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum_allowed1 := sum_allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__owner_Owned := owner_Owned;
[L851]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2218]              revert := true;
[L858]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]               assume revert || gas < 0;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:26,242 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:26,243 INFO  L82        PathProgramCache]: Analyzing trace with hash 1375006533, now seen corresponding path program 1 times
[2020-11-25 05:50:26,244 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:26,259 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:26,328 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:26,328 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:26,328 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 05:50:26,329 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:26,329 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 05:50:26,329 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-25 05:50:26,329 INFO  L87              Difference]: Start difference. First operand 2178 states and 2363 transitions. cyclomatic complexity: 187 Second operand 11 states.
[2020-11-25 05:50:27,620 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:27,620 INFO  L93              Difference]: Finished difference Result 3657 states and 4048 transitions.
[2020-11-25 05:50:27,620 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 05:50:27,620 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3657 states and 4048 transitions.
[2020-11-25 05:50:27,630 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 05:50:27,640 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3657 states to 3657 states and 4048 transitions.
[2020-11-25 05:50:27,640 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1030
[2020-11-25 05:50:27,641 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1030
[2020-11-25 05:50:27,641 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3657 states and 4048 transitions.
[2020-11-25 05:50:27,645 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:27,645 INFO  L728         BuchiCegarLoop]: Abstraction has 3657 states and 4048 transitions.
[2020-11-25 05:50:27,647 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3657 states and 4048 transitions.
[2020-11-25 05:50:27,672 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3657 to 2651.
[2020-11-25 05:50:27,672 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2651 states.
[2020-11-25 05:50:27,675 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2651 states to 2651 states and 2926 transitions.
[2020-11-25 05:50:27,675 INFO  L751         BuchiCegarLoop]: Abstraction has 2651 states and 2926 transitions.
[2020-11-25 05:50:27,675 INFO  L631         BuchiCegarLoop]: Abstraction has 2651 states and 2926 transitions.
[2020-11-25 05:50:27,676 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:50:27,676 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2651 states and 2926 transitions.
[2020-11-25 05:50:27,679 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 05:50:27,679 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:27,679 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:27,681 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:27,681 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StreamProtocol0 := false;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum_balances0 := sum_balances0;
[L845]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum_allowed1 := sum_allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__owner_Owned := owner_Owned;
[L851]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2221]              remaining_s532 := __tmp__allowed_StreamProtocol[this][tokenOwner_s532][spender_s532];
[L858]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]               assume revert || gas < 0;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum_balances0 := sum_balances0;
[L845]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum_allowed1 := sum_allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__owner_Owned := owner_Owned;
[L851]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND FALSE  !(!(__tmp___stopTrade_StreamProtocol[this] != true))
[L2221]              remaining_s532 := __tmp__allowed_StreamProtocol[this][tokenOwner_s532][spender_s532];
[L858]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]               assume revert || gas < 0;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:27,683 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:27,683 INFO  L82        PathProgramCache]: Analyzing trace with hash -2023784599, now seen corresponding path program 1 times
[2020-11-25 05:50:27,684 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:27,690 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:50:27,711 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:50:27,711 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:50:27,711 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 05:50:27,711 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:50:27,711 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 05:50:27,711 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=10, Invalid=20, Unknown=0, NotChecked=0, Total=30
[2020-11-25 05:50:27,712 INFO  L87              Difference]: Start difference. First operand 2651 states and 2926 transitions. cyclomatic complexity: 279 Second operand 6 states.
[2020-11-25 05:50:28,090 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:50:28,091 INFO  L93              Difference]: Finished difference Result 3290 states and 3681 transitions.
[2020-11-25 05:50:28,091 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 10 states. 
[2020-11-25 05:50:28,091 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3290 states and 3681 transitions.
[2020-11-25 05:50:28,098 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 05:50:28,107 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3290 states to 2785 states and 3169 transitions.
[2020-11-25 05:50:28,107 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 770
[2020-11-25 05:50:28,108 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 770
[2020-11-25 05:50:28,108 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2785 states and 3169 transitions.
[2020-11-25 05:50:28,110 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:50:28,111 INFO  L728         BuchiCegarLoop]: Abstraction has 2785 states and 3169 transitions.
[2020-11-25 05:50:28,112 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2785 states and 3169 transitions.
[2020-11-25 05:50:28,125 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2785 to 1770.
[2020-11-25 05:50:28,125 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1770 states.
[2020-11-25 05:50:28,127 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1770 states to 1770 states and 1924 transitions.
[2020-11-25 05:50:28,127 INFO  L751         BuchiCegarLoop]: Abstraction has 1770 states and 1924 transitions.
[2020-11-25 05:50:28,127 INFO  L631         BuchiCegarLoop]: Abstraction has 1770 states and 1924 transitions.
[2020-11-25 05:50:28,127 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:50:28,127 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1770 states and 1924 transitions.
[2020-11-25 05:50:28,129 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:50:28,129 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:50:28,129 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:50:28,130 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:50:28,130 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StreamProtocol0 := false;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]     CALL        call main();
[L3606]              assume null == 0;
[L3607]  CALL        call this := FreshRefGenerator__success();
[L1625]              havoc newRef;
[L1626]              assume Alloc[newRef] == false;
[L1627]              Alloc[newRef] := true;
[L1628]              assume newRef != null;
[L3607]  RET         call this := FreshRefGenerator__success();
[L3608]              assume now >= 0;
[L3609]              assume DType[this] == StreamProtocol;
[L3610]              assume msgvalue_MSG == 0;
[L3611]              gas := gas - 53000;
[L3612]  CALL        call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3613]              assume !revert && gas >= 0;
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND FALSE  !(choice == 13)
[L3520]  COND FALSE  !(choice == 12)
[L3527]  COND FALSE  !(choice == 11)
[L3534]  COND FALSE  !(choice == 10)
[L3541]  COND FALSE  !(choice == 9)
[L3547]  COND FALSE  !(choice == 8)
[L3553]  COND FALSE  !(choice == 7)
[L3559]  COND FALSE  !(choice == 6)
[L3565]  COND TRUE   choice == 5
[L3566]              gas := gas - 21000;
[L3567]  COND TRUE   gas >= 0
[L3568]              assume msgvalue_MSG == 0;
[L3569]  CALL        call stopTrade_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L528]   CALL        call stopTrade_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1977]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3149]  COND FALSE  !(!(msgsender_MSG == owner_Owned[this]))
[L1977]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L1978]  COND FALSE  !(revert)
[L1981]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L1985]              _stopTrade_StreamProtocol[this] := true;
[L528]   RET         call stopTrade_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L529]               assume !revert && gas >= 0;
[L3569]  RET         call stopTrade_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
[L3616]  RET         call CorralChoice_StreamProtocol(this);
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum_balances0 := sum_balances0;
[L845]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum_allowed1 := sum_allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__owner_Owned := owner_Owned;
[L851]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2218]              revert := true;
[L858]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]               assume revert || gas < 0;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

Loop:
[L3616]  CALL        call CorralChoice_StreamProtocol(this);
[L3458]              havoc msgsender_MSG;
[L3459]              havoc msgvalue_MSG;
[L3460]              havoc choice;
[L3461]              havoc __ret_0_totalSupply;
[L3462]              havoc tokenOwner_s328;
[L3463]              havoc balance_s328;
[L3464]              havoc tokenOwner_s532;
[L3465]              havoc spender_s532;
[L3466]              havoc remaining_s532;
[L3467]              havoc to_s385;
[L3468]              havoc tokens_s385;
[L3469]              havoc success_s385;
[L3470]              havoc spender_s419;
[L3471]              havoc tokens_s419;
[L3472]              havoc success_s419;
[L3473]              havoc from_s510;
[L3474]              havoc to_s510;
[L3475]              havoc tokens_s510;
[L3476]              havoc success_s510;
[L3477]              havoc __ret_0_owner;
[L3478]              havoc __ret_0_symbol;
[L3479]              havoc __ret_0_name;
[L3480]              havoc __ret_0_decimals;
[L3481]              havoc spender_s582;
[L3482]              havoc tokens_s582;
[L3483]              havoc data_s582;
[L3484]              havoc success_s582;
[L3485]              havoc tokenAddress_s609;
[L3486]              havoc tokens_s609;
[L3487]              havoc success_s609;
[L3488]              havoc _value_s658;
[L3489]              havoc tmpNow;
[L3490]              havoc gas;
[L3491]              assume gas > 4000000 && gas <= 8000000;
[L3492]              tmpNow := now;
[L3493]              havoc now;
[L3494]              assume now > tmpNow;
[L3495]              assume msgsender_MSG != null;
[L3496]              assume DType[msgsender_MSG] != SafeMath;
[L3497]              assume DType[msgsender_MSG] != ERC20Interface;
[L3498]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3499]              assume DType[msgsender_MSG] != Owned;
[L3500]              assume DType[msgsender_MSG] != StreamProtocol;
[L3501]              Alloc[msgsender_MSG] := true;
[L3502]  COND FALSE  !(choice == 15)
[L3508]  COND FALSE  !(choice == 14)
[L3514]  COND TRUE   choice == 13
[L3515]              gas := gas - 21000;
[L3516]  COND TRUE   gas >= 0
[L3517]              assume msgvalue_MSG == 0;
[L3518]  CALL        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StreamProtocol0 := true;
[L2]                 call_allowance_StreamProtocol0 := false;
[L2]                 revert := revert_hold;
[L836]               havoc __exception;
[L837]               revert := false;
[L838]   COND TRUE   __exception
[L839]               __tmp__Balance := Balance;
[L840]               __tmp__DType := DType;
[L841]               __tmp__Alloc := Alloc;
[L842]               __tmp__balance_ADDR := balance_ADDR;
[L843]               __tmp__M_Ref_int := M_Ref_int;
[L844]               __tmp__sum_balances0 := sum_balances0;
[L845]               __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]               __tmp__sum_allowed1 := sum_allowed1;
[L848]               __tmp__Length := Length;
[L849]               __tmp__now := now;
[L850]               __tmp__owner_Owned := owner_Owned;
[L851]               __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]               __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]               __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]               __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]               __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]               __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]               __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND TRUE   !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2218]              revert := true;
[L858]   RET         call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]               assume revert || gas < 0;
[L3518]  RET         call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L3616]  RET         call CorralChoice_StreamProtocol(this);

[2020-11-25 05:50:28,134 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:28,134 INFO  L82        PathProgramCache]: Analyzing trace with hash 764540230, now seen corresponding path program 1 times
[2020-11-25 05:50:28,134 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:28,147 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:28,160 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:28,224 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:28,224 INFO  L82        PathProgramCache]: Analyzing trace with hash 1413609200, now seen corresponding path program 1 times
[2020-11-25 05:50:28,225 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:28,228 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:28,231 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:28,238 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:50:28,238 INFO  L82        PathProgramCache]: Analyzing trace with hash 653848629, now seen corresponding path program 1 times
[2020-11-25 05:50:28,238 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:50:28,252 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:28,271 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 41 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
[2020-11-25 05:50:28,756 WARN  L188               SmtUtils]: Spent 253.00 ms on a formula simplification. DAG size of input: 214 DAG size of output: 206
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
[2020-11-25 05:50:28,912 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification that was a NOOP. DAG size: 273
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3331 to 6661
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2503 to 5003
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 05:50:29,122 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 05:50:29,607 WARN  L188               SmtUtils]: Spent 100.00 ms on a formula simplification that was a NOOP. DAG size: 208
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 05:50:29,988 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 206
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-25 05:50:31,274 WARN  L188               SmtUtils]: Spent 1.09 s on a formula simplification. DAG size of input: 570 DAG size of output: 555
Garbage collection #1: 233 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 233 to 463
Garbage collection #2: 463 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 463 to 919
Garbage collection #3: 919 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 919 to 1831
Garbage collection #4: 1831 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1831 to 3659
Garbage collection #5: 3659 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3659 to 7309
Garbage collection #6: 7309 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7309 to 14593
Garbage collection #7: 14593 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14593 to 29179
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 05:50:31,732 WARN  L188               SmtUtils]: Spent 216.00 ms on a formula simplification. DAG size of input: 282 DAG size of output: 281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
[2020-11-25 05:50:31,838 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:31,853 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:50:31,861 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:50:31 BasicIcfg
[2020-11-25 05:50:31,861 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:50:31,861 INFO  L168              Benchmark]: Toolchain (without parser) took 9408.74 ms. Allocated memory was 1.0 GB in the beginning and 1.9 GB in the end (delta: 877.7 MB). Free memory was 945.9 MB in the beginning and 1.5 GB in the end (delta: -602.9 MB). Peak memory consumption was 928.8 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,862 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,862 INFO  L168              Benchmark]: Boogie Preprocessor took 106.41 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,862 INFO  L168              Benchmark]: UtopiaSpecLang took 64.08 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,862 INFO  L168              Benchmark]: Boogie Printer took 13.91 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,863 INFO  L168              Benchmark]: RCFGBuilder took 649.52 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 816.9 MB in the end (delta: 102.2 MB). Peak memory consumption was 102.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,863 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.91 ms. Allocated memory is still 1.0 GB. Free memory was 816.9 MB in the beginning and 813.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,863 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1334.92 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 813.3 MB in the beginning and 1.1 GB in the end (delta: -333.2 MB). Peak memory consumption was 200.3 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,863 INFO  L168              Benchmark]: BlockEncodingV2 took 102.28 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 58.8 MB). Peak memory consumption was 58.8 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,864 INFO  L168              Benchmark]: BuchiAutomizer took 7095.78 ms. Allocated memory was 1.3 GB in the beginning and 1.9 GB in the end (delta: 656.4 MB). Free memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: -461.1 MB). Peak memory consumption was 849.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:50:31,866 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3092 locations, 5270 edges
  - StatisticsResult: Encoded RCFG
    3052 locations, 5170 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 106.41 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.08 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.91 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 649.52 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 816.9 MB in the end (delta: 102.2 MB). Peak memory consumption was 102.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.91 ms. Allocated memory is still 1.0 GB. Free memory was 816.9 MB in the beginning and 813.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1334.92 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 221.2 MB). Free memory was 813.3 MB in the beginning and 1.1 GB in the end (delta: -333.2 MB). Peak memory consumption was 200.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 102.28 ms. Allocated memory is still 1.3 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 58.8 MB). Peak memory consumption was 58.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7095.78 ms. Allocated memory was 1.3 GB in the beginning and 1.9 GB in the end (delta: 656.4 MB). Free memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: -461.1 MB). Peak memory consumption was 849.4 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1309 locations, 1635 edges
  - StatisticsResult: BuchiProgram size
    3092 locations, 5270 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 1770 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.0s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 4.0s. Construction of modules took 1.7s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 2865 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2651 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13374 SDtfs, 14378 SDslu, 18170 SDs, 0 SdLazy, 21965 SolverSat, 2940 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1491346181) = (new StreamProtocol)({from : 1491346189});
[L394]               havoc __exception;
[L395]               revert := false;
[L396]   COND FALSE  !(__exception)
[L419]   CALL        call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1922]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1761]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1746]              assume msgsender_MSG != null;
[L1747]              Balance[this] := 0;
[L1761]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1762]  COND FALSE  !(revert)
[L1922]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1923]  COND FALSE  !(revert)
[L1926]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1829]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1812]              assume msgsender_MSG != null;
[L1813]              Balance[this] := 0;
[L1814]              owner_Owned[this] := null;
[L1816]              owner_Owned[this] := msgsender_MSG;
[L1829]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1830]  COND FALSE  !(revert)
[L1926]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1927]  COND FALSE  !(revert)
[L1930]  CALL        call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume msgsender_MSG != null;
[L1879]              Balance[this] := 0;
[L1880]              symbol_StreamProtocol[this] := 1491346165;
[L1881]              name_StreamProtocol[this] := 1491346165;
[L1882]              decimals_StreamProtocol[this] := 0;
[L1883]              _totalSupply_StreamProtocol[this] := 0;
[L1884]              _stopTrade_StreamProtocol[this] := false;
[L1885]              balances_StreamProtocol[this] := zeroRefintArr();
[L1886]              sum_balances0[this] := 0;
[L1887]              allowed_StreamProtocol[this] := zeroRefRefintArr();
[L1888]              sum_allowed1[this] := 0;
[L1890]              symbol_StreamProtocol[this] := 1357906882;
[L1891]              name_StreamProtocol[this] := -1605590943;
[L1892]              decimals_StreamProtocol[this] := 18;
[L1893]              __var_1 := decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1894]              _totalSupply_StreamProtocol[this] := 2000000000 * (nonlinearPow(10, decimals_StreamProtocol[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1895]              _stopTrade_StreamProtocol[this] := false;
[L1896]              sum_balances0[this] := sum_balances0[this] - balances_StreamProtocol[this][owner_Owned[this]];
[L1897]              balances_StreamProtocol[this][owner_Owned[this]] := _totalSupply_StreamProtocol[this];
[L1898]              sum_balances0[this] := sum_balances0[this] + balances_StreamProtocol[this][owner_Owned[this]];
[L1899]              assert { :EventEmitted "Transfer_StreamProtocol" } true;
[L1930]  RET         call StreamProtocol_StreamProtocol_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1931]  COND FALSE  !(revert)
[L419]   RET         call StreamProtocol_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L420]               assume !revert && gas >= 0;
[L3612]  RET         call StreamProtocol_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
StreamProtocol(1491346181).stopTrade.gas(3979002)({from : 1491346189});
[L503]               havoc __exception;
[L504]               revert := false;
[L505]   COND FALSE  !(__exception)
[L528]   CALL        call stopTrade_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L1977]  CALL        call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L3149]  COND FALSE  !(!(msgsender_MSG == owner_Owned[this]))
[L1977]  RET         call onlyOwner_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L1978]  COND FALSE  !(revert)
[L1981]  COND FALSE  !(!(_stopTrade_StreamProtocol[this] != true))
[L1985]              _stopTrade_StreamProtocol[this] := true;
[L528]   RET         call stopTrade_StreamProtocol__success(this, msgsender_MSG, msgvalue_MSG);
[L529]               assume !revert && gas >= 0;
[L3569]  RET         call stopTrade_StreamProtocol(this, msgsender_MSG, msgvalue_MSG);
StreamProtocol(1491346181).allowance~address~address.gas(3979003)({from : 1491346174, tokenOwner : 1491346167, spender : 1491346173});
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_allowance_StreamProtocol0 := true;
[L2]                call_allowance_StreamProtocol0 := false;
[L2]                revert := revert_hold;
[L836]              havoc __exception;
[L837]              revert := false;
[L838]   COND TRUE  __exception
[L839]              __tmp__Balance := Balance;
[L840]              __tmp__DType := DType;
[L841]              __tmp__Alloc := Alloc;
[L842]              __tmp__balance_ADDR := balance_ADDR;
[L843]              __tmp__M_Ref_int := M_Ref_int;
[L844]              __tmp__sum_balances0 := sum_balances0;
[L845]              __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]              __tmp__sum_allowed1 := sum_allowed1;
[L848]              __tmp__Length := Length;
[L849]              __tmp__now := now;
[L850]              __tmp__owner_Owned := owner_Owned;
[L851]              __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]              __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]              __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]              __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]              __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]              __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]              __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL       call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND TRUE  !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2218]             revert := true;
[L858]   RET        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]              assume revert || gas < 0;
[L3518]  RET        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);

Loop:
StreamProtocol(1491346181).allowance~address~address.gas(3979001)({from : 1491346177, tokenOwner : 1491346188, spender : 1491346171});
[L2]                revert_hold := revert;
[L2]                revert := false;
[L2]                assume allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] >= 0 && allowed_StreamProtocol[this][tokenOwner_s532][spender_s532] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                call_allowance_StreamProtocol0 := true;
[L2]                call_allowance_StreamProtocol0 := false;
[L2]                revert := revert_hold;
[L836]              havoc __exception;
[L837]              revert := false;
[L838]   COND TRUE  __exception
[L839]              __tmp__Balance := Balance;
[L840]              __tmp__DType := DType;
[L841]              __tmp__Alloc := Alloc;
[L842]              __tmp__balance_ADDR := balance_ADDR;
[L843]              __tmp__M_Ref_int := M_Ref_int;
[L844]              __tmp__sum_balances0 := sum_balances0;
[L845]              __tmp__alloc_allowed_StreamProtocol_lvl0 := alloc_allowed_StreamProtocol_lvl0;
[L846]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L847]              __tmp__sum_allowed1 := sum_allowed1;
[L848]              __tmp__Length := Length;
[L849]              __tmp__now := now;
[L850]              __tmp__owner_Owned := owner_Owned;
[L851]              __tmp__symbol_StreamProtocol := symbol_StreamProtocol;
[L852]              __tmp__name_StreamProtocol := name_StreamProtocol;
[L853]              __tmp__decimals_StreamProtocol := decimals_StreamProtocol;
[L854]              __tmp___totalSupply_StreamProtocol := _totalSupply_StreamProtocol;
[L855]              __tmp___stopTrade_StreamProtocol := _stopTrade_StreamProtocol;
[L856]              __tmp__balances_StreamProtocol := balances_StreamProtocol;
[L857]              __tmp__allowed_StreamProtocol := allowed_StreamProtocol;
[L858]   CALL       call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L2217]  COND TRUE  !(__tmp___stopTrade_StreamProtocol[this] != true)
[L2218]             revert := true;
[L858]   RET        call remaining_s532 := allowance~address~address_StreamProtocol__fail(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);
[L859]              assume revert || gas < 0;
[L3518]  RET        call remaining_s532 := allowance~address~address_StreamProtocol(this, msgsender_MSG, msgvalue_MSG, tokenOwner_s532, spender_s532);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
