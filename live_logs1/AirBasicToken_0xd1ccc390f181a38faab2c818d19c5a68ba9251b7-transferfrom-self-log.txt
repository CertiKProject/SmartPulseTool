This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 23:42:38,671 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 23:42:38,672 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 23:42:38,683 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 23:42:38,683 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 23:42:38,684 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 23:42:38,684 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 23:42:38,686 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 23:42:38,687 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 23:42:38,688 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 23:42:38,689 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 23:42:38,689 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 23:42:38,690 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 23:42:38,691 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 23:42:38,692 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 23:42:38,692 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 23:42:38,693 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 23:42:38,694 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 23:42:38,696 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 23:42:38,697 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 23:42:38,698 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 23:42:38,698 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 23:42:38,700 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 23:42:38,700 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 23:42:38,700 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 23:42:38,701 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 23:42:38,701 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 23:42:38,702 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 23:42:38,702 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 23:42:38,702 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 23:42:38,703 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 23:42:38,703 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 23:42:38,704 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 23:42:38,704 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 23:42:38,705 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 23:42:38,705 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 23:42:38,706 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 23:42:38,706 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 23:42:38,706 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 23:42:38,707 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 23:42:38,707 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 23:42:38,708 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 23:42:38,716 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 23:42:38,716 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 23:42:38,717 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 23:42:38,717 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 23:42:38,717 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 23:42:38,718 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 23:42:38,718 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 23:42:38,718 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 23:42:38,718 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 23:42:38,719 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 23:42:38,719 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 23:42:38,720 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 23:42:38,720 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 23:42:38,745 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 23:42:38,761 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 23:42:38,764 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 23:42:38,765 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 23:42:38,765 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 23:42:38,766 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl
[2020-11-24 23:42:38,766 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl'
[2020-11-24 23:42:38,865 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 23:42:38,866 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 23:42:38,866 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 23:42:38,867 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 23:42:38,867 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 23:42:38,884 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:38,885 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:38,933 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:38,934 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:38,964 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:38,977 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:38,987 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:39,002 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 23:42:39,003 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 23:42:39,003 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 23:42:39,005 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 23:42:39,009 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/1) ...
[2020-11-24 23:42:39,030 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(AirBasicToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AirBasicToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:42:39,035 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(AirBasicToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AirBasicToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:42:39,043 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(AirBasicToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AirBasicToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:42:39,053 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s813 || p2!=msg.sender ) && _from_s813==_to_s813 ) && _value_s813<=balances_BasicToken[this][_from_s813] ) && _value_s813<=allowed_StandardToken[this][_from_s813][msg.sender] ) && _value_s813>=0 ) && _value_s813<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_to_s813]>=0 ) && balances_BasicToken[this][_to_s813]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_BasicToken[this][_from_s813]>=0 ) && balances_BasicToken[this][_from_s813]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_StandardToken[this][_from_s813][msg.sender]>=0 ) && allowed_StandardToken[this][_from_s813][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>],IdentifierExpression[_to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_to_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 23:42:39,057 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && allowed_StandardToken[this][_from_s813][msg.sender]==( ( old(allowed_StandardToken[this][_from_s813][msg.sender]) ) - _value_s813 ) ) && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this][p1][p2]==( old(allowed_StandardToken[this][p1][p2]) ) ) && balanceLocked_AirBasicToken[this]==( old(balanceLocked_AirBasicToken[this]) ) ) && amountRaised_AirBasicToken[this]==( old(amountRaised_AirBasicToken[this]) ) ) && buyPrice_AirBasicToken[this]==( old(buyPrice_AirBasicToken[this]) ) ) && crowdsaleClosed_AirBasicToken[this]==( old(crowdsaleClosed_AirBasicToken[this]) ) ) && transferEnabled_AirBasicToken[this]==( old(transferEnabled_AirBasicToken[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_AirBasicToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[_from_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]],IdentifierExpression[_value_s813,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceLocked_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceLocked_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[amountRaised_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[amountRaised_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[buyPrice_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[buyPrice_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[crowdsaleClosed_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[crowdsaleClosed_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[transferEnabled_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[transferEnabled_AirBasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_AirBasicToken>]]]]]]
[2020-11-24 23:42:39,065 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(AirBasicToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_BasicToken[this][from] && value <= allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][to] >= 0 && balances_BasicToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_BasicToken[this][from] >= 0 &&  balances_BasicToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_StandardToken[this][from][msg.sender] >= 0 && allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(AirBasicToken.transferFrom(from, to, value), return == true && allowed_StandardToken[this][from][msg.sender] == old(allowed_StandardToken[this][from][msg.sender]) - value && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2]) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this]) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this]) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this]) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this]) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-24 23:42:39,065 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_AirBasicToken0) ==> ( <>AP(success_transferFrom_AirBasicToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 23:42:39,079 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:42:39 PropertyContainer
[2020-11-24 23:42:39,079 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 23:42:39,080 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 23:42:39,080 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 23:42:39,080 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 23:42:39,081 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/2) ...
[2020-11-24 23:42:39,081 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 23:42:39,081 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 23:42:39,102 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:42:39" (2/2) ...
[2020-11-24 23:42:39,102 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 23:42:39,105 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 23:42:39,105 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 23:42:39,105 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 23:42:39,107 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/2) ...
[2020-11-24 23:42:39,169 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 23:42:39,169 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:42:39,169 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 23:42:39,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 23:42:39,169 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 23:42:39,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 23:42:39,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:42:39,169 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 23:42:39,169 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:42:39,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-24 23:42:39,170 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-24 23:42:39,171 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-24 23:42:39,171 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:42:39,171 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-24 23:42:39,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-24 23:42:39,171 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-24 23:42:39,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-24 23:42:39,171 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:42:39,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-24 23:42:39,171 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-24 23:42:39,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-24 23:42:39,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-24 23:42:39,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 23:42:39,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 23:42:39,172 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 23:42:39,173 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 23:42:39,173 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:42:39,173 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 23:42:39,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 23:42:39,173 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:42:39,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 23:42:39,173 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 23:42:39,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 23:42:39,173 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 23:42:39,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:42:39,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:42:39,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:42:39,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:42:39,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken
[2020-11-24 23:42:39,174 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:42:39,175 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken
[2020-11-24 23:42:39,175 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken
[2020-11-24 23:42:39,176 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken
[2020-11-24 23:42:39,177 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken
[2020-11-24 23:42:39,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-24 23:42:39,178 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_AirBasicToken
[2020-11-24 23:42:39,179 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 23:42:39,180 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-24 23:42:39,181 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:42:39,182 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 23:42:39,183 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:42:39,184 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:42:39,185 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__success
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure name_AirBasicToken__fail
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__success
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_AirBasicToken__fail
[2020-11-24 23:42:39,186 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__success
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_AirBasicToken__fail
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:42:39,187 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:42:39,188 INFO  L130     BoogieDeclarations]: Found specification of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:42:39,188 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 23:42:39,188 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 23:42:39,188 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 23:42:39,188 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 23:42:39,188 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,189 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-24 23:42:39,190 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__fail
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_BurnableToken__success
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 23:42:39,191 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 23:42:39,192 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__fail
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken_NoBaseCtor__success
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__fail
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure AirBasicToken_AirBasicToken__success
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_AirBasicToken__success
[2020-11-24 23:42:39,193 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure setPrice~uint256_AirBasicToken__success
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__fail
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure closeBuy~bool_AirBasicToken__success
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__fail
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_AirBasicToken__success
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__fail
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure enableTransfer~bool_AirBasicToken__success
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,194 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_AirBasicToken__success
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__fail
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_AirBasicToken__success
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__fail
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~arr_AirBasicToken__success
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__fail
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock~arr_AirBasicToken__success
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__fail
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_AirBasicToken__success
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__fail
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_AirBasicToken__success
[2020-11-24 23:42:39,195 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__fail
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_AirBasicToken__success
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__fail
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_AirBasicToken__success
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__fail
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceLocked~address_AirBasicToken__success
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__fail
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure amountRaised_AirBasicToken__success
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__fail
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure buyPrice_AirBasicToken__success
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__fail
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure crowdsaleClosed_AirBasicToken__success
[2020-11-24 23:42:39,196 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__fail
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferEnabled_AirBasicToken__success
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 23:42:39,197 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_AirBasicToken
[2020-11-24 23:42:39,198 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 23:42:39,199 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 23:42:39,199 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 23:42:39,627 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:42:39,627 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:42:39,627 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:42:39,765 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 23:42:40,092 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 23:42:40,093 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 23:42:40,095 INFO  L202        PluginConnector]: Adding new model AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:42:40 BoogieIcfgContainer
[2020-11-24 23:42:40,095 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:42:39" (2/2) ...
[2020-11-24 23:42:40,095 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 23:42:40,095 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@6c0e6a29 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:42:40, skipping insertion in model container
[2020-11-24 23:42:40,095 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 23:42:40,096 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 23:42:40,096 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 23:42:40,097 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 23:42:40,097 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/3) ...
[2020-11-24 23:42:40,097 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@47562982 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:42:40, skipping insertion in model container
[2020-11-24 23:42:40,097 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:42:39" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 23:42:40,131 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:42:40 NWAContainer
[2020-11-24 23:42:40,131 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 23:42:40,132 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 23:42:40,132 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 23:42:40,132 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 23:42:40,133 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:42:40" (3/4) ...
[2020-11-24 23:42:40,134 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@527f157e and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:42:40, skipping insertion in model container
[2020-11-24 23:42:40,134 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:42:40" (4/4) ...
[2020-11-24 23:42:40,137 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 23:42:40,142 INFO  L110   BuchiProductObserver]: Initial RCFG 3211 locations, 4265 edges
[2020-11-24 23:42:40,142 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 23:42:40,155 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 23:42:41,921 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 23:42:41,930 INFO  L110   BuchiProductObserver]: BuchiProgram size 7636 locations, 13504 edges
[2020-11-24 23:42:41,930 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:42:41 BoogieIcfgContainer
[2020-11-24 23:42:41,931 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 23:42:41,931 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 23:42:41,931 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 23:42:41,932 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 23:42:41,933 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:42:41" (1/1) ...
[2020-11-24 23:42:42,054 INFO  L313           BlockEncoder]: Initial Icfg 7636 locations, 13504 edges
[2020-11-24 23:42:42,054 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 23:42:42,054 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 23:42:42,055 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 23:42:42,055 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 23:42:42,069 INFO  L70    emoveInfeasibleEdges]: Removed 99 edges and 19 locations because of local infeasibility
[2020-11-24 23:42:42,081 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-24 23:42:42,095 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 23:42:42,098 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 23:42:42,103 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 23:42:42,103 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 23:42:42,107 INFO  L313           BlockEncoder]: Encoded RCFG 7570 locations, 13335 edges
[2020-11-24 23:42:42,107 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:42:42 BasicIcfg
[2020-11-24 23:42:42,107 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 23:42:42,107 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 23:42:42,107 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 23:42:42,109 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 23:42:42,109 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:42:42,109 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 11:42:38" (1/6) ...
[2020-11-24 23:42:42,111 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@52a471a and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:42:42, skipping insertion in model container
[2020-11-24 23:42:42,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:42:42,111 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 11:42:39" (2/6) ...
[2020-11-24 23:42:42,111 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@52a471a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:42:42, skipping insertion in model container
[2020-11-24 23:42:42,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:42:42,111 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 11:42:40" (3/6) ...
[2020-11-24 23:42:42,111 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@52a471a and model type AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:42:42, skipping insertion in model container
[2020-11-24 23:42:42,111 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:42:42,111 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 11:42:40" (4/6) ...
[2020-11-24 23:42:42,112 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@52a471a and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 11:42:42, skipping insertion in model container
[2020-11-24 23:42:42,112 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:42:42,112 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 11:42:41" (5/6) ...
[2020-11-24 23:42:42,112 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@52a471a and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 11:42:42, skipping insertion in model container
[2020-11-24 23:42:42,112 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 23:42:42,112 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 11:42:42" (6/6) ...
[2020-11-24 23:42:42,113 INFO  L404   chiAutomizerObserver]: Analyzing ICFG AirBasicToken_0xd1ccc390f181a38faab2c818d19c5a68ba9251b7_transferfrom-self.bpl_BEv2
[2020-11-24 23:42:42,142 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 23:42:42,142 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 23:42:42,142 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 23:42:42,142 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 23:42:42,142 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 23:42:42,142 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 23:42:42,143 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 23:42:42,143 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 23:42:42,143 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 23:42:42,193 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7570 states.
[2020-11-24 23:42:42,251 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:42,251 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:42,251 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:42,258 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:42,258 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:42,258 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 23:42:42,258 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7570 states.
[2020-11-24 23:42:42,279 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:42,279 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:42,279 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:42,281 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:42,281 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AirBasicToken0 := false;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND TRUE   revert
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND TRUE   choice == 24
[L6904]              gas := gas - 21000;
[L6905]  COND FALSE  !(gas >= 0)
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:42,296 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:42,296 INFO  L82        PathProgramCache]: Analyzing trace with hash -1883557332, now seen corresponding path program 1 times
[2020-11-24 23:42:42,302 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:42,326 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:42:42,370 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:42:42,372 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:42:42,372 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:42:42,717 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:42:42,726 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:42:42,726 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:42:42,727 INFO  L87              Difference]: Start difference. First operand 7570 states. Second operand 4 states.
[2020-11-24 23:42:43,238 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:43,238 INFO  L93              Difference]: Finished difference Result 3773 states and 4173 transitions.
[2020-11-24 23:42:43,238 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:42:43,240 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3773 states and 4173 transitions.
[2020-11-24 23:42:43,259 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:43,285 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3773 states to 3769 states and 4165 transitions.
[2020-11-24 23:42:43,287 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 23:42:43,291 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1016
[2020-11-24 23:42:43,292 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3769 states and 4165 transitions.
[2020-11-24 23:42:43,303 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:43,303 INFO  L728         BuchiCegarLoop]: Abstraction has 3769 states and 4165 transitions.
[2020-11-24 23:42:43,318 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3769 states and 4165 transitions.
[2020-11-24 23:42:43,382 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3769 to 3769.
[2020-11-24 23:42:43,383 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3769 states.
[2020-11-24 23:42:43,390 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3769 states to 3769 states and 4165 transitions.
[2020-11-24 23:42:43,392 INFO  L751         BuchiCegarLoop]: Abstraction has 3769 states and 4165 transitions.
[2020-11-24 23:42:43,392 INFO  L631         BuchiCegarLoop]: Abstraction has 3769 states and 4165 transitions.
[2020-11-24 23:42:43,392 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 23:42:43,392 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3769 states and 4165 transitions.
[2020-11-24 23:42:43,404 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:43,404 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:43,404 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:43,406 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:43,407 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AirBasicToken0 := false;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND TRUE   revert
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND FALSE  !(__exception)
[L1796]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4660]  COND TRUE   !transferEnabled_AirBasicToken[this]
[L4661]              revert := true;
[L1796]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1797]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][_from_s813][msgsender_MSG] == old(allowed_StandardToken[this][_from_s813][msgsender_MSG]) - _value_s813) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND FALSE  !(__exception)
[L1796]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4660]  COND TRUE   !transferEnabled_AirBasicToken[this]
[L4661]              revert := true;
[L1796]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1797]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_StandardToken[this][_from_s813][msgsender_MSG] == old(allowed_StandardToken[this][_from_s813][msgsender_MSG]) - _value_s813) && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this][p1][p2] == old(allowed_StandardToken[this][p1][p2])) && balanceLocked_AirBasicToken[this] == old(balanceLocked_AirBasicToken[this])) && amountRaised_AirBasicToken[this] == old(amountRaised_AirBasicToken[this])) && buyPrice_AirBasicToken[this] == old(buyPrice_AirBasicToken[this])) && crowdsaleClosed_AirBasicToken[this] == old(crowdsaleClosed_AirBasicToken[this])) && transferEnabled_AirBasicToken[this] == old(transferEnabled_AirBasicToken[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:43,412 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:43,412 INFO  L82        PathProgramCache]: Analyzing trace with hash -1635969467, now seen corresponding path program 1 times
[2020-11-24 23:42:43,413 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:43,426 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:42:43,457 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 23:42:43,457 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:42:43,457 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 23:42:43,459 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:42:43,459 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 23:42:43,459 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 23:42:43,459 INFO  L87              Difference]: Start difference. First operand 3769 states and 4165 transitions. cyclomatic complexity: 406 Second operand 4 states.
[2020-11-24 23:42:44,309 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:44,310 INFO  L93              Difference]: Finished difference Result 5151 states and 5795 transitions.
[2020-11-24 23:42:44,310 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 23:42:44,311 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5151 states and 5795 transitions.
[2020-11-24 23:42:44,337 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 23:42:44,358 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5151 states to 5013 states and 5641 transitions.
[2020-11-24 23:42:44,358 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1307
[2020-11-24 23:42:44,360 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1314
[2020-11-24 23:42:44,360 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5013 states and 5641 transitions.
[2020-11-24 23:42:44,367 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:44,367 INFO  L728         BuchiCegarLoop]: Abstraction has 5013 states and 5641 transitions.
[2020-11-24 23:42:44,371 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5013 states and 5641 transitions.
[2020-11-24 23:42:44,410 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5013 to 3947.
[2020-11-24 23:42:44,410 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3947 states.
[2020-11-24 23:42:44,415 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3947 states to 3947 states and 4271 transitions.
[2020-11-24 23:42:44,415 INFO  L751         BuchiCegarLoop]: Abstraction has 3947 states and 4271 transitions.
[2020-11-24 23:42:44,415 INFO  L631         BuchiCegarLoop]: Abstraction has 3947 states and 4271 transitions.
[2020-11-24 23:42:44,416 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 23:42:44,416 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3947 states and 4271 transitions.
[2020-11-24 23:42:44,422 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 23:42:44,422 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:44,422 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:44,425 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:44,425 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AirBasicToken0 := false;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND TRUE   !__tmp__transferEnabled_AirBasicToken[this]
[L4637]              revert := true;
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND TRUE   !__tmp__transferEnabled_AirBasicToken[this]
[L4637]              revert := true;
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:44,431 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:44,431 INFO  L82        PathProgramCache]: Analyzing trace with hash 1065664380, now seen corresponding path program 1 times
[2020-11-24 23:42:44,432 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:44,450 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:42:44,591 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:42:44,591 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:42:44,592 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 23:42:44,592 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:42:44,592 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-24 23:42:44,592 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-24 23:42:44,592 INFO  L87              Difference]: Start difference. First operand 3947 states and 4271 transitions. cyclomatic complexity: 334 Second operand 11 states.
[2020-11-24 23:42:46,860 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:46,860 INFO  L93              Difference]: Finished difference Result 6900 states and 7609 transitions.
[2020-11-24 23:42:46,860 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 23:42:46,860 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6900 states and 7609 transitions.
[2020-11-24 23:42:46,874 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 23:42:46,892 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6900 states to 6900 states and 7609 transitions.
[2020-11-24 23:42:46,892 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1855
[2020-11-24 23:42:46,893 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1855
[2020-11-24 23:42:46,893 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6900 states and 7609 transitions.
[2020-11-24 23:42:46,900 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:46,900 INFO  L728         BuchiCegarLoop]: Abstraction has 6900 states and 7609 transitions.
[2020-11-24 23:42:46,904 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6900 states and 7609 transitions.
[2020-11-24 23:42:46,953 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6900 to 5528.
[2020-11-24 23:42:46,953 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5528 states.
[2020-11-24 23:42:46,960 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5528 states to 5528 states and 6198 transitions.
[2020-11-24 23:42:46,960 INFO  L751         BuchiCegarLoop]: Abstraction has 5528 states and 6198 transitions.
[2020-11-24 23:42:46,960 INFO  L631         BuchiCegarLoop]: Abstraction has 5528 states and 6198 transitions.
[2020-11-24 23:42:46,960 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 23:42:46,960 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5528 states and 6198 transitions.
[2020-11-24 23:42:46,967 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 23:42:46,967 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:46,967 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:46,969 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:46,969 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AirBasicToken0 := false;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND FALSE  !(!__tmp__transferEnabled_AirBasicToken[this])
[L4640]  COND TRUE   !!__tmp__balanceLocked_AirBasicToken[this][_from_s813]
[L4641]              revert := true;
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND FALSE  !(!__tmp__transferEnabled_AirBasicToken[this])
[L4640]  COND TRUE   !!__tmp__balanceLocked_AirBasicToken[this][_from_s813]
[L4641]              revert := true;
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:46,974 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:46,974 INFO  L82        PathProgramCache]: Analyzing trace with hash -1544508120, now seen corresponding path program 1 times
[2020-11-24 23:42:46,975 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:46,988 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 23:42:47,081 INFO  L134       CoverageAnalysis]: Checked inductivity of 345 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 345 trivial. 0 not checked.
[2020-11-24 23:42:47,082 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 23:42:47,082 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-24 23:42:47,082 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 23:42:47,082 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-24 23:42:47,082 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-24 23:42:47,082 INFO  L87              Difference]: Start difference. First operand 5528 states and 6198 transitions. cyclomatic complexity: 686 Second operand 11 states.
[2020-11-24 23:42:49,112 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 23:42:49,112 INFO  L93              Difference]: Finished difference Result 9950 states and 11710 transitions.
[2020-11-24 23:42:49,113 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-24 23:42:49,113 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 9950 states and 11710 transitions.
[2020-11-24 23:42:49,137 INFO  L131   ngComponentsAnalysis]: Automaton has 6 accepting balls. 40
[2020-11-24 23:42:49,171 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 9950 states to 9950 states and 11710 transitions.
[2020-11-24 23:42:49,172 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 2677
[2020-11-24 23:42:49,173 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 2677
[2020-11-24 23:42:49,173 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 9950 states and 11710 transitions.
[2020-11-24 23:42:49,182 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 23:42:49,182 INFO  L728         BuchiCegarLoop]: Abstraction has 9950 states and 11710 transitions.
[2020-11-24 23:42:49,187 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 9950 states and 11710 transitions.
[2020-11-24 23:42:49,267 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 9950 to 8744.
[2020-11-24 23:42:49,267 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 8744 states.
[2020-11-24 23:42:49,281 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 8744 states to 8744 states and 10378 transitions.
[2020-11-24 23:42:49,281 INFO  L751         BuchiCegarLoop]: Abstraction has 8744 states and 10378 transitions.
[2020-11-24 23:42:49,281 INFO  L631         BuchiCegarLoop]: Abstraction has 8744 states and 10378 transitions.
[2020-11-24 23:42:49,281 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 23:42:49,281 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 8744 states and 10378 transitions.
[2020-11-24 23:42:49,292 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 32
[2020-11-24 23:42:49,292 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 23:42:49,292 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 23:42:49,294 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 23:42:49,294 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_AirBasicToken0 := false;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7064]              assume null == 0;
[L7065]  CALL        call this := FreshRefGenerator__success();
[L3584]              havoc newRef;
[L3585]              assume Alloc[newRef] == false;
[L3586]              Alloc[newRef] := true;
[L3587]              assume newRef != null;
[L7065]  RET         call this := FreshRefGenerator__success();
[L7066]              assume now >= 0;
[L7067]              assume DType[this] == AirBasicToken;
[L7068]              assume msgvalue_MSG == 0;
[L7069]              gas := gas - 53000;
[L7070]  CALL        call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
[L7071]              assume !revert && gas >= 0;
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND FALSE  !(!__tmp__transferEnabled_AirBasicToken[this])
[L4640]  COND FALSE  !(!!__tmp__balanceLocked_AirBasicToken[this][_from_s813])
[L4644]  COND TRUE   __tmp__DType[this] == AirBasicToken
[L4645]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4134]              __var_6 := null;
[L4135]  COND TRUE   !(_to_s442 != null)
[L4136]              revert := true;
[L4645]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4646]  COND TRUE   revert
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

Loop:
[L7074]  CALL        call CorralChoice_AirBasicToken(this);
[L6845]              havoc msgsender_MSG;
[L6846]              havoc msgvalue_MSG;
[L6847]              havoc choice;
[L6848]              havoc __ret_0_owner;
[L6849]              havoc __ret_0_totalSupply;
[L6850]              havoc _owner_s237;
[L6851]              havoc __ret_0_balanceOf;
[L6852]              havoc _to_s841;
[L6853]              havoc _value_s841;
[L6854]              havoc __ret_0_transfer;
[L6855]              havoc _value_s258;
[L6856]              havoc _owner_s486;
[L6857]              havoc _spender_s486;
[L6858]              havoc __ret_0_allowance;
[L6859]              havoc _from_s813;
[L6860]              havoc _to_s813;
[L6861]              havoc _value_s813;
[L6862]              havoc __ret_0_transferFrom;
[L6863]              havoc _spender_s470;
[L6864]              havoc _value_s470;
[L6865]              havoc __ret_0_approve;
[L6866]              havoc _spender_s527;
[L6867]              havoc _addedValue_s527;
[L6868]              havoc __ret_0_increaseApproval;
[L6869]              havoc _spender_s587;
[L6870]              havoc _subtractedValue_s587;
[L6871]              havoc __ret_0_decreaseApproval;
[L6872]              havoc __ret_0_name;
[L6873]              havoc __ret_0_symbol;
[L6874]              havoc __ret_0_decimals;
[L6875]              havoc __ret_0_INITIAL_SUPPLY;
[L6876]              havoc arg904_s0;
[L6877]              havoc __ret_0_balanceLocked;
[L6878]              havoc __ret_0_amountRaised;
[L6879]              havoc __ret_0_buyPrice;
[L6880]              havoc __ret_0_crowdsaleClosed;
[L6881]              havoc __ret_0_transferEnabled;
[L6882]              havoc newBuyPrice_s722;
[L6883]              havoc closebuy_s734;
[L6884]              havoc _enable_s783;
[L6885]              havoc _addr_s871;
[L6886]              havoc _addr_s901;
[L6887]              havoc tmpNow;
[L6888]              havoc gas;
[L6889]              assume gas > 4000000 && gas <= 8000000;
[L6890]              tmpNow := now;
[L6891]              havoc now;
[L6892]              assume now > tmpNow;
[L6893]              assume msgsender_MSG != null;
[L6894]              assume DType[msgsender_MSG] != Ownable;
[L6895]              assume DType[msgsender_MSG] != SafeMath;
[L6896]              assume DType[msgsender_MSG] != ERC20Basic;
[L6897]              assume DType[msgsender_MSG] != BasicToken;
[L6898]              assume DType[msgsender_MSG] != BurnableToken;
[L6899]              assume DType[msgsender_MSG] != ERC20;
[L6900]              assume DType[msgsender_MSG] != StandardToken;
[L6901]              assume DType[msgsender_MSG] != AirBasicToken;
[L6902]              Alloc[msgsender_MSG] := true;
[L6903]  COND FALSE  !(choice == 24)
[L6909]  COND FALSE  !(choice == 23)
[L6915]  COND FALSE  !(choice == 22)
[L6921]  COND FALSE  !(choice == 21)
[L6928]  COND FALSE  !(choice == 20)
[L6935]  COND FALSE  !(choice == 19)
[L6941]  COND TRUE   choice == 18
[L6942]              gas := gas - 21000;
[L6943]  COND TRUE   gas >= 0
[L6944]              assume _value_s813 >= 0 && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6945]              assume msgvalue_MSG == 0;
[L6946]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND FALSE  !(!__tmp__transferEnabled_AirBasicToken[this])
[L4640]  COND FALSE  !(!!__tmp__balanceLocked_AirBasicToken[this][_from_s813])
[L4644]  COND TRUE   __tmp__DType[this] == AirBasicToken
[L4645]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4134]              __var_6 := null;
[L4135]  COND TRUE   !(_to_s442 != null)
[L4136]              revert := true;
[L4645]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4646]  COND TRUE   revert
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L7074]  RET         call CorralChoice_AirBasicToken(this);

[2020-11-24 23:42:49,299 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:49,299 INFO  L82        PathProgramCache]: Analyzing trace with hash -2054180759, now seen corresponding path program 1 times
[2020-11-24 23:42:49,300 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:49,320 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:42:49,340 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:42:49,419 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:49,419 INFO  L82        PathProgramCache]: Analyzing trace with hash 1491060412, now seen corresponding path program 1 times
[2020-11-24 23:42:49,420 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:49,425 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:42:49,430 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:42:49,440 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 23:42:49,440 INFO  L82        PathProgramCache]: Analyzing trace with hash 82118948, now seen corresponding path program 1 times
[2020-11-24 23:42:49,441 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 23:42:49,459 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:42:49,481 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
[2020-11-24 23:42:49,781 WARN  L188               SmtUtils]: Spent 158.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 181
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 59 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 7027 to 14051
[2020-11-24 23:42:50,038 WARN  L188               SmtUtils]: Spent 231.00 ms on a formula simplification. DAG size of input: 139 DAG size of output: 133
[2020-11-24 23:42:50,233 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification that was a NOOP. DAG size: 328
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 8053 to 16103
[2020-11-24 23:42:50,980 WARN  L188               SmtUtils]: Spent 724.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 266
[2020-11-24 23:42:51,971 WARN  L188               SmtUtils]: Spent 988.00 ms on a formula simplification. DAG size of input: 336 DAG size of output: 314
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 15859 to 31699
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 17419 to 34819
[2020-11-24 23:42:52,321 WARN  L188               SmtUtils]: Spent 313.00 ms on a formula simplification. DAG size of input: 198 DAG size of output: 188
[2020-11-24 23:42:52,642 WARN  L188               SmtUtils]: Spent 319.00 ms on a formula simplification that was a NOOP. DAG size: 398
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #8: 19937 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19937 to 39869
[2020-11-24 23:42:53,350 WARN  L188               SmtUtils]: Spent 689.00 ms on a formula simplification. DAG size of input: 324 DAG size of output: 319
[2020-11-24 23:42:53,703 WARN  L188               SmtUtils]: Spent 350.00 ms on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5003 to 9973
[2020-11-24 23:42:54,293 WARN  L188               SmtUtils]: Spent 568.00 ms on a formula simplification. DAG size of input: 233 DAG size of output: 206
[2020-11-24 23:42:54,303 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
[2020-11-24 23:42:54,903 WARN  L188               SmtUtils]: Spent 331.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 253
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 619 to 1237
[2020-11-24 23:42:55,194 WARN  L188               SmtUtils]: Spent 138.00 ms on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-24 23:42:55,336 WARN  L188               SmtUtils]: Spent 139.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
[2020-11-24 23:42:55,489 WARN  L188               SmtUtils]: Spent 111.00 ms on a formula simplification. DAG size of input: 189 DAG size of output: 180
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-24 23:42:55,606 WARN  L188               SmtUtils]: Spent 108.00 ms on a formula simplification. DAG size of input: 138 DAG size of output: 132
[2020-11-24 23:42:55,805 WARN  L188               SmtUtils]: Spent 197.00 ms on a formula simplification that was a NOOP. DAG size: 327
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 23:42:56,567 WARN  L188               SmtUtils]: Spent 751.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 265
[2020-11-24 23:42:57,446 WARN  L188               SmtUtils]: Spent 876.00 ms on a formula simplification. DAG size of input: 334 DAG size of output: 313
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 15859 to 31699
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #8: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
[2020-11-24 23:42:57,843 WARN  L188               SmtUtils]: Spent 368.00 ms on a formula simplification. DAG size of input: 226 DAG size of output: 194
[2020-11-24 23:42:58,102 WARN  L188               SmtUtils]: Spent 257.00 ms on a formula simplification that was a NOOP. DAG size: 404
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9973 to 19937
Garbage collection #8: 19937 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19937 to 39869
[2020-11-24 23:42:58,923 WARN  L188               SmtUtils]: Spent 772.00 ms on a formula simplification. DAG size of input: 339 DAG size of output: 325
[2020-11-24 23:43:00,508 WARN  L188               SmtUtils]: Spent 1.58 s on a formula simplification. DAG size of input: 578 DAG size of output: 555
Garbage collection #1: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #2: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #3: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #4: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #5: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #6: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #7: 14051 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 14051 to 28099
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
[2020-11-24 23:43:00,993 WARN  L188               SmtUtils]: Spent 457.00 ms on a formula simplification. DAG size of input: 272 DAG size of output: 253
[2020-11-24 23:43:01,343 WARN  L188               SmtUtils]: Spent 325.00 ms on a formula simplification that was a NOOP. DAG size: 393
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #9: 21107 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 21107 to 42209
[2020-11-24 23:43:01,814 WARN  L188               SmtUtils]: Spent 407.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 253
[2020-11-24 23:43:02,503 WARN  L188               SmtUtils]: Spent 687.00 ms on a formula simplification. DAG size of input: 395 DAG size of output: 394
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
Garbage collection #8: 17077 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17077 to 34147
Garbage collection #9: 34147 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 34147 to 68281
Garbage collection #10: 68281 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 68281 to 118277
[2020-11-24 23:43:04,262 WARN  L188               SmtUtils]: Spent 1.74 s on a formula simplification. DAG size of input: 407 DAG size of output: 389
[2020-11-24 23:43:04,279 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:43:04,301 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 23:43:04,311 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 11:43:04 BasicIcfg
[2020-11-24 23:43:04,311 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 23:43:04,311 INFO  L168              Benchmark]: Toolchain (without parser) took 25445.61 ms. Allocated memory was 1.0 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 929.8 MB in the beginning and 2.0 GB in the end (delta: -1.1 GB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,311 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,312 INFO  L168              Benchmark]: Boogie Preprocessor took 135.77 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,312 INFO  L168              Benchmark]: UtopiaSpecLang took 76.66 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,312 INFO  L168              Benchmark]: Boogie Printer took 24.43 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,313 INFO  L168              Benchmark]: RCFGBuilder took 990.64 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 50.9 MB). Free memory was 903.0 MB in the beginning and 983.2 MB in the end (delta: -80.3 MB). Peak memory consumption was 190.8 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,313 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.88 ms. Allocated memory is still 1.1 GB. Free memory was 983.2 MB in the beginning and 979.9 MB in the end (delta: 3.3 MB). Peak memory consumption was 3.3 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,313 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1798.99 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 173.5 MB). Free memory was 979.9 MB in the beginning and 913.0 MB in the end (delta: 66.9 MB). Peak memory consumption was 475.2 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,314 INFO  L168              Benchmark]: BlockEncodingV2 took 176.31 ms. Allocated memory is still 1.3 GB. Free memory was 913.0 MB in the beginning and 812.9 MB in the end (delta: 100.0 MB). Peak memory consumption was 100.0 MB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,314 INFO  L168              Benchmark]: BuchiAutomizer took 22203.35 ms. Allocated memory was 1.3 GB in the beginning and 2.6 GB in the end (delta: 1.3 GB). Free memory was 812.9 MB in the beginning and 2.0 GB in the end (delta: -1.2 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
[2020-11-24 23:43:04,316 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    7636 locations, 13504 edges
  - StatisticsResult: Encoded RCFG
    7570 locations, 13335 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 135.77 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 76.66 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 24.43 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 903.0 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 990.64 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 50.9 MB). Free memory was 903.0 MB in the beginning and 983.2 MB in the end (delta: -80.3 MB). Peak memory consumption was 190.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.88 ms. Allocated memory is still 1.1 GB. Free memory was 983.2 MB in the beginning and 979.9 MB in the end (delta: 3.3 MB). Peak memory consumption was 3.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1798.99 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 173.5 MB). Free memory was 979.9 MB in the beginning and 913.0 MB in the end (delta: 66.9 MB). Peak memory consumption was 475.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 176.31 ms. Allocated memory is still 1.3 GB. Free memory was 913.0 MB in the beginning and 812.9 MB in the end (delta: 100.0 MB). Peak memory consumption was 100.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 22203.35 ms. Allocated memory was 1.3 GB in the beginning and 2.6 GB in the end (delta: 1.3 GB). Free memory was 812.9 MB in the beginning and 2.0 GB in the end (delta: -1.2 GB). Peak memory consumption was 1.3 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3211 locations, 4265 edges
  - StatisticsResult: BuchiProgram size
    7636 locations, 13504 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 8744 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 22.1s and 5 iterations.  TraceHistogramMax:8. Analysis of lassos took 15.7s. Construction of modules took 4.1s. BÃ¼chi inclusion checks took 1.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 3644 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 8744 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 19268 SDtfs, 24828 SDslu, 23197 SDs, 0 SdLazy, 73684 SolverSat, 4706 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 4.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1433815714) = (new AirBasicToken)({from : 1433815701});
[L1420]              havoc __exception;
[L1421]              revert := false;
[L1422]  COND FALSE  !(__exception)
[L1454]  CALL        call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4405]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4405]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4406]  COND FALSE  !(revert)
[L4409]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4409]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4410]  COND FALSE  !(revert)
[L4413]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4413]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4414]  COND FALSE  !(revert)
[L4417]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4110]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4110]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4111]  COND FALSE  !(revert)
[L4114]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4058]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L4058]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4059]  COND FALSE  !(revert)
[L4062]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4039]              assume msgsender_MSG != null;
[L4040]              Balance[this] := 0;
[L4062]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4063]  COND FALSE  !(revert)
[L4114]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4115]  COND FALSE  !(revert)
[L4118]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L4118]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4119]  COND FALSE  !(revert)
[L4122]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4081]              assume msgsender_MSG != null;
[L4082]              Balance[this] := 0;
[L4083]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4084]              sum_allowed1[this] := 0;
[L4122]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4123]  COND FALSE  !(revert)
[L4417]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4418]  COND FALSE  !(revert)
[L4421]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3934]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3934]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]  COND FALSE  !(revert)
[L3938]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3801]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3759]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3744]              assume msgsender_MSG != null;
[L3745]              Balance[this] := 0;
[L3759]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3760]  COND FALSE  !(revert)
[L3801]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L3802]  COND FALSE  !(revert)
[L3805]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3779]              assume msgsender_MSG != null;
[L3780]              Balance[this] := 0;
[L3781]              balances_BasicToken[this] := zeroRefintArr();
[L3782]              sum_balances0[this] := 0;
[L3783]              totalSupply__BasicToken[this] := 0;
[L3805]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3806]  COND FALSE  !(revert)
[L3938]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3939]  COND FALSE  !(revert)
[L3942]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3911]              assume msgsender_MSG != null;
[L3912]              Balance[this] := 0;
[L3942]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3943]  COND FALSE  !(revert)
[L4421]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4422]  COND FALSE  !(revert)
[L4425]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3620]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3603]              assume msgsender_MSG != null;
[L3604]              Balance[this] := 0;
[L3605]              owner_Ownable[this] := null;
[L3607]              owner_Ownable[this] := msgsender_MSG;
[L3620]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3621]  COND FALSE  !(revert)
[L4425]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4426]  COND FALSE  !(revert)
[L4429]  CALL        call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4349]              assume msgsender_MSG != null;
[L4350]              Balance[this] := 0;
[L4351]              name_AirBasicToken[this] := 1433815699;
[L4352]              symbol_AirBasicToken[this] := -1312980976;
[L4353]              decimals_AirBasicToken[this] := 18;
[L4354]              __var_12 := decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4355]              INITIAL_SUPPLY_AirBasicToken[this] := 1282793976 * (nonlinearPow(10, decimals_AirBasicToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4356]              balanceLocked_AirBasicToken[this] := zeroRefboolArr();
[L4357]              amountRaised_AirBasicToken[this] := 0;
[L4358]              buyPrice_AirBasicToken[this] := 100000;
[L4359]              crowdsaleClosed_AirBasicToken[this] := true;
[L4360]              transferEnabled_AirBasicToken[this] := true;
[L4362]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_AirBasicToken[this];
[L4363]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L4364]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_AirBasicToken[this];
[L4365]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L4366]              assert { :EventEmitted "Transfer_AirBasicToken" } true;
[L4429]  RET         call AirBasicToken_AirBasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4430]  COND FALSE  !(revert)
[L1454]  RET         call AirBasicToken_AirBasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1455]              assume !revert && gas >= 0;
[L7070]  RET         call AirBasicToken_AirBasicToken(this, msgsender_MSG, msgvalue_MSG);
AirBasicToken(1433815714).transferFrom~address~address~uint256.gas(3979002)({from : 1433815713, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND FALSE  !(!__tmp__transferEnabled_AirBasicToken[this])
[L4640]  COND FALSE  !(!!__tmp__balanceLocked_AirBasicToken[this][_from_s813])
[L4644]  COND TRUE   __tmp__DType[this] == AirBasicToken
[L4645]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4134]              __var_6 := null;
[L4135]  COND TRUE   !(_to_s442 != null)
[L4136]              revert := true;
[L4645]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4646]  COND TRUE   revert
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);

Loop:
AirBasicToken(1433815714).transferFrom~address~address~uint256.gas(3979001)({from : 1433815707, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s813 || p2 != msgsender_MSG) && _from_s813 == _to_s813) && _value_s813 <= balances_BasicToken[this][_from_s813]) && _value_s813 <= allowed_StandardToken[this][_from_s813][msgsender_MSG]) && _value_s813 >= 0) && _value_s813 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_to_s813] >= 0) && balances_BasicToken[this][_to_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_BasicToken[this][_from_s813] >= 0) && balances_BasicToken[this][_from_s813] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_StandardToken[this][_from_s813][msgsender_MSG] >= 0) && allowed_StandardToken[this][_from_s813][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_AirBasicToken0 := true;
[L3]                 call_transferFrom_AirBasicToken0 := false;
[L3]                 revert := revert_hold;
[L1762]              havoc __exception;
[L1763]              revert := false;
[L1764]  COND TRUE   __exception
[L1765]              __tmp__Balance := Balance;
[L1766]              __tmp__DType := DType;
[L1767]              __tmp__Alloc := Alloc;
[L1768]              __tmp__balance_ADDR := balance_ADDR;
[L1769]              __tmp__M_Ref_int := M_Ref_int;
[L1770]              __tmp__sum_balances0 := sum_balances0;
[L1771]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1772]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1773]              __tmp__sum_allowed1 := sum_allowed1;
[L1774]              __tmp__M_Ref_bool := M_Ref_bool;
[L1775]              __tmp__sum_balanceLocked2 := sum_balanceLocked2;
[L1776]              __tmp__M_int_Ref := M_int_Ref;
[L1777]              __tmp__sum := sum;
[L1778]              __tmp__Length := Length;
[L1779]              __tmp__now := now;
[L1780]              __tmp__owner_Ownable := owner_Ownable;
[L1781]              __tmp__balances_BasicToken := balances_BasicToken;
[L1782]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1783]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1784]              __tmp__name_AirBasicToken := name_AirBasicToken;
[L1785]              __tmp__symbol_AirBasicToken := symbol_AirBasicToken;
[L1786]              __tmp__decimals_AirBasicToken := decimals_AirBasicToken;
[L1787]              __tmp__INITIAL_SUPPLY_AirBasicToken := INITIAL_SUPPLY_AirBasicToken;
[L1788]              __tmp__balanceLocked_AirBasicToken := balanceLocked_AirBasicToken;
[L1789]              __tmp__amountRaised_AirBasicToken := amountRaised_AirBasicToken;
[L1790]              __tmp__buyPrice_AirBasicToken := buyPrice_AirBasicToken;
[L1791]              __tmp__crowdsaleClosed_AirBasicToken := crowdsaleClosed_AirBasicToken;
[L1792]              __tmp__transferEnabled_AirBasicToken := transferEnabled_AirBasicToken;
[L1793]  CALL        call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4636]  COND FALSE  !(!__tmp__transferEnabled_AirBasicToken[this])
[L4640]  COND FALSE  !(!!__tmp__balanceLocked_AirBasicToken[this][_from_s813])
[L4644]  COND TRUE   __tmp__DType[this] == AirBasicToken
[L4645]  CALL        call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4134]              __var_6 := null;
[L4135]  COND TRUE   !(_to_s442 != null)
[L4136]              revert := true;
[L4645]  RET         call __var_19 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L4646]  COND TRUE   revert
[L1793]  RET         call __ret_0_ := transferFrom~address~address~uint256_AirBasicToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);
[L1794]              assume revert || gas < 0;
[L6946]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_AirBasicToken(this, msgsender_MSG, msgvalue_MSG, _from_s813, _to_s813, _value_s813);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
