This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 13:21:13,569 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 13:21:13,570 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 13:21:13,580 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 13:21:13,580 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 13:21:13,581 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 13:21:13,582 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 13:21:13,583 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 13:21:13,585 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 13:21:13,585 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 13:21:13,586 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 13:21:13,586 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 13:21:13,587 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 13:21:13,587 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 13:21:13,588 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 13:21:13,589 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 13:21:13,589 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 13:21:13,590 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 13:21:13,592 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 13:21:13,593 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 13:21:13,594 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 13:21:13,594 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 13:21:13,596 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 13:21:13,596 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 13:21:13,596 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 13:21:13,597 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 13:21:13,597 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 13:21:13,598 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 13:21:13,598 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 13:21:13,598 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 13:21:13,598 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 13:21:13,599 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 13:21:13,599 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 13:21:13,600 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 13:21:13,600 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 13:21:13,601 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 13:21:13,601 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 13:21:13,601 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 13:21:13,601 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 13:21:13,602 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 13:21:13,602 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 13:21:13,603 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 13:21:13,610 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 13:21:13,610 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 13:21:13,611 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 13:21:13,611 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 13:21:13,611 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 13:21:13,612 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 13:21:13,612 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 13:21:13,612 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 13:21:13,612 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 13:21:13,612 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 13:21:13,612 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 13:21:13,612 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 13:21:13,612 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 13:21:13,613 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 13:21:13,613 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 13:21:13,614 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 13:21:13,614 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 13:21:13,614 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 13:21:13,614 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 13:21:13,614 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 13:21:13,636 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 13:21:13,648 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 13:21:13,651 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 13:21:13,652 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 13:21:13,652 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 13:21:13,653 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl
[2020-11-25 13:21:13,653 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl'
[2020-11-25 13:21:13,711 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 13:21:13,712 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 13:21:13,712 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 13:21:13,713 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 13:21:13,713 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 13:21:13,728 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,729 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,757 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,757 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,770 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,777 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,781 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,786 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 13:21:13,787 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 13:21:13,787 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 13:21:13,789 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 13:21:13,792 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/1) ...
[2020-11-25 13:21:13,806 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DATA1TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && balanceOf_DATA1TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && balanceOf_DATA1TokenERC20[this][msg.sender] == old(balanceOf_DATA1TokenERC20[this][msg.sender]) - value && balanceOf_DATA1TokenERC20[this][to] == old(balanceOf_DATA1TokenERC20[this][to]) + value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:13,811 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DATA1TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && balanceOf_DATA1TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && balanceOf_DATA1TokenERC20[this][msg.sender] == old(balanceOf_DATA1TokenERC20[this][msg.sender]) - value && balanceOf_DATA1TokenERC20[this][to] == old(balanceOf_DATA1TokenERC20[this][to]) + value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:13,819 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DATA1TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && balanceOf_DATA1TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && balanceOf_DATA1TokenERC20[this][msg.sender] == old(balanceOf_DATA1TokenERC20[this][msg.sender]) - value && balanceOf_DATA1TokenERC20[this][to] == old(balanceOf_DATA1TokenERC20[this][to]) + value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:13,824 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s180 ) && msg.sender!=_to_s180 ) && _value_s180<=balanceOf_DATA1TokenERC20[this][msg.sender] ) && ( balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s180>=0 ) && _value_s180<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][_to_s180]>=0 ) && balanceOf_DATA1TokenERC20[this][_to_s180]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_DATA1TokenERC20[this][msg.sender]>=0 ) && balanceOf_DATA1TokenERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 13:21:13,827 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( success_s180==true && balanceOf_DATA1TokenERC20[this][msg.sender]==( ( old(balanceOf_DATA1TokenERC20[this][msg.sender]) ) - _value_s180 ) ) && balanceOf_DATA1TokenERC20[this][_to_s180]==( ( old(balanceOf_DATA1TokenERC20[this][_to_s180]) ) + _value_s180 ) ) && totalSupply_DATA1TokenERC20[this]==( old(totalSupply_DATA1TokenERC20[this]) ) ) && allowance_DATA1TokenERC20[this]==( old(allowance_DATA1TokenERC20[this]) ) ) && balanceOf_DATA1TokenERC20[this][p1]==( old(balanceOf_DATA1TokenERC20[this][p1]) ) ) && name_DATA1TokenERC20[this]==( old(name_DATA1TokenERC20[this]) ) ) && symbol_DATA1TokenERC20[this]==( old(symbol_DATA1TokenERC20[this]) ) ) && decimals_DATA1TokenERC20[this]==( old(decimals_DATA1TokenERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s180,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_DATA1TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]],IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[_to_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]],IdentifierExpression[_value_s180,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DATA1TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_DATA1TokenERC20>]]]]]]
[2020-11-25 13:21:13,831 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DATA1TokenERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= balanceOf_DATA1TokenERC20[this][msg.sender] && balanceOf_DATA1TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][to] >= 0 && balanceOf_DATA1TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_DATA1TokenERC20[this][msg.sender] >= 0 &&  balanceOf_DATA1TokenERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DATA1TokenERC20.transfer(to, value), return == true && balanceOf_DATA1TokenERC20[this][msg.sender] == old(balanceOf_DATA1TokenERC20[this][msg.sender]) - value && balanceOf_DATA1TokenERC20[this][to] == old(balanceOf_DATA1TokenERC20[this][to]) + value && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this]) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this]) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1]) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this]) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this]) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]))))
[2020-11-25 13:21:13,831 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_DATA1TokenERC200) ==> ( <>AP(success_transfer_DATA1TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 13:21:13,839 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:13 PropertyContainer
[2020-11-25 13:21:13,839 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 13:21:13,839 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 13:21:13,839 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 13:21:13,840 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 13:21:13,841 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/2) ...
[2020-11-25 13:21:13,841 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 13:21:13,841 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 13:21:13,850 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:13" (2/2) ...
[2020-11-25 13:21:13,851 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 13:21:13,851 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 13:21:13,851 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 13:21:13,851 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 13:21:13,852 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/2) ...
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:21:13,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:21:13,904 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,904 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20
[2020-11-25 13:21:13,905 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20
[2020-11-25 13:21:13,906 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:21:13,907 INFO  L130     BoogieDeclarations]: Found specification of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__success
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:21:13,908 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 13:21:13,909 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 13:21:13,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 13:21:13,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 13:21:13,909 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure DATA1TokenERC20_DATA1TokenERC20__success
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,910 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__fail
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DATA1TokenERC20__success
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__fail
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DATA1TokenERC20__success
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__fail
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DATA1TokenERC20__success
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__fail
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DATA1TokenERC20__success
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__fail
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DATA1TokenERC20__success
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__fail
[2020-11-25 13:21:13,911 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DATA1TokenERC20__success
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__fail
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DATA1TokenERC20__success
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__fail
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DATA1TokenERC20__success
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 13:21:13,912 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DATA1TokenERC20
[2020-11-25 13:21:13,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 13:21:13,913 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 13:21:13,913 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 13:21:14,086 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:14,315 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:14,315 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:14,315 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 13:21:14,349 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 13:21:14,350 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 13:21:14,351 INFO  L202        PluginConnector]: Adding new model DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:14 BoogieIcfgContainer
[2020-11-25 13:21:14,351 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:13" (2/2) ...
[2020-11-25 13:21:14,351 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 13:21:14,352 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7539c229 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:14, skipping insertion in model container
[2020-11-25 13:21:14,352 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 13:21:14,352 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 13:21:14,352 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 13:21:14,353 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 13:21:14,353 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/3) ...
[2020-11-25 13:21:14,354 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@3694fc93 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:14, skipping insertion in model container
[2020-11-25 13:21:14,354 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:13" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 13:21:14,388 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:14 NWAContainer
[2020-11-25 13:21:14,388 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 13:21:14,388 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 13:21:14,389 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 13:21:14,389 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 13:21:14,390 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:14" (3/4) ...
[2020-11-25 13:21:14,391 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@28ebdf44 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:14, skipping insertion in model container
[2020-11-25 13:21:14,391 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:14" (4/4) ...
[2020-11-25 13:21:14,394 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 13:21:14,396 INFO  L110   BuchiProductObserver]: Initial RCFG 694 locations, 840 edges
[2020-11-25 13:21:14,396 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 13:21:14,405 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 13:21:15,316 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 13:21:15,318 INFO  L110   BuchiProductObserver]: BuchiProgram size 1622 locations, 2705 edges
[2020-11-25 13:21:15,319 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:15 BoogieIcfgContainer
[2020-11-25 13:21:15,319 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 13:21:15,320 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 13:21:15,320 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 13:21:15,322 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 13:21:15,322 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:15" (1/1) ...
[2020-11-25 13:21:15,377 INFO  L313           BlockEncoder]: Initial Icfg 1622 locations, 2705 edges
[2020-11-25 13:21:15,377 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 13:21:15,378 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 13:21:15,378 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 13:21:15,379 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 13:21:15,387 INFO  L70    emoveInfeasibleEdges]: Removed 24 edges and 7 locations because of local infeasibility
[2020-11-25 13:21:15,392 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 13:21:15,399 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 13:21:15,401 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 13:21:15,403 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 13:21:15,403 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 13:21:15,406 INFO  L313           BlockEncoder]: Encoded RCFG 1606 locations, 2668 edges
[2020-11-25 13:21:15,406 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:21:15 BasicIcfg
[2020-11-25 13:21:15,406 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 13:21:15,407 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 13:21:15,407 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 13:21:15,409 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 13:21:15,409 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:15,410 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 01:21:13" (1/6) ...
[2020-11-25 13:21:15,412 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@33e98b68 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:15, skipping insertion in model container
[2020-11-25 13:21:15,412 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:15,412 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 01:21:13" (2/6) ...
[2020-11-25 13:21:15,412 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@33e98b68 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:15, skipping insertion in model container
[2020-11-25 13:21:15,412 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:15,412 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 01:21:14" (3/6) ...
[2020-11-25 13:21:15,413 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@33e98b68 and model type DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:21:15, skipping insertion in model container
[2020-11-25 13:21:15,413 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:15,413 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 01:21:14" (4/6) ...
[2020-11-25 13:21:15,413 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@33e98b68 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 01:21:15, skipping insertion in model container
[2020-11-25 13:21:15,413 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:15,413 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 01:21:15" (5/6) ...
[2020-11-25 13:21:15,413 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@33e98b68 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 01:21:15, skipping insertion in model container
[2020-11-25 13:21:15,413 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 13:21:15,413 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 01:21:15" (6/6) ...
[2020-11-25 13:21:15,415 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DATA1TokenERC20_0x62c2e3b4f775b5975f062522fbb8966225535bbb_transfer-normal.bpl_BEv2
[2020-11-25 13:21:15,456 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 13:21:15,456 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 13:21:15,457 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 13:21:15,457 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 13:21:15,457 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 13:21:15,457 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 13:21:15,457 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 13:21:15,457 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 13:21:15,457 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 13:21:15,480 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1606 states.
[2020-11-25 13:21:15,522 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:15,522 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:15,522 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:15,531 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:15,531 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:15,532 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 13:21:15,532 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1606 states.
[2020-11-25 13:21:15,544 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:15,544 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:15,544 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:15,546 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:15,546 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DATA1TokenERC200 := false;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND TRUE   choice == 10
[L1819]              gas := gas - 21000;
[L1820]  COND FALSE  !(gas >= 0)
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:15,564 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:15,564 INFO  L82        PathProgramCache]: Analyzing trace with hash 1860229727, now seen corresponding path program 1 times
[2020-11-25 13:21:15,569 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:15,597 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:15,648 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:15,650 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:15,650 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-25 13:21:15,654 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:15,746 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:21:15,746 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:21:15,748 INFO  L87              Difference]: Start difference. First operand 1606 states. Second operand 3 states.
[2020-11-25 13:21:15,880 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:15,880 INFO  L93              Difference]: Finished difference Result 1252 states and 1363 transitions.
[2020-11-25 13:21:15,880 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:21:15,882 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1252 states and 1363 transitions.
[2020-11-25 13:21:15,891 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:15,905 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1252 states to 1250 states and 1359 transitions.
[2020-11-25 13:21:15,906 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 13:21:15,908 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 573
[2020-11-25 13:21:15,908 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1250 states and 1359 transitions.
[2020-11-25 13:21:15,914 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:15,914 INFO  L728         BuchiCegarLoop]: Abstraction has 1250 states and 1359 transitions.
[2020-11-25 13:21:15,928 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1250 states and 1359 transitions.
[2020-11-25 13:21:15,957 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1250 to 1250.
[2020-11-25 13:21:15,958 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1250 states.
[2020-11-25 13:21:15,960 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1250 states to 1250 states and 1359 transitions.
[2020-11-25 13:21:15,961 INFO  L751         BuchiCegarLoop]: Abstraction has 1250 states and 1359 transitions.
[2020-11-25 13:21:15,961 INFO  L631         BuchiCegarLoop]: Abstraction has 1250 states and 1359 transitions.
[2020-11-25 13:21:15,961 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 13:21:15,961 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1250 states and 1359 transitions.
[2020-11-25 13:21:15,965 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:15,965 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:15,965 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:15,967 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:15,967 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DATA1TokenERC200 := false;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1108]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1072]              __var_2 := null;
[L1073]  COND TRUE   !(_to_s161 != null)
[L1074]              revert := true;
[L1108]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1109]  COND TRUE   revert
[L219]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s180 == true && balanceOf_DATA1TokenERC20[this][msgsender_MSG] == old(balanceOf_DATA1TokenERC20[this][msgsender_MSG]) - _value_s180) && balanceOf_DATA1TokenERC20[this][_to_s180] == old(balanceOf_DATA1TokenERC20[this][_to_s180]) + _value_s180) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1108]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1072]              __var_2 := null;
[L1073]  COND TRUE   !(_to_s161 != null)
[L1074]              revert := true;
[L1108]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1109]  COND TRUE   revert
[L219]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s180 == true && balanceOf_DATA1TokenERC20[this][msgsender_MSG] == old(balanceOf_DATA1TokenERC20[this][msgsender_MSG]) - _value_s180) && balanceOf_DATA1TokenERC20[this][_to_s180] == old(balanceOf_DATA1TokenERC20[this][_to_s180]) + _value_s180) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:15,971 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:15,971 INFO  L82        PathProgramCache]: Analyzing trace with hash -595610714, now seen corresponding path program 1 times
[2020-11-25 13:21:15,972 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:15,986 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:16,008 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:16,008 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:16,008 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 13:21:16,009 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:16,009 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 13:21:16,009 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 13:21:16,010 INFO  L87              Difference]: Start difference. First operand 1250 states and 1359 transitions. cyclomatic complexity: 111 Second operand 3 states.
[2020-11-25 13:21:16,041 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:16,041 INFO  L93              Difference]: Finished difference Result 1608 states and 1789 transitions.
[2020-11-25 13:21:16,041 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 13:21:16,042 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1608 states and 1789 transitions.
[2020-11-25 13:21:16,049 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 13:21:16,056 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1608 states to 1552 states and 1723 transitions.
[2020-11-25 13:21:16,056 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 724
[2020-11-25 13:21:16,057 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 724
[2020-11-25 13:21:16,057 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1552 states and 1723 transitions.
[2020-11-25 13:21:16,059 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:16,059 INFO  L728         BuchiCegarLoop]: Abstraction has 1552 states and 1723 transitions.
[2020-11-25 13:21:16,060 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1552 states and 1723 transitions.
[2020-11-25 13:21:16,073 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1552 to 1254.
[2020-11-25 13:21:16,073 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1254 states.
[2020-11-25 13:21:16,076 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1254 states to 1254 states and 1349 transitions.
[2020-11-25 13:21:16,076 INFO  L751         BuchiCegarLoop]: Abstraction has 1254 states and 1349 transitions.
[2020-11-25 13:21:16,076 INFO  L631         BuchiCegarLoop]: Abstraction has 1254 states and 1349 transitions.
[2020-11-25 13:21:16,076 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 13:21:16,076 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1254 states and 1349 transitions.
[2020-11-25 13:21:16,079 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 13:21:16,079 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:16,079 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:16,081 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:16,081 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DATA1TokenERC200 := false;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1108]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1072]              __var_2 := null;
[L1073]  COND FALSE  !(!(_to_s161 != null))
[L1077]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1081]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1085]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1086]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1087]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1089]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1090]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1091]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1092]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1093]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1108]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1109]  COND FALSE  !(revert)
[L1112]              success_s180 := true;
[L219]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s180 == true && balanceOf_DATA1TokenERC20[this][msgsender_MSG] == old(balanceOf_DATA1TokenERC20[this][msgsender_MSG]) - _value_s180) && balanceOf_DATA1TokenERC20[this][_to_s180] == old(balanceOf_DATA1TokenERC20[this][_to_s180]) + _value_s180) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND FALSE  !(__exception)
[L219]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1108]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1072]              __var_2 := null;
[L1073]  COND FALSE  !(!(_to_s161 != null))
[L1077]  COND FALSE  !(!(balanceOf_DATA1TokenERC20[this][_from_s161] >= _value_s161))
[L1081]  COND FALSE  !(!((balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 >= balanceOf_DATA1TokenERC20[this][_to_s161]))
[L1085]              previousBalances_s161 := (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1086]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_from_s161];
[L1087]              balanceOf_DATA1TokenERC20[this][_from_s161] := (balanceOf_DATA1TokenERC20[this][_from_s161] - _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1088]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_from_s161];
[L1089]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][_to_s161];
[L1090]              balanceOf_DATA1TokenERC20[this][_to_s161] := (balanceOf_DATA1TokenERC20[this][_to_s161] + _value_s161) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1091]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][_to_s161];
[L1092]              assert { :EventEmitted "Transfer_DATA1TokenERC20" } true;
[L1093]              assert (balanceOf_DATA1TokenERC20[this][_from_s161] + balanceOf_DATA1TokenERC20[this][_to_s161]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s161;
[L1108]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1109]  COND FALSE  !(revert)
[L1112]              success_s180 := true;
[L219]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L220]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((success_s180 == true && balanceOf_DATA1TokenERC20[this][msgsender_MSG] == old(balanceOf_DATA1TokenERC20[this][msgsender_MSG]) - _value_s180) && balanceOf_DATA1TokenERC20[this][_to_s180] == old(balanceOf_DATA1TokenERC20[this][_to_s180]) + _value_s180) && totalSupply_DATA1TokenERC20[this] == old(totalSupply_DATA1TokenERC20[this])) && allowance_DATA1TokenERC20[this] == old(allowance_DATA1TokenERC20[this])) && balanceOf_DATA1TokenERC20[this][p1] == old(balanceOf_DATA1TokenERC20[this][p1])) && name_DATA1TokenERC20[this] == old(name_DATA1TokenERC20[this])) && symbol_DATA1TokenERC20[this] == old(symbol_DATA1TokenERC20[this])) && decimals_DATA1TokenERC20[this] == old(decimals_DATA1TokenERC20[this]));
[L3]                 revert := revert_hold;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:16,084 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:16,084 INFO  L82        PathProgramCache]: Analyzing trace with hash -459327344, now seen corresponding path program 1 times
[2020-11-25 13:21:16,084 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:16,141 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:16,912 WARN  L188               SmtUtils]: Spent 171.00 ms on a formula simplification. DAG size of input: 92 DAG size of output: 69
[2020-11-25 13:21:17,105 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification. DAG size of input: 94 DAG size of output: 71
[2020-11-25 13:21:17,282 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:17,283 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:17,283 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [19] imperfect sequences [] total 19
[2020-11-25 13:21:17,283 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 13:21:17,284 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 20 interpolants.
[2020-11-25 13:21:17,284 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=44, Invalid=336, Unknown=0, NotChecked=0, Total=380
[2020-11-25 13:21:17,284 INFO  L87              Difference]: Start difference. First operand 1254 states and 1349 transitions. cyclomatic complexity: 97 Second operand 20 states.
[2020-11-25 13:21:20,781 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:20,781 INFO  L93              Difference]: Finished difference Result 1371 states and 1502 transitions.
[2020-11-25 13:21:20,781 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 21 states. 
[2020-11-25 13:21:20,782 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1371 states and 1502 transitions.
[2020-11-25 13:21:20,786 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 13:21:20,792 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1371 states to 1371 states and 1502 transitions.
[2020-11-25 13:21:20,792 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 629
[2020-11-25 13:21:20,793 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 629
[2020-11-25 13:21:20,793 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1371 states and 1502 transitions.
[2020-11-25 13:21:20,795 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:20,795 INFO  L728         BuchiCegarLoop]: Abstraction has 1371 states and 1502 transitions.
[2020-11-25 13:21:20,797 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1371 states and 1502 transitions.
[2020-11-25 13:21:20,810 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1371 to 1334.
[2020-11-25 13:21:20,810 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1334 states.
[2020-11-25 13:21:20,813 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1334 states to 1334 states and 1443 transitions.
[2020-11-25 13:21:20,813 INFO  L751         BuchiCegarLoop]: Abstraction has 1334 states and 1443 transitions.
[2020-11-25 13:21:20,813 INFO  L631         BuchiCegarLoop]: Abstraction has 1334 states and 1443 transitions.
[2020-11-25 13:21:20,813 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 13:21:20,813 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1334 states and 1443 transitions.
[2020-11-25 13:21:20,816 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:20,816 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:20,816 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:20,817 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:20,817 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DATA1TokenERC200 := false;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum_allowance1 := sum_allowance1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L211]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L212]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L213]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L214]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L215]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L216]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1098]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1098]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1099]  COND TRUE   revert
[L216]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L217]               assume revert || gas < 0;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND TRUE   choice == 10
[L1819]              gas := gas - 21000;
[L1820]  COND FALSE  !(gas >= 0)
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:20,819 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:20,820 INFO  L82        PathProgramCache]: Analyzing trace with hash 1239198571, now seen corresponding path program 1 times
[2020-11-25 13:21:20,820 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:20,827 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:20,834 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:20,871 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:20,871 INFO  L82        PathProgramCache]: Analyzing trace with hash 1933219889, now seen corresponding path program 1 times
[2020-11-25 13:21:20,872 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:20,873 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 13:21:20,878 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 13:21:20,878 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 13:21:20,878 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 13:21:20,879 INFO  L1008  eck$LassoCheckResult]: loop already infeasible
[2020-11-25 13:21:20,879 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 13:21:20,879 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 13:21:20,879 INFO  L87              Difference]: Start difference. First operand 1334 states and 1443 transitions. cyclomatic complexity: 113 Second operand 4 states.
[2020-11-25 13:21:20,970 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 13:21:20,970 INFO  L93              Difference]: Finished difference Result 1444 states and 1564 transitions.
[2020-11-25 13:21:20,970 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 13:21:20,970 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1444 states and 1564 transitions.
[2020-11-25 13:21:20,976 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 13:21:20,981 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1444 states to 1444 states and 1564 transitions.
[2020-11-25 13:21:20,981 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 663
[2020-11-25 13:21:20,982 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 663
[2020-11-25 13:21:20,982 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1444 states and 1564 transitions.
[2020-11-25 13:21:20,983 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 13:21:20,983 INFO  L728         BuchiCegarLoop]: Abstraction has 1444 states and 1564 transitions.
[2020-11-25 13:21:20,984 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1444 states and 1564 transitions.
[2020-11-25 13:21:20,995 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1444 to 1334.
[2020-11-25 13:21:20,996 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1334 states.
[2020-11-25 13:21:20,998 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1334 states to 1334 states and 1423 transitions.
[2020-11-25 13:21:20,998 INFO  L751         BuchiCegarLoop]: Abstraction has 1334 states and 1423 transitions.
[2020-11-25 13:21:20,998 INFO  L631         BuchiCegarLoop]: Abstraction has 1334 states and 1423 transitions.
[2020-11-25 13:21:20,998 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 13:21:20,998 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1334 states and 1423 transitions.
[2020-11-25 13:21:21,001 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 13:21:21,001 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 13:21:21,001 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 13:21:21,002 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 13:21:21,002 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_DATA1TokenERC200 := false;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L1893]              assume null == 0;
[L1894]  CALL        call this := FreshRefGenerator__success();
[L938]               havoc newRef;
[L939]               assume Alloc[newRef] == false;
[L940]               Alloc[newRef] := true;
[L941]               assume newRef != null;
[L1894]  RET         call this := FreshRefGenerator__success();
[L1895]              assume now >= 0;
[L1896]              assume DType[this] == DATA1TokenERC20;
[L1897]              assume msgvalue_MSG == 0;
[L1898]              gas := gas - 53000;
[L1899]  CALL        call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1900]              assume !revert && gas >= 0;
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum_allowance1 := sum_allowance1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L211]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L212]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L213]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L214]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L215]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L216]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1098]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1098]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1099]  COND TRUE   revert
[L216]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L217]               assume revert || gas < 0;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

Loop:
[L1903]  CALL        call CorralChoice_DATA1TokenERC20(this);
[L1779]              havoc msgsender_MSG;
[L1780]              havoc msgvalue_MSG;
[L1781]              havoc choice;
[L1782]              havoc __ret_0_name;
[L1783]              havoc __ret_0_symbol;
[L1784]              havoc __ret_0_decimals;
[L1785]              havoc __ret_0_totalSupply;
[L1786]              havoc arg289_s0;
[L1787]              havoc __ret_0_balanceOf;
[L1788]              havoc arg290_s0;
[L1789]              havoc arg291_s0;
[L1790]              havoc __ret_0_allowance;
[L1791]              havoc initialSupply_s83;
[L1792]              havoc tokenName_s83;
[L1793]              havoc tokenSymbol_s83;
[L1794]              havoc _to_s180;
[L1795]              havoc _value_s180;
[L1796]              havoc success_s180;
[L1797]              havoc _from_s220;
[L1798]              havoc _to_s220;
[L1799]              havoc _value_s220;
[L1800]              havoc success_s220;
[L1801]              havoc _spender_s248;
[L1802]              havoc _value_s248;
[L1803]              havoc success_s248;
[L1804]              havoc _spender_s286;
[L1805]              havoc _value_s286;
[L1806]              havoc _extraData_s286;
[L1807]              havoc success_s286;
[L1808]              havoc tmpNow;
[L1809]              havoc gas;
[L1810]              assume gas > 4000000 && gas <= 8000000;
[L1811]              tmpNow := now;
[L1812]              havoc now;
[L1813]              assume now > tmpNow;
[L1814]              assume msgsender_MSG != null;
[L1815]              assume DType[msgsender_MSG] != tokenRecipient;
[L1816]              assume DType[msgsender_MSG] != DATA1TokenERC20;
[L1817]              Alloc[msgsender_MSG] := true;
[L1818]  COND FALSE  !(choice == 10)
[L1824]  COND FALSE  !(choice == 9)
[L1830]  COND FALSE  !(choice == 8)
[L1836]  COND FALSE  !(choice == 7)
[L1842]  COND FALSE  !(choice == 6)
[L1848]  COND FALSE  !(choice == 5)
[L1854]  COND TRUE   choice == 4
[L1855]              gas := gas - 21000;
[L1856]  COND TRUE   gas >= 0
[L1857]              assume _value_s180 >= 0 && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1858]              assume msgvalue_MSG == 0;
[L1859]  CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_DATA1TokenERC200 := true;
[L3]                 call_transfer_DATA1TokenERC200 := false;
[L3]                 revert := revert_hold;
[L196]               havoc __exception;
[L197]               revert := false;
[L198]   COND TRUE   __exception
[L199]               __tmp__Balance := Balance;
[L200]               __tmp__DType := DType;
[L201]               __tmp__Alloc := Alloc;
[L202]               __tmp__balance_ADDR := balance_ADDR;
[L203]               __tmp__M_Ref_int := M_Ref_int;
[L204]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]               __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L206]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]               __tmp__sum_allowance1 := sum_allowance1;
[L208]               __tmp__Length := Length;
[L209]               __tmp__now := now;
[L210]               __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L211]               __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L212]               __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L213]               __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L214]               __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L215]               __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L216]   CALL        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1098]  CALL        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1046]              __var_2 := null;
[L1047]  COND TRUE   !(_to_s161 != null)
[L1048]              revert := true;
[L1098]  RET         call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1099]  COND TRUE   revert
[L216]   RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L217]               assume revert || gas < 0;
[L1859]  RET         call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1903]  RET         call CorralChoice_DATA1TokenERC20(this);

[2020-11-25 13:21:21,004 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:21,004 INFO  L82        PathProgramCache]: Analyzing trace with hash 1239198571, now seen corresponding path program 2 times
[2020-11-25 13:21:21,005 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:21,011 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:21,019 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:21,032 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:21,032 INFO  L82        PathProgramCache]: Analyzing trace with hash -241580516, now seen corresponding path program 1 times
[2020-11-25 13:21:21,033 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:21,036 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:21,039 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:21,047 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 13:21:21,047 INFO  L82        PathProgramCache]: Analyzing trace with hash -1699797774, now seen corresponding path program 1 times
[2020-11-25 13:21:21,048 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 13:21:21,074 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:21,090 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #7: 2473 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
[2020-11-25 13:21:21,668 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification. DAG size of input: 229 DAG size of output: 205
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
[2020-11-25 13:21:22,075 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 19 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #6: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 13:21:22,822 WARN  L188               SmtUtils]: Spent 227.00 ms on a formula simplification. DAG size of input: 228 DAG size of output: 205
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #7: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 13:21:23,437 WARN  L188               SmtUtils]: Spent 379.00 ms on a formula simplification. DAG size of input: 378 DAG size of output: 370
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9181 to 18353
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
[2020-11-25 13:21:23,829 WARN  L188               SmtUtils]: Spent 176.00 ms on a formula simplification. DAG size of input: 247 DAG size of output: 246
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 13:21:23,949 WARN  L188               SmtUtils]: Spent 117.00 ms on a formula simplification that was a NOOP. DAG size: 242
[2020-11-25 13:21:23,967 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:23,987 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 13:21:23,996 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 01:21:23 BasicIcfg
[2020-11-25 13:21:23,996 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 13:21:23,996 INFO  L168              Benchmark]: Toolchain (without parser) took 10284.90 ms. Allocated memory was 1.0 GB in the beginning and 1.8 GB in the end (delta: 806.9 MB). Free memory was 940.6 MB in the beginning and 1.7 GB in the end (delta: -801.5 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,997 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,997 INFO  L168              Benchmark]: Boogie Preprocessor took 74.23 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,998 INFO  L168              Benchmark]: UtopiaSpecLang took 52.11 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,998 INFO  L168              Benchmark]: Boogie Printer took 11.42 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,998 INFO  L168              Benchmark]: RCFGBuilder took 500.76 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,999 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.44 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:23,999 INFO  L168              Benchmark]: BÃ¼chi Program Product took 931.17 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 872.6 MB in the beginning and 918.0 MB in the end (delta: -45.5 MB). Peak memory consumption was 156.4 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:24,000 INFO  L168              Benchmark]: BlockEncodingV2 took 86.43 ms. Allocated memory is still 1.1 GB. Free memory was 918.0 MB in the beginning and 890.4 MB in the end (delta: 27.7 MB). Peak memory consumption was 27.7 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:24,000 INFO  L168              Benchmark]: BuchiAutomizer took 8589.25 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 747.1 MB). Free memory was 890.4 MB in the beginning and 1.7 GB in the end (delta: -851.7 MB). Peak memory consumption was 893.9 MB. Max. memory is 15.3 GB.
[2020-11-25 13:21:24,003 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1622 locations, 2705 edges
  - StatisticsResult: Encoded RCFG
    1606 locations, 2668 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 74.23 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.11 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.42 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 500.76 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 876.1 MB in the end (delta: 53.7 MB). Peak memory consumption was 53.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.44 ms. Allocated memory is still 1.0 GB. Free memory was 876.1 MB in the beginning and 872.6 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 931.17 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 872.6 MB in the beginning and 918.0 MB in the end (delta: -45.5 MB). Peak memory consumption was 156.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 86.43 ms. Allocated memory is still 1.1 GB. Free memory was 918.0 MB in the beginning and 890.4 MB in the end (delta: 27.7 MB). Peak memory consumption was 27.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 8589.25 ms. Allocated memory was 1.1 GB in the beginning and 1.8 GB in the end (delta: 747.1 MB). Free memory was 890.4 MB in the beginning and 1.7 GB in the end (delta: -851.7 MB). Peak memory consumption was 893.9 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    694 locations, 840 edges
  - StatisticsResult: BuchiProgram size
    1622 locations, 2705 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 20 locations. The remainder module has 1334 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 8.5s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 4.3s. Construction of modules took 3.0s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 4 MinimizatonAttempts, 445 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1334 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5611 SDtfs, 4169 SDslu, 9283 SDs, 0 SdLazy, 13487 SolverSat, 807 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 3.0s Time	LassoAnalysisResults: nont1 unkn0 SFLI1 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639964) = (new DATA1TokenERC20)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639963, initialSupply : 115792089237316195423570985008687907853269984665640564039457584007913129639951, tokenName : 115792089237316195423570985008687907853269984665640564039457584007913129639960, tokenSymbol : 115792089237316195423570985008687907853269984665640564039457584007913129639956});
[L140]               havoc __exception;
[L141]               revert := false;
[L142]   COND FALSE  !(__exception)
[L163]   CALL        call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1036]  CALL        call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1004]              assume msgsender_MSG != null;
[L1005]              Balance[this] := 0;
[L1006]              name_DATA1TokenERC20[this] := -1807461670;
[L1007]              symbol_DATA1TokenERC20[this] := -1807461670;
[L1008]              decimals_DATA1TokenERC20[this] := 3;
[L1009]              totalSupply_DATA1TokenERC20[this] := 0;
[L1010]              balanceOf_DATA1TokenERC20[this] := zeroRefintArr();
[L1011]              sum_balanceOf0[this] := 0;
[L1012]              allowance_DATA1TokenERC20[this] := zeroRefRefintArr();
[L1013]              sum_allowance1[this] := 0;
[L1015]              __var_1 := decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1016]              totalSupply_DATA1TokenERC20[this] := nonlinearMul(initialSupply_s83, nonlinearPow(10, decimals_DATA1TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1017]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1018]              balanceOf_DATA1TokenERC20[this][msgsender_MSG] := totalSupply_DATA1TokenERC20[this];
[L1019]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_DATA1TokenERC20[this][msgsender_MSG];
[L1020]              name_DATA1TokenERC20[this] := tokenName_s83;
[L1021]              symbol_DATA1TokenERC20[this] := tokenSymbol_s83;
[L1036]  RET         call DATA1TokenERC20_DATA1TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L1037]  COND FALSE  !(revert)
[L163]   RET         call DATA1TokenERC20_DATA1TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
[L164]               assume !revert && gas >= 0;
[L1899]  RET         call DATA1TokenERC20_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, initialSupply_s83, tokenName_s83, tokenSymbol_s83);
DATA1TokenERC20(115792089237316195423570985008687907853269984665640564039457584007913129639964).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639959, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_DATA1TokenERC200 := true;
[L3]                call_transfer_DATA1TokenERC200 := false;
[L3]                revert := revert_hold;
[L196]              havoc __exception;
[L197]              revert := false;
[L198]   COND TRUE  __exception
[L199]              __tmp__Balance := Balance;
[L200]              __tmp__DType := DType;
[L201]              __tmp__Alloc := Alloc;
[L202]              __tmp__balance_ADDR := balance_ADDR;
[L203]              __tmp__M_Ref_int := M_Ref_int;
[L204]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]              __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L206]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]              __tmp__sum_allowance1 := sum_allowance1;
[L208]              __tmp__Length := Length;
[L209]              __tmp__now := now;
[L210]              __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L211]              __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L212]              __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L213]              __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L214]              __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L215]              __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L216]   CALL       call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1098]  CALL       call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1046]             __var_2 := null;
[L1047]  COND TRUE  !(_to_s161 != null)
[L1048]             revert := true;
[L1098]  RET        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1099]  COND TRUE  revert
[L216]   RET        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L217]              assume revert || gas < 0;
[L1859]  RET        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);

Loop:
DATA1TokenERC20(115792089237316195423570985008687907853269984665640564039457584007913129639964).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639957, _to : 0, _value : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s180) && msgsender_MSG != _to_s180) && _value_s180 <= balanceOf_DATA1TokenERC20[this][msgsender_MSG]) && balanceOf_DATA1TokenERC20[this][_to_s180] + _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s180 >= 0) && _value_s180 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][_to_s180] >= 0) && balanceOf_DATA1TokenERC20[this][_to_s180] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] >= 0) && balanceOf_DATA1TokenERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_DATA1TokenERC200 := true;
[L3]                call_transfer_DATA1TokenERC200 := false;
[L3]                revert := revert_hold;
[L196]              havoc __exception;
[L197]              revert := false;
[L198]   COND TRUE  __exception
[L199]              __tmp__Balance := Balance;
[L200]              __tmp__DType := DType;
[L201]              __tmp__Alloc := Alloc;
[L202]              __tmp__balance_ADDR := balance_ADDR;
[L203]              __tmp__M_Ref_int := M_Ref_int;
[L204]              __tmp__sum_balanceOf0 := sum_balanceOf0;
[L205]              __tmp__alloc_allowance_DATA1TokenERC20_lvl0 := alloc_allowance_DATA1TokenERC20_lvl0;
[L206]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L207]              __tmp__sum_allowance1 := sum_allowance1;
[L208]              __tmp__Length := Length;
[L209]              __tmp__now := now;
[L210]              __tmp__name_DATA1TokenERC20 := name_DATA1TokenERC20;
[L211]              __tmp__symbol_DATA1TokenERC20 := symbol_DATA1TokenERC20;
[L212]              __tmp__decimals_DATA1TokenERC20 := decimals_DATA1TokenERC20;
[L213]              __tmp__totalSupply_DATA1TokenERC20 := totalSupply_DATA1TokenERC20;
[L214]              __tmp__balanceOf_DATA1TokenERC20 := balanceOf_DATA1TokenERC20;
[L215]              __tmp__allowance_DATA1TokenERC20 := allowance_DATA1TokenERC20;
[L216]   CALL       call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L1098]  CALL       call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1046]             __var_2 := null;
[L1047]  COND TRUE  !(_to_s161 != null)
[L1048]             revert := true;
[L1098]  RET        call _transfer~address~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, _to_s180, _value_s180);
[L1099]  COND TRUE  revert
[L216]   RET        call success_s180 := transfer~address~uint256_DATA1TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);
[L217]              assume revert || gas < 0;
[L1859]  RET        call success_s180 := transfer~address~uint256_DATA1TokenERC20(this, msgsender_MSG, msgvalue_MSG, _to_s180, _value_s180);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
