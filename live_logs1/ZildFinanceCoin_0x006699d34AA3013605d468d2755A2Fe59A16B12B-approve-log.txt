This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 10:51:23,261 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 10:51:23,262 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 10:51:23,275 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 10:51:23,275 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 10:51:23,276 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 10:51:23,277 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 10:51:23,278 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 10:51:23,280 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 10:51:23,281 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 10:51:23,281 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 10:51:23,282 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 10:51:23,282 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 10:51:23,283 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 10:51:23,284 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 10:51:23,285 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 10:51:23,285 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 10:51:23,287 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 10:51:23,288 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 10:51:23,289 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 10:51:23,290 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 10:51:23,291 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 10:51:23,292 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 10:51:23,293 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 10:51:23,293 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 10:51:23,293 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 10:51:23,293 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 10:51:23,294 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 10:51:23,294 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 10:51:23,294 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 10:51:23,295 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 10:51:23,295 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 10:51:23,296 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 10:51:23,296 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 10:51:23,297 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 10:51:23,297 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 10:51:23,298 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 10:51:23,298 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 10:51:23,298 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 10:51:23,299 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 10:51:23,299 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 10:51:23,300 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 10:51:23,308 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 10:51:23,308 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 10:51:23,308 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 10:51:23,309 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 10:51:23,309 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 10:51:23,309 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 10:51:23,309 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 10:51:23,309 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 10:51:23,309 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 10:51:23,309 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 10:51:23,309 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 10:51:23,310 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 10:51:23,310 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 10:51:23,311 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 10:51:23,311 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 10:51:23,311 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 10:51:23,311 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 10:51:23,335 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 10:51:23,349 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 10:51:23,352 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 10:51:23,353 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 10:51:23,353 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 10:51:23,354 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl
[2020-11-25 10:51:23,354 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl'
[2020-11-25 10:51:23,449 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 10:51:23,450 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 10:51:23,450 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 10:51:23,450 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 10:51:23,451 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 10:51:23,467 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,469 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,512 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,513 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,540 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,550 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,559 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,571 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 10:51:23,571 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 10:51:23,571 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 10:51:23,574 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 10:51:23,577 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/1) ...
[2020-11-25 10:51:23,599 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZildFinanceCoin.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZildFinanceCoin.approve(spender, value), return == true && _allowances_ZildFinanceCoin[this][msg.sender][spender] == value &&  totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this]) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this]) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2]) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this]) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this]) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this]) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this]) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this]) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 10:51:23,605 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZildFinanceCoin.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZildFinanceCoin.approve(spender, value), return == true && _allowances_ZildFinanceCoin[this][msg.sender][spender] == value &&  totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this]) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this]) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2]) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this]) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this]) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this]) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this]) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this]) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 10:51:23,612 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZildFinanceCoin.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZildFinanceCoin.approve(spender, value), return == true && _allowances_ZildFinanceCoin[this][msg.sender][spender] == value &&  totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this]) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this]) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2]) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this]) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this]) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this]) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this]) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this]) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 10:51:23,619 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=to_s742 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[to_s742,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]
[2020-11-25 10:51:23,622 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _allowances_ZildFinanceCoin[this][msg.sender][to_s742]==amount_s742 ) && totalSupply_ZildFinanceCoin[this]==( old(totalSupply_ZildFinanceCoin[this]) ) ) && _balances_ZildFinanceCoin[this]==( old(_balances_ZildFinanceCoin[this]) ) ) && _allowances_ZildFinanceCoin[this][p1][p2]==( old(_allowances_ZildFinanceCoin[this][p1][p2]) ) ) && allowBurn_ZildFinanceCoin[this]==( old(allowBurn_ZildFinanceCoin[this]) ) ) && tokenDestroyed_ZildFinanceCoin[this]==( old(tokenDestroyed_ZildFinanceCoin[this]) ) ) && founder_ZildFinanceCoin[this]==( old(founder_ZildFinanceCoin[this]) ) ) && founderLockupStartTime_ZildFinanceCoin[this]==( old(founderLockupStartTime_ZildFinanceCoin[this]) ) ) && founderReleasedAmount_ZildFinanceCoin[this]==( old(founderReleasedAmount_ZildFinanceCoin[this]) ) ) && frozenAccount_ZildFinanceCoin[this]==( old(frozenAccount_ZildFinanceCoin[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_ZildFinanceCoin>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[to_s742,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],IdentifierExpression[amount_s742,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowBurn_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowBurn_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[tokenDestroyed_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[tokenDestroyed_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[founder_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[founder_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[founderLockupStartTime_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[founderLockupStartTime_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[founderReleasedAmount_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[founderReleasedAmount_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_ZildFinanceCoin,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_ZildFinanceCoin>]]]]]]
[2020-11-25 10:51:23,628 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZildFinanceCoin.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(ZildFinanceCoin.approve(spender, value), return == true && _allowances_ZildFinanceCoin[this][msg.sender][spender] == value &&  totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this]) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this]) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2]) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this]) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this]) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this]) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this]) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this]) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-25 10:51:23,629 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_ZildFinanceCoin0) ==> ( <>AP(success_approve_ZildFinanceCoin0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 10:51:23,639 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:51:23 PropertyContainer
[2020-11-25 10:51:23,639 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 10:51:23,640 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 10:51:23,640 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 10:51:23,640 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 10:51:23,641 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/2) ...
[2020-11-25 10:51:23,641 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 10:51:23,641 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 10:51:23,660 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:51:23" (2/2) ...
[2020-11-25 10:51:23,660 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 10:51:23,660 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 10:51:23,660 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 10:51:23,660 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 10:51:23,661 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/2) ...
[2020-11-25 10:51:23,714 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 10:51:23,714 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 10:51:23,714 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 10:51:23,715 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,715 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 10:51:23,716 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 10:51:23,716 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 10:51:23,716 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 10:51:23,716 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 10:51:23,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 10:51:23,717 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-25 10:51:23,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-25 10:51:23,717 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 10:51:23,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 10:51:23,717 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 10:51:23,717 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 10:51:23,717 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin
[2020-11-25 10:51:23,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin
[2020-11-25 10:51:23,718 INFO  L130     BoogieDeclarations]: Found specification of procedure release_ZildFinanceCoin
[2020-11-25 10:51:23,718 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,719 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZildFinanceCoin
[2020-11-25 10:51:23,719 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,720 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,720 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_ZildFinanceCoin
[2020-11-25 10:51:23,720 INFO  L130     BoogieDeclarations]: Found specification of procedure setFurnace~address_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFurnace~address_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZildFinanceCoin
[2020-11-25 10:51:23,721 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure allowBurn_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowBurn_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenDestroyed_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenDestroyed_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_ZildFinanceCoin
[2020-11-25 10:51:23,722 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L130     BoogieDeclarations]: Found specification of procedure MarketingAllocation_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure MarketingAllocation_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L130     BoogieDeclarations]: Found specification of procedure FurnaceAllocation_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure FurnaceAllocation_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_ZildFinanceCoin
[2020-11-25 10:51:23,723 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ZildFinanceCoin
[2020-11-25 10:51:23,724 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ZildFinanceCoin
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZildFinanceCoin
[2020-11-25 10:51:23,724 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,725 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 10:51:23,726 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__fail
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin__success
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure ZildFinanceCoin_ZildFinanceCoin__fail
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure release_ZildFinanceCoin__success
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure release_ZildFinanceCoin__fail
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,727 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,728 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure changeFounder~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure setMinter~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure setFurnace~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure setFurnace~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,729 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ZildFinanceCoin__success
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ZildFinanceCoin__fail
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZildFinanceCoin__success
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZildFinanceCoin__fail
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZildFinanceCoin__success
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZildFinanceCoin__fail
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZildFinanceCoin__success
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZildFinanceCoin__fail
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZildFinanceCoin__success
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZildFinanceCoin__fail
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure allowBurn_ZildFinanceCoin__success
[2020-11-25 10:51:23,730 INFO  L130     BoogieDeclarations]: Found specification of procedure allowBurn_ZildFinanceCoin__fail
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenDestroyed_ZildFinanceCoin__success
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenDestroyed_ZildFinanceCoin__fail
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_ZildFinanceCoin__success
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderAllocation_ZildFinanceCoin__fail
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_ZildFinanceCoin__success
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupAmount_ZildFinanceCoin__fail
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_ZildFinanceCoin__success
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderLockupCliff_ZildFinanceCoin__fail
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_ZildFinanceCoin__success
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseInterval_ZildFinanceCoin__fail
[2020-11-25 10:51:23,731 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_ZildFinanceCoin__success
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure FounderReleaseAmount_ZildFinanceCoin__fail
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure MarketingAllocation_ZildFinanceCoin__success
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure MarketingAllocation_ZildFinanceCoin__fail
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure FurnaceAllocation_ZildFinanceCoin__success
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure FurnaceAllocation_ZildFinanceCoin__fail
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_ZildFinanceCoin__success
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure founder_ZildFinanceCoin__fail
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_ZildFinanceCoin__success
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure founderLockupStartTime_ZildFinanceCoin__fail
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_ZildFinanceCoin__success
[2020-11-25 10:51:23,732 INFO  L130     BoogieDeclarations]: Found specification of procedure founderReleasedAmount_ZildFinanceCoin__fail
[2020-11-25 10:51:23,733 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,733 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,733 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 10:51:23,733 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 10:51:23,733 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 10:51:23,733 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 10:51:23,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 10:51:23,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 10:51:23,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 10:51:23,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 10:51:23,733 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,734 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 10:51:23,735 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__fail
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success
[2020-11-25 10:51:23,736 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin__fail
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZildFinanceCoin_ZildFinanceCoin__success
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_ZildFinanceCoin__fail
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure release_ZildFinanceCoin__success
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,737 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ZildFinanceCoin__fail
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ZildFinanceCoin__success
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeFounder~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,738 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setMinter~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFurnace~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFurnace~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ZildFinanceCoin__fail
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ZildFinanceCoin__success
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZildFinanceCoin__fail
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZildFinanceCoin__success
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZildFinanceCoin__fail
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZildFinanceCoin__success
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZildFinanceCoin__fail
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZildFinanceCoin__success
[2020-11-25 10:51:23,739 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZildFinanceCoin__fail
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZildFinanceCoin__success
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowBurn_ZildFinanceCoin__fail
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowBurn_ZildFinanceCoin__success
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenDestroyed_ZildFinanceCoin__fail
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenDestroyed_ZildFinanceCoin__success
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_ZildFinanceCoin__fail
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderAllocation_ZildFinanceCoin__success
[2020-11-25 10:51:23,740 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_ZildFinanceCoin__fail
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupAmount_ZildFinanceCoin__success
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_ZildFinanceCoin__fail
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderLockupCliff_ZildFinanceCoin__success
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_ZildFinanceCoin__fail
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseInterval_ZildFinanceCoin__success
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_ZildFinanceCoin__fail
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FounderReleaseAmount_ZildFinanceCoin__success
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure MarketingAllocation_ZildFinanceCoin__fail
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure MarketingAllocation_ZildFinanceCoin__success
[2020-11-25 10:51:23,741 INFO  L138     BoogieDeclarations]: Found implementation of procedure FurnaceAllocation_ZildFinanceCoin__fail
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure FurnaceAllocation_ZildFinanceCoin__success
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_ZildFinanceCoin__fail
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure founder_ZildFinanceCoin__success
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_ZildFinanceCoin__fail
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderLockupStartTime_ZildFinanceCoin__success
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_ZildFinanceCoin__fail
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure founderReleasedAmount_ZildFinanceCoin__success
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ZildFinanceCoin__fail
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ZildFinanceCoin__success
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 10:51:23,742 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 10:51:23,743 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZildFinanceCoin
[2020-11-25 10:51:23,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 10:51:23,744 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 10:51:23,744 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 10:51:23,901 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 10:51:23,901 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 10:51:23,902 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 10:51:24,223 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 10:51:24,456 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 10:51:24,457 INFO  L286             CfgBuilder]: Removed 4 assue(true) statements.
[2020-11-25 10:51:24,459 INFO  L202        PluginConnector]: Adding new model ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:51:24 BoogieIcfgContainer
[2020-11-25 10:51:24,459 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:51:23" (2/2) ...
[2020-11-25 10:51:24,459 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 10:51:24,459 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3aebec02 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:51:24, skipping insertion in model container
[2020-11-25 10:51:24,459 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 10:51:24,459 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 10:51:24,460 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 10:51:24,461 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 10:51:24,461 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/3) ...
[2020-11-25 10:51:24,461 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@ebc4d86 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:51:24, skipping insertion in model container
[2020-11-25 10:51:24,462 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:51:23" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 10:51:24,495 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:51:24 NWAContainer
[2020-11-25 10:51:24,496 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 10:51:24,496 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 10:51:24,496 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 10:51:24,497 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 10:51:24,497 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:51:24" (3/4) ...
[2020-11-25 10:51:24,498 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@1487dece and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:51:24, skipping insertion in model container
[2020-11-25 10:51:24,498 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:51:24" (4/4) ...
[2020-11-25 10:51:24,501 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 10:51:24,505 INFO  L110   BuchiProductObserver]: Initial RCFG 2557 locations, 3156 edges
[2020-11-25 10:51:24,506 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 10:51:24,517 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 10:51:25,775 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 10:51:25,782 INFO  L110   BuchiProductObserver]: BuchiProgram size 5980 locations, 10100 edges
[2020-11-25 10:51:25,782 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:51:25 BoogieIcfgContainer
[2020-11-25 10:51:25,782 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 10:51:25,783 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 10:51:25,783 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 10:51:25,784 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 10:51:25,784 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:51:25" (1/1) ...
[2020-11-25 10:51:25,882 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__fail(this, msgsender_MSG, msgvalue_MSG, a_s162, b_s162, -1417195012);
[2020-11-25 10:51:25,883 WARN  L196         IcfgDuplicator]: Creating raw copy for unreachable call because return is reachable in graph view: call __var_3 := mod~uint256~uint256~string_SafeMath__success(this, msgsender_MSG, msgvalue_MSG, a_s162, b_s162, -1417195012);
[2020-11-25 10:51:25,938 INFO  L313           BlockEncoder]: Initial Icfg 5980 locations, 10100 edges
[2020-11-25 10:51:25,939 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 10:51:25,939 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 10:51:25,939 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 10:51:25,940 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 10:51:25,950 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 11 locations because of local infeasibility
[2020-11-25 10:51:25,959 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 10:51:25,968 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 10:51:25,973 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 10:51:25,976 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 10:51:25,977 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 10:51:25,979 INFO  L313           BlockEncoder]: Encoded RCFG 5942 locations, 10003 edges
[2020-11-25 10:51:25,980 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 10:51:25 BasicIcfg
[2020-11-25 10:51:25,980 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 10:51:25,980 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 10:51:25,980 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 10:51:25,982 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 10:51:25,982 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:51:25,982 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 10:51:23" (1/6) ...
[2020-11-25 10:51:25,983 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3126014d and model type ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 10:51:25, skipping insertion in model container
[2020-11-25 10:51:25,983 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:51:25,983 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 10:51:23" (2/6) ...
[2020-11-25 10:51:25,984 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3126014d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 10:51:25, skipping insertion in model container
[2020-11-25 10:51:25,984 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:51:25,984 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 10:51:24" (3/6) ...
[2020-11-25 10:51:25,984 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3126014d and model type ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 10:51:25, skipping insertion in model container
[2020-11-25 10:51:25,984 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:51:25,984 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 10:51:24" (4/6) ...
[2020-11-25 10:51:25,984 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3126014d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 10:51:25, skipping insertion in model container
[2020-11-25 10:51:25,984 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:51:25,984 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 10:51:25" (5/6) ...
[2020-11-25 10:51:25,984 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@3126014d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 10:51:25, skipping insertion in model container
[2020-11-25 10:51:25,984 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 10:51:25,984 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 10:51:25" (6/6) ...
[2020-11-25 10:51:25,985 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZildFinanceCoin_0x006699d34AA3013605d468d2755A2Fe59A16B12B_approve.bpl_BEv2
[2020-11-25 10:51:26,014 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 10:51:26,015 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 10:51:26,015 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 10:51:26,015 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 10:51:26,015 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 10:51:26,015 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 10:51:26,015 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 10:51:26,015 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 10:51:26,015 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 10:51:26,052 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5942 states.
[2020-11-25 10:51:26,112 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:51:26,113 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:26,113 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:26,120 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:26,120 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:26,120 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 10:51:26,120 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5942 states.
[2020-11-25 10:51:26,144 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:51:26,144 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:26,144 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:26,146 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:26,146 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZildFinanceCoin0 := false;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6479]              assume null == 0;
[L6480]  CALL        call this := FreshRefGenerator__success();
[L3694]              havoc newRef;
[L3695]              assume Alloc[newRef] == false;
[L3696]              Alloc[newRef] := true;
[L3697]              assume newRef != null;
[L6480]  RET         call this := FreshRefGenerator__success();
[L6481]              assume now >= 0;
[L6482]              assume DType[this] == ZildFinanceCoin;
[L6483]              assume msgvalue_MSG == 0;
[L6484]              gas := gas - 53000;
[L6485]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND TRUE   revert
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6486]              assume !revert && gas >= 0;

Loop:
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND TRUE   choice == 31
[L6280]              gas := gas - 21000;
[L6281]  COND FALSE  !(gas >= 0)
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:51:26,160 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:26,160 INFO  L82        PathProgramCache]: Analyzing trace with hash 1697079150, now seen corresponding path program 1 times
[2020-11-25 10:51:26,163 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:26,190 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:51:26,234 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:51:26,236 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:51:26,236 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 10:51:26,586 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:51:26,600 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 10:51:26,601 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 10:51:26,602 INFO  L87              Difference]: Start difference. First operand 5942 states. Second operand 3 states.
[2020-11-25 10:51:26,856 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:51:26,856 INFO  L93              Difference]: Finished difference Result 6396 states and 10329 transitions.
[2020-11-25 10:51:26,856 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 10:51:26,857 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6396 states and 10329 transitions.
[2020-11-25 10:51:26,899 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 10:51:26,948 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6396 states to 6396 states and 10329 transitions.
[2020-11-25 10:51:26,948 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 15
[2020-11-25 10:51:26,954 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1928
[2020-11-25 10:51:26,955 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6396 states and 10329 transitions.
[2020-11-25 10:51:26,974 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:51:26,974 INFO  L728         BuchiCegarLoop]: Abstraction has 6396 states and 10329 transitions.
[2020-11-25 10:51:26,991 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6396 states and 10329 transitions.
[2020-11-25 10:51:27,084 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6396 to 5518.
[2020-11-25 10:51:27,085 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5518 states.
[2020-11-25 10:51:27,096 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5518 states to 5518 states and 8763 transitions.
[2020-11-25 10:51:27,097 INFO  L751         BuchiCegarLoop]: Abstraction has 5518 states and 8763 transitions.
[2020-11-25 10:51:27,097 INFO  L631         BuchiCegarLoop]: Abstraction has 5518 states and 8763 transitions.
[2020-11-25 10:51:27,097 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 10:51:27,097 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5518 states and 8763 transitions.
[2020-11-25 10:51:27,112 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:51:27,112 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:27,112 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:27,113 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:27,113 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZildFinanceCoin0 := false;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6479]              assume null == 0;
[L6480]  CALL        call this := FreshRefGenerator__success();
[L3694]              havoc newRef;
[L3695]              assume Alloc[newRef] == false;
[L3696]              Alloc[newRef] := true;
[L3697]              assume newRef != null;
[L6480]  RET         call this := FreshRefGenerator__success();
[L6481]              assume now >= 0;
[L6482]              assume DType[this] == ZildFinanceCoin;
[L6483]              assume msgvalue_MSG == 0;
[L6484]              gas := gas - 53000;
[L6485]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4190]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]              assume msgsender_MSG != null;
[L4026]              Balance[this] := 0;
[L4040]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(revert)
[L4190]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4191]  COND FALSE  !(revert)
[L4194]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4110]              assume msgsender_MSG != null;
[L4111]              Balance[this] := 0;
[L4112]              name_ZildFinanceCoin[this] := -1602093786;
[L4113]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4114]              decimals_ZildFinanceCoin[this] := 18;
[L4115]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4116]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4117]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4118]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4119]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4120]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4121]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4122]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4123]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4124]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4125]              __var_9 := null;
[L4126]              founder_ZildFinanceCoin[this] := null;
[L4127]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4128]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4129]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4130]              sum__balances0[this] := 0;
[L4131]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4132]              sum__allowances1[this] := 0;
[L4133]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4135]              __var_5 := null;
[L4136]  COND TRUE   !(_founder_s499 != null)
[L4137]              revert := true;
[L4194]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4195]  COND FALSE  !(revert)
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6486]              assume !revert && gas >= 0;

Loop:
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND TRUE   choice == 31
[L6280]              gas := gas - 21000;
[L6281]  COND FALSE  !(gas >= 0)
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:51:27,117 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:27,117 INFO  L82        PathProgramCache]: Analyzing trace with hash -1194306076, now seen corresponding path program 1 times
[2020-11-25 10:51:27,118 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:27,131 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:51:27,148 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:51:27,149 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:51:27,149 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 10:51:27,150 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:51:27,150 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 10:51:27,150 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 10:51:27,150 INFO  L87              Difference]: Start difference. First operand 5518 states and 8763 transitions. cyclomatic complexity: 3247 Second operand 4 states.
[2020-11-25 10:51:27,582 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:51:27,582 INFO  L93              Difference]: Finished difference Result 5282 states and 5859 transitions.
[2020-11-25 10:51:27,583 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 10:51:27,583 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5282 states and 5859 transitions.
[2020-11-25 10:51:27,595 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:51:27,609 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5282 states to 5282 states and 5859 transitions.
[2020-11-25 10:51:27,609 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1591
[2020-11-25 10:51:27,610 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1591
[2020-11-25 10:51:27,610 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5282 states and 5859 transitions.
[2020-11-25 10:51:27,615 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:51:27,615 INFO  L728         BuchiCegarLoop]: Abstraction has 5282 states and 5859 transitions.
[2020-11-25 10:51:27,620 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5282 states and 5859 transitions.
[2020-11-25 10:51:27,660 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5282 to 5282.
[2020-11-25 10:51:27,660 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5282 states.
[2020-11-25 10:51:27,667 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5282 states to 5282 states and 5859 transitions.
[2020-11-25 10:51:27,667 INFO  L751         BuchiCegarLoop]: Abstraction has 5282 states and 5859 transitions.
[2020-11-25 10:51:27,667 INFO  L631         BuchiCegarLoop]: Abstraction has 5282 states and 5859 transitions.
[2020-11-25 10:51:27,667 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 10:51:27,667 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5282 states and 5859 transitions.
[2020-11-25 10:51:27,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:51:27,675 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:27,675 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:27,677 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:27,677 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZildFinanceCoin0 := false;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6479]              assume null == 0;
[L6480]  CALL        call this := FreshRefGenerator__success();
[L3694]              havoc newRef;
[L3695]              assume Alloc[newRef] == false;
[L3696]              Alloc[newRef] := true;
[L3697]              assume newRef != null;
[L6480]  RET         call this := FreshRefGenerator__success();
[L6481]              assume now >= 0;
[L6482]              assume DType[this] == ZildFinanceCoin;
[L6483]              assume msgvalue_MSG == 0;
[L6484]              gas := gas - 53000;
[L6485]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4190]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]              assume msgsender_MSG != null;
[L4026]              Balance[this] := 0;
[L4040]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(revert)
[L4190]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4191]  COND FALSE  !(revert)
[L4194]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4110]              assume msgsender_MSG != null;
[L4111]              Balance[this] := 0;
[L4112]              name_ZildFinanceCoin[this] := -1602093786;
[L4113]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4114]              decimals_ZildFinanceCoin[this] := 18;
[L4115]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4116]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4117]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4118]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4119]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4120]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4121]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4122]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4123]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4124]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4125]              __var_9 := null;
[L4126]              founder_ZildFinanceCoin[this] := null;
[L4127]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4128]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4129]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4130]              sum__balances0[this] := 0;
[L4131]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4132]              sum__allowances1[this] := 0;
[L4133]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4135]              __var_5 := null;
[L4136]  COND TRUE   !(_founder_s499 != null)
[L4137]              revert := true;
[L4194]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4195]  COND FALSE  !(revert)
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6486]              assume !revert && gas >= 0;
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND FALSE  !(__exception)
[L1222]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4487]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4647]              __var_22 := null;
[L4648]  COND TRUE   !(from_s903 != null)
[L4649]              revert := true;
[L4487]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4488]  COND TRUE   revert
[L1222]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1223]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _allowances_ZildFinanceCoin[this][msgsender_MSG][to_s742] == amount_s742) && totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this])) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this])) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2])) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this])) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this])) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this])) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this])) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this])) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND FALSE  !(__exception)
[L1222]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4487]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4647]              __var_22 := null;
[L4648]  COND TRUE   !(from_s903 != null)
[L4649]              revert := true;
[L4487]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4488]  COND TRUE   revert
[L1222]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1223]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _allowances_ZildFinanceCoin[this][msgsender_MSG][to_s742] == amount_s742) && totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this])) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this])) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2])) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this])) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this])) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this])) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this])) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this])) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:51:27,681 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:27,681 INFO  L82        PathProgramCache]: Analyzing trace with hash 1073137346, now seen corresponding path program 1 times
[2020-11-25 10:51:27,681 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:27,693 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:51:27,737 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:51:27,738 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:51:27,738 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 10:51:27,738 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:51:27,738 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 10:51:27,738 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 10:51:27,739 INFO  L87              Difference]: Start difference. First operand 5282 states and 5859 transitions. cyclomatic complexity: 579 Second operand 3 states.
[2020-11-25 10:51:27,846 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:51:27,846 INFO  L93              Difference]: Finished difference Result 6148 states and 6803 transitions.
[2020-11-25 10:51:27,846 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 10:51:27,846 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6148 states and 6803 transitions.
[2020-11-25 10:51:27,862 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 10:51:27,881 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6148 states to 5842 states and 6431 transitions.
[2020-11-25 10:51:27,881 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1775
[2020-11-25 10:51:27,882 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1829
[2020-11-25 10:51:27,883 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5842 states and 6431 transitions.
[2020-11-25 10:51:27,889 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:51:27,889 INFO  L728         BuchiCegarLoop]: Abstraction has 5842 states and 6431 transitions.
[2020-11-25 10:51:27,894 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5842 states and 6431 transitions.
[2020-11-25 10:51:27,933 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5842 to 5068.
[2020-11-25 10:51:27,933 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5068 states.
[2020-11-25 10:51:27,938 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5068 states to 5068 states and 5441 transitions.
[2020-11-25 10:51:27,938 INFO  L751         BuchiCegarLoop]: Abstraction has 5068 states and 5441 transitions.
[2020-11-25 10:51:27,938 INFO  L631         BuchiCegarLoop]: Abstraction has 5068 states and 5441 transitions.
[2020-11-25 10:51:27,939 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 10:51:27,939 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5068 states and 5441 transitions.
[2020-11-25 10:51:27,946 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 10:51:27,946 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:27,946 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:27,947 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:27,948 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZildFinanceCoin0 := false;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6479]              assume null == 0;
[L6480]  CALL        call this := FreshRefGenerator__success();
[L3694]              havoc newRef;
[L3695]              assume Alloc[newRef] == false;
[L3696]              Alloc[newRef] := true;
[L3697]              assume newRef != null;
[L6480]  RET         call this := FreshRefGenerator__success();
[L6481]              assume now >= 0;
[L6482]              assume DType[this] == ZildFinanceCoin;
[L6483]              assume msgvalue_MSG == 0;
[L6484]              gas := gas - 53000;
[L6485]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4190]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]              assume msgsender_MSG != null;
[L4026]              Balance[this] := 0;
[L4040]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(revert)
[L4190]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4191]  COND FALSE  !(revert)
[L4194]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4110]              assume msgsender_MSG != null;
[L4111]              Balance[this] := 0;
[L4112]              name_ZildFinanceCoin[this] := -1602093786;
[L4113]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4114]              decimals_ZildFinanceCoin[this] := 18;
[L4115]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4116]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4117]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4118]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4119]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4120]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4121]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4122]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4123]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4124]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4125]              __var_9 := null;
[L4126]              founder_ZildFinanceCoin[this] := null;
[L4127]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4128]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4129]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4130]              sum__balances0[this] := 0;
[L4131]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4132]              sum__allowances1[this] := 0;
[L4133]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4135]              __var_5 := null;
[L4136]  COND FALSE  !(!(_founder_s499 != null))
[L4140]              __var_6 := null;
[L4141]  COND FALSE  !(!(_marketing_s499 != null))
[L4145]              founder_ZildFinanceCoin[this] := _founder_s499;
[L4146]              founderLockupStartTime_ZildFinanceCoin[this] := now;
[L4147]              __var_7 := this;
[L4148]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][this];
[L4149]              _balances_ZildFinanceCoin[this][this] := totalSupply_ZildFinanceCoin[this];
[L4150]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][this];
[L4151]              __var_8 := this;
[L4152]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4602]              __var_19 := null;
[L4603]  COND FALSE  !(!(from_s861 != null))
[L4607]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3793]  COND FALSE  !(!(b_s69 <= a_s69))
[L3797]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3798]              __ret_0_ := c_s69;
[L4607]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4608]  COND FALSE  !(revert)
[L4611]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4612]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4613]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4614]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3747]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3748]  COND FALSE  !(!(c_s26 >= a_s26))
[L3752]              __ret_0_ := c_s26;
[L4614]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4615]  COND FALSE  !(revert)
[L4618]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4619]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4620]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4621]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4152]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4153]  COND FALSE  !(revert)
[L4194]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4195]  COND FALSE  !(revert)
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6486]              assume !revert && gas >= 0;
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND FALSE  !(__exception)
[L1222]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4487]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4647]              __var_22 := null;
[L4648]  COND FALSE  !(!(from_s903 != null))
[L4652]              __var_23 := null;
[L4653]  COND FALSE  !(!(to_s903 != null))
[L4657]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4658]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4659]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4660]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4487]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4488]  COND FALSE  !(revert)
[L4491]              __ret_0_ := true;
[L1222]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1223]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _allowances_ZildFinanceCoin[this][msgsender_MSG][to_s742] == amount_s742) && totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this])) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this])) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2])) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this])) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this])) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this])) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this])) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this])) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND FALSE  !(__exception)
[L1222]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4487]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4647]              __var_22 := null;
[L4648]  COND FALSE  !(!(from_s903 != null))
[L4652]              __var_23 := null;
[L4653]  COND FALSE  !(!(to_s903 != null))
[L4657]              sum__allowances1[from_s903] := sum__allowances1[from_s903] - _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4658]              _allowances_ZildFinanceCoin[this][from_s903][to_s903] := amount_s903;
[L4659]              sum__allowances1[from_s903] := sum__allowances1[from_s903] + _allowances_ZildFinanceCoin[this][from_s903][to_s903];
[L4660]              assert { :EventEmitted "Approval_ZildFinanceCoin" } true;
[L4487]  RET         call _approve~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4488]  COND FALSE  !(revert)
[L4491]              __ret_0_ := true;
[L1222]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1223]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _allowances_ZildFinanceCoin[this][msgsender_MSG][to_s742] == amount_s742) && totalSupply_ZildFinanceCoin[this] == old(totalSupply_ZildFinanceCoin[this])) && _balances_ZildFinanceCoin[this] == old(_balances_ZildFinanceCoin[this])) && _allowances_ZildFinanceCoin[this][p1][p2] == old(_allowances_ZildFinanceCoin[this][p1][p2])) && allowBurn_ZildFinanceCoin[this] == old(allowBurn_ZildFinanceCoin[this])) && tokenDestroyed_ZildFinanceCoin[this] == old(tokenDestroyed_ZildFinanceCoin[this])) && founder_ZildFinanceCoin[this] == old(founder_ZildFinanceCoin[this])) && founderLockupStartTime_ZildFinanceCoin[this] == old(founderLockupStartTime_ZildFinanceCoin[this])) && founderReleasedAmount_ZildFinanceCoin[this] == old(founderReleasedAmount_ZildFinanceCoin[this])) && frozenAccount_ZildFinanceCoin[this] == old(frozenAccount_ZildFinanceCoin[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:51:27,951 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:27,951 INFO  L82        PathProgramCache]: Analyzing trace with hash -634380344, now seen corresponding path program 1 times
[2020-11-25 10:51:27,952 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:28,000 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:51:28,165 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:51:28,165 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:51:28,165 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-25 10:51:28,166 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:51:28,166 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-25 10:51:28,166 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=27, Invalid=155, Unknown=0, NotChecked=0, Total=182
[2020-11-25 10:51:28,166 INFO  L87              Difference]: Start difference. First operand 5068 states and 5441 transitions. cyclomatic complexity: 375 Second operand 14 states.
[2020-11-25 10:51:30,889 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:51:30,889 INFO  L93              Difference]: Finished difference Result 5207 states and 5602 transitions.
[2020-11-25 10:51:30,890 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 14 states. 
[2020-11-25 10:51:30,890 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5207 states and 5602 transitions.
[2020-11-25 10:51:30,899 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 6
[2020-11-25 10:51:30,911 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5207 states to 5207 states and 5602 transitions.
[2020-11-25 10:51:30,911 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1666
[2020-11-25 10:51:30,913 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1666
[2020-11-25 10:51:30,913 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5207 states and 5602 transitions.
[2020-11-25 10:51:30,916 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:51:30,916 INFO  L728         BuchiCegarLoop]: Abstraction has 5207 states and 5602 transitions.
[2020-11-25 10:51:30,920 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5207 states and 5602 transitions.
[2020-11-25 10:51:30,952 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5207 to 5162.
[2020-11-25 10:51:30,952 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5162 states.
[2020-11-25 10:51:30,958 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5162 states to 5162 states and 5548 transitions.
[2020-11-25 10:51:30,958 INFO  L751         BuchiCegarLoop]: Abstraction has 5162 states and 5548 transitions.
[2020-11-25 10:51:30,958 INFO  L631         BuchiCegarLoop]: Abstraction has 5162 states and 5548 transitions.
[2020-11-25 10:51:30,958 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 10:51:30,958 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5162 states and 5548 transitions.
[2020-11-25 10:51:30,963 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 10:51:30,963 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:30,963 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:30,964 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:30,964 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZildFinanceCoin0 := false;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6479]              assume null == 0;
[L6480]  CALL        call this := FreshRefGenerator__success();
[L3694]              havoc newRef;
[L3695]              assume Alloc[newRef] == false;
[L3696]              Alloc[newRef] := true;
[L3697]              assume newRef != null;
[L6480]  RET         call this := FreshRefGenerator__success();
[L6481]              assume now >= 0;
[L6482]              assume DType[this] == ZildFinanceCoin;
[L6483]              assume msgvalue_MSG == 0;
[L6484]              gas := gas - 53000;
[L6485]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4190]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]              assume msgsender_MSG != null;
[L4026]              Balance[this] := 0;
[L4040]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(revert)
[L4190]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4191]  COND FALSE  !(revert)
[L4194]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4110]              assume msgsender_MSG != null;
[L4111]              Balance[this] := 0;
[L4112]              name_ZildFinanceCoin[this] := -1602093786;
[L4113]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4114]              decimals_ZildFinanceCoin[this] := 18;
[L4115]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4116]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4117]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4118]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4119]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4120]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4121]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4122]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4123]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4124]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4125]              __var_9 := null;
[L4126]              founder_ZildFinanceCoin[this] := null;
[L4127]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4128]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4129]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4130]              sum__balances0[this] := 0;
[L4131]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4132]              sum__allowances1[this] := 0;
[L4133]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4135]              __var_5 := null;
[L4136]  COND FALSE  !(!(_founder_s499 != null))
[L4140]              __var_6 := null;
[L4141]  COND FALSE  !(!(_marketing_s499 != null))
[L4145]              founder_ZildFinanceCoin[this] := _founder_s499;
[L4146]              founderLockupStartTime_ZildFinanceCoin[this] := now;
[L4147]              __var_7 := this;
[L4148]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][this];
[L4149]              _balances_ZildFinanceCoin[this][this] := totalSupply_ZildFinanceCoin[this];
[L4150]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][this];
[L4151]              __var_8 := this;
[L4152]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4602]              __var_19 := null;
[L4603]  COND FALSE  !(!(from_s861 != null))
[L4607]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3793]  COND FALSE  !(!(b_s69 <= a_s69))
[L3797]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3798]              __ret_0_ := c_s69;
[L4607]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4608]  COND FALSE  !(revert)
[L4611]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4612]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4613]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4614]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3747]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3748]  COND FALSE  !(!(c_s26 >= a_s26))
[L3752]              __ret_0_ := c_s26;
[L4614]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4615]  COND FALSE  !(revert)
[L4618]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4619]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4620]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4621]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4152]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4153]  COND FALSE  !(revert)
[L4194]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4195]  COND FALSE  !(revert)
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6486]              assume !revert && gas >= 0;
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND TRUE   __exception
[L1186]              __tmp__Balance := Balance;
[L1187]              __tmp__DType := DType;
[L1188]              __tmp__Alloc := Alloc;
[L1189]              __tmp__balance_ADDR := balance_ADDR;
[L1190]              __tmp__M_Ref_int := M_Ref_int;
[L1191]              __tmp__sum__balances0 := sum__balances0;
[L1192]              __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L1193]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1194]              __tmp__sum__allowances1 := sum__allowances1;
[L1195]              __tmp__M_Ref_bool := M_Ref_bool;
[L1196]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1197]              __tmp__Length := Length;
[L1198]              __tmp__now := now;
[L1199]              __tmp___owner_Ownable := _owner_Ownable;
[L1200]              __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L1201]              __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L1202]              __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L1203]              __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L1204]              __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L1205]              __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L1206]              __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L1207]              __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L1208]              __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L1209]              __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L1210]              __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L1211]              __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L1212]              __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L1213]              __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L1214]              __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L1215]              __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L1216]              __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L1217]              __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L1218]              __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L1219]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4477]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4628]              __var_22 := null;
[L4629]  COND TRUE   !(from_s903 != null)
[L4630]              revert := true;
[L4477]  RET         call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4478]  COND TRUE   revert
[L1219]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1220]              assume revert || gas < 0;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND TRUE   __exception
[L1186]              __tmp__Balance := Balance;
[L1187]              __tmp__DType := DType;
[L1188]              __tmp__Alloc := Alloc;
[L1189]              __tmp__balance_ADDR := balance_ADDR;
[L1190]              __tmp__M_Ref_int := M_Ref_int;
[L1191]              __tmp__sum__balances0 := sum__balances0;
[L1192]              __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L1193]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1194]              __tmp__sum__allowances1 := sum__allowances1;
[L1195]              __tmp__M_Ref_bool := M_Ref_bool;
[L1196]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1197]              __tmp__Length := Length;
[L1198]              __tmp__now := now;
[L1199]              __tmp___owner_Ownable := _owner_Ownable;
[L1200]              __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L1201]              __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L1202]              __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L1203]              __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L1204]              __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L1205]              __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L1206]              __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L1207]              __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L1208]              __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L1209]              __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L1210]              __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L1211]              __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L1212]              __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L1213]              __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L1214]              __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L1215]              __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L1216]              __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L1217]              __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L1218]              __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L1219]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4477]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4628]              __var_22 := null;
[L4629]  COND TRUE   !(from_s903 != null)
[L4630]              revert := true;
[L4477]  RET         call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4478]  COND TRUE   revert
[L1219]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1220]              assume revert || gas < 0;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:51:30,968 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:30,968 INFO  L82        PathProgramCache]: Analyzing trace with hash 368890594, now seen corresponding path program 1 times
[2020-11-25 10:51:30,969 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:30,979 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 10:51:31,018 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 10:51:31,019 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 10:51:31,019 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 10:51:31,019 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 10:51:31,019 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 10:51:31,019 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 10:51:31,019 INFO  L87              Difference]: Start difference. First operand 5162 states and 5548 transitions. cyclomatic complexity: 390 Second operand 6 states.
[2020-11-25 10:51:31,070 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 10:51:31,071 INFO  L93              Difference]: Finished difference Result 5186 states and 5572 transitions.
[2020-11-25 10:51:31,071 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 10:51:31,071 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5186 states and 5572 transitions.
[2020-11-25 10:51:31,083 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 10:51:31,097 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5186 states to 5166 states and 5552 transitions.
[2020-11-25 10:51:31,097 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1666
[2020-11-25 10:51:31,098 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1666
[2020-11-25 10:51:31,098 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5166 states and 5552 transitions.
[2020-11-25 10:51:31,102 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 10:51:31,102 INFO  L728         BuchiCegarLoop]: Abstraction has 5166 states and 5552 transitions.
[2020-11-25 10:51:31,107 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5166 states and 5552 transitions.
[2020-11-25 10:51:31,147 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5166 to 5166.
[2020-11-25 10:51:31,148 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5166 states.
[2020-11-25 10:51:31,154 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5166 states to 5166 states and 5552 transitions.
[2020-11-25 10:51:31,154 INFO  L751         BuchiCegarLoop]: Abstraction has 5166 states and 5552 transitions.
[2020-11-25 10:51:31,154 INFO  L631         BuchiCegarLoop]: Abstraction has 5166 states and 5552 transitions.
[2020-11-25 10:51:31,154 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 10:51:31,154 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5166 states and 5552 transitions.
[2020-11-25 10:51:31,162 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 10:51:31,162 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 10:51:31,162 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 10:51:31,164 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 10:51:31,164 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_ZildFinanceCoin0 := false;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6479]              assume null == 0;
[L6480]  CALL        call this := FreshRefGenerator__success();
[L3694]              havoc newRef;
[L3695]              assume Alloc[newRef] == false;
[L3696]              Alloc[newRef] := true;
[L3697]              assume newRef != null;
[L6480]  RET         call this := FreshRefGenerator__success();
[L6481]              assume now >= 0;
[L6482]              assume DType[this] == ZildFinanceCoin;
[L6483]              assume msgvalue_MSG == 0;
[L6484]              gas := gas - 53000;
[L6485]  CALL        call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4190]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]              assume msgsender_MSG != null;
[L4026]              Balance[this] := 0;
[L4040]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(revert)
[L4190]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4191]  COND FALSE  !(revert)
[L4194]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4110]              assume msgsender_MSG != null;
[L4111]              Balance[this] := 0;
[L4112]              name_ZildFinanceCoin[this] := -1602093786;
[L4113]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4114]              decimals_ZildFinanceCoin[this] := 18;
[L4115]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4116]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4117]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4118]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4119]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4120]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4121]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4122]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4123]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4124]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4125]              __var_9 := null;
[L4126]              founder_ZildFinanceCoin[this] := null;
[L4127]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4128]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4129]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4130]              sum__balances0[this] := 0;
[L4131]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4132]              sum__allowances1[this] := 0;
[L4133]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4135]              __var_5 := null;
[L4136]  COND FALSE  !(!(_founder_s499 != null))
[L4140]              __var_6 := null;
[L4141]  COND FALSE  !(!(_marketing_s499 != null))
[L4145]              founder_ZildFinanceCoin[this] := _founder_s499;
[L4146]              founderLockupStartTime_ZildFinanceCoin[this] := now;
[L4147]              __var_7 := this;
[L4148]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][this];
[L4149]              _balances_ZildFinanceCoin[this][this] := totalSupply_ZildFinanceCoin[this];
[L4150]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][this];
[L4151]              __var_8 := this;
[L4152]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4602]              __var_19 := null;
[L4603]  COND FALSE  !(!(from_s861 != null))
[L4607]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3793]  COND FALSE  !(!(b_s69 <= a_s69))
[L3797]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3798]              __ret_0_ := c_s69;
[L4607]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4608]  COND FALSE  !(revert)
[L4611]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4612]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4613]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4614]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3747]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3748]  COND FALSE  !(!(c_s26 >= a_s26))
[L3752]              __ret_0_ := c_s26;
[L4614]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4615]  COND FALSE  !(revert)
[L4618]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4619]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4620]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4621]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4152]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4153]  COND FALSE  !(revert)
[L4194]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4195]  COND FALSE  !(revert)
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L6486]              assume !revert && gas >= 0;
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND TRUE   __exception
[L1186]              __tmp__Balance := Balance;
[L1187]              __tmp__DType := DType;
[L1188]              __tmp__Alloc := Alloc;
[L1189]              __tmp__balance_ADDR := balance_ADDR;
[L1190]              __tmp__M_Ref_int := M_Ref_int;
[L1191]              __tmp__sum__balances0 := sum__balances0;
[L1192]              __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L1193]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1194]              __tmp__sum__allowances1 := sum__allowances1;
[L1195]              __tmp__M_Ref_bool := M_Ref_bool;
[L1196]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1197]              __tmp__Length := Length;
[L1198]              __tmp__now := now;
[L1199]              __tmp___owner_Ownable := _owner_Ownable;
[L1200]              __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L1201]              __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L1202]              __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L1203]              __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L1204]              __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L1205]              __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L1206]              __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L1207]              __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L1208]              __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L1209]              __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L1210]              __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L1211]              __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L1212]              __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L1213]              __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L1214]              __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L1215]              __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L1216]              __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L1217]              __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L1218]              __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L1219]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4477]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4628]              __var_22 := null;
[L4629]  COND FALSE  !(!(from_s903 != null))
[L4633]              __var_23 := null;
[L4634]  COND TRUE   !(to_s903 != null)
[L4635]              revert := true;
[L4477]  RET         call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4478]  COND TRUE   revert
[L1219]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1220]              assume revert || gas < 0;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

Loop:
[L6489]  CALL        call CorralChoice_ZildFinanceCoin(this);
[L6219]              havoc msgsender_MSG;
[L6220]              havoc msgvalue_MSG;
[L6221]              havoc choice;
[L6222]              havoc __ret_0_owner;
[L6223]              havoc __ret_0_isOwner;
[L6224]              havoc newOwner_s267;
[L6225]              havoc account_s586;
[L6226]              havoc __ret_0_balanceOf;
[L6227]              havoc to_s629;
[L6228]              havoc amount_s629;
[L6229]              havoc __ret_0_transfer;
[L6230]              havoc from_s723;
[L6231]              havoc to_s723;
[L6232]              havoc __ret_0_allowance;
[L6233]              havoc to_s742;
[L6234]              havoc amount_s742;
[L6235]              havoc __ret_0_approve;
[L6236]              havoc from_s813;
[L6237]              havoc to_s813;
[L6238]              havoc amount_s813;
[L6239]              havoc __ret_0_transferFrom;
[L6240]              havoc __ret_0_name;
[L6241]              havoc __ret_0_symbol;
[L6242]              havoc __ret_0_decimals;
[L6243]              havoc __ret_0_totalSupply;
[L6244]              havoc __ret_0_allowBurn;
[L6245]              havoc __ret_0_tokenDestroyed;
[L6246]              havoc __ret_0_FounderAllocation;
[L6247]              havoc __ret_0_FounderLockupAmount;
[L6248]              havoc __ret_0_FounderLockupCliff;
[L6249]              havoc __ret_0_FounderReleaseInterval;
[L6250]              havoc __ret_0_FounderReleaseAmount;
[L6251]              havoc __ret_0_MarketingAllocation;
[L6252]              havoc __ret_0_FurnaceAllocation;
[L6253]              havoc __ret_0_founder;
[L6254]              havoc __ret_0_founderLockupStartTime;
[L6255]              havoc __ret_0_founderReleasedAmount;
[L6256]              havoc arg1039_s0;
[L6257]              havoc __ret_0_frozenAccount;
[L6258]              havoc _founder_s499;
[L6259]              havoc _marketing_s499;
[L6260]              havoc _value_s645;
[L6261]              havoc __ret_0_burn;
[L6262]              havoc _founder_s929;
[L6263]              havoc minter_s970;
[L6264]              havoc furnace_s1008;
[L6265]              havoc _target_s1036;
[L6266]              havoc _bool_s1036;
[L6267]              havoc tmpNow;
[L6268]              havoc gas;
[L6269]              assume gas > 4000000 && gas <= 8000000;
[L6270]              tmpNow := now;
[L6271]              havoc now;
[L6272]              assume now > tmpNow;
[L6273]              assume msgsender_MSG != null;
[L6274]              assume DType[msgsender_MSG] != SafeMath;
[L6275]              assume DType[msgsender_MSG] != Ownable;
[L6276]              assume DType[msgsender_MSG] != IERC20;
[L6277]              assume DType[msgsender_MSG] != ZildFinanceCoin;
[L6278]              Alloc[msgsender_MSG] := true;
[L6279]  COND FALSE  !(choice == 31)
[L6285]  COND FALSE  !(choice == 30)
[L6291]  COND FALSE  !(choice == 29)
[L6297]  COND FALSE  !(choice == 28)
[L6303]  COND FALSE  !(choice == 27)
[L6310]  COND FALSE  !(choice == 26)
[L6316]  COND TRUE   choice == 25
[L6317]              gas := gas - 21000;
[L6318]  COND TRUE   gas >= 0
[L6319]              assume amount_s742 >= 0 && amount_s742 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6320]              assume msgvalue_MSG == 0;
[L6321]  CALL        call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND TRUE   __exception
[L1186]              __tmp__Balance := Balance;
[L1187]              __tmp__DType := DType;
[L1188]              __tmp__Alloc := Alloc;
[L1189]              __tmp__balance_ADDR := balance_ADDR;
[L1190]              __tmp__M_Ref_int := M_Ref_int;
[L1191]              __tmp__sum__balances0 := sum__balances0;
[L1192]              __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L1193]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1194]              __tmp__sum__allowances1 := sum__allowances1;
[L1195]              __tmp__M_Ref_bool := M_Ref_bool;
[L1196]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1197]              __tmp__Length := Length;
[L1198]              __tmp__now := now;
[L1199]              __tmp___owner_Ownable := _owner_Ownable;
[L1200]              __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L1201]              __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L1202]              __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L1203]              __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L1204]              __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L1205]              __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L1206]              __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L1207]              __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L1208]              __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L1209]              __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L1210]              __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L1211]              __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L1212]              __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L1213]              __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L1214]              __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L1215]              __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L1216]              __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L1217]              __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L1218]              __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L1219]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4477]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4628]              __var_22 := null;
[L4629]  COND FALSE  !(!(from_s903 != null))
[L4633]              __var_23 := null;
[L4634]  COND TRUE   !(to_s903 != null)
[L4635]              revert := true;
[L4477]  RET         call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4478]  COND TRUE   revert
[L1219]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1220]              assume revert || gas < 0;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L6489]  RET         call CorralChoice_ZildFinanceCoin(this);

[2020-11-25 10:51:31,167 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:31,168 INFO  L82        PathProgramCache]: Analyzing trace with hash 1517395423, now seen corresponding path program 1 times
[2020-11-25 10:51:31,168 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:31,208 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:31,230 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:31,301 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:31,301 INFO  L82        PathProgramCache]: Analyzing trace with hash -499643041, now seen corresponding path program 1 times
[2020-11-25 10:51:31,302 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:31,306 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:31,311 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:31,323 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 10:51:31,324 INFO  L82        PathProgramCache]: Analyzing trace with hash 794422845, now seen corresponding path program 1 times
[2020-11-25 10:51:31,324 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 10:51:31,342 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:31,363 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 6271 to 12541
[2020-11-25 10:51:31,773 WARN  L188               SmtUtils]: Spent 146.00 ms on a formula simplification that was a NOOP. DAG size: 338
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 8053 to 16103
[2020-11-25 10:51:32,295 WARN  L188               SmtUtils]: Spent 497.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 266
[2020-11-25 10:51:33,078 WARN  L188               SmtUtils]: Spent 779.00 ms on a formula simplification. DAG size of input: 327 DAG size of output: 305
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 10:51:33,262 WARN  L188               SmtUtils]: Spent 161.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 169
[2020-11-25 10:51:33,447 WARN  L188               SmtUtils]: Spent 182.00 ms on a formula simplification that was a NOOP. DAG size: 409
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #8: 19937 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 19937 to 39869
[2020-11-25 10:51:34,014 WARN  L188               SmtUtils]: Spent 550.00 ms on a formula simplification. DAG size of input: 326 DAG size of output: 324
[2020-11-25 10:51:34,247 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification that was a NOOP. DAG size: 324
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4357 to 8713
[2020-11-25 10:51:34,472 WARN  L188               SmtUtils]: Spent 200.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 182
[2020-11-25 10:51:34,481 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
[2020-11-25 10:51:34,638 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 106 DAG size of output: 105
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 10:51:34,970 WARN  L188               SmtUtils]: Spent 280.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 211
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 10:51:35,370 WARN  L188               SmtUtils]: Spent 194.00 ms on a formula simplification. DAG size of input: 243 DAG size of output: 238
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-25 10:51:35,505 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification that was a NOOP. DAG size: 254
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 10:51:35,708 WARN  L188               SmtUtils]: Spent 133.00 ms on a formula simplification. DAG size of input: 211 DAG size of output: 210
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 10:51:35,975 WARN  L188               SmtUtils]: Spent 231.00 ms on a formula simplification that was a NOOP. DAG size: 422
Garbage collection #1: 151 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 151 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 10:51:36,151 WARN  L188               SmtUtils]: Spent 173.00 ms on a formula simplification that was a NOOP. DAG size: 374
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 10:51:36,399 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification that was a NOOP. DAG size: 338
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 10:51:36,875 WARN  L188               SmtUtils]: Spent 464.00 ms on a formula simplification. DAG size of input: 266 DAG size of output: 266
[2020-11-25 10:51:37,572 WARN  L188               SmtUtils]: Spent 693.00 ms on a formula simplification. DAG size of input: 326 DAG size of output: 305
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 10:51:37,715 WARN  L188               SmtUtils]: Spent 124.00 ms on a formula simplification. DAG size of input: 173 DAG size of output: 167
[2020-11-25 10:51:37,907 WARN  L188               SmtUtils]: Spent 191.00 ms on a formula simplification that was a NOOP. DAG size: 407
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 9973 to 19937
Garbage collection #8: 19937 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 19937 to 39869
[2020-11-25 10:51:38,383 WARN  L188               SmtUtils]: Spent 465.00 ms on a formula simplification. DAG size of input: 322 DAG size of output: 322
[2020-11-25 10:51:40,238 WARN  L188               SmtUtils]: Spent 1.85 s on a formula simplification. DAG size of input: 653 DAG size of output: 648
Garbage collection #1: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #2: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #3: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #4: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #5: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #6: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #7: 16103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 16103 to 32203
Garbage collection #8: 32203 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 32203 to 64403
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 10:51:40,769 WARN  L188               SmtUtils]: Spent 502.00 ms on a formula simplification. DAG size of input: 271 DAG size of output: 271
[2020-11-25 10:51:41,164 WARN  L188               SmtUtils]: Spent 363.00 ms on a formula simplification that was a NOOP. DAG size: 440
Garbage collection #1: 149 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 9181 to 18353
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 10:51:42,256 WARN  L188               SmtUtils]: Spent 1.06 s on a formula simplification. DAG size of input: 291 DAG size of output: 284
[2020-11-25 10:51:43,372 WARN  L188               SmtUtils]: Spent 1.11 s on a formula simplification. DAG size of input: 455 DAG size of output: 454
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9883 to 19763
Garbage collection #8: 19763 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19763 to 39521
Garbage collection #9: 39521 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 39521 to 79039
[2020-11-25 10:51:45,859 WARN  L188               SmtUtils]: Spent 2.47 s on a formula simplification. DAG size of input: 456 DAG size of output: 449
[2020-11-25 10:51:45,875 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:45,895 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 10:51:45,907 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 10:51:45 BasicIcfg
[2020-11-25 10:51:45,907 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 10:51:45,907 INFO  L168              Benchmark]: Toolchain (without parser) took 22457.95 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.5 GB). Free memory was 929.8 MB in the beginning and 1.4 GB in the end (delta: -500.6 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,908 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,908 INFO  L168              Benchmark]: Boogie Preprocessor took 120.58 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,908 INFO  L168              Benchmark]: UtopiaSpecLang took 68.25 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,909 INFO  L168              Benchmark]: Boogie Printer took 20.24 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,909 INFO  L168              Benchmark]: RCFGBuilder took 799.13 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 752.6 MB in the end (delta: 155.7 MB). Peak memory consumption was 155.7 MB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,909 INFO  L168              Benchmark]: UtopiaLTL2Aut took 36.22 ms. Allocated memory is still 1.0 GB. Free memory was 752.6 MB in the beginning and 749.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,910 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1286.54 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 749.0 MB in the beginning and 740.2 MB in the end (delta: 8.8 MB). Peak memory consumption was 182.4 MB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,910 INFO  L168              Benchmark]: BlockEncodingV2 took 197.23 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 50.9 MB). Free memory was 740.2 MB in the beginning and 1.1 GB in the end (delta: -358.0 MB). Peak memory consumption was 138.4 MB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,911 INFO  L168              Benchmark]: BuchiAutomizer took 19926.79 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.3 GB). Free memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: -332.2 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 10:51:45,913 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5980 locations, 10100 edges
  - StatisticsResult: Encoded RCFG
    5942 locations, 10003 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 120.58 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.25 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 20.24 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 799.13 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 752.6 MB in the end (delta: 155.7 MB). Peak memory consumption was 155.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 36.22 ms. Allocated memory is still 1.0 GB. Free memory was 752.6 MB in the beginning and 749.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1286.54 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 173.5 MB). Free memory was 749.0 MB in the beginning and 740.2 MB in the end (delta: 8.8 MB). Peak memory consumption was 182.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 197.23 ms. Allocated memory was 1.2 GB in the beginning and 1.3 GB in the end (delta: 50.9 MB). Free memory was 740.2 MB in the beginning and 1.1 GB in the end (delta: -358.0 MB). Peak memory consumption was 138.4 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 19926.79 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.3 GB). Free memory was 1.1 GB in the beginning and 1.4 GB in the end (delta: -332.2 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2557 locations, 3156 edges
  - StatisticsResult: BuchiProgram size
    5980 locations, 10100 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 5166 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.8s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 15.5s. Construction of modules took 2.5s. BÃ¼chi inclusion checks took 1.0s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.3s AutomataMinimizationTime, 5 MinimizatonAttempts, 1697 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 5518 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 30567 SDtfs, 19546 SDslu, 41765 SDs, 0 SdLazy, 46782 SolverSat, 3548 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(99800000000000000000000012) = (new ZildFinanceCoin)({from : 99800000000000000000000015, _founder : 99800000000000000000000016, _marketing : 99800000000000000000000012});
[L674]               havoc __exception;
[L675]               revert := false;
[L676]   COND FALSE  !(__exception)
[L713]   CALL        call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4186]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3953]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3935]              assume msgsender_MSG != null;
[L3936]              Balance[this] := 0;
[L3937]              _owner_Ownable[this] := null;
[L3939]              _owner_Ownable[this] := msgsender_MSG;
[L3940]              assert { :EventEmitted "OwnershipTransferred_Ownable" } true;
[L3953]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3954]  COND FALSE  !(revert)
[L4186]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND FALSE  !(revert)
[L4190]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4040]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]              assume msgsender_MSG != null;
[L4026]              Balance[this] := 0;
[L4040]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4041]  COND FALSE  !(revert)
[L4190]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4191]  COND FALSE  !(revert)
[L4194]  CALL        call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4110]              assume msgsender_MSG != null;
[L4111]              Balance[this] := 0;
[L4112]              name_ZildFinanceCoin[this] := -1602093786;
[L4113]              symbol_ZildFinanceCoin[this] := -1963254244;
[L4114]              decimals_ZildFinanceCoin[this] := 18;
[L4115]              totalSupply_ZildFinanceCoin[this] := 99800000000000000000000000;
[L4116]              allowBurn_ZildFinanceCoin[this] := 21000000000000000000000000;
[L4117]              tokenDestroyed_ZildFinanceCoin[this] := 0;
[L4118]              FounderAllocation_ZildFinanceCoin[this] := 14970000000000000000000000;
[L4119]              FounderLockupAmount_ZildFinanceCoin[this] := 9980000000000000000000000;
[L4120]              FounderLockupCliff_ZildFinanceCoin[this] := 365;
[L4121]              FounderReleaseInterval_ZildFinanceCoin[this] := 30;
[L4122]              FounderReleaseAmount_ZildFinanceCoin[this] := 207916000000000000000000;
[L4123]              MarketingAllocation_ZildFinanceCoin[this] := 3490000000000000000000000;
[L4124]              FurnaceAllocation_ZildFinanceCoin[this] := 1500000000000000000000000;
[L4125]              __var_9 := null;
[L4126]              founder_ZildFinanceCoin[this] := null;
[L4127]              founderLockupStartTime_ZildFinanceCoin[this] := 0;
[L4128]              founderReleasedAmount_ZildFinanceCoin[this] := 0;
[L4129]              _balances_ZildFinanceCoin[this] := zeroRefintArr();
[L4130]              sum__balances0[this] := 0;
[L4131]              _allowances_ZildFinanceCoin[this] := zeroRefRefintArr();
[L4132]              sum__allowances1[this] := 0;
[L4133]              frozenAccount_ZildFinanceCoin[this] := zeroRefboolArr();
[L4135]              __var_5 := null;
[L4136]  COND FALSE  !(!(_founder_s499 != null))
[L4140]              __var_6 := null;
[L4141]  COND FALSE  !(!(_marketing_s499 != null))
[L4145]              founder_ZildFinanceCoin[this] := _founder_s499;
[L4146]              founderLockupStartTime_ZildFinanceCoin[this] := now;
[L4147]              __var_7 := this;
[L4148]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][this];
[L4149]              _balances_ZildFinanceCoin[this][this] := totalSupply_ZildFinanceCoin[this];
[L4150]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][this];
[L4151]              __var_8 := this;
[L4152]  CALL        call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4602]              __var_19 := null;
[L4603]  COND FALSE  !(!(from_s861 != null))
[L4607]  CALL        call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L3793]  COND FALSE  !(!(b_s69 <= a_s69))
[L3797]              c_s69 := (a_s69 - b_s69) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3798]              __ret_0_ := c_s69;
[L4607]  RET         call __var_20 := sub~uint256~uint256~string_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][from_s861], amount_s861, -118631816);
[L4608]  COND FALSE  !(revert)
[L4611]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][from_s861];
[L4612]              _balances_ZildFinanceCoin[this][from_s861] := __var_20;
[L4613]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][from_s861];
[L4614]  CALL        call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L3747]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3748]  COND FALSE  !(!(c_s26 >= a_s26))
[L3752]              __ret_0_ := c_s26;
[L4614]  RET         call __var_21 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ZildFinanceCoin[this][to_s861], amount_s861);
[L4615]  COND FALSE  !(revert)
[L4618]              sum__balances0[this] := sum__balances0[this] - _balances_ZildFinanceCoin[this][to_s861];
[L4619]              _balances_ZildFinanceCoin[this][to_s861] := __var_21;
[L4620]              sum__balances0[this] := sum__balances0[this] + _balances_ZildFinanceCoin[this][to_s861];
[L4621]              assert { :EventEmitted "Transfer_ZildFinanceCoin" } true;
[L4152]  RET         call _transfer~address~address~uint256_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, this, _marketing_s499, MarketingAllocation_ZildFinanceCoin[this]);
[L4153]  COND FALSE  !(revert)
[L4194]  RET         call ZildFinanceCoin_ZildFinanceCoin_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L4195]  COND FALSE  !(revert)
[L713]   RET         call ZildFinanceCoin_ZildFinanceCoin__success(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
[L714]               assume !revert && gas >= 0;
[L6485]  RET         call ZildFinanceCoin_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, _founder_s499, _marketing_s499);
ZildFinanceCoin(99800000000000000000000012).approve~address~uint256.gas(3979002)({from : 99800000000000000000000001, to : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND TRUE   __exception
[L1186]              __tmp__Balance := Balance;
[L1187]              __tmp__DType := DType;
[L1188]              __tmp__Alloc := Alloc;
[L1189]              __tmp__balance_ADDR := balance_ADDR;
[L1190]              __tmp__M_Ref_int := M_Ref_int;
[L1191]              __tmp__sum__balances0 := sum__balances0;
[L1192]              __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L1193]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1194]              __tmp__sum__allowances1 := sum__allowances1;
[L1195]              __tmp__M_Ref_bool := M_Ref_bool;
[L1196]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1197]              __tmp__Length := Length;
[L1198]              __tmp__now := now;
[L1199]              __tmp___owner_Ownable := _owner_Ownable;
[L1200]              __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L1201]              __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L1202]              __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L1203]              __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L1204]              __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L1205]              __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L1206]              __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L1207]              __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L1208]              __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L1209]              __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L1210]              __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L1211]              __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L1212]              __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L1213]              __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L1214]              __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L1215]              __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L1216]              __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L1217]              __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L1218]              __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L1219]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4477]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4628]              __var_22 := null;
[L4629]  COND FALSE  !(!(from_s903 != null))
[L4633]              __var_23 := null;
[L4634]  COND TRUE   !(to_s903 != null)
[L4635]              revert := true;
[L4477]  RET         call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4478]  COND TRUE   revert
[L1219]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1220]              assume revert || gas < 0;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);

Loop:
ZildFinanceCoin(99800000000000000000000012).approve~address~uint256.gas(3979001)({from : 99800000000000000000000018, to : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != to_s742;
[L3]                 call_approve_ZildFinanceCoin0 := true;
[L3]                 call_approve_ZildFinanceCoin0 := false;
[L3]                 revert := revert_hold;
[L1183]              havoc __exception;
[L1184]              revert := false;
[L1185]  COND TRUE   __exception
[L1186]              __tmp__Balance := Balance;
[L1187]              __tmp__DType := DType;
[L1188]              __tmp__Alloc := Alloc;
[L1189]              __tmp__balance_ADDR := balance_ADDR;
[L1190]              __tmp__M_Ref_int := M_Ref_int;
[L1191]              __tmp__sum__balances0 := sum__balances0;
[L1192]              __tmp__alloc__allowances_ZildFinanceCoin_lvl0 := alloc__allowances_ZildFinanceCoin_lvl0;
[L1193]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1194]              __tmp__sum__allowances1 := sum__allowances1;
[L1195]              __tmp__M_Ref_bool := M_Ref_bool;
[L1196]              __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L1197]              __tmp__Length := Length;
[L1198]              __tmp__now := now;
[L1199]              __tmp___owner_Ownable := _owner_Ownable;
[L1200]              __tmp__name_ZildFinanceCoin := name_ZildFinanceCoin;
[L1201]              __tmp__symbol_ZildFinanceCoin := symbol_ZildFinanceCoin;
[L1202]              __tmp__decimals_ZildFinanceCoin := decimals_ZildFinanceCoin;
[L1203]              __tmp__totalSupply_ZildFinanceCoin := totalSupply_ZildFinanceCoin;
[L1204]              __tmp__allowBurn_ZildFinanceCoin := allowBurn_ZildFinanceCoin;
[L1205]              __tmp__tokenDestroyed_ZildFinanceCoin := tokenDestroyed_ZildFinanceCoin;
[L1206]              __tmp__FounderAllocation_ZildFinanceCoin := FounderAllocation_ZildFinanceCoin;
[L1207]              __tmp__FounderLockupAmount_ZildFinanceCoin := FounderLockupAmount_ZildFinanceCoin;
[L1208]              __tmp__FounderLockupCliff_ZildFinanceCoin := FounderLockupCliff_ZildFinanceCoin;
[L1209]              __tmp__FounderReleaseInterval_ZildFinanceCoin := FounderReleaseInterval_ZildFinanceCoin;
[L1210]              __tmp__FounderReleaseAmount_ZildFinanceCoin := FounderReleaseAmount_ZildFinanceCoin;
[L1211]              __tmp__MarketingAllocation_ZildFinanceCoin := MarketingAllocation_ZildFinanceCoin;
[L1212]              __tmp__FurnaceAllocation_ZildFinanceCoin := FurnaceAllocation_ZildFinanceCoin;
[L1213]              __tmp__founder_ZildFinanceCoin := founder_ZildFinanceCoin;
[L1214]              __tmp__founderLockupStartTime_ZildFinanceCoin := founderLockupStartTime_ZildFinanceCoin;
[L1215]              __tmp__founderReleasedAmount_ZildFinanceCoin := founderReleasedAmount_ZildFinanceCoin;
[L1216]              __tmp___balances_ZildFinanceCoin := _balances_ZildFinanceCoin;
[L1217]              __tmp___allowances_ZildFinanceCoin := _allowances_ZildFinanceCoin;
[L1218]              __tmp__frozenAccount_ZildFinanceCoin := frozenAccount_ZildFinanceCoin;
[L1219]  CALL        call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L4477]  CALL        call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4628]              __var_22 := null;
[L4629]  COND FALSE  !(!(from_s903 != null))
[L4633]              __var_23 := null;
[L4634]  COND TRUE   !(to_s903 != null)
[L4635]              revert := true;
[L4477]  RET         call _approve~address~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s742, amount_s742);
[L4478]  COND TRUE   revert
[L1219]  RET         call __ret_0_ := approve~address~uint256_ZildFinanceCoin__fail(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);
[L1220]              assume revert || gas < 0;
[L6321]  RET         call __ret_0_approve := approve~address~uint256_ZildFinanceCoin(this, msgsender_MSG, msgvalue_MSG, to_s742, amount_s742);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
