This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:50:34,648 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:50:34,649 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:50:34,659 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:50:34,660 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:50:34,660 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:50:34,661 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:50:34,663 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:50:34,664 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:50:34,665 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:50:34,666 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:50:34,666 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:50:34,667 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:50:34,668 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:50:34,668 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:50:34,669 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:50:34,670 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:50:34,671 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:50:34,672 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:50:34,673 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:50:34,674 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:50:34,675 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:50:34,677 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:50:34,677 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:50:34,677 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:50:34,678 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:50:34,678 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:50:34,679 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:50:34,679 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:50:34,679 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:50:34,680 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:50:34,680 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:50:34,681 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:50:34,681 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:50:34,682 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:50:34,682 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:50:34,683 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:50:34,683 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:50:34,684 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:50:34,684 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:50:34,685 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:50:34,685 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:50:34,693 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:50:34,693 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:50:34,694 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:50:34,694 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:50:34,694 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:50:34,694 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:50:34,694 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:50:34,695 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:50:34,695 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:50:34,695 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:50:34,696 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:50:34,696 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:50:34,720 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:50:34,733 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:50:34,736 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:50:34,737 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:50:34,737 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:50:34,738 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl
[2020-11-25 12:50:34,738 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl'
[2020-11-25 12:50:34,808 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:50:34,810 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:50:34,810 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:50:34,810 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:50:34,810 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:50:34,828 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,830 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,852 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,853 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,868 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,875 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,879 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,886 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:50:34,886 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:50:34,886 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:50:34,888 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:50:34,892 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/1) ...
[2020-11-25 12:50:34,905 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CSB.balanceOf(owner), balances_CSB[this][owner] >= 0 && balances_CSB[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CSB.balanceOf(owner), return == balances_CSB[this][owner] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this] == old(allowed_CSB[this]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:34,910 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CSB.balanceOf(owner), balances_CSB[this][owner] >= 0 && balances_CSB[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CSB.balanceOf(owner), return == balances_CSB[this][owner] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this] == old(allowed_CSB[this]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:34,917 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CSB.balanceOf(owner), balances_CSB[this][owner] >= 0 && balances_CSB[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CSB.balanceOf(owner), return == balances_CSB[this][owner] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this] == old(allowed_CSB[this]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:34,921 INFO  L636   opiaSpecLangObserver]: Parsed ( balances_CSB[this][_owner_s251]>=0 && balances_CSB[this][_owner_s251]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],[IdentifierExpression[_owner_s251,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],[IdentifierExpression[_owner_s251,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:50:34,924 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( balance_s251==balances_CSB[this][_owner_s251] && totalSupply_CSBInterface[this]==( old(totalSupply_CSBInterface[this]) ) ) && balances_CSB[this]==( old(balances_CSB[this]) ) ) && allowed_CSB[this]==( old(allowed_CSB[this]) ) ) && name_CSB[this]==( old(name_CSB[this]) ) ) && decimals_CSB[this]==( old(decimals_CSB[this]) ) ) && symbol_CSB[this]==( old(symbol_CSB[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[balance_s251,<IMPLEMENTATION_OUTPARAM,balanceOf~address_CSB>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],[IdentifierExpression[_owner_s251,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CSBInterface,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_CSBInterface,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CSB,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,balanceOf~address_CSB>]]]]]]
[2020-11-25 12:50:34,926 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CSB.balanceOf(owner), balances_CSB[this][owner] >= 0 && balances_CSB[this][owner] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(CSB.balanceOf(owner), return == balances_CSB[this][owner] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this]) && balances_CSB[this] == old(balances_CSB[this]) && allowed_CSB[this] == old(allowed_CSB[this]) && name_CSB[this] == old(name_CSB[this]) && decimals_CSB[this] == old(decimals_CSB[this]) && symbol_CSB[this] == old(symbol_CSB[this]))))
[2020-11-25 12:50:34,927 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_balanceOf_CSB0) ==> ( <>AP(success_balanceOf_CSB0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:50:34,932 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:34 PropertyContainer
[2020-11-25 12:50:34,932 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:50:34,932 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:50:34,932 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:50:34,932 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:50:34,933 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/2) ...
[2020-11-25 12:50:34,933 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:50:34,933 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:50:34,942 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:34" (2/2) ...
[2020-11-25 12:50:34,942 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:50:34,943 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:50:34,943 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:50:34,943 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:50:34,943 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/2) ...
[2020-11-25 12:50:34,995 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:50:34,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface_NoBaseCtor__success
[2020-11-25 12:50:34,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface
[2020-11-25 12:50:34,996 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CSBInterface
[2020-11-25 12:50:34,996 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CSBInterface
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB_NoBaseCtor__success
[2020-11-25 12:50:34,996 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB
[2020-11-25 12:50:34,996 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB
[2020-11-25 12:50:34,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSB
[2020-11-25 12:50:34,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CSB
[2020-11-25 12:50:34,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSB
[2020-11-25 12:50:34,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CSB
[2020-11-25 12:50:34,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSB
[2020-11-25 12:50:34,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CSB
[2020-11-25 12:50:34,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSB
[2020-11-25 12:50:34,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CSB
[2020-11-25 12:50:34,997 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSB
[2020-11-25 12:50:34,997 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CSB
[2020-11-25 12:50:34,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_CSB
[2020-11-25 12:50:34,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_CSB
[2020-11-25 12:50:34,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_CSB
[2020-11-25 12:50:34,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_CSB
[2020-11-25 12:50:34,998 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CSB
[2020-11-25 12:50:34,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CSB
[2020-11-25 12:50:34,998 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CSB
[2020-11-25 12:50:34,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CSB
[2020-11-25 12:50:34,998 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CSB
[2020-11-25 12:50:34,998 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CSB
[2020-11-25 12:50:34,998 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:50:34,998 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CSBInterface
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_CSBInterface
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CSB
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface_NoBaseCtor__fail
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface__success
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CSBInterface_CSBInterface__fail
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CSBInterface__success
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CSBInterface__fail
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB_NoBaseCtor__fail
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB__success
[2020-11-25 12:50:34,999 INFO  L130     BoogieDeclarations]: Found specification of procedure CSB_CSB__fail
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSB__success
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CSB__fail
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSB__success
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CSB__fail
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSB__success
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CSB__fail
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSB__success
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CSB__fail
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSB__success
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CSB__fail
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_CSB__success
[2020-11-25 12:50:35,000 INFO  L130     BoogieDeclarations]: Found specification of procedure balances~address_CSB__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_CSB__success
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure allowed~address~address_CSB__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CSB__success
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CSB__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CSB__success
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CSB__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CSB__success
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CSB__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:50:35,001 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:50:35,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:50:35,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface_NoBaseCtor__fail
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface_NoBaseCtor__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface__fail
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSBInterface_CSBInterface__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CSBInterface__fail
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CSBInterface__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB_NoBaseCtor__fail
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB_NoBaseCtor__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB__fail
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure CSB_CSB__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CSB__fail
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CSB__success
[2020-11-25 12:50:35,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CSB__success
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CSB__success
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CSB__success
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CSB__success
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balances~address_CSB__success
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowed~address~address_CSB__success
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CSB__fail
[2020-11-25 12:50:35,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CSB__success
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CSB__fail
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CSB__success
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CSB__fail
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CSB__success
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CSBInterface
[2020-11-25 12:50:35,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_CSBInterface
[2020-11-25 12:50:35,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CSB
[2020-11-25 12:50:35,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:50:35,005 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:50:35,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:50:35,243 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:35,244 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:35,244 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:50:35,472 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:50:35,472 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 12:50:35,474 INFO  L202        PluginConnector]: Adding new model CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:35 BoogieIcfgContainer
[2020-11-25 12:50:35,474 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:34" (2/2) ...
[2020-11-25 12:50:35,474 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:50:35,474 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@25bb2826 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:35, skipping insertion in model container
[2020-11-25 12:50:35,474 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:50:35,475 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:50:35,475 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:50:35,476 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:50:35,476 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/3) ...
[2020-11-25 12:50:35,477 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@70f1cff6 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:35, skipping insertion in model container
[2020-11-25 12:50:35,477 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:34" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:50:35,509 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:35 NWAContainer
[2020-11-25 12:50:35,509 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:50:35,509 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:50:35,509 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:50:35,510 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:50:35,511 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:35" (3/4) ...
[2020-11-25 12:50:35,512 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@2a28b447 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:35, skipping insertion in model container
[2020-11-25 12:50:35,512 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:35" (4/4) ...
[2020-11-25 12:50:35,515 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:50:35,517 INFO  L110   BuchiProductObserver]: Initial RCFG 790 locations, 952 edges
[2020-11-25 12:50:35,517 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:50:35,526 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:50:36,484 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:50:36,487 INFO  L110   BuchiProductObserver]: BuchiProgram size 1828 locations, 3058 edges
[2020-11-25 12:50:36,487 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:36 BoogieIcfgContainer
[2020-11-25 12:50:36,487 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:50:36,488 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:50:36,488 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:50:36,489 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:50:36,489 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:36" (1/1) ...
[2020-11-25 12:50:36,547 INFO  L313           BlockEncoder]: Initial Icfg 1828 locations, 3058 edges
[2020-11-25 12:50:36,547 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:50:36,548 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:50:36,548 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:50:36,549 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:50:36,557 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 12:50:36,563 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 12:50:36,571 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:50:36,574 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:50:36,576 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:50:36,576 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:50:36,580 INFO  L313           BlockEncoder]: Encoded RCFG 1810 locations, 3015 edges
[2020-11-25 12:50:36,580 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:50:36 BasicIcfg
[2020-11-25 12:50:36,580 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:50:36,580 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:50:36,580 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:50:36,583 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:50:36,584 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:36,584 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:50:34" (1/6) ...
[2020-11-25 12:50:36,585 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@766b0df2 and model type CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:36, skipping insertion in model container
[2020-11-25 12:50:36,585 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:36,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:50:34" (2/6) ...
[2020-11-25 12:50:36,585 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@766b0df2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:36, skipping insertion in model container
[2020-11-25 12:50:36,585 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:36,585 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:50:35" (3/6) ...
[2020-11-25 12:50:36,586 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@766b0df2 and model type CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:50:36, skipping insertion in model container
[2020-11-25 12:50:36,586 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:36,586 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:50:35" (4/6) ...
[2020-11-25 12:50:36,586 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@766b0df2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:50:36, skipping insertion in model container
[2020-11-25 12:50:36,586 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:36,586 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:50:36" (5/6) ...
[2020-11-25 12:50:36,586 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@766b0df2 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:50:36, skipping insertion in model container
[2020-11-25 12:50:36,586 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:50:36,586 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:50:36" (6/6) ...
[2020-11-25 12:50:36,588 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CSB_0xc873f3b4e37390207395b540f345b1d5a25f32cf_balanceof.bpl_BEv2
[2020-11-25 12:50:36,627 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:50:36,628 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:50:36,628 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:50:36,628 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:50:36,628 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:50:36,628 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:50:36,628 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:50:36,628 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:50:36,629 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:50:36,653 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1810 states.
[2020-11-25 12:50:36,696 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:36,696 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:36,696 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:36,706 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:36,706 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:36,706 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:50:36,706 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1810 states.
[2020-11-25 12:50:36,719 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:36,719 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:36,719 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:36,721 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:36,721 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_CSB0 := false;
[L2]                 call_balanceOf_CSB0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == CSB;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1173]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_CSBInterface[this] := 0;
[L1095]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND TRUE   revert
[L227]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2209]              assume !revert && gas >= 0;

Loop:
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND TRUE   choice == 11
[L2122]              gas := gas - 21000;
[L2123]  COND FALSE  !(gas >= 0)
[L2212]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:36,739 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:36,740 INFO  L82        PathProgramCache]: Analyzing trace with hash 1185886504, now seen corresponding path program 1 times
[2020-11-25 12:50:36,744 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:36,766 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:36,804 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:36,806 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:36,806 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:50:36,810 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:36,917 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:50:36,917 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:50:36,919 INFO  L87              Difference]: Start difference. First operand 1810 states. Second operand 4 states.
[2020-11-25 12:50:37,146 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:37,146 INFO  L93              Difference]: Finished difference Result 1322 states and 1413 transitions.
[2020-11-25 12:50:37,146 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:50:37,148 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1322 states and 1413 transitions.
[2020-11-25 12:50:37,156 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:37,170 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1322 states to 1322 states and 1413 transitions.
[2020-11-25 12:50:37,171 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 12:50:37,173 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 594
[2020-11-25 12:50:37,173 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1322 states and 1413 transitions.
[2020-11-25 12:50:37,178 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:37,179 INFO  L728         BuchiCegarLoop]: Abstraction has 1322 states and 1413 transitions.
[2020-11-25 12:50:37,195 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1322 states and 1413 transitions.
[2020-11-25 12:50:37,226 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1322 to 1322.
[2020-11-25 12:50:37,227 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1322 states.
[2020-11-25 12:50:37,230 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1322 states to 1322 states and 1413 transitions.
[2020-11-25 12:50:37,231 INFO  L751         BuchiCegarLoop]: Abstraction has 1322 states and 1413 transitions.
[2020-11-25 12:50:37,232 INFO  L631         BuchiCegarLoop]: Abstraction has 1322 states and 1413 transitions.
[2020-11-25 12:50:37,232 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:50:37,232 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1322 states and 1413 transitions.
[2020-11-25 12:50:37,237 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:50:37,238 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:37,238 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:37,240 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:37,240 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_CSB0 := false;
[L2]                 call_balanceOf_CSB0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == CSB;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1173]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_CSBInterface[this] := 0;
[L1095]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND TRUE   revert
[L1173]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND TRUE   revert
[L227]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND TRUE   choice == 10
[L2128]              gas := gas - 21000;
[L2129]  COND TRUE   gas >= 0
[L2130]              assume msgvalue_MSG == 0;
[L2131]  CALL        call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_CSB[this][_owner_s251] >= 0 && balances_CSB[this][_owner_s251] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_CSB0 := true;
[L2]                 call_balanceOf_CSB0 := false;
[L2]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L389]   CALL        call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L1271]              balance_s251 := balances_CSB[this][_owner_s251];
[L389]   RET         call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L390]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((balance_s251 == balances_CSB[this][_owner_s251] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this] == old(allowed_CSB[this])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L2]                 revert := revert_hold;
[L2131]  RET         call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2212]  RET         call CorralChoice_CSB(this);

Loop:
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND TRUE   choice == 10
[L2128]              gas := gas - 21000;
[L2129]  COND TRUE   gas >= 0
[L2130]              assume msgvalue_MSG == 0;
[L2131]  CALL        call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_CSB[this][_owner_s251] >= 0 && balances_CSB[this][_owner_s251] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_CSB0 := true;
[L2]                 call_balanceOf_CSB0 := false;
[L2]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L389]   CALL        call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L1271]              balance_s251 := balances_CSB[this][_owner_s251];
[L389]   RET         call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L390]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((balance_s251 == balances_CSB[this][_owner_s251] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this] == old(allowed_CSB[this])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L2]                 revert := revert_hold;
[L2131]  RET         call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2212]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:37,244 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:37,244 INFO  L82        PathProgramCache]: Analyzing trace with hash 1784042446, now seen corresponding path program 1 times
[2020-11-25 12:50:37,245 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:37,254 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:37,275 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:37,275 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:37,276 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:50:37,277 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:37,277 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:50:37,277 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:50:37,278 INFO  L87              Difference]: Start difference. First operand 1322 states and 1413 transitions. cyclomatic complexity: 93 Second operand 4 states.
[2020-11-25 12:50:37,483 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:37,483 INFO  L93              Difference]: Finished difference Result 1920 states and 2167 transitions.
[2020-11-25 12:50:37,483 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:50:37,483 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1920 states and 2167 transitions.
[2020-11-25 12:50:37,495 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 12:50:37,506 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1920 states to 1900 states and 2147 transitions.
[2020-11-25 12:50:37,507 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 883
[2020-11-25 12:50:37,508 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 883
[2020-11-25 12:50:37,508 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1900 states and 2147 transitions.
[2020-11-25 12:50:37,511 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:37,511 INFO  L728         BuchiCegarLoop]: Abstraction has 1900 states and 2147 transitions.
[2020-11-25 12:50:37,513 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1900 states and 2147 transitions.
[2020-11-25 12:50:37,528 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1900 to 1411.
[2020-11-25 12:50:37,528 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1411 states.
[2020-11-25 12:50:37,531 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1411 states to 1411 states and 1516 transitions.
[2020-11-25 12:50:37,531 INFO  L751         BuchiCegarLoop]: Abstraction has 1411 states and 1516 transitions.
[2020-11-25 12:50:37,531 INFO  L631         BuchiCegarLoop]: Abstraction has 1411 states and 1516 transitions.
[2020-11-25 12:50:37,531 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:50:37,531 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1411 states and 1516 transitions.
[2020-11-25 12:50:37,534 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:37,535 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:37,535 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:37,536 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:37,536 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_CSB0 := false;
[L2]                 call_balanceOf_CSB0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == CSB;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1173]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_CSBInterface[this] := 0;
[L1095]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_CSB[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_CSB[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_CSB[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_CSB[this] := 265230608;
[L1147]              decimals_CSB[this] := 0;
[L1148]              symbol_CSB[this] := 265230608;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][msgsender_MSG];
[L1151]              balances_CSB[this][msgsender_MSG] := _initialAmount_s131;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][msgsender_MSG];
[L1153]              totalSupply_CSBInterface[this] := _initialAmount_s131;
[L1154]              name_CSB[this] := _tokenName_s131;
[L1155]              decimals_CSB[this] := _decimalUnits_s131;
[L1156]              symbol_CSB[this] := _tokenSymbol_s131;
[L1177]  RET         call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND TRUE   choice == 10
[L2128]              gas := gas - 21000;
[L2129]  COND TRUE   gas >= 0
[L2130]              assume msgvalue_MSG == 0;
[L2131]  CALL        call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_CSB[this][_owner_s251] >= 0 && balances_CSB[this][_owner_s251] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_CSB0 := true;
[L2]                 call_balanceOf_CSB0 := false;
[L2]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L389]   CALL        call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L1271]              balance_s251 := balances_CSB[this][_owner_s251];
[L389]   RET         call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L390]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((balance_s251 == balances_CSB[this][_owner_s251] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this] == old(allowed_CSB[this])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L2]                 revert := revert_hold;
[L2131]  RET         call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2212]  RET         call CorralChoice_CSB(this);

Loop:
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND TRUE   choice == 10
[L2128]              gas := gas - 21000;
[L2129]  COND TRUE   gas >= 0
[L2130]              assume msgvalue_MSG == 0;
[L2131]  CALL        call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_CSB[this][_owner_s251] >= 0 && balances_CSB[this][_owner_s251] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_CSB0 := true;
[L2]                 call_balanceOf_CSB0 := false;
[L2]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND FALSE  !(__exception)
[L389]   CALL        call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L1271]              balance_s251 := balances_CSB[this][_owner_s251];
[L389]   RET         call balance_s251 := balanceOf~address_CSB__success(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L390]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !((((((balance_s251 == balances_CSB[this][_owner_s251] && totalSupply_CSBInterface[this] == old(totalSupply_CSBInterface[this])) && balances_CSB[this] == old(balances_CSB[this])) && allowed_CSB[this] == old(allowed_CSB[this])) && name_CSB[this] == old(name_CSB[this])) && decimals_CSB[this] == old(decimals_CSB[this])) && symbol_CSB[this] == old(symbol_CSB[this]));
[L2]                 revert := revert_hold;
[L2131]  RET         call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2212]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:37,538 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:37,538 INFO  L82        PathProgramCache]: Analyzing trace with hash -304980751, now seen corresponding path program 1 times
[2020-11-25 12:50:37,540 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:37,550 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:37,578 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:37,578 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:37,578 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:50:37,578 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:37,579 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:50:37,579 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:50:37,579 INFO  L87              Difference]: Start difference. First operand 1411 states and 1516 transitions. cyclomatic complexity: 107 Second operand 4 states.
[2020-11-25 12:50:37,616 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:37,617 INFO  L93              Difference]: Finished difference Result 1412 states and 1515 transitions.
[2020-11-25 12:50:37,617 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:50:37,617 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1412 states and 1515 transitions.
[2020-11-25 12:50:37,621 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:37,626 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1412 states to 1402 states and 1505 transitions.
[2020-11-25 12:50:37,626 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 674
[2020-11-25 12:50:37,626 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 674
[2020-11-25 12:50:37,626 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1402 states and 1505 transitions.
[2020-11-25 12:50:37,628 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:37,628 INFO  L728         BuchiCegarLoop]: Abstraction has 1402 states and 1505 transitions.
[2020-11-25 12:50:37,629 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1402 states and 1505 transitions.
[2020-11-25 12:50:37,639 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1402 to 1400.
[2020-11-25 12:50:37,639 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1400 states.
[2020-11-25 12:50:37,641 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1400 states to 1400 states and 1503 transitions.
[2020-11-25 12:50:37,641 INFO  L751         BuchiCegarLoop]: Abstraction has 1400 states and 1503 transitions.
[2020-11-25 12:50:37,641 INFO  L631         BuchiCegarLoop]: Abstraction has 1400 states and 1503 transitions.
[2020-11-25 12:50:37,641 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:50:37,641 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1400 states and 1503 transitions.
[2020-11-25 12:50:37,644 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:50:37,644 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:50:37,644 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:50:37,645 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:50:37,645 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_balanceOf_CSB0 := false;
[L2]                 call_balanceOf_CSB0 := false;
[L2]     CALL        call main();
[L2202]              assume null == 0;
[L2203]  CALL        call this := FreshRefGenerator__success();
[L1061]              havoc newRef;
[L1062]              assume Alloc[newRef] == false;
[L1063]              Alloc[newRef] := true;
[L1064]              assume newRef != null;
[L2203]  RET         call this := FreshRefGenerator__success();
[L2204]              assume now >= 0;
[L2205]              assume DType[this] == CSB;
[L2206]              assume msgvalue_MSG == 0;
[L2207]              gas := gas - 53000;
[L2208]  CALL        call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L203]               havoc __exception;
[L204]               revert := false;
[L205]   COND FALSE  !(__exception)
[L227]   CALL        call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1173]  CALL        call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1095]  CALL        call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1079]              assume msgsender_MSG != null;
[L1080]              Balance[this] := 0;
[L1081]              totalSupply_CSBInterface[this] := 0;
[L1095]  RET         call CSBInterface_CSBInterface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1096]  COND FALSE  !(revert)
[L1173]  RET         call CSBInterface_CSBInterface__success(this, msgsender_MSG, msgvalue_MSG);
[L1174]  COND FALSE  !(revert)
[L1177]  CALL        call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1139]              assume msgsender_MSG != null;
[L1140]              Balance[this] := 0;
[L1141]              MAX_UINT256_CSB[this] := 115792089237316195423570985008687907853269984665640564039457584007913129639936 - 1;
[L1142]              balances_CSB[this] := zeroRefintArr();
[L1143]              sum_balances0[this] := 0;
[L1144]              allowed_CSB[this] := zeroRefRefintArr();
[L1145]              sum_allowed1[this] := 0;
[L1146]              name_CSB[this] := 265230608;
[L1147]              decimals_CSB[this] := 0;
[L1148]              symbol_CSB[this] := 265230608;
[L1150]              sum_balances0[this] := sum_balances0[this] - balances_CSB[this][msgsender_MSG];
[L1151]              balances_CSB[this][msgsender_MSG] := _initialAmount_s131;
[L1152]              sum_balances0[this] := sum_balances0[this] + balances_CSB[this][msgsender_MSG];
[L1153]              totalSupply_CSBInterface[this] := _initialAmount_s131;
[L1154]              name_CSB[this] := _tokenName_s131;
[L1155]              decimals_CSB[this] := _decimalUnits_s131;
[L1156]              symbol_CSB[this] := _tokenSymbol_s131;
[L1177]  RET         call CSB_CSB_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L1178]  COND FALSE  !(revert)
[L227]   RET         call CSB_CSB__success(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L228]               assume !revert && gas >= 0;
[L2208]  RET         call CSB_CSB(this, msgsender_MSG, msgvalue_MSG, _initialAmount_s131, _tokenName_s131, _decimalUnits_s131, _tokenSymbol_s131);
[L2209]              assume !revert && gas >= 0;
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND TRUE   choice == 10
[L2128]              gas := gas - 21000;
[L2129]  COND TRUE   gas >= 0
[L2130]              assume msgvalue_MSG == 0;
[L2131]  CALL        call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_CSB[this][_owner_s251] >= 0 && balances_CSB[this][_owner_s251] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_CSB0 := true;
[L2]                 call_balanceOf_CSB0 := false;
[L2]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND TRUE   __exception
[L368]               __tmp__Balance := Balance;
[L369]               __tmp__DType := DType;
[L370]               __tmp__Alloc := Alloc;
[L371]               __tmp__balance_ADDR := balance_ADDR;
[L372]               __tmp__M_Ref_int := M_Ref_int;
[L373]               __tmp__sum_balances0 := sum_balances0;
[L374]               __tmp__alloc_allowed_CSB_lvl0 := alloc_allowed_CSB_lvl0;
[L375]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L376]               __tmp__sum_allowed1 := sum_allowed1;
[L377]               __tmp__Length := Length;
[L378]               __tmp__now := now;
[L379]               __tmp__totalSupply_CSBInterface := totalSupply_CSBInterface;
[L380]               __tmp__MAX_UINT256_CSB := MAX_UINT256_CSB;
[L381]               __tmp__balances_CSB := balances_CSB;
[L382]               __tmp__allowed_CSB := allowed_CSB;
[L383]               __tmp__name_CSB := name_CSB;
[L384]               __tmp__decimals_CSB := decimals_CSB;
[L385]               __tmp__symbol_CSB := symbol_CSB;
[L386]   CALL        call balance_s251 := balanceOf~address_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L1265]              balance_s251 := __tmp__balances_CSB[this][_owner_s251];
[L386]   RET         call balance_s251 := balanceOf~address_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L387]               assume revert || gas < 0;
[L2131]  RET         call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2212]  RET         call CorralChoice_CSB(this);

Loop:
[L2212]  CALL        call CorralChoice_CSB(this);
[L2080]              havoc msgsender_MSG;
[L2081]              havoc msgvalue_MSG;
[L2082]              havoc choice;
[L2083]              havoc __ret_0_totalSupply;
[L2084]              havoc _owner_s251;
[L2085]              havoc balance_s251;
[L2086]              havoc _to_s172;
[L2087]              havoc _value_s172;
[L2088]              havoc success_s172;
[L2089]              havoc _from_s239;
[L2090]              havoc _to_s239;
[L2091]              havoc _value_s239;
[L2092]              havoc success_s239;
[L2093]              havoc _spender_s279;
[L2094]              havoc _value_s279;
[L2095]              havoc success_s279;
[L2096]              havoc _owner_s295;
[L2097]              havoc _spender_s295;
[L2098]              havoc remaining_s295;
[L2099]              havoc arg298_s0;
[L2100]              havoc __ret_0_balances;
[L2101]              havoc arg299_s0;
[L2102]              havoc arg300_s0;
[L2103]              havoc __ret_0_allowed;
[L2104]              havoc __ret_0_name;
[L2105]              havoc __ret_0_decimals;
[L2106]              havoc __ret_0_symbol;
[L2107]              havoc _initialAmount_s131;
[L2108]              havoc _tokenName_s131;
[L2109]              havoc _decimalUnits_s131;
[L2110]              havoc _tokenSymbol_s131;
[L2111]              havoc tmpNow;
[L2112]              havoc gas;
[L2113]              assume gas > 4000000 && gas <= 8000000;
[L2114]              tmpNow := now;
[L2115]              havoc now;
[L2116]              assume now > tmpNow;
[L2117]              assume msgsender_MSG != null;
[L2118]              assume DType[msgsender_MSG] != CSBInterface;
[L2119]              assume DType[msgsender_MSG] != CSB;
[L2120]              Alloc[msgsender_MSG] := true;
[L2121]  COND FALSE  !(choice == 11)
[L2127]  COND TRUE   choice == 10
[L2128]              gas := gas - 21000;
[L2129]  COND TRUE   gas >= 0
[L2130]              assume msgvalue_MSG == 0;
[L2131]  CALL        call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume balances_CSB[this][_owner_s251] >= 0 && balances_CSB[this][_owner_s251] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_balanceOf_CSB0 := true;
[L2]                 call_balanceOf_CSB0 := false;
[L2]                 revert := revert_hold;
[L365]               havoc __exception;
[L366]               revert := false;
[L367]   COND TRUE   __exception
[L368]               __tmp__Balance := Balance;
[L369]               __tmp__DType := DType;
[L370]               __tmp__Alloc := Alloc;
[L371]               __tmp__balance_ADDR := balance_ADDR;
[L372]               __tmp__M_Ref_int := M_Ref_int;
[L373]               __tmp__sum_balances0 := sum_balances0;
[L374]               __tmp__alloc_allowed_CSB_lvl0 := alloc_allowed_CSB_lvl0;
[L375]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L376]               __tmp__sum_allowed1 := sum_allowed1;
[L377]               __tmp__Length := Length;
[L378]               __tmp__now := now;
[L379]               __tmp__totalSupply_CSBInterface := totalSupply_CSBInterface;
[L380]               __tmp__MAX_UINT256_CSB := MAX_UINT256_CSB;
[L381]               __tmp__balances_CSB := balances_CSB;
[L382]               __tmp__allowed_CSB := allowed_CSB;
[L383]               __tmp__name_CSB := name_CSB;
[L384]               __tmp__decimals_CSB := decimals_CSB;
[L385]               __tmp__symbol_CSB := symbol_CSB;
[L386]   CALL        call balance_s251 := balanceOf~address_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L1265]              balance_s251 := __tmp__balances_CSB[this][_owner_s251];
[L386]   RET         call balance_s251 := balanceOf~address_CSB__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L387]               assume revert || gas < 0;
[L2131]  RET         call balance_s251 := balanceOf~address_CSB(this, msgsender_MSG, msgvalue_MSG, _owner_s251);
[L2212]  RET         call CorralChoice_CSB(this);

[2020-11-25 12:50:37,648 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:50:37,648 INFO  L82        PathProgramCache]: Analyzing trace with hash 1462214719, now seen corresponding path program 1 times
[2020-11-25 12:50:37,649 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:50:37,656 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:50:37,673 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:50:37,673 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:50:37,673 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 12:50:37,674 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:50:37,674 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 12:50:37,674 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 12:50:37,675 INFO  L87              Difference]: Start difference. First operand 1400 states and 1503 transitions. cyclomatic complexity: 105 Second operand 5 states.
[2020-11-25 12:50:37,812 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:50:37,813 INFO  L93              Difference]: Finished difference Result 987 states and 1057 transitions.
[2020-11-25 12:50:37,813 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 12:50:37,813 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 987 states and 1057 transitions.
[2020-11-25 12:50:37,817 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:50:37,817 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 987 states to 0 states and 0 transitions.
[2020-11-25 12:50:37,817 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 12:50:37,817 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 12:50:37,817 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 12:50:37,817 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:50:37,817 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:37,817 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:37,817 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:50:37,817 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:50:37,817 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 12:50:37,817 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:50:37,817 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 12:50:37,821 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:50:37 BasicIcfg
[2020-11-25 12:50:37,821 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:50:37,821 INFO  L168              Benchmark]: Toolchain (without parser) took 3012.45 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 257.9 MB). Free memory was 945.9 MB in the beginning and 920.5 MB in the end (delta: 25.4 MB). Peak memory consumption was 283.3 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,822 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,822 INFO  L168              Benchmark]: Boogie Preprocessor took 75.94 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,823 INFO  L168              Benchmark]: UtopiaSpecLang took 45.55 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,823 INFO  L168              Benchmark]: Boogie Printer took 10.36 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,823 INFO  L168              Benchmark]: RCFGBuilder took 531.87 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,824 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.61 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,824 INFO  L168              Benchmark]: BÃ¼chi Program Product took 977.99 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 51.9 MB). Free memory was 867.2 MB in the beginning and 883.8 MB in the end (delta: -16.6 MB). Peak memory consumption was 152.0 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,824 INFO  L168              Benchmark]: BlockEncodingV2 took 92.52 ms. Allocated memory is still 1.1 GB. Free memory was 883.8 MB in the beginning and 840.1 MB in the end (delta: 43.7 MB). Peak memory consumption was 43.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,825 INFO  L168              Benchmark]: BuchiAutomizer took 1240.43 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 206.0 MB). Free memory was 840.1 MB in the beginning and 920.5 MB in the end (delta: -80.5 MB). Peak memory consumption was 125.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:50:37,827 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1828 locations, 3058 edges
  - StatisticsResult: Encoded RCFG
    1810 locations, 3015 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.94 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 45.55 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.36 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 531.87 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.8 MB in the end (delta: 59.1 MB). Peak memory consumption was 59.1 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.61 ms. Allocated memory is still 1.0 GB. Free memory was 870.8 MB in the beginning and 867.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 977.99 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 51.9 MB). Free memory was 867.2 MB in the beginning and 883.8 MB in the end (delta: -16.6 MB). Peak memory consumption was 152.0 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 92.52 ms. Allocated memory is still 1.1 GB. Free memory was 883.8 MB in the beginning and 840.1 MB in the end (delta: 43.7 MB). Peak memory consumption was 43.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 1240.43 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 206.0 MB). Free memory was 840.1 MB in the beginning and 920.5 MB in the end (delta: -80.5 MB). Peak memory consumption was 125.6 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    790 locations, 952 edges
  - StatisticsResult: BuchiProgram size
    1828 locations, 3058 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 1.2s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 0.1s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.0s AutomataMinimizationTime, 3 MinimizatonAttempts, 491 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1411 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 5559 SDtfs, 4598 SDslu, 6864 SDs, 0 SdLazy, 1001 SolverSat, 955 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_balanceOf_CS(success_balanceOf_CSB0)0) ==> ( <>(success_balanceOf_CSB0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
