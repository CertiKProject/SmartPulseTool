This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:53:38,825 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:53:38,826 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:53:38,834 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:53:38,834 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:53:38,835 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:53:38,835 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:53:38,836 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:53:38,837 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:53:38,838 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:53:38,838 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:53:38,838 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:53:38,839 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:53:38,839 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:53:38,840 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:53:38,840 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:53:38,841 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:53:38,841 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:53:38,842 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:53:38,843 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:53:38,844 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:53:38,844 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:53:38,845 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:53:38,845 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:53:38,846 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:53:38,846 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:53:38,846 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:53:38,847 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:53:38,847 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:53:38,847 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:53:38,847 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:53:38,848 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:53:38,848 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:53:38,848 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:53:38,849 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:53:38,849 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:53:38,849 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:53:38,849 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:53:38,849 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:53:38,850 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:53:38,850 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:53:38,850 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:53:38,856 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:53:38,856 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:53:38,856 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:53:38,857 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:53:38,857 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:53:38,857 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:53:38,857 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:53:38,858 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:53:38,858 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:53:38,879 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:53:38,891 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:53:38,893 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:53:38,894 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:53:38,894 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:53:38,895 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl
[2020-11-25 11:53:38,895 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl'
[2020-11-25 11:53:38,994 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:53:38,995 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:53:38,995 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:53:38,995 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:53:38,995 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:53:39,007 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,008 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,039 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,040 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,064 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,077 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,087 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,098 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:53:39,099 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:53:39,099 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:53:39,101 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:53:39,104 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/1) ...
[2020-11-25 11:53:39,122 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && name_CabGoldToken[this] == old(name_CabGoldToken[this]) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this]) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this]) && active_CabGoldToken[this] == old(active_CabGoldToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]))))
[2020-11-25 11:53:39,128 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && name_CabGoldToken[this] == old(name_CabGoldToken[this]) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this]) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this]) && active_CabGoldToken[this] == old(active_CabGoldToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]))))
[2020-11-25 11:53:39,135 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && name_CabGoldToken[this] == old(name_CabGoldToken[this]) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this]) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this]) && active_CabGoldToken[this] == old(active_CabGoldToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]))))
[2020-11-25 11:53:39,143 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=sender_s325 && p1!=recipient_s325 ) && ( p2!=sender_s325 || p3!=msg.sender ) ) && sender_s325!=recipient_s325 ) && amount_s325<=_balances_ERC20[this][sender_s325] ) && amount_s325<=_allowances_ERC20[this][sender_s325][msg.sender] ) && ( _balances_ERC20[this][recipient_s325] + amount_s325 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s325>=0 ) && amount_s325<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s325]>=0 ) && _balances_ERC20[this][recipient_s325]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][sender_s325]>=0 ) && _balances_ERC20[this][sender_s325]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowances_ERC20[this][sender_s325][msg.sender]>=0 ) && _allowances_ERC20[this][sender_s325][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:53:39,147 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][sender_s325]==( ( old(_balances_ERC20[this][sender_s325]) ) - amount_s325 ) ) && _balances_ERC20[this][recipient_s325]==( ( old(_balances_ERC20[this][recipient_s325]) ) + amount_s325 ) ) && _allowances_ERC20[this][sender_s325][msg.sender]==( ( old(_allowances_ERC20[this][sender_s325][msg.sender]) ) - amount_s325 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _allowances_ERC20[this][p2][p3]==( old(_allowances_ERC20[this][p2][p3]) ) ) && name_CabGoldToken[this]==( old(name_CabGoldToken[this]) ) ) && symbol_CabGoldToken[this]==( old(symbol_CabGoldToken[this]) ) ) && decimals_CabGoldToken[this]==( old(decimals_CabGoldToken[this]) ) ) && active_CabGoldToken[this]==( old(active_CabGoldToken[this]) ) ) && _minters_MinterRole[this]==( old(_minters_MinterRole[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[sender_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],IdentifierExpression[amount_s325,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[active_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[active_CabGoldToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_minters_MinterRole,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ERC20>]]]]]]
[2020-11-25 11:53:39,155 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= _balances_ERC20[this][from] && value <= _allowances_ERC20[this][from][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowances_ERC20[this][from][msg.sender] >= 0 && _allowances_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transferFrom(from, to, value), return == true && _balances_ERC20[this][from] == old(_balances_ERC20[this][from]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _allowances_ERC20[this][from][msg.sender] == old(_allowances_ERC20[this][from][msg.sender]) - value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3]) && name_CabGoldToken[this] == old(name_CabGoldToken[this]) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this]) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this]) && active_CabGoldToken[this] == old(active_CabGoldToken[this]) && _minters_MinterRole[this] == old(_minters_MinterRole[this]))))
[2020-11-25 11:53:39,156 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ERC200) ==> ( <>AP(success_transferFrom_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:53:39,168 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:53:39 PropertyContainer
[2020-11-25 11:53:39,168 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:53:39,168 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:53:39,168 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:53:39,169 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:53:39,169 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/2) ...
[2020-11-25 11:53:39,170 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:53:39,170 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:53:39,188 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:53:39" (2/2) ...
[2020-11-25 11:53:39,188 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:53:39,189 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:53:39,189 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:53:39,189 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:53:39,189 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/2) ...
[2020-11-25 11:53:39,244 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:53:39,244 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__success
[2020-11-25 11:53:39,244 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:53:39,244 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 11:53:39,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 11:53:39,244 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 11:53:39,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 11:53:39,245 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 11:53:39,246 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 11:53:39,246 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 11:53:39,246 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 11:53:39,246 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 11:53:39,246 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 11:53:39,247 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 11:53:39,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 11:53:39,247 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 11:53:39,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 11:53:39,247 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 11:53:39,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 11:53:39,247 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 11:53:39,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 11:53:39,247 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 11:53:39,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 11:53:39,247 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 11:53:39,248 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 11:53:39,248 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 11:53:39,248 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles
[2020-11-25 11:53:39,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-25 11:53:39,249 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole
[2020-11-25 11:53:39,249 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole
[2020-11-25 11:53:39,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole
[2020-11-25 11:53:39,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole
[2020-11-25 11:53:39,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__success
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__success
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-25 11:53:39,250 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable
[2020-11-25 11:53:39,250 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable
[2020-11-25 11:53:39,251 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable
[2020-11-25 11:53:39,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable
[2020-11-25 11:53:39,251 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 11:53:39,251 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 11:53:39,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-25 11:53:39,251 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-25 11:53:39,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-25 11:53:39,251 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 11:53:39,251 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-25 11:53:39,251 INFO  L130     BoogieDeclarations]: Found specification of procedure CabGoldToken_CabGoldToken_NoBaseCtor__success
[2020-11-25 11:53:39,252 INFO  L130     BoogieDeclarations]: Found specification of procedure CabGoldToken_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure CabGoldToken_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CabGoldToken
[2020-11-25 11:53:39,252 INFO  L130     BoogieDeclarations]: Found specification of procedure active_CabGoldToken
[2020-11-25 11:53:39,253 INFO  L138     BoogieDeclarations]: Found implementation of procedure active_CabGoldToken
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__success
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 11:53:39,253 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Roles
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Roles
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_MinterRole
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_MinterRole
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Mintable
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Mintable
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CabGoldToken
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:53:39,254 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles.Role_ctor__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,255 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 11:53:39,256 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:53:39,257 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__success
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure Roles_Roles__fail
[2020-11-25 11:53:39,258 INFO  L130     BoogieDeclarations]: Found specification of procedure add~Role~address_Roles__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure remove~Role~address_Roles__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure has~Role~address_Roles__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__success
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure MinterRole_MinterRole__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__success
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure isMinter~address_MinterRole__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__success
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_MinterRole__fail
[2020-11-25 11:53:39,259 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__success
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure renounceMinter_MinterRole__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure _addMinter~address_MinterRole__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure _removeMinter~address_MinterRole__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 11:53:39,260 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CabGoldToken_CabGoldToken_NoBaseCtor__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CabGoldToken_CabGoldToken__success
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure CabGoldToken_CabGoldToken__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CabGoldToken__success
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CabGoldToken__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CabGoldToken__success
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CabGoldToken__fail
[2020-11-25 11:53:39,261 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CabGoldToken__success
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CabGoldToken__fail
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure active_CabGoldToken__success
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure active_CabGoldToken__fail
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:53:39,262 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMinter_pre__fail
[2020-11-25 11:53:39,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:53:39,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:53:39,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__fail
[2020-11-25 11:53:39,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles.Role_ctor__success
[2020-11-25 11:53:39,262 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,263 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 11:53:39,264 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:53:39,265 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-25 11:53:39,266 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__fail
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles_NoBaseCtor__success
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__fail
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure Roles_Roles__success
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__fail
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~Role~address_Roles__success
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__fail
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure remove~Role~address_Roles__success
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__fail
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure has~Role~address_Roles__success
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__fail
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole_NoBaseCtor__success
[2020-11-25 11:53:39,267 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__fail
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure MinterRole_MinterRole__success
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__fail
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure isMinter~address_MinterRole__success
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__fail
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_MinterRole__success
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__fail
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure renounceMinter_MinterRole__success
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__fail
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure _addMinter~address_MinterRole__success
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__fail
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure _removeMinter~address_MinterRole__success
[2020-11-25 11:53:39,268 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__fail
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable_NoBaseCtor__success
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__fail
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Mintable_ERC20Mintable__success
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__fail
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20Mintable__success
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-25 11:53:39,269 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure CabGoldToken_CabGoldToken_NoBaseCtor__fail
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure CabGoldToken_CabGoldToken_NoBaseCtor__success
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure CabGoldToken_CabGoldToken__fail
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure CabGoldToken_CabGoldToken__success
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CabGoldToken__fail
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CabGoldToken__success
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CabGoldToken__fail
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CabGoldToken__success
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CabGoldToken__fail
[2020-11-25 11:53:39,270 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CabGoldToken__success
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure active_CabGoldToken__fail
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure active_CabGoldToken__success
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__fail
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMinter_pre__success
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 11:53:39,271 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Roles
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Roles
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_MinterRole
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_MinterRole
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Mintable
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Mintable
[2020-11-25 11:53:39,272 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-25 11:53:39,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-25 11:53:39,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CabGoldToken
[2020-11-25 11:53:39,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:53:39,273 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:53:39,273 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:53:39,680 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:53:39,681 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:53:39,681 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:53:39,813 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:53:40,081 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:53:40,082 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-25 11:53:40,083 INFO  L202        PluginConnector]: Adding new model CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:53:40 BoogieIcfgContainer
[2020-11-25 11:53:40,083 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:53:39" (2/2) ...
[2020-11-25 11:53:40,083 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:53:40,084 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@72104b04 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:53:40, skipping insertion in model container
[2020-11-25 11:53:40,084 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:53:40,084 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:53:40,084 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:53:40,085 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:53:40,085 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/3) ...
[2020-11-25 11:53:40,085 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@49956251 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:53:40, skipping insertion in model container
[2020-11-25 11:53:40,085 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:53:39" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:53:40,118 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:53:40 NWAContainer
[2020-11-25 11:53:40,118 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:53:40,119 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:53:40,119 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:53:40,120 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:53:40,120 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:53:40" (3/4) ...
[2020-11-25 11:53:40,121 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@4e21632b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:53:40, skipping insertion in model container
[2020-11-25 11:53:40,121 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:53:40" (4/4) ...
[2020-11-25 11:53:40,123 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:53:40,127 INFO  L110   BuchiProductObserver]: Initial RCFG 2282 locations, 3356 edges
[2020-11-25 11:53:40,127 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:53:40,137 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:53:41,828 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:53:41,837 INFO  L110   BuchiProductObserver]: BuchiProgram size 5922 locations, 11060 edges
[2020-11-25 11:53:41,837 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:53:41 BoogieIcfgContainer
[2020-11-25 11:53:41,837 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:53:41,838 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:53:41,838 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:53:41,839 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:53:41,839 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:53:41" (1/1) ...
[2020-11-25 11:53:41,951 INFO  L313           BlockEncoder]: Initial Icfg 5922 locations, 11060 edges
[2020-11-25 11:53:41,952 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:53:41,952 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:53:41,952 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:53:41,953 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:53:41,967 INFO  L70    emoveInfeasibleEdges]: Removed 162 edges and 19 locations because of local infeasibility
[2020-11-25 11:53:41,980 INFO  L70        RemoveSinkStates]: Removed 92 edges and 61 locations by removing sink states
[2020-11-25 11:53:41,992 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:53:41,996 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:53:42,000 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:53:42,000 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:53:42,003 INFO  L313           BlockEncoder]: Encoded RCFG 5814 locations, 10765 edges
[2020-11-25 11:53:42,004 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:53:42 BasicIcfg
[2020-11-25 11:53:42,004 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:53:42,004 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:53:42,004 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:53:42,006 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:53:42,006 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:53:42,006 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:53:38" (1/6) ...
[2020-11-25 11:53:42,008 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42a0f3c0 and model type CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:53:42, skipping insertion in model container
[2020-11-25 11:53:42,008 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:53:42,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:53:39" (2/6) ...
[2020-11-25 11:53:42,008 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42a0f3c0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:53:42, skipping insertion in model container
[2020-11-25 11:53:42,008 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:53:42,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:53:40" (3/6) ...
[2020-11-25 11:53:42,008 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42a0f3c0 and model type CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:53:42, skipping insertion in model container
[2020-11-25 11:53:42,008 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:53:42,008 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:53:40" (4/6) ...
[2020-11-25 11:53:42,009 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42a0f3c0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:53:42, skipping insertion in model container
[2020-11-25 11:53:42,009 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:53:42,009 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:53:41" (5/6) ...
[2020-11-25 11:53:42,009 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@42a0f3c0 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:53:42, skipping insertion in model container
[2020-11-25 11:53:42,009 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:53:42,009 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:53:42" (6/6) ...
[2020-11-25 11:53:42,010 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CabGoldToken_0x8255d6f2c09b64a1358ec465e0314392b500bdab_transferfrom-normal.bpl_BEv2
[2020-11-25 11:53:42,043 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:53:42,043 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:53:42,043 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:53:42,044 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:53:42,044 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:53:42,044 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:53:42,044 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:53:42,044 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:53:42,044 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:53:42,093 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5814 states.
[2020-11-25 11:53:42,150 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:42,150 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:53:42,150 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:53:42,161 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:42,161 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:42,161 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:53:42,161 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5814 states.
[2020-11-25 11:53:42,196 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:42,197 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:53:42,197 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:53:42,198 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:42,198 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6462]              assume null == 0;
[L6463]  CALL        call this := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L6463]  RET         call this := FreshRefGenerator__success();
[L6464]              assume now >= 0;
[L6465]              assume DType[this] == CabGoldToken;
[L6466]              assume msgvalue_MSG == 0;
[L6467]              gas := gas - 53000;
[L6468]  CALL        call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4139]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4139]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4140]  COND TRUE   revert
[L6468]  RET         call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L6469]              assume !revert && gas >= 0;

Loop:
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND TRUE   choice == 18
[L6339]              gas := gas - 21000;
[L6340]  COND FALSE  !(gas >= 0)
[L6472]  RET         call CorralChoice_CabGoldToken(this);

[2020-11-25 11:53:42,211 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:42,212 INFO  L82        PathProgramCache]: Analyzing trace with hash -1595969061, now seen corresponding path program 1 times
[2020-11-25 11:53:42,215 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:42,233 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:53:42,269 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:53:42,270 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:53:42,271 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:53:42,594 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:53:42,602 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:53:42,603 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:53:42,604 INFO  L87              Difference]: Start difference. First operand 5814 states. Second operand 4 states.
[2020-11-25 11:53:43,285 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:53:43,285 INFO  L93              Difference]: Finished difference Result 3573 states and 4360 transitions.
[2020-11-25 11:53:43,286 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:53:43,289 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3573 states and 4360 transitions.
[2020-11-25 11:53:43,320 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:43,344 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3573 states to 3573 states and 4360 transitions.
[2020-11-25 11:53:43,345 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:53:43,347 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 887
[2020-11-25 11:53:43,347 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3573 states and 4360 transitions.
[2020-11-25 11:53:43,359 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:53:43,359 INFO  L728         BuchiCegarLoop]: Abstraction has 3573 states and 4360 transitions.
[2020-11-25 11:53:43,375 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3573 states and 4360 transitions.
[2020-11-25 11:53:43,437 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3573 to 3573.
[2020-11-25 11:53:43,437 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3573 states.
[2020-11-25 11:53:43,444 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3573 states to 3573 states and 4360 transitions.
[2020-11-25 11:53:43,445 INFO  L751         BuchiCegarLoop]: Abstraction has 3573 states and 4360 transitions.
[2020-11-25 11:53:43,445 INFO  L631         BuchiCegarLoop]: Abstraction has 3573 states and 4360 transitions.
[2020-11-25 11:53:43,445 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:53:43,445 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3573 states and 4360 transitions.
[2020-11-25 11:53:43,453 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:43,453 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:53:43,453 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:53:43,455 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:43,455 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6462]              assume null == 0;
[L6463]  CALL        call this := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L6463]  RET         call this := FreshRefGenerator__success();
[L6464]              assume now >= 0;
[L6465]              assume DType[this] == CabGoldToken;
[L6466]              assume msgvalue_MSG == 0;
[L6467]              gas := gas - 53000;
[L6468]  CALL        call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4139]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4139]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4140]  COND TRUE   revert
[L6468]  RET         call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L6469]              assume !revert && gas >= 0;
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND FALSE  !(__exception)
[L632]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3017]  COND TRUE   DType[this] == CabGoldToken
[L3018]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3245]              __var_4 := null;
[L3246]  COND TRUE   !(sender_s435 != null)
[L3247]              revert := true;
[L3018]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3019]  COND TRUE   revert
[L632]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L633]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && name_CabGoldToken[this] == old(name_CabGoldToken[this])) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this])) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this])) && active_CabGoldToken[this] == old(active_CabGoldToken[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this]));
[L3]                 revert := revert_hold;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

Loop:
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND FALSE  !(__exception)
[L632]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3017]  COND TRUE   DType[this] == CabGoldToken
[L3018]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3245]              __var_4 := null;
[L3246]  COND TRUE   !(sender_s435 != null)
[L3247]              revert := true;
[L3018]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3019]  COND TRUE   revert
[L632]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L633]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && name_CabGoldToken[this] == old(name_CabGoldToken[this])) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this])) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this])) && active_CabGoldToken[this] == old(active_CabGoldToken[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this]));
[L3]                 revert := revert_hold;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

[2020-11-25 11:53:43,459 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:43,459 INFO  L82        PathProgramCache]: Analyzing trace with hash 1072932, now seen corresponding path program 1 times
[2020-11-25 11:53:43,461 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:43,471 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:53:43,495 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:53:43,495 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:53:43,495 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:53:43,496 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:53:43,496 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:53:43,496 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:53:43,497 INFO  L87              Difference]: Start difference. First operand 3573 states and 4360 transitions. cyclomatic complexity: 789 Second operand 3 states.
[2020-11-25 11:53:43,615 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:53:43,616 INFO  L93              Difference]: Finished difference Result 4895 states and 6017 transitions.
[2020-11-25 11:53:43,616 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:53:43,616 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4895 states and 6017 transitions.
[2020-11-25 11:53:43,634 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:53:43,653 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4895 states to 4895 states and 6017 transitions.
[2020-11-25 11:53:43,653 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1285
[2020-11-25 11:53:43,654 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1285
[2020-11-25 11:53:43,655 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4895 states and 6017 transitions.
[2020-11-25 11:53:43,660 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:53:43,660 INFO  L728         BuchiCegarLoop]: Abstraction has 4895 states and 6017 transitions.
[2020-11-25 11:53:43,664 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4895 states and 6017 transitions.
[2020-11-25 11:53:43,712 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4895 to 4235.
[2020-11-25 11:53:43,712 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4235 states.
[2020-11-25 11:53:43,718 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4235 states to 4235 states and 5217 transitions.
[2020-11-25 11:53:43,718 INFO  L751         BuchiCegarLoop]: Abstraction has 4235 states and 5217 transitions.
[2020-11-25 11:53:43,718 INFO  L631         BuchiCegarLoop]: Abstraction has 4235 states and 5217 transitions.
[2020-11-25 11:53:43,718 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:53:43,718 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4235 states and 5217 transitions.
[2020-11-25 11:53:43,725 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:43,725 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:53:43,726 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:53:43,728 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:43,728 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6462]              assume null == 0;
[L6463]  CALL        call this := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L6463]  RET         call this := FreshRefGenerator__success();
[L6464]              assume now >= 0;
[L6465]              assume DType[this] == CabGoldToken;
[L6466]              assume msgvalue_MSG == 0;
[L6467]              gas := gas - 53000;
[L6468]  CALL        call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4139]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND TRUE   revert
[L4139]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4140]  COND TRUE   revert
[L6468]  RET         call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L6469]              assume !revert && gas >= 0;
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND FALSE  !(__exception)
[L632]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3017]  COND TRUE   DType[this] == CabGoldToken
[L3018]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3245]              __var_4 := null;
[L3246]  COND TRUE   !(sender_s435 != null)
[L3247]              revert := true;
[L3018]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3019]  COND TRUE   revert
[L632]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L633]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && name_CabGoldToken[this] == old(name_CabGoldToken[this])) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this])) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this])) && active_CabGoldToken[this] == old(active_CabGoldToken[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this]));
[L3]                 revert := revert_hold;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

Loop:
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND FALSE  !(__exception)
[L632]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3017]  COND TRUE   DType[this] == CabGoldToken
[L3018]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3245]              __var_4 := null;
[L3246]  COND TRUE   !(sender_s435 != null)
[L3247]              revert := true;
[L3018]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3019]  COND TRUE   revert
[L632]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L633]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((((__ret_0_ == true && _balances_ERC20[this][sender_s325] == old(_balances_ERC20[this][sender_s325]) - amount_s325) && _balances_ERC20[this][recipient_s325] == old(_balances_ERC20[this][recipient_s325]) + amount_s325) && _allowances_ERC20[this][sender_s325][msgsender_MSG] == old(_allowances_ERC20[this][sender_s325][msgsender_MSG]) - amount_s325) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _allowances_ERC20[this][p2][p3] == old(_allowances_ERC20[this][p2][p3])) && name_CabGoldToken[this] == old(name_CabGoldToken[this])) && symbol_CabGoldToken[this] == old(symbol_CabGoldToken[this])) && decimals_CabGoldToken[this] == old(decimals_CabGoldToken[this])) && active_CabGoldToken[this] == old(active_CabGoldToken[this])) && _minters_MinterRole[this] == old(_minters_MinterRole[this]));
[L3]                 revert := revert_hold;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

[2020-11-25 11:53:43,730 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:43,731 INFO  L82        PathProgramCache]: Analyzing trace with hash 1648435874, now seen corresponding path program 1 times
[2020-11-25 11:53:43,732 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:43,738 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:53:43,760 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:53:43,761 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:53:43,761 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:53:43,761 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:53:43,761 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:53:43,761 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:53:43,761 INFO  L87              Difference]: Start difference. First operand 4235 states and 5217 transitions. cyclomatic complexity: 984 Second operand 3 states.
[2020-11-25 11:53:43,853 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:53:43,853 INFO  L93              Difference]: Finished difference Result 4895 states and 5730 transitions.
[2020-11-25 11:53:43,853 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:53:43,854 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4895 states and 5730 transitions.
[2020-11-25 11:53:43,871 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:53:43,891 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4895 states to 4447 states and 5174 transitions.
[2020-11-25 11:53:43,891 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1134
[2020-11-25 11:53:43,892 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1193
[2020-11-25 11:53:43,893 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4447 states and 5174 transitions.
[2020-11-25 11:53:43,898 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:53:43,898 INFO  L728         BuchiCegarLoop]: Abstraction has 4447 states and 5174 transitions.
[2020-11-25 11:53:43,903 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4447 states and 5174 transitions.
[2020-11-25 11:53:43,945 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4447 to 3867.
[2020-11-25 11:53:43,946 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3867 states.
[2020-11-25 11:53:43,951 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3867 states to 3867 states and 4454 transitions.
[2020-11-25 11:53:43,951 INFO  L751         BuchiCegarLoop]: Abstraction has 3867 states and 4454 transitions.
[2020-11-25 11:53:43,952 INFO  L631         BuchiCegarLoop]: Abstraction has 3867 states and 4454 transitions.
[2020-11-25 11:53:43,952 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:53:43,952 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3867 states and 4454 transitions.
[2020-11-25 11:53:43,959 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:43,959 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:53:43,959 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:53:43,962 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:43,963 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6462]              assume null == 0;
[L6463]  CALL        call this := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L6463]  RET         call this := FreshRefGenerator__success();
[L6464]              assume now >= 0;
[L6465]              assume DType[this] == CabGoldToken;
[L6466]              assume msgvalue_MSG == 0;
[L6467]              gas := gas - 53000;
[L6468]  CALL        call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4139]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4139]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4140]  COND FALSE  !(revert)
[L4143]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L4143]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4144]  COND FALSE  !(revert)
[L4147]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3668]              assume msgsender_MSG != null;
[L3669]              Balance[this] := 0;
[L3671]  CALL        call __var_20 := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L3671]  RET         call __var_20 := FreshRefGenerator__success();
[L3672]  COND FALSE  !(revert)
[L3675]              _minters_MinterRole[this] := __var_20;
[L3677]  COND FALSE  !(DType[this] == CabGoldToken)
[L3682]  COND TRUE   DType[this] == ERC20Mintable
[L3683]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3843]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3568]  CALL        call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3622]              __var_19 := null;
[L3623]  COND FALSE  !(!(account_s670 != null))
[L3627]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s670]][account_s670];
[L3568]  RET         call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3569]  COND FALSE  !(revert)
[L3572]  COND FALSE  !(!!__var_17)
[L3576]              M_Ref_bool[bearer_Roles.Role[role_s622]][account_s622] := true;
[L3843]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3844]  COND FALSE  !(revert)
[L3847]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L3683]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3684]  COND FALSE  !(revert)
[L3709]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L4147]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4148]  COND FALSE  !(revert)
[L4151]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L3905]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L3905]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3906]  COND FALSE  !(revert)
[L3909]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L3909]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]  COND FALSE  !(revert)
[L3913]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3668]              assume msgsender_MSG != null;
[L3669]              Balance[this] := 0;
[L3671]  CALL        call __var_20 := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L3671]  RET         call __var_20 := FreshRefGenerator__success();
[L3672]  COND FALSE  !(revert)
[L3675]              _minters_MinterRole[this] := __var_20;
[L3677]  COND FALSE  !(DType[this] == CabGoldToken)
[L3682]  COND TRUE   DType[this] == ERC20Mintable
[L3683]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3843]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3568]  CALL        call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3622]              __var_19 := null;
[L3623]  COND FALSE  !(!(account_s670 != null))
[L3627]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s670]][account_s670];
[L3568]  RET         call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3569]  COND FALSE  !(revert)
[L3572]  COND FALSE  !(!!__var_17)
[L3576]              M_Ref_bool[bearer_Roles.Role[role_s622]][account_s622] := true;
[L3843]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3844]  COND FALSE  !(revert)
[L3847]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L3683]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3684]  COND FALSE  !(revert)
[L3709]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3913]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3914]  COND FALSE  !(revert)
[L3917]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3878]              assume msgsender_MSG != null;
[L3879]              Balance[this] := 0;
[L3917]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4003]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4003]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4004]  COND FALSE  !(revert)
[L4007]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L4007]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3980]              assume msgsender_MSG != null;
[L3981]              Balance[this] := 0;
[L4011]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4155]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call CabGoldToken_CabGoldToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4100]              assume msgsender_MSG != null;
[L4101]              Balance[this] := 0;
[L4102]              name_CabGoldToken[this] := -1569364958;
[L4103]              symbol_CabGoldToken[this] := 1094563867;
[L4104]              decimals_CabGoldToken[this] := 18;
[L4105]              active_CabGoldToken[this] := false;
[L4159]  RET         call CabGoldToken_CabGoldToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L6468]  RET         call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L6469]              assume !revert && gas >= 0;
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND TRUE   __exception
[L607]               __tmp__Balance := Balance;
[L608]               __tmp__DType := DType;
[L609]               __tmp__Alloc := Alloc;
[L610]               __tmp__balance_ADDR := balance_ADDR;
[L611]               __tmp__M_Ref_int := M_Ref_int;
[L612]               __tmp__sum__balances0 := sum__balances0;
[L613]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L614]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L615]               __tmp__sum__allowances1 := sum__allowances1;
[L616]               __tmp__M_Ref_bool := M_Ref_bool;
[L617]               __tmp__sum := sum;
[L618]               __tmp__Length := Length;
[L619]               __tmp__now := now;
[L620]               __tmp___balances_ERC20 := _balances_ERC20;
[L621]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L622]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L623]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L624]               __tmp___minters_MinterRole := _minters_MinterRole;
[L625]               __tmp__name_CabGoldToken := name_CabGoldToken;
[L626]               __tmp__symbol_CabGoldToken := symbol_CabGoldToken;
[L627]               __tmp__decimals_CabGoldToken := decimals_CabGoldToken;
[L628]               __tmp__active_CabGoldToken := active_CabGoldToken;
[L629]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2960]  COND TRUE   __tmp__DType[this] == CabGoldToken
[L2961]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3213]              __var_4 := null;
[L3214]  COND TRUE   !(sender_s435 != null)
[L3215]              revert := true;
[L2961]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2962]  COND TRUE   revert
[L629]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L630]               assume revert || gas < 0;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

Loop:
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND TRUE   __exception
[L607]               __tmp__Balance := Balance;
[L608]               __tmp__DType := DType;
[L609]               __tmp__Alloc := Alloc;
[L610]               __tmp__balance_ADDR := balance_ADDR;
[L611]               __tmp__M_Ref_int := M_Ref_int;
[L612]               __tmp__sum__balances0 := sum__balances0;
[L613]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L614]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L615]               __tmp__sum__allowances1 := sum__allowances1;
[L616]               __tmp__M_Ref_bool := M_Ref_bool;
[L617]               __tmp__sum := sum;
[L618]               __tmp__Length := Length;
[L619]               __tmp__now := now;
[L620]               __tmp___balances_ERC20 := _balances_ERC20;
[L621]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L622]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L623]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L624]               __tmp___minters_MinterRole := _minters_MinterRole;
[L625]               __tmp__name_CabGoldToken := name_CabGoldToken;
[L626]               __tmp__symbol_CabGoldToken := symbol_CabGoldToken;
[L627]               __tmp__decimals_CabGoldToken := decimals_CabGoldToken;
[L628]               __tmp__active_CabGoldToken := active_CabGoldToken;
[L629]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2960]  COND TRUE   __tmp__DType[this] == CabGoldToken
[L2961]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3213]              __var_4 := null;
[L3214]  COND TRUE   !(sender_s435 != null)
[L3215]              revert := true;
[L2961]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2962]  COND TRUE   revert
[L629]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L630]               assume revert || gas < 0;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

[2020-11-25 11:53:43,968 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:43,968 INFO  L82        PathProgramCache]: Analyzing trace with hash -1915706069, now seen corresponding path program 1 times
[2020-11-25 11:53:43,969 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:43,998 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:53:44,082 INFO  L134       CoverageAnalysis]: Checked inductivity of 266 backedges. 0 proven. 9 refuted. 0 times theorem prover too weak. 257 trivial. 0 not checked.
[2020-11-25 11:53:44,083 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 11:53:44,083 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [6] total 6
[2020-11-25 11:53:44,083 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:53:44,084 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 11:53:44,084 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 11:53:44,084 INFO  L87              Difference]: Start difference. First operand 3867 states and 4454 transitions. cyclomatic complexity: 589 Second operand 6 states.
[2020-11-25 11:53:44,170 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:53:44,170 INFO  L93              Difference]: Finished difference Result 3886 states and 4476 transitions.
[2020-11-25 11:53:44,170 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 6 states. 
[2020-11-25 11:53:44,170 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3886 states and 4476 transitions.
[2020-11-25 11:53:44,179 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:44,192 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3886 states to 3873 states and 4460 transitions.
[2020-11-25 11:53:44,192 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1045
[2020-11-25 11:53:44,193 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1045
[2020-11-25 11:53:44,193 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3873 states and 4460 transitions.
[2020-11-25 11:53:44,197 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:53:44,197 INFO  L728         BuchiCegarLoop]: Abstraction has 3873 states and 4460 transitions.
[2020-11-25 11:53:44,200 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3873 states and 4460 transitions.
[2020-11-25 11:53:44,229 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3873 to 3873.
[2020-11-25 11:53:44,229 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3873 states.
[2020-11-25 11:53:44,233 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3873 states to 3873 states and 4460 transitions.
[2020-11-25 11:53:44,233 INFO  L751         BuchiCegarLoop]: Abstraction has 3873 states and 4460 transitions.
[2020-11-25 11:53:44,233 INFO  L631         BuchiCegarLoop]: Abstraction has 3873 states and 4460 transitions.
[2020-11-25 11:53:44,233 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:53:44,233 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3873 states and 4460 transitions.
[2020-11-25 11:53:44,239 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:53:44,239 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:53:44,239 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:53:44,241 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:53:44,241 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ERC200 := false;
[L3]                 call_transferFrom_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L6462]              assume null == 0;
[L6463]  CALL        call this := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L6463]  RET         call this := FreshRefGenerator__success();
[L6464]              assume now >= 0;
[L6465]              assume DType[this] == CabGoldToken;
[L6466]              assume msgvalue_MSG == 0;
[L6467]              gas := gas - 53000;
[L6468]  CALL        call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4139]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4139]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4140]  COND FALSE  !(revert)
[L4143]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L4143]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4144]  COND FALSE  !(revert)
[L4147]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3668]              assume msgsender_MSG != null;
[L3669]              Balance[this] := 0;
[L3671]  CALL        call __var_20 := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L3671]  RET         call __var_20 := FreshRefGenerator__success();
[L3672]  COND FALSE  !(revert)
[L3675]              _minters_MinterRole[this] := __var_20;
[L3677]  COND TRUE   DType[this] == CabGoldToken
[L3678]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3843]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3568]  CALL        call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3622]              __var_19 := null;
[L3623]  COND FALSE  !(!(account_s670 != null))
[L3627]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s670]][account_s670];
[L3568]  RET         call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3569]  COND FALSE  !(revert)
[L3572]  COND FALSE  !(!!__var_17)
[L3576]              M_Ref_bool[bearer_Roles.Role[role_s622]][account_s622] := true;
[L3843]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3844]  COND FALSE  !(revert)
[L3847]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L3678]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3679]  COND FALSE  !(revert)
[L3709]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L4147]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4148]  COND FALSE  !(revert)
[L4151]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L3905]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L3905]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3906]  COND FALSE  !(revert)
[L3909]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L3909]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]  COND FALSE  !(revert)
[L3913]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3668]              assume msgsender_MSG != null;
[L3669]              Balance[this] := 0;
[L3671]  CALL        call __var_20 := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L3671]  RET         call __var_20 := FreshRefGenerator__success();
[L3672]  COND FALSE  !(revert)
[L3675]              _minters_MinterRole[this] := __var_20;
[L3677]  COND TRUE   DType[this] == CabGoldToken
[L3678]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3843]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3568]  CALL        call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3622]              __var_19 := null;
[L3623]  COND FALSE  !(!(account_s670 != null))
[L3627]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s670]][account_s670];
[L3568]  RET         call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3569]  COND FALSE  !(revert)
[L3572]  COND FALSE  !(!!__var_17)
[L3576]              M_Ref_bool[bearer_Roles.Role[role_s622]][account_s622] := true;
[L3843]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3844]  COND FALSE  !(revert)
[L3847]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L3678]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3679]  COND FALSE  !(revert)
[L3709]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3913]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3914]  COND FALSE  !(revert)
[L3917]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3878]              assume msgsender_MSG != null;
[L3879]              Balance[this] := 0;
[L3917]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4003]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4003]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4004]  COND FALSE  !(revert)
[L4007]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L4007]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3980]              assume msgsender_MSG != null;
[L3981]              Balance[this] := 0;
[L4011]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4155]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call CabGoldToken_CabGoldToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4100]              assume msgsender_MSG != null;
[L4101]              Balance[this] := 0;
[L4102]              name_CabGoldToken[this] := -1569364958;
[L4103]              symbol_CabGoldToken[this] := 1094563867;
[L4104]              decimals_CabGoldToken[this] := 18;
[L4105]              active_CabGoldToken[this] := false;
[L4159]  RET         call CabGoldToken_CabGoldToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L6468]  RET         call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
[L6469]              assume !revert && gas >= 0;
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND TRUE   __exception
[L607]               __tmp__Balance := Balance;
[L608]               __tmp__DType := DType;
[L609]               __tmp__Alloc := Alloc;
[L610]               __tmp__balance_ADDR := balance_ADDR;
[L611]               __tmp__M_Ref_int := M_Ref_int;
[L612]               __tmp__sum__balances0 := sum__balances0;
[L613]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L614]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L615]               __tmp__sum__allowances1 := sum__allowances1;
[L616]               __tmp__M_Ref_bool := M_Ref_bool;
[L617]               __tmp__sum := sum;
[L618]               __tmp__Length := Length;
[L619]               __tmp__now := now;
[L620]               __tmp___balances_ERC20 := _balances_ERC20;
[L621]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L622]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L623]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L624]               __tmp___minters_MinterRole := _minters_MinterRole;
[L625]               __tmp__name_CabGoldToken := name_CabGoldToken;
[L626]               __tmp__symbol_CabGoldToken := symbol_CabGoldToken;
[L627]               __tmp__decimals_CabGoldToken := decimals_CabGoldToken;
[L628]               __tmp__active_CabGoldToken := active_CabGoldToken;
[L629]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2960]  COND TRUE   __tmp__DType[this] == CabGoldToken
[L2961]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3213]              __var_4 := null;
[L3214]  COND TRUE   !(sender_s435 != null)
[L3215]              revert := true;
[L2961]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2962]  COND TRUE   revert
[L629]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L630]               assume revert || gas < 0;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

Loop:
[L6472]  CALL        call CorralChoice_CabGoldToken(this);
[L6284]              havoc msgsender_MSG;
[L6285]              havoc msgvalue_MSG;
[L6286]              havoc choice;
[L6287]              havoc __ret_0_totalSupply;
[L6288]              havoc account_s236;
[L6289]              havoc __ret_0_balanceOf;
[L6290]              havoc recipient_s255;
[L6291]              havoc amount_s255;
[L6292]              havoc __ret_0_transfer;
[L6293]              havoc owner_s271;
[L6294]              havoc spender_s271;
[L6295]              havoc __ret_0_allowance;
[L6296]              havoc spender_s290;
[L6297]              havoc value_s290;
[L6298]              havoc __ret_0_approve;
[L6299]              havoc sender_s325;
[L6300]              havoc recipient_s325;
[L6301]              havoc amount_s325;
[L6302]              havoc __ret_0_transferFrom;
[L6303]              havoc spender_s352;
[L6304]              havoc addedValue_s352;
[L6305]              havoc __ret_0_increaseAllowance;
[L6306]              havoc spender_s379;
[L6307]              havoc subtractedValue_s379;
[L6308]              havoc __ret_0_decreaseAllowance;
[L6309]              havoc account_s718;
[L6310]              havoc __ret_0_isMinter;
[L6311]              havoc account_s730;
[L6312]              havoc account_s795;
[L6313]              havoc amount_s795;
[L6314]              havoc __ret_0_mint;
[L6315]              havoc amount_s810;
[L6316]              havoc account_s823;
[L6317]              havoc amount_s823;
[L6318]              havoc __ret_0_name;
[L6319]              havoc __ret_0_symbol;
[L6320]              havoc __ret_0_decimals;
[L6321]              havoc __ret_0_active;
[L6322]              havoc tmpNow;
[L6323]              havoc gas;
[L6324]              assume gas > 4000000 && gas <= 8000000;
[L6325]              tmpNow := now;
[L6326]              havoc now;
[L6327]              assume now > tmpNow;
[L6328]              assume msgsender_MSG != null;
[L6329]              assume DType[msgsender_MSG] != SafeMath;
[L6330]              assume DType[msgsender_MSG] != IERC20;
[L6331]              assume DType[msgsender_MSG] != ERC20;
[L6332]              assume DType[msgsender_MSG] != Roles;
[L6333]              assume DType[msgsender_MSG] != MinterRole;
[L6334]              assume DType[msgsender_MSG] != ERC20Mintable;
[L6335]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6336]              assume DType[msgsender_MSG] != CabGoldToken;
[L6337]              Alloc[msgsender_MSG] := true;
[L6338]  COND FALSE  !(choice == 18)
[L6344]  COND FALSE  !(choice == 17)
[L6350]  COND FALSE  !(choice == 16)
[L6357]  COND FALSE  !(choice == 15)
[L6363]  COND FALSE  !(choice == 14)
[L6370]  COND TRUE   choice == 13
[L6371]              gas := gas - 21000;
[L6372]  COND TRUE   gas >= 0
[L6373]              assume amount_s325 >= 0 && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6374]              assume msgvalue_MSG == 0;
[L6375]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ERC200 := true;
[L3]                 call_transferFrom_ERC200 := false;
[L3]                 revert := revert_hold;
[L604]               havoc __exception;
[L605]               revert := false;
[L606]   COND TRUE   __exception
[L607]               __tmp__Balance := Balance;
[L608]               __tmp__DType := DType;
[L609]               __tmp__Alloc := Alloc;
[L610]               __tmp__balance_ADDR := balance_ADDR;
[L611]               __tmp__M_Ref_int := M_Ref_int;
[L612]               __tmp__sum__balances0 := sum__balances0;
[L613]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L614]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L615]               __tmp__sum__allowances1 := sum__allowances1;
[L616]               __tmp__M_Ref_bool := M_Ref_bool;
[L617]               __tmp__sum := sum;
[L618]               __tmp__Length := Length;
[L619]               __tmp__now := now;
[L620]               __tmp___balances_ERC20 := _balances_ERC20;
[L621]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L622]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L623]               __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L624]               __tmp___minters_MinterRole := _minters_MinterRole;
[L625]               __tmp__name_CabGoldToken := name_CabGoldToken;
[L626]               __tmp__symbol_CabGoldToken := symbol_CabGoldToken;
[L627]               __tmp__decimals_CabGoldToken := decimals_CabGoldToken;
[L628]               __tmp__active_CabGoldToken := active_CabGoldToken;
[L629]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2960]  COND TRUE   __tmp__DType[this] == CabGoldToken
[L2961]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3213]              __var_4 := null;
[L3214]  COND TRUE   !(sender_s435 != null)
[L3215]              revert := true;
[L2961]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2962]  COND TRUE   revert
[L629]   RET         call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L630]               assume revert || gas < 0;
[L6375]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L6472]  RET         call CorralChoice_CabGoldToken(this);

[2020-11-25 11:53:44,246 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:44,246 INFO  L82        PathProgramCache]: Analyzing trace with hash -273272907, now seen corresponding path program 1 times
[2020-11-25 11:53:44,247 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:44,264 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:44,285 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:44,366 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:44,367 INFO  L82        PathProgramCache]: Analyzing trace with hash 27758613, now seen corresponding path program 1 times
[2020-11-25 11:53:44,367 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:44,372 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:44,377 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:44,386 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:53:44,386 INFO  L82        PathProgramCache]: Analyzing trace with hash 346563297, now seen corresponding path program 1 times
[2020-11-25 11:53:44,387 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:53:44,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:44,425 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 11:53:44,633 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 168
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2017 to 4027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 11:53:44,952 WARN  L188               SmtUtils]: Spent 273.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 120
[2020-11-25 11:53:45,228 WARN  L188               SmtUtils]: Spent 274.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3517 to 7027
[2020-11-25 11:53:45,944 WARN  L188               SmtUtils]: Spent 700.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 235
[2020-11-25 11:53:46,873 WARN  L188               SmtUtils]: Spent 926.00 ms on a formula simplification. DAG size of input: 302 DAG size of output: 283
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 11:53:47,152 WARN  L188               SmtUtils]: Spent 245.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 173
[2020-11-25 11:53:47,406 WARN  L188               SmtUtils]: Spent 252.00 ms on a formula simplification that was a NOOP. DAG size: 341
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 8543 to 17077
[2020-11-25 11:53:47,903 WARN  L188               SmtUtils]: Spent 487.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 274
[2020-11-25 11:53:48,127 WARN  L188               SmtUtils]: Spent 222.00 ms on a formula simplification that was a NOOP. DAG size: 274
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 11:53:48,324 WARN  L188               SmtUtils]: Spent 184.00 ms on a formula simplification. DAG size of input: 166 DAG size of output: 166
[2020-11-25 11:53:48,333 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-25 11:53:49,015 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification. DAG size of input: 270 DAG size of output: 256
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #8: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 11:53:49,409 WARN  L188               SmtUtils]: Spent 142.00 ms on a formula simplification that was a NOOP. DAG size: 285
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 11:53:50,001 WARN  L188               SmtUtils]: Spent 583.00 ms on a formula simplification. DAG size of input: 235 DAG size of output: 235
[2020-11-25 11:53:50,893 WARN  L188               SmtUtils]: Spent 889.00 ms on a formula simplification. DAG size of input: 301 DAG size of output: 283
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 11:53:51,121 WARN  L188               SmtUtils]: Spent 208.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 173
[2020-11-25 11:53:51,361 WARN  L188               SmtUtils]: Spent 238.00 ms on a formula simplification that was a NOOP. DAG size: 341
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
[2020-11-25 11:53:51,830 WARN  L188               SmtUtils]: Spent 461.00 ms on a formula simplification. DAG size of input: 274 DAG size of output: 274
[2020-11-25 11:53:52,543 WARN  L188               SmtUtils]: Spent 711.00 ms on a formula simplification. DAG size of input: 407 DAG size of output: 390
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 11:53:53,091 WARN  L188               SmtUtils]: Spent 533.00 ms on a formula simplification. DAG size of input: 254 DAG size of output: 235
[2020-11-25 11:53:53,303 WARN  L188               SmtUtils]: Spent 193.00 ms on a formula simplification that was a NOOP. DAG size: 351
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #9: 19937 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19937 to 39869
[2020-11-25 11:53:53,591 WARN  L188               SmtUtils]: Spent 254.00 ms on a formula simplification. DAG size of input: 246 DAG size of output: 235
[2020-11-25 11:53:53,958 WARN  L188               SmtUtils]: Spent 365.00 ms on a formula simplification. DAG size of input: 353 DAG size of output: 352
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
Garbage collection #8: 16103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 16103 to 32203
Garbage collection #9: 32203 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 32203 to 64403
Garbage collection #10: 64403 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 64403 to 114377
[2020-11-25 11:53:55,289 WARN  L188               SmtUtils]: Spent 1.31 s on a formula simplification. DAG size of input: 363 DAG size of output: 347
[2020-11-25 11:53:55,307 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:55,327 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:53:55,336 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:53:55 BasicIcfg
[2020-11-25 11:53:55,336 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:53:55,336 INFO  L168              Benchmark]: Toolchain (without parser) took 16342.16 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.4 GB). Free memory was 929.8 MB in the beginning and 865.6 MB in the end (delta: 64.2 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,337 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,337 INFO  L168              Benchmark]: Boogie Preprocessor took 103.27 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,337 INFO  L168              Benchmark]: UtopiaSpecLang took 69.55 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 903.0 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,338 INFO  L168              Benchmark]: Boogie Printer took 20.02 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,338 INFO  L168              Benchmark]: RCFGBuilder took 895.10 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.8 MB). Free memory was 897.6 MB in the beginning and 975.8 MB in the end (delta: -78.2 MB). Peak memory consumption was 184.0 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,338 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.70 ms. Allocated memory is still 1.1 GB. Free memory was 975.8 MB in the beginning and 963.3 MB in the end (delta: 12.4 MB). Peak memory consumption was 12.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,339 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1718.87 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 174.6 MB). Free memory was 963.3 MB in the beginning and 913.5 MB in the end (delta: 49.9 MB). Peak memory consumption was 446.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,339 INFO  L168              Benchmark]: BlockEncodingV2 took 166.20 ms. Allocated memory is still 1.3 GB. Free memory was 913.5 MB in the beginning and 827.6 MB in the end (delta: 85.8 MB). Peak memory consumption was 85.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,339 INFO  L168              Benchmark]: BuchiAutomizer took 13331.93 ms. Allocated memory was 1.3 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 818.0 MB in the beginning and 865.6 MB in the end (delta: -47.6 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
[2020-11-25 11:53:55,342 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5922 locations, 11060 edges
  - StatisticsResult: Encoded RCFG
    5814 locations, 10765 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 103.27 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 69.55 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 903.0 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 20.02 ms. Allocated memory is still 1.0 GB. Free memory was 903.0 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 895.10 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 49.8 MB). Free memory was 897.6 MB in the beginning and 975.8 MB in the end (delta: -78.2 MB). Peak memory consumption was 184.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.70 ms. Allocated memory is still 1.1 GB. Free memory was 975.8 MB in the beginning and 963.3 MB in the end (delta: 12.4 MB). Peak memory consumption was 12.4 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1718.87 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 174.6 MB). Free memory was 963.3 MB in the beginning and 913.5 MB in the end (delta: 49.9 MB). Peak memory consumption was 446.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 166.20 ms. Allocated memory is still 1.3 GB. Free memory was 913.5 MB in the beginning and 827.6 MB in the end (delta: 85.8 MB). Peak memory consumption was 85.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 13331.93 ms. Allocated memory was 1.3 GB in the beginning and 2.4 GB in the end (delta: 1.2 GB). Free memory was 818.0 MB in the beginning and 865.6 MB in the end (delta: -47.6 MB). Peak memory consumption was 1.1 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2282 locations, 3356 edges
  - StatisticsResult: BuchiProgram size
    5922 locations, 11060 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 6 locations. The remainder module has 3873 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 13.2s and 5 iterations.  TraceHistogramMax:6. Analysis of lassos took 11.6s. Construction of modules took 0.5s. BÃ¼chi inclusion checks took 0.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 1240 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4235 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18275 SDtfs, 9618 SDslu, 24304 SDs, 0 SdLazy, 3126 SolverSat, 2610 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1094563896) = (new CabGoldToken)({from : 1094563878});
[L4139]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4139]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4140]  COND FALSE  !(revert)
[L4143]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L4143]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4144]  COND FALSE  !(revert)
[L4147]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3668]              assume msgsender_MSG != null;
[L3669]              Balance[this] := 0;
[L3671]  CALL        call __var_20 := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L3671]  RET         call __var_20 := FreshRefGenerator__success();
[L3672]  COND FALSE  !(revert)
[L3675]              _minters_MinterRole[this] := __var_20;
[L3677]  COND TRUE   DType[this] == CabGoldToken
[L3678]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3843]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3568]  CALL        call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3622]              __var_19 := null;
[L3623]  COND FALSE  !(!(account_s670 != null))
[L3627]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s670]][account_s670];
[L3568]  RET         call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3569]  COND FALSE  !(revert)
[L3572]  COND FALSE  !(!!__var_17)
[L3576]              M_Ref_bool[bearer_Roles.Role[role_s622]][account_s622] := true;
[L3843]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3844]  COND FALSE  !(revert)
[L3847]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L3678]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3679]  COND FALSE  !(revert)
[L3709]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L4147]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L4148]  COND FALSE  !(revert)
[L4151]  CALL        call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L3905]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L3905]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3906]  COND FALSE  !(revert)
[L3909]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L3909]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3910]  COND FALSE  !(revert)
[L3913]  CALL        call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3709]  CALL        call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3668]              assume msgsender_MSG != null;
[L3669]              Balance[this] := 0;
[L3671]  CALL        call __var_20 := FreshRefGenerator__success();
[L2551]              havoc newRef;
[L2552]              assume Alloc[newRef] == false;
[L2553]              Alloc[newRef] := true;
[L2554]              assume newRef != null;
[L3671]  RET         call __var_20 := FreshRefGenerator__success();
[L3672]  COND FALSE  !(revert)
[L3675]              _minters_MinterRole[this] := __var_20;
[L3677]  COND TRUE   DType[this] == CabGoldToken
[L3678]  CALL        call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3843]  CALL        call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3568]  CALL        call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3622]              __var_19 := null;
[L3623]  COND FALSE  !(!(account_s670 != null))
[L3627]              __ret_0_ := M_Ref_bool[bearer_Roles.Role[role_s670]][account_s670];
[L3568]  RET         call __var_17 := has~Role~address_Roles__success(this, msgsender_MSG, msgvalue_MSG, role_s622, account_s622);
[L3569]  COND FALSE  !(revert)
[L3572]  COND FALSE  !(!!__var_17)
[L3576]              M_Ref_bool[bearer_Roles.Role[role_s622]][account_s622] := true;
[L3843]  RET         call add~Role~address_Roles__success(this, this, 0, _minters_MinterRole[this], account_s755);
[L3844]  COND FALSE  !(revert)
[L3847]              assert { :EventEmitted "MinterAdded_MinterRole" } true;
[L3678]  RET         call _addMinter~address_MinterRole__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG);
[L3679]  COND FALSE  !(revert)
[L3709]  RET         call MinterRole_MinterRole_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3710]  COND FALSE  !(revert)
[L3913]  RET         call MinterRole_MinterRole__success(this, msgsender_MSG, msgvalue_MSG);
[L3914]  COND FALSE  !(revert)
[L3917]  CALL        call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3878]              assume msgsender_MSG != null;
[L3879]              Balance[this] := 0;
[L3917]  RET         call ERC20Mintable_ERC20Mintable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  COND FALSE  !(revert)
[L4151]  RET         call ERC20Mintable_ERC20Mintable__success(this, msgsender_MSG, msgvalue_MSG);
[L4152]  COND FALSE  !(revert)
[L4155]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4003]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L4003]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4004]  COND FALSE  !(revert)
[L4007]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2795]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2749]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2734]              assume msgsender_MSG != null;
[L2735]              Balance[this] := 0;
[L2749]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2750]  COND FALSE  !(revert)
[L2795]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2796]  COND FALSE  !(revert)
[L2799]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2771]              assume msgsender_MSG != null;
[L2772]              Balance[this] := 0;
[L2773]              _balances_ERC20[this] := zeroRefintArr();
[L2774]              sum__balances0[this] := 0;
[L2775]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2776]              sum__allowances1[this] := 0;
[L2777]              _totalSupply_ERC20[this] := 0;
[L2799]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2800]  COND FALSE  !(revert)
[L4007]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4008]  COND FALSE  !(revert)
[L4011]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3980]              assume msgsender_MSG != null;
[L3981]              Balance[this] := 0;
[L4011]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4012]  COND FALSE  !(revert)
[L4155]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4156]  COND FALSE  !(revert)
[L4159]  CALL        call CabGoldToken_CabGoldToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4100]              assume msgsender_MSG != null;
[L4101]              Balance[this] := 0;
[L4102]              name_CabGoldToken[this] := -1569364958;
[L4103]              symbol_CabGoldToken[this] := 1094563867;
[L4104]              decimals_CabGoldToken[this] := 18;
[L4105]              active_CabGoldToken[this] := false;
[L4159]  RET         call CabGoldToken_CabGoldToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4160]  COND FALSE  !(revert)
[L6468]  RET         call CabGoldToken_CabGoldToken__success(this, msgsender_MSG, msgvalue_MSG);
ERC20(1094563896).transferFrom~address~address~uint256.gas(3979002)({from : 1094563890, sender : 0, recipient : 1094563887, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L604]              havoc __exception;
[L605]              revert := false;
[L606]   COND TRUE  __exception
[L607]              __tmp__Balance := Balance;
[L608]              __tmp__DType := DType;
[L609]              __tmp__Alloc := Alloc;
[L610]              __tmp__balance_ADDR := balance_ADDR;
[L611]              __tmp__M_Ref_int := M_Ref_int;
[L612]              __tmp__sum__balances0 := sum__balances0;
[L613]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L614]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L615]              __tmp__sum__allowances1 := sum__allowances1;
[L616]              __tmp__M_Ref_bool := M_Ref_bool;
[L617]              __tmp__sum := sum;
[L618]              __tmp__Length := Length;
[L619]              __tmp__now := now;
[L620]              __tmp___balances_ERC20 := _balances_ERC20;
[L621]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L622]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L623]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L624]              __tmp___minters_MinterRole := _minters_MinterRole;
[L625]              __tmp__name_CabGoldToken := name_CabGoldToken;
[L626]              __tmp__symbol_CabGoldToken := symbol_CabGoldToken;
[L627]              __tmp__decimals_CabGoldToken := decimals_CabGoldToken;
[L628]              __tmp__active_CabGoldToken := active_CabGoldToken;
[L629]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2960]  COND TRUE  __tmp__DType[this] == CabGoldToken
[L2961]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3213]             __var_4 := null;
[L3214]  COND TRUE  !(sender_s435 != null)
[L3215]             revert := true;
[L2961]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2962]  COND TRUE  revert
[L629]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L630]              assume revert || gas < 0;
[L6375]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);

Loop:
ERC20(1094563896).transferFrom~address~address~uint256.gas(3979001)({from : 1094563891, sender : 0, recipient : 1094563888, amount : 0});
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((((((p1 != sender_s325 && p1 != recipient_s325) && (p2 != sender_s325 || p3 != msgsender_MSG)) && sender_s325 != recipient_s325) && amount_s325 <= _balances_ERC20[this][sender_s325]) && amount_s325 <= _allowances_ERC20[this][sender_s325][msgsender_MSG]) && _balances_ERC20[this][recipient_s325] + amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s325 >= 0) && amount_s325 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s325] >= 0) && _balances_ERC20[this][recipient_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][sender_s325] >= 0) && _balances_ERC20[this][sender_s325] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowances_ERC20[this][sender_s325][msgsender_MSG] >= 0) && _allowances_ERC20[this][sender_s325][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transferFrom_ERC200 := true;
[L3]                call_transferFrom_ERC200 := false;
[L3]                revert := revert_hold;
[L604]              havoc __exception;
[L605]              revert := false;
[L606]   COND TRUE  __exception
[L607]              __tmp__Balance := Balance;
[L608]              __tmp__DType := DType;
[L609]              __tmp__Alloc := Alloc;
[L610]              __tmp__balance_ADDR := balance_ADDR;
[L611]              __tmp__M_Ref_int := M_Ref_int;
[L612]              __tmp__sum__balances0 := sum__balances0;
[L613]              __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L614]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L615]              __tmp__sum__allowances1 := sum__allowances1;
[L616]              __tmp__M_Ref_bool := M_Ref_bool;
[L617]              __tmp__sum := sum;
[L618]              __tmp__Length := Length;
[L619]              __tmp__now := now;
[L620]              __tmp___balances_ERC20 := _balances_ERC20;
[L621]              __tmp___allowances_ERC20 := _allowances_ERC20;
[L622]              __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L623]              __tmp__bearer_Roles.Role := bearer_Roles.Role;
[L624]              __tmp___minters_MinterRole := _minters_MinterRole;
[L625]              __tmp__name_CabGoldToken := name_CabGoldToken;
[L626]              __tmp__symbol_CabGoldToken := symbol_CabGoldToken;
[L627]              __tmp__decimals_CabGoldToken := decimals_CabGoldToken;
[L628]              __tmp__active_CabGoldToken := active_CabGoldToken;
[L629]   CALL       call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2960]  COND TRUE  __tmp__DType[this] == CabGoldToken
[L2961]  CALL       call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L3213]             __var_4 := null;
[L3214]  COND TRUE  !(sender_s435 != null)
[L3215]             revert := true;
[L2961]  RET        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L2962]  COND TRUE  revert
[L629]   RET        call __ret_0_ := transferFrom~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);
[L630]              assume revert || gas < 0;
[L6375]  RET        call __ret_0_transferFrom := transferFrom~address~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, sender_s325, recipient_s325, amount_s325);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
