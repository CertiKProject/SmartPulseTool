This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:38:32,707 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:38:32,708 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:38:32,719 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:38:32,719 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:38:32,720 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:38:32,721 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:38:32,722 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:38:32,724 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:38:32,724 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:38:32,725 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:38:32,725 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:38:32,726 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:38:32,726 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:38:32,727 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:38:32,728 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:38:32,728 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:38:32,729 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:38:32,731 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:38:32,732 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:38:32,733 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:38:32,733 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:38:32,735 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:38:32,735 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:38:32,735 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:38:32,736 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:38:32,736 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:38:32,737 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:38:32,737 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:38:32,737 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:38:32,738 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:38:32,738 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:38:32,738 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:38:32,739 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:38:32,740 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:38:32,740 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:38:32,740 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:38:32,740 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:38:32,741 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:38:32,741 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:38:32,742 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:38:32,742 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:38:32,749 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:38:32,750 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:38:32,750 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:38:32,751 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:38:32,751 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:38:32,751 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:38:32,752 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:38:32,752 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:38:32,753 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:38:32,753 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:38:32,753 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:38:32,753 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:38:32,777 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:38:32,788 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:38:32,792 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:38:32,793 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:38:32,794 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:38:32,794 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl
[2020-11-25 11:38:32,795 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl'
[2020-11-25 11:38:32,859 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:38:32,860 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:38:32,860 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:38:32,860 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:38:32,860 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:38:32,877 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,878 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,902 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,902 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,917 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,923 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,928 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,935 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:38:32,935 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:38:32,936 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:38:32,937 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:38:32,941 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/1) ...
[2020-11-25 11:38:32,955 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:32,961 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:32,969 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:32,975 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s200 && p1!=_to_s200 ) && ( p2!=_from_s200 || p3!=msg.sender ) ) && _from_s200!=_to_s200 ) && _value_s200<=balanceOf_ZXL[this][_from_s200] ) && _value_s200<=allowance_ZXL[this][_from_s200][msg.sender] ) && ( balanceOf_ZXL[this][_to_s200] + _value_s200 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s200>=0 ) && _value_s200<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_to_s200]>=0 ) && balanceOf_ZXL[this][_to_s200]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_ZXL[this][_from_s200]>=0 ) && balanceOf_ZXL[this][_from_s200]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_ZXL[this][_from_s200][msg.sender]>=0 ) && allowance_ZXL[this][_from_s200][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:38:32,978 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( success_s200==true && balanceOf_ZXL[this][_from_s200]==( ( old(balanceOf_ZXL[this][_from_s200]) ) - _value_s200 ) ) && balanceOf_ZXL[this][_to_s200]==( ( old(balanceOf_ZXL[this][_to_s200]) ) + _value_s200 ) ) && allowance_ZXL[this][_from_s200][msg.sender]==( ( old(allowance_ZXL[this][_from_s200][msg.sender]) ) - _value_s200 ) ) && totalSupply_ZXL[this]==( old(totalSupply_ZXL[this]) ) ) && balanceOf_ZXL[this][p1]==( old(balanceOf_ZXL[this][p1]) ) ) && allowance_ZXL[this][p2][p3]==( old(allowance_ZXL[this][p2][p3]) ) ) && name_ZXL[this]==( old(name_ZXL[this]) ) ) && symbol_ZXL[this]==( old(symbol_ZXL[this]) ) ) && decimals_ZXL[this]==( old(decimals_ZXL[this]) ) ) && owner_ZXL[this]==( old(owner_ZXL[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s200,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_ZXL>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_to_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[_from_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],IdentifierExpression[_value_s200,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_ZXL,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ZXL>]]]]]]
[2020-11-25 11:38:32,983 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ZXL.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_ZXL[this][from] && value <= allowance_ZXL[this][from][msg.sender] && balanceOf_ZXL[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][to] >= 0 && balanceOf_ZXL[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_ZXL[this][from] >= 0 &&  balanceOf_ZXL[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_ZXL[this][from][msg.sender] >= 0 && allowance_ZXL[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ZXL.transferFrom(from, to, value), return == true && balanceOf_ZXL[this][from] == old(balanceOf_ZXL[this][from]) - value && balanceOf_ZXL[this][to] == old(balanceOf_ZXL[this][to]) + value && allowance_ZXL[this][from][msg.sender] == old(allowance_ZXL[this][from][msg.sender]) - value && totalSupply_ZXL[this] == old(totalSupply_ZXL[this]) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1]) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3]) && name_ZXL[this] == old(name_ZXL[this]) && symbol_ZXL[this] == old(symbol_ZXL[this]) && decimals_ZXL[this] == old(decimals_ZXL[this]) && owner_ZXL[this] == old(owner_ZXL[this]))))
[2020-11-25 11:38:32,983 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ZXL0) ==> ( <>AP(success_transferFrom_ZXL0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:38:32,989 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:32 PropertyContainer
[2020-11-25 11:38:32,989 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:38:32,989 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:38:32,989 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:38:32,989 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:38:32,990 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/2) ...
[2020-11-25 11:38:32,990 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:38:32,991 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:38:33,000 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:32" (2/2) ...
[2020-11-25 11:38:33,000 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:38:33,000 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:38:33,000 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:38:33,000 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:38:33,001 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/2) ...
[2020-11-25 11:38:33,059 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:38:33,059 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 11:38:33,059 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 11:38:33,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 11:38:33,060 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 11:38:33,060 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL_NoBaseCtor__success
[2020-11-25 11:38:33,060 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL
[2020-11-25 11:38:33,060 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL
[2020-11-25 11:38:33,061 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-25 11:38:33,061 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL
[2020-11-25 11:38:33,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL
[2020-11-25 11:38:33,061 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL
[2020-11-25 11:38:33,061 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL
[2020-11-25 11:38:33,062 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL
[2020-11-25 11:38:33,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL
[2020-11-25 11:38:33,062 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL
[2020-11-25 11:38:33,062 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL
[2020-11-25 11:38:33,063 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL
[2020-11-25 11:38:33,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL
[2020-11-25 11:38:33,063 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL
[2020-11-25 11:38:33,063 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL
[2020-11-25 11:38:33,063 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL
[2020-11-25 11:38:33,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL
[2020-11-25 11:38:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL
[2020-11-25 11:38:33,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL
[2020-11-25 11:38:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL
[2020-11-25 11:38:33,064 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL
[2020-11-25 11:38:33,064 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL
[2020-11-25 11:38:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL
[2020-11-25 11:38:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL
[2020-11-25 11:38:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL
[2020-11-25 11:38:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL
[2020-11-25 11:38:33,065 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL
[2020-11-25 11:38:33,065 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:38:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:38:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:38:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 11:38:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 11:38:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZXL
[2020-11-25 11:38:33,066 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:38:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:38:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 11:38:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 11:38:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 11:38:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL_NoBaseCtor__fail
[2020-11-25 11:38:33,067 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL__success
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure ZXL_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__success
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__success
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL__success
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL__success
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ZXL__fail
[2020-11-25 11:38:33,068 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ZXL__fail
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ZXL__fail
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ZXL__fail
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ZXL__fail
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ZXL__fail
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ZXL__fail
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__success
[2020-11-25 11:38:33,069 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ZXL__fail
[2020-11-25 11:38:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:38:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:38:33,070 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL_NoBaseCtor__fail
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL_NoBaseCtor__success
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL__fail
[2020-11-25 11:38:33,070 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZXL_ZXL__success
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__fail
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ZXL__success
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__fail
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ZXL__success
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__fail
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ZXL__success
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__fail
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ZXL__success
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL__fail
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_ZXL__success
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL__fail
[2020-11-25 11:38:33,071 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL__fail
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL__fail
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL__fail
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL__fail
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__fail
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__fail
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ZXL__success
[2020-11-25 11:38:33,072 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__fail
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ZXL__success
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZXL
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:38:33,073 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:38:33,073 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:38:33,237 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:33,336 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:33,337 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:33,337 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:38:33,536 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:38:33,536 INFO  L286             CfgBuilder]: Removed 2 assue(true) statements.
[2020-11-25 11:38:33,538 INFO  L202        PluginConnector]: Adding new model ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:33 BoogieIcfgContainer
[2020-11-25 11:38:33,538 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:32" (2/2) ...
[2020-11-25 11:38:33,538 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:38:33,539 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@4387cda9 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:33, skipping insertion in model container
[2020-11-25 11:38:33,539 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:38:33,539 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:38:33,539 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:38:33,540 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:38:33,541 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/3) ...
[2020-11-25 11:38:33,541 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@25b20eb0 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:33, skipping insertion in model container
[2020-11-25 11:38:33,541 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:32" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:38:33,574 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:33 NWAContainer
[2020-11-25 11:38:33,574 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:38:33,575 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:38:33,575 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:38:33,575 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:38:33,576 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:33" (3/4) ...
[2020-11-25 11:38:33,577 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@72b9afc4 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:33, skipping insertion in model container
[2020-11-25 11:38:33,577 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:33" (4/4) ...
[2020-11-25 11:38:33,580 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:38:33,583 INFO  L110   BuchiProductObserver]: Initial RCFG 821 locations, 993 edges
[2020-11-25 11:38:33,583 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:38:33,592 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:38:34,589 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:38:34,592 INFO  L110   BuchiProductObserver]: BuchiProgram size 1908 locations, 3191 edges
[2020-11-25 11:38:34,593 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:34 BoogieIcfgContainer
[2020-11-25 11:38:34,593 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:38:34,593 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:38:34,593 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:38:34,595 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:38:34,596 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:34" (1/1) ...
[2020-11-25 11:38:34,660 INFO  L313           BlockEncoder]: Initial Icfg 1908 locations, 3191 edges
[2020-11-25 11:38:34,660 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:38:34,661 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:38:34,661 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:38:34,661 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:38:34,670 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 7 locations because of local infeasibility
[2020-11-25 11:38:34,675 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:38:34,683 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:38:34,686 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:38:34,688 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:38:34,688 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:38:34,691 INFO  L313           BlockEncoder]: Encoded RCFG 1890 locations, 3148 edges
[2020-11-25 11:38:34,692 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:38:34 BasicIcfg
[2020-11-25 11:38:34,692 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:38:34,692 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:38:34,692 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:38:34,695 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:38:34,695 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:34,695 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:38:32" (1/6) ...
[2020-11-25 11:38:34,696 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67564161 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:34, skipping insertion in model container
[2020-11-25 11:38:34,696 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:34,696 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:38:32" (2/6) ...
[2020-11-25 11:38:34,696 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67564161 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:34, skipping insertion in model container
[2020-11-25 11:38:34,696 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:34,696 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:38:33" (3/6) ...
[2020-11-25 11:38:34,697 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67564161 and model type ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:38:34, skipping insertion in model container
[2020-11-25 11:38:34,697 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:34,697 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:38:33" (4/6) ...
[2020-11-25 11:38:34,697 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67564161 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:38:34, skipping insertion in model container
[2020-11-25 11:38:34,697 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:34,697 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:38:34" (5/6) ...
[2020-11-25 11:38:34,697 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@67564161 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:38:34, skipping insertion in model container
[2020-11-25 11:38:34,698 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:38:34,698 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:38:34" (6/6) ...
[2020-11-25 11:38:34,699 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZXL_0xfb3B4D413Fb8dF96C6336E8DD103f8af38B48F87_transferfrom-normal.bpl_BEv2
[2020-11-25 11:38:34,742 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:38:34,743 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:38:34,744 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:38:34,745 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:38:34,745 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:38:34,745 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:38:34,745 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:38:34,745 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:38:34,745 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:38:34,775 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1890 states.
[2020-11-25 11:38:34,815 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:34,815 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:34,815 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:34,824 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:34,825 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:34,825 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:38:34,825 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1890 states.
[2020-11-25 11:38:34,836 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:34,836 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:34,836 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:34,837 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:34,837 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND TRUE   revert
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND TRUE   choice == 12
[L2104]              gas := gas - 21000;
[L2105]  COND FALSE  !(gas >= 0)
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:34,851 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:34,851 INFO  L82        PathProgramCache]: Analyzing trace with hash -649242053, now seen corresponding path program 1 times
[2020-11-25 11:38:34,855 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:34,876 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:34,911 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:34,913 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:34,913 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:38:34,916 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:35,034 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:38:35,035 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:38:35,038 INFO  L87              Difference]: Start difference. First operand 1890 states. Second operand 4 states.
[2020-11-25 11:38:35,445 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:35,445 INFO  L93              Difference]: Finished difference Result 2322 states and 3774 transitions.
[2020-11-25 11:38:35,445 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:38:35,446 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2322 states and 3774 transitions.
[2020-11-25 11:38:35,460 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:38:35,482 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2322 states to 2262 states and 3675 transitions.
[2020-11-25 11:38:35,483 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2020-11-25 11:38:35,486 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1128
[2020-11-25 11:38:35,487 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2262 states and 3675 transitions.
[2020-11-25 11:38:35,497 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:35,497 INFO  L728         BuchiCegarLoop]: Abstraction has 2262 states and 3675 transitions.
[2020-11-25 11:38:35,510 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2262 states and 3675 transitions.
[2020-11-25 11:38:35,554 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2262 to 1612.
[2020-11-25 11:38:35,554 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1612 states.
[2020-11-25 11:38:35,558 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1612 states to 1612 states and 2473 transitions.
[2020-11-25 11:38:35,559 INFO  L751         BuchiCegarLoop]: Abstraction has 1612 states and 2473 transitions.
[2020-11-25 11:38:35,559 INFO  L631         BuchiCegarLoop]: Abstraction has 1612 states and 2473 transitions.
[2020-11-25 11:38:35,559 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:38:35,560 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1612 states and 2473 transitions.
[2020-11-25 11:38:35,565 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:35,565 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:35,565 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:35,566 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:35,566 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND TRUE   choice == 12
[L2104]              gas := gas - 21000;
[L2105]  COND FALSE  !(gas >= 0)
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:35,568 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:35,568 INFO  L82        PathProgramCache]: Analyzing trace with hash 30816317, now seen corresponding path program 1 times
[2020-11-25 11:38:35,569 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:35,576 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:35,588 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:35,588 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:35,588 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:38:35,589 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:35,590 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:38:35,590 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:38:35,590 INFO  L87              Difference]: Start difference. First operand 1612 states and 2473 transitions. cyclomatic complexity: 863 Second operand 4 states.
[2020-11-25 11:38:35,795 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:35,795 INFO  L93              Difference]: Finished difference Result 1515 states and 1622 transitions.
[2020-11-25 11:38:35,796 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:38:35,796 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1515 states and 1622 transitions.
[2020-11-25 11:38:35,801 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:35,806 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1515 states to 1515 states and 1622 transitions.
[2020-11-25 11:38:35,806 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 706
[2020-11-25 11:38:35,807 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 706
[2020-11-25 11:38:35,807 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1515 states and 1622 transitions.
[2020-11-25 11:38:35,808 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:35,808 INFO  L728         BuchiCegarLoop]: Abstraction has 1515 states and 1622 transitions.
[2020-11-25 11:38:35,810 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1515 states and 1622 transitions.
[2020-11-25 11:38:35,820 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1515 to 1515.
[2020-11-25 11:38:35,821 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1515 states.
[2020-11-25 11:38:35,823 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1515 states to 1515 states and 1622 transitions.
[2020-11-25 11:38:35,823 INFO  L751         BuchiCegarLoop]: Abstraction has 1515 states and 1622 transitions.
[2020-11-25 11:38:35,823 INFO  L631         BuchiCegarLoop]: Abstraction has 1515 states and 1622 transitions.
[2020-11-25 11:38:35,823 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:38:35,823 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1515 states and 1622 transitions.
[2020-11-25 11:38:35,826 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:35,827 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:35,827 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:35,828 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:35,828 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND TRUE   choice == 5
[L2147]              gas := gas - 21000;
[L2148]  COND TRUE   gas >= 0
[L2149]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2150]              assume msgvalue_MSG == 0;
[L2151]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND TRUE   __exception
[L263]               __tmp__Balance := Balance;
[L264]               __tmp__DType := DType;
[L265]               __tmp__Alloc := Alloc;
[L266]               __tmp__balance_ADDR := balance_ADDR;
[L267]               __tmp__M_Ref_int := M_Ref_int;
[L268]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L269]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L270]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L271]               __tmp__sum_allowance1 := sum_allowance1;
[L272]               __tmp__Length := Length;
[L273]               __tmp__now := now;
[L274]               __tmp__name_ZXL := name_ZXL;
[L275]               __tmp__symbol_ZXL := symbol_ZXL;
[L276]               __tmp__decimals_ZXL := decimals_ZXL;
[L277]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L278]               __tmp__owner_ZXL := owner_ZXL;
[L279]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L280]               __tmp__allowance_ZXL := allowance_ZXL;
[L281]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1284]  COND TRUE   !(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG])
[L1285]              revert := true;
[L281]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L282]               assume revert || gas < 0;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L2199]  RET         call CorralChoice_ZXL(this);

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND TRUE   choice == 5
[L2147]              gas := gas - 21000;
[L2148]  COND TRUE   gas >= 0
[L2149]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2150]              assume msgvalue_MSG == 0;
[L2151]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND TRUE   __exception
[L263]               __tmp__Balance := Balance;
[L264]               __tmp__DType := DType;
[L265]               __tmp__Alloc := Alloc;
[L266]               __tmp__balance_ADDR := balance_ADDR;
[L267]               __tmp__M_Ref_int := M_Ref_int;
[L268]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L269]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L270]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L271]               __tmp__sum_allowance1 := sum_allowance1;
[L272]               __tmp__Length := Length;
[L273]               __tmp__now := now;
[L274]               __tmp__name_ZXL := name_ZXL;
[L275]               __tmp__symbol_ZXL := symbol_ZXL;
[L276]               __tmp__decimals_ZXL := decimals_ZXL;
[L277]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L278]               __tmp__owner_ZXL := owner_ZXL;
[L279]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L280]               __tmp__allowance_ZXL := allowance_ZXL;
[L281]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1284]  COND TRUE   !(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG])
[L1285]              revert := true;
[L281]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L282]               assume revert || gas < 0;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:35,832 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:35,832 INFO  L82        PathProgramCache]: Analyzing trace with hash -1429880628, now seen corresponding path program 1 times
[2020-11-25 11:38:35,832 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:35,844 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:35,889 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:35,889 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:35,889 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 11:38:35,889 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:35,890 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 11:38:35,890 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 11:38:35,890 INFO  L87              Difference]: Start difference. First operand 1515 states and 1622 transitions. cyclomatic complexity: 109 Second operand 6 states.
[2020-11-25 11:38:36,630 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:36,631 INFO  L93              Difference]: Finished difference Result 1663 states and 1784 transitions.
[2020-11-25 11:38:36,631 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:38:36,631 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1663 states and 1784 transitions.
[2020-11-25 11:38:36,638 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:38:36,644 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1663 states to 1663 states and 1784 transitions.
[2020-11-25 11:38:36,644 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 778
[2020-11-25 11:38:36,646 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 778
[2020-11-25 11:38:36,646 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1663 states and 1784 transitions.
[2020-11-25 11:38:36,648 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:36,648 INFO  L728         BuchiCegarLoop]: Abstraction has 1663 states and 1784 transitions.
[2020-11-25 11:38:36,650 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1663 states and 1784 transitions.
[2020-11-25 11:38:36,667 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1663 to 1569.
[2020-11-25 11:38:36,668 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1569 states.
[2020-11-25 11:38:36,670 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1569 states to 1569 states and 1680 transitions.
[2020-11-25 11:38:36,671 INFO  L751         BuchiCegarLoop]: Abstraction has 1569 states and 1680 transitions.
[2020-11-25 11:38:36,671 INFO  L631         BuchiCegarLoop]: Abstraction has 1569 states and 1680 transitions.
[2020-11-25 11:38:36,671 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:38:36,671 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1569 states and 1680 transitions.
[2020-11-25 11:38:36,674 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:38:36,674 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:36,674 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:36,676 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:36,676 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND TRUE   choice == 5
[L2147]              gas := gas - 21000;
[L2148]  COND TRUE   gas >= 0
[L2149]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2150]              assume msgvalue_MSG == 0;
[L2151]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND FALSE  !(__exception)
[L284]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1301]  COND FALSE  !(!(_value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L1305]              sum_allowance1[_from_s200] := sum_allowance1[_from_s200] - allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1306]              allowance_ZXL[this][_from_s200][msgsender_MSG] := (allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1307]              sum_allowance1[_from_s200] := sum_allowance1[_from_s200] + allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1308]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1242]              __var_1 := null;
[L1243]  COND FALSE  !(!(_to_s145 != null))
[L1247]  COND FALSE  !(!(balanceOf_ZXL[this][_from_s145] >= _value_s145))
[L1251]  COND FALSE  !(!((balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_ZXL[this][_to_s145]))
[L1255]              previousBalances_s145 := (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_from_s145];
[L1257]              balanceOf_ZXL[this][_from_s145] := (balanceOf_ZXL[this][_from_s145] - _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1258]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_from_s145];
[L1259]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_to_s145];
[L1260]              balanceOf_ZXL[this][_to_s145] := (balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1261]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_to_s145];
[L1262]              assert { :EventEmitted "Transfer_ZXL" } true;
[L1263]              assert (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s145;
[L1308]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1309]  COND FALSE  !(revert)
[L1312]              success_s200 := true;
[L284]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L285]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s200 == true && balanceOf_ZXL[this][_from_s200] == old(balanceOf_ZXL[this][_from_s200]) - _value_s200) && balanceOf_ZXL[this][_to_s200] == old(balanceOf_ZXL[this][_to_s200]) + _value_s200) && allowance_ZXL[this][_from_s200][msgsender_MSG] == old(allowance_ZXL[this][_from_s200][msgsender_MSG]) - _value_s200) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1])) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L2199]  RET         call CorralChoice_ZXL(this);

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND TRUE   choice == 5
[L2147]              gas := gas - 21000;
[L2148]  COND TRUE   gas >= 0
[L2149]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2150]              assume msgvalue_MSG == 0;
[L2151]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND FALSE  !(__exception)
[L284]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1301]  COND FALSE  !(!(_value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L1305]              sum_allowance1[_from_s200] := sum_allowance1[_from_s200] - allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1306]              allowance_ZXL[this][_from_s200][msgsender_MSG] := (allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1307]              sum_allowance1[_from_s200] := sum_allowance1[_from_s200] + allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1308]  CALL        call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1242]              __var_1 := null;
[L1243]  COND FALSE  !(!(_to_s145 != null))
[L1247]  COND FALSE  !(!(balanceOf_ZXL[this][_from_s145] >= _value_s145))
[L1251]  COND FALSE  !(!((balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 > balanceOf_ZXL[this][_to_s145]))
[L1255]              previousBalances_s145 := (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1256]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_from_s145];
[L1257]              balanceOf_ZXL[this][_from_s145] := (balanceOf_ZXL[this][_from_s145] - _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1258]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_from_s145];
[L1259]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][_to_s145];
[L1260]              balanceOf_ZXL[this][_to_s145] := (balanceOf_ZXL[this][_to_s145] + _value_s145) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1261]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][_to_s145];
[L1262]              assert { :EventEmitted "Transfer_ZXL" } true;
[L1263]              assert (balanceOf_ZXL[this][_from_s145] + balanceOf_ZXL[this][_to_s145]) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == previousBalances_s145;
[L1308]  RET         call _transfer~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1309]  COND FALSE  !(revert)
[L1312]              success_s200 := true;
[L284]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__success(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L285]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((success_s200 == true && balanceOf_ZXL[this][_from_s200] == old(balanceOf_ZXL[this][_from_s200]) - _value_s200) && balanceOf_ZXL[this][_to_s200] == old(balanceOf_ZXL[this][_to_s200]) + _value_s200) && allowance_ZXL[this][_from_s200][msgsender_MSG] == old(allowance_ZXL[this][_from_s200][msgsender_MSG]) - _value_s200) && totalSupply_ZXL[this] == old(totalSupply_ZXL[this])) && balanceOf_ZXL[this][p1] == old(balanceOf_ZXL[this][p1])) && allowance_ZXL[this][p2][p3] == old(allowance_ZXL[this][p2][p3])) && name_ZXL[this] == old(name_ZXL[this])) && symbol_ZXL[this] == old(symbol_ZXL[this])) && decimals_ZXL[this] == old(decimals_ZXL[this])) && owner_ZXL[this] == old(owner_ZXL[this]));
[L3]                 revert := revert_hold;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:36,679 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:36,679 INFO  L82        PathProgramCache]: Analyzing trace with hash 267167150, now seen corresponding path program 1 times
[2020-11-25 11:38:36,680 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:36,698 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:38:36,874 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:38:36,874 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:38:36,874 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [17] imperfect sequences [] total 17
[2020-11-25 11:38:36,875 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:38:36,875 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 18 interpolants.
[2020-11-25 11:38:36,875 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=48, Invalid=258, Unknown=0, NotChecked=0, Total=306
[2020-11-25 11:38:36,875 INFO  L87              Difference]: Start difference. First operand 1569 states and 1680 transitions. cyclomatic complexity: 113 Second operand 18 states.
[2020-11-25 11:38:38,240 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:38:38,240 INFO  L93              Difference]: Finished difference Result 1667 states and 1828 transitions.
[2020-11-25 11:38:38,240 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 11:38:38,240 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1667 states and 1828 transitions.
[2020-11-25 11:38:38,245 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 10
[2020-11-25 11:38:38,249 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1667 states to 1667 states and 1828 transitions.
[2020-11-25 11:38:38,249 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 779
[2020-11-25 11:38:38,250 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 779
[2020-11-25 11:38:38,250 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1667 states and 1828 transitions.
[2020-11-25 11:38:38,252 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:38:38,252 INFO  L728         BuchiCegarLoop]: Abstraction has 1667 states and 1828 transitions.
[2020-11-25 11:38:38,253 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1667 states and 1828 transitions.
[2020-11-25 11:38:38,266 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1667 to 1639.
[2020-11-25 11:38:38,266 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1639 states.
[2020-11-25 11:38:38,267 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1639 states to 1639 states and 1761 transitions.
[2020-11-25 11:38:38,268 INFO  L751         BuchiCegarLoop]: Abstraction has 1639 states and 1761 transitions.
[2020-11-25 11:38:38,268 INFO  L631         BuchiCegarLoop]: Abstraction has 1639 states and 1761 transitions.
[2020-11-25 11:38:38,268 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:38:38,268 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1639 states and 1761 transitions.
[2020-11-25 11:38:38,270 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 11:38:38,271 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:38:38,271 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:38:38,272 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:38:38,272 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_ZXL0 := false;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2189]              assume null == 0;
[L2190]  CALL        call this := FreshRefGenerator__success();
[L1116]              havoc newRef;
[L1117]              assume Alloc[newRef] == false;
[L1118]              Alloc[newRef] := true;
[L1119]              assume newRef != null;
[L2190]  RET         call this := FreshRefGenerator__success();
[L2191]              assume now >= 0;
[L2192]              assume DType[this] == ZXL;
[L2193]              assume msgvalue_MSG == 0;
[L2194]              gas := gas - 53000;
[L2195]  CALL        call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
[L2196]              assume !revert && gas >= 0;
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND TRUE   choice == 5
[L2147]              gas := gas - 21000;
[L2148]  COND TRUE   gas >= 0
[L2149]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2150]              assume msgvalue_MSG == 0;
[L2151]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND TRUE   __exception
[L263]               __tmp__Balance := Balance;
[L264]               __tmp__DType := DType;
[L265]               __tmp__Alloc := Alloc;
[L266]               __tmp__balance_ADDR := balance_ADDR;
[L267]               __tmp__M_Ref_int := M_Ref_int;
[L268]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L269]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L270]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L271]               __tmp__sum_allowance1 := sum_allowance1;
[L272]               __tmp__Length := Length;
[L273]               __tmp__now := now;
[L274]               __tmp__name_ZXL := name_ZXL;
[L275]               __tmp__symbol_ZXL := symbol_ZXL;
[L276]               __tmp__decimals_ZXL := decimals_ZXL;
[L277]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L278]               __tmp__owner_ZXL := owner_ZXL;
[L279]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L280]               __tmp__allowance_ZXL := allowance_ZXL;
[L281]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1284]  COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L1288]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1289]              __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1290]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1291]  CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1216]              __var_1 := null;
[L1217]  COND TRUE   !(_to_s145 != null)
[L1218]              revert := true;
[L1291]  RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1292]  COND TRUE   revert
[L281]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L282]               assume revert || gas < 0;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L2199]  RET         call CorralChoice_ZXL(this);

Loop:
[L2199]  CALL        call CorralChoice_ZXL(this);
[L2063]              havoc msgsender_MSG;
[L2064]              havoc msgvalue_MSG;
[L2065]              havoc choice;
[L2066]              havoc __ret_0_name;
[L2067]              havoc __ret_0_symbol;
[L2068]              havoc __ret_0_decimals;
[L2069]              havoc __ret_0_totalSupply;
[L2070]              havoc arg353_s0;
[L2071]              havoc __ret_0_balanceOf;
[L2072]              havoc arg354_s0;
[L2073]              havoc arg355_s0;
[L2074]              havoc __ret_0_allowance;
[L2075]              havoc _to_s160;
[L2076]              havoc _value_s160;
[L2077]              havoc _from_s200;
[L2078]              havoc _to_s200;
[L2079]              havoc _value_s200;
[L2080]              havoc success_s200;
[L2081]              havoc _spender_s221;
[L2082]              havoc _value_s221;
[L2083]              havoc success_s221;
[L2084]              havoc _spender_s259;
[L2085]              havoc _value_s259;
[L2086]              havoc _extraData_s259;
[L2087]              havoc success_s259;
[L2088]              havoc _value_s295;
[L2089]              havoc success_s295;
[L2090]              havoc _from_s350;
[L2091]              havoc _value_s350;
[L2092]              havoc success_s350;
[L2093]              havoc tmpNow;
[L2094]              havoc gas;
[L2095]              assume gas > 4000000 && gas <= 8000000;
[L2096]              tmpNow := now;
[L2097]              havoc now;
[L2098]              assume now > tmpNow;
[L2099]              assume msgsender_MSG != null;
[L2100]              assume DType[msgsender_MSG] != tokenRecipient;
[L2101]              assume DType[msgsender_MSG] != ZXL;
[L2102]              Alloc[msgsender_MSG] := true;
[L2103]  COND FALSE  !(choice == 12)
[L2109]  COND FALSE  !(choice == 11)
[L2115]  COND FALSE  !(choice == 10)
[L2121]  COND FALSE  !(choice == 9)
[L2127]  COND FALSE  !(choice == 8)
[L2133]  COND FALSE  !(choice == 7)
[L2139]  COND FALSE  !(choice == 6)
[L2146]  COND TRUE   choice == 5
[L2147]              gas := gas - 21000;
[L2148]  COND TRUE   gas >= 0
[L2149]              assume _value_s200 >= 0 && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2150]              assume msgvalue_MSG == 0;
[L2151]  CALL        call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND TRUE   __exception
[L263]               __tmp__Balance := Balance;
[L264]               __tmp__DType := DType;
[L265]               __tmp__Alloc := Alloc;
[L266]               __tmp__balance_ADDR := balance_ADDR;
[L267]               __tmp__M_Ref_int := M_Ref_int;
[L268]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L269]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L270]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L271]               __tmp__sum_allowance1 := sum_allowance1;
[L272]               __tmp__Length := Length;
[L273]               __tmp__now := now;
[L274]               __tmp__name_ZXL := name_ZXL;
[L275]               __tmp__symbol_ZXL := symbol_ZXL;
[L276]               __tmp__decimals_ZXL := decimals_ZXL;
[L277]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L278]               __tmp__owner_ZXL := owner_ZXL;
[L279]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L280]               __tmp__allowance_ZXL := allowance_ZXL;
[L281]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1284]  COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L1288]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1289]              __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1290]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1291]  CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1216]              __var_1 := null;
[L1217]  COND TRUE   !(_to_s145 != null)
[L1218]              revert := true;
[L1291]  RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1292]  COND TRUE   revert
[L281]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L282]               assume revert || gas < 0;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L2199]  RET         call CorralChoice_ZXL(this);

[2020-11-25 11:38:38,274 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:38,274 INFO  L82        PathProgramCache]: Analyzing trace with hash 1996975123, now seen corresponding path program 1 times
[2020-11-25 11:38:38,275 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:38,283 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:38:38,291 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:38:38,334 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:38,335 INFO  L82        PathProgramCache]: Analyzing trace with hash 1661738570, now seen corresponding path program 1 times
[2020-11-25 11:38:38,335 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:38,339 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:38:38,343 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:38:38,353 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:38:38,353 INFO  L82        PathProgramCache]: Analyzing trace with hash -283269284, now seen corresponding path program 1 times
[2020-11-25 11:38:38,353 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:38:38,364 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:38:38,377 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 11:38:38,742 WARN  L188               SmtUtils]: Spent 238.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 171
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2647 to 5281
[2020-11-25 11:38:39,018 WARN  L188               SmtUtils]: Spent 244.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 120
[2020-11-25 11:38:39,272 WARN  L188               SmtUtils]: Spent 253.00 ms on a formula simplification that was a NOOP. DAG size: 265
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
[2020-11-25 11:38:40,155 WARN  L188               SmtUtils]: Spent 871.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 223
[2020-11-25 11:38:41,714 WARN  L188               SmtUtils]: Spent 1.56 s on a formula simplification. DAG size of input: 279 DAG size of output: 254
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.001s / 0.004s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.002s / 0.006s total
Resizing node table from 10559 to 21107
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
[2020-11-25 11:38:42,050 WARN  L188               SmtUtils]: Spent 303.00 ms on a formula simplification. DAG size of input: 162 DAG size of output: 156
[2020-11-25 11:38:42,282 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification that was a NOOP. DAG size: 300
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-25 11:38:42,831 WARN  L188               SmtUtils]: Spent 540.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 241
[2020-11-25 11:38:43,120 WARN  L188               SmtUtils]: Spent 287.00 ms on a formula simplification that was a NOOP. DAG size: 241
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 5281 to 10559
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 11:38:44,763 WARN  L188               SmtUtils]: Spent 1.63 s on a formula simplification. DAG size of input: 195 DAG size of output: 173
[2020-11-25 11:38:44,772 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 11:38:45,208 WARN  L188               SmtUtils]: Spent 204.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 171
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
[2020-11-25 11:38:45,387 WARN  L188               SmtUtils]: Spent 163.00 ms on a formula simplification. DAG size of input: 126 DAG size of output: 120
[2020-11-25 11:38:45,583 WARN  L188               SmtUtils]: Spent 195.00 ms on a formula simplification that was a NOOP. DAG size: 265
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-25 11:38:46,381 WARN  L188               SmtUtils]: Spent 790.00 ms on a formula simplification. DAG size of input: 223 DAG size of output: 223
[2020-11-25 11:38:47,538 WARN  L188               SmtUtils]: Spent 1.15 s on a formula simplification. DAG size of input: 278 DAG size of output: 254
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 11:38:49,085 WARN  L188               SmtUtils]: Spent 1.52 s on a formula simplification. DAG size of input: 228 DAG size of output: 180
[2020-11-25 11:38:49,754 WARN  L188               SmtUtils]: Spent 667.00 ms on a formula simplification that was a NOOP. DAG size: 324
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 11:38:51,293 WARN  L188               SmtUtils]: Spent 1.53 s on a formula simplification. DAG size of input: 272 DAG size of output: 260
[2020-11-25 11:38:52,991 WARN  L188               SmtUtils]: Spent 1.70 s on a formula simplification. DAG size of input: 432 DAG size of output: 417
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9883 to 19763
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 11:38:54,100 WARN  L188               SmtUtils]: Spent 1.08 s on a formula simplification. DAG size of input: 222 DAG size of output: 196
[2020-11-25 11:38:54,453 WARN  L188               SmtUtils]: Spent 339.00 ms on a formula simplification that was a NOOP. DAG size: 297
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
[2020-11-25 11:38:56,942 WARN  L188               SmtUtils]: Spent 2.47 s on a formula simplification. DAG size of input: 284 DAG size of output: 220
[2020-11-25 11:38:58,395 WARN  L188               SmtUtils]: Spent 1.45 s on a formula simplification. DAG size of input: 323 DAG size of output: 322
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 31699 to 63397
Garbage collection #10: 63397 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 63397 to 113383
Garbage collection #11: 113383 nodes / 0 free / 0.002s / 0.004s total
Resizing node table from 113383 to 163367
[2020-11-25 11:39:02,472 WARN  L188               SmtUtils]: Spent 4.03 s on a formula simplification. DAG size of input: 388 DAG size of output: 312
[2020-11-25 11:39:02,485 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:39:02,502 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:39:02,510 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:39:02 BasicIcfg
[2020-11-25 11:39:02,510 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:39:02,510 INFO  L168              Benchmark]: Toolchain (without parser) took 29650.94 ms. Allocated memory was 1.0 GB in the beginning and 2.6 GB in the end (delta: 1.6 GB). Free memory was 945.9 MB in the beginning and 817.4 MB in the end (delta: 128.5 MB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,510 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,511 INFO  L168              Benchmark]: Boogie Preprocessor took 75.10 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,511 INFO  L168              Benchmark]: UtopiaSpecLang took 53.55 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,511 INFO  L168              Benchmark]: Boogie Printer took 10.80 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,511 INFO  L168              Benchmark]: RCFGBuilder took 538.63 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.6 MB in the end (delta: 59.2 MB). Peak memory consumption was 59.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,512 INFO  L168              Benchmark]: UtopiaLTL2Aut took 35.47 ms. Allocated memory is still 1.0 GB. Free memory was 870.6 MB in the beginning and 867.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,512 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1018.29 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 867.1 MB in the beginning and 882.3 MB in the end (delta: -15.2 MB). Peak memory consumption was 151.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,512 INFO  L168              Benchmark]: BlockEncodingV2 took 98.71 ms. Allocated memory is still 1.1 GB. Free memory was 882.3 MB in the beginning and 850.4 MB in the end (delta: 31.8 MB). Peak memory consumption was 31.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,512 INFO  L168              Benchmark]: BuchiAutomizer took 27817.41 ms. Allocated memory was 1.1 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 850.4 MB in the beginning and 817.4 MB in the end (delta: 33.0 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-25 11:39:02,515 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    1908 locations, 3191 edges
  - StatisticsResult: Encoded RCFG
    1890 locations, 3148 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.21 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 75.10 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 940.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.55 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 10.80 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 538.63 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 870.6 MB in the end (delta: 59.2 MB). Peak memory consumption was 59.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 35.47 ms. Allocated memory is still 1.0 GB. Free memory was 870.6 MB in the beginning and 867.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1018.29 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 64.0 MB). Free memory was 867.1 MB in the beginning and 882.3 MB in the end (delta: -15.2 MB). Peak memory consumption was 151.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 98.71 ms. Allocated memory is still 1.1 GB. Free memory was 882.3 MB in the beginning and 850.4 MB in the end (delta: 31.8 MB). Peak memory consumption was 31.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 27817.41 ms. Allocated memory was 1.1 GB in the beginning and 2.6 GB in the end (delta: 1.5 GB). Free memory was 850.4 MB in the beginning and 817.4 MB in the end (delta: 33.0 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    821 locations, 993 edges
  - StatisticsResult: BuchiProgram size
    1908 locations, 3191 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 18 locations. The remainder module has 1639 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 27.7s and 5 iterations.  TraceHistogramMax:1. Analysis of lassos took 24.5s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 772 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1639 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7775 SDtfs, 8752 SDslu, 13979 SDs, 0 SdLazy, 17464 SolverSat, 1397 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(13000000000000000000000012) = (new ZXL)({from : 13000000000000000000000014});
[L146]               havoc __exception;
[L147]               revert := false;
[L148]   COND FALSE  !(__exception)
[L170]   CALL        call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L1206]  CALL        call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1178]              assume msgsender_MSG != null;
[L1179]              Balance[this] := 0;
[L1180]              name_ZXL[this] := -1880820303;
[L1181]              symbol_ZXL[this] := -1880820303;
[L1182]              decimals_ZXL[this] := 18;
[L1183]              totalSupply_ZXL[this] := 13000000000000000000000000;
[L1184]              owner_ZXL[this] := null;
[L1185]              balanceOf_ZXL[this] := zeroRefintArr();
[L1186]              sum_balanceOf0[this] := 0;
[L1187]              allowance_ZXL[this] := zeroRefRefintArr();
[L1188]              sum_allowance1[this] := 0;
[L1190]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_ZXL[this][msgsender_MSG];
[L1191]              balanceOf_ZXL[this][msgsender_MSG] := totalSupply_ZXL[this];
[L1192]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_ZXL[this][msgsender_MSG];
[L1193]              owner_ZXL[this] := msgsender_MSG;
[L1206]  RET         call ZXL_ZXL_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1207]  COND FALSE  !(revert)
[L170]   RET         call ZXL_ZXL__success(this, msgsender_MSG, msgvalue_MSG);
[L171]               assume !revert && gas >= 0;
[L2195]  RET         call ZXL_ZXL(this, msgsender_MSG, msgvalue_MSG);
ZXL(13000000000000000000000012).transferFrom~address~address~uint256.gas(3979002)({from : 13000000000000000000000015, _from : 13000000000000000000000014, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND TRUE   __exception
[L263]               __tmp__Balance := Balance;
[L264]               __tmp__DType := DType;
[L265]               __tmp__Alloc := Alloc;
[L266]               __tmp__balance_ADDR := balance_ADDR;
[L267]               __tmp__M_Ref_int := M_Ref_int;
[L268]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L269]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L270]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L271]               __tmp__sum_allowance1 := sum_allowance1;
[L272]               __tmp__Length := Length;
[L273]               __tmp__now := now;
[L274]               __tmp__name_ZXL := name_ZXL;
[L275]               __tmp__symbol_ZXL := symbol_ZXL;
[L276]               __tmp__decimals_ZXL := decimals_ZXL;
[L277]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L278]               __tmp__owner_ZXL := owner_ZXL;
[L279]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L280]               __tmp__allowance_ZXL := allowance_ZXL;
[L281]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1284]  COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L1288]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1289]              __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1290]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1291]  CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1216]              __var_1 := null;
[L1217]  COND TRUE   !(_to_s145 != null)
[L1218]              revert := true;
[L1291]  RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1292]  COND TRUE   revert
[L281]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L282]               assume revert || gas < 0;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);

Loop:
ZXL(13000000000000000000000012).transferFrom~address~address~uint256.gas(3979001)({from : 13000000000000000000000015, _from : 13000000000000000000000011, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s200 && p1 != _to_s200) && (p2 != _from_s200 || p3 != msgsender_MSG)) && _from_s200 != _to_s200) && _value_s200 <= balanceOf_ZXL[this][_from_s200]) && _value_s200 <= allowance_ZXL[this][_from_s200][msgsender_MSG]) && balanceOf_ZXL[this][_to_s200] + _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s200 >= 0) && _value_s200 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_to_s200] >= 0) && balanceOf_ZXL[this][_to_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_ZXL[this][_from_s200] >= 0) && balanceOf_ZXL[this][_from_s200] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_ZXL[this][_from_s200][msgsender_MSG] >= 0) && allowance_ZXL[this][_from_s200][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_ZXL0 := true;
[L3]                 call_transferFrom_ZXL0 := false;
[L3]                 revert := revert_hold;
[L260]               havoc __exception;
[L261]               revert := false;
[L262]   COND TRUE   __exception
[L263]               __tmp__Balance := Balance;
[L264]               __tmp__DType := DType;
[L265]               __tmp__Alloc := Alloc;
[L266]               __tmp__balance_ADDR := balance_ADDR;
[L267]               __tmp__M_Ref_int := M_Ref_int;
[L268]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L269]               __tmp__alloc_allowance_ZXL_lvl0 := alloc_allowance_ZXL_lvl0;
[L270]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L271]               __tmp__sum_allowance1 := sum_allowance1;
[L272]               __tmp__Length := Length;
[L273]               __tmp__now := now;
[L274]               __tmp__name_ZXL := name_ZXL;
[L275]               __tmp__symbol_ZXL := symbol_ZXL;
[L276]               __tmp__decimals_ZXL := decimals_ZXL;
[L277]               __tmp__totalSupply_ZXL := totalSupply_ZXL;
[L278]               __tmp__owner_ZXL := owner_ZXL;
[L279]               __tmp__balanceOf_ZXL := balanceOf_ZXL;
[L280]               __tmp__allowance_ZXL := allowance_ZXL;
[L281]   CALL        call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1284]  COND FALSE  !(!(_value_s200 <= __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG]))
[L1288]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] - __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1289]              __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] := (__tmp__allowance_ZXL[this][_from_s200][msgsender_MSG] - _value_s200) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1290]              __tmp__sum_allowance1[_from_s200] := __tmp__sum_allowance1[_from_s200] + __tmp__allowance_ZXL[this][_from_s200][msgsender_MSG];
[L1291]  CALL        call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1216]              __var_1 := null;
[L1217]  COND TRUE   !(_to_s145 != null)
[L1218]              revert := true;
[L1291]  RET         call _transfer~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L1292]  COND TRUE   revert
[L281]   RET         call success_s200 := transferFrom~address~address~uint256_ZXL__fail(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);
[L282]               assume revert || gas < 0;
[L2151]  RET         call success_s200 := transferFrom~address~address~uint256_ZXL(this, msgsender_MSG, msgvalue_MSG, _from_s200, _to_s200, _value_s200);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
