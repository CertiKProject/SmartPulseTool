This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 14:26:15,621 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 14:26:15,623 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 14:26:15,633 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 14:26:15,634 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 14:26:15,634 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 14:26:15,635 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 14:26:15,637 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 14:26:15,638 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 14:26:15,639 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 14:26:15,639 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 14:26:15,639 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 14:26:15,640 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 14:26:15,641 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 14:26:15,642 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 14:26:15,642 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 14:26:15,643 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 14:26:15,644 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 14:26:15,645 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 14:26:15,646 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 14:26:15,647 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 14:26:15,648 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 14:26:15,649 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 14:26:15,649 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 14:26:15,650 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 14:26:15,650 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 14:26:15,650 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 14:26:15,651 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 14:26:15,651 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 14:26:15,651 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 14:26:15,652 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 14:26:15,652 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 14:26:15,653 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 14:26:15,653 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 14:26:15,654 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 14:26:15,654 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 14:26:15,654 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 14:26:15,655 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 14:26:15,655 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 14:26:15,655 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 14:26:15,656 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 14:26:15,656 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 14:26:15,664 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 14:26:15,664 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 14:26:15,665 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 14:26:15,665 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 14:26:15,665 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 14:26:15,665 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 14:26:15,665 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 14:26:15,665 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 14:26:15,665 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 14:26:15,666 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 14:26:15,666 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 14:26:15,666 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 14:26:15,666 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 14:26:15,666 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 14:26:15,666 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 14:26:15,667 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 14:26:15,668 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 14:26:15,668 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 14:26:15,668 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 14:26:15,689 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 14:26:15,699 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 14:26:15,702 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 14:26:15,703 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 14:26:15,703 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 14:26:15,704 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl
[2020-11-25 14:26:15,704 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl'
[2020-11-25 14:26:15,778 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 14:26:15,780 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 14:26:15,780 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 14:26:15,780 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 14:26:15,780 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 14:26:15,796 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,798 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,824 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,825 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,843 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,851 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,857 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,866 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 14:26:15,866 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 14:26:15,866 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 14:26:15,868 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 14:26:15,872 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/1) ...
[2020-11-25 14:26:15,890 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(DUCATOProtocolToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DUCATOProtocolToken[this][from] && value <= allowed_DUCATOProtocolToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][from] >= 0 &&  balances_DUCATOProtocolToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DUCATOProtocolToken[this][from][msg.sender] >= 0 && allowed_DUCATOProtocolToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transferFrom(from, to, value), return == true && allowed_DUCATOProtocolToken[this][from][msg.sender] == old(allowed_DUCATOProtocolToken[this][from][msg.sender]) - value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this][p1][p2] == old(allowed_DUCATOProtocolToken[this][p1][p2]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:26:15,895 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(DUCATOProtocolToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DUCATOProtocolToken[this][from] && value <= allowed_DUCATOProtocolToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][from] >= 0 &&  balances_DUCATOProtocolToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DUCATOProtocolToken[this][from][msg.sender] >= 0 && allowed_DUCATOProtocolToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transferFrom(from, to, value), return == true && allowed_DUCATOProtocolToken[this][from][msg.sender] == old(allowed_DUCATOProtocolToken[this][from][msg.sender]) - value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this][p1][p2] == old(allowed_DUCATOProtocolToken[this][p1][p2]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:26:15,902 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(DUCATOProtocolToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DUCATOProtocolToken[this][from] && value <= allowed_DUCATOProtocolToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][from] >= 0 &&  balances_DUCATOProtocolToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DUCATOProtocolToken[this][from][msg.sender] >= 0 && allowed_DUCATOProtocolToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transferFrom(from, to, value), return == true && allowed_DUCATOProtocolToken[this][from][msg.sender] == old(allowed_DUCATOProtocolToken[this][from][msg.sender]) - value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this][p1][p2] == old(allowed_DUCATOProtocolToken[this][p1][p2]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:26:15,910 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=from_s510 || p2!=msg.sender ) && from_s510==to_s510 ) && tokens_s510<=balances_DUCATOProtocolToken[this][from_s510] ) && tokens_s510<=allowed_DUCATOProtocolToken[this][from_s510][msg.sender] ) && tokens_s510>=0 ) && tokens_s510<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DUCATOProtocolToken[this][to_s510]>=0 ) && balances_DUCATOProtocolToken[this][to_s510]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_DUCATOProtocolToken[this][from_s510]>=0 ) && balances_DUCATOProtocolToken[this][from_s510]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_DUCATOProtocolToken[this][from_s510][msg.sender]>=0 ) && allowed_DUCATOProtocolToken[this][from_s510][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>],IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[to_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 14:26:15,912 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( success_s510==true && allowed_DUCATOProtocolToken[this][from_s510][msg.sender]==( ( old(allowed_DUCATOProtocolToken[this][from_s510][msg.sender]) ) - tokens_s510 ) ) && _totalSupply_DUCATOProtocolToken[this]==( old(_totalSupply_DUCATOProtocolToken[this]) ) ) && balances_DUCATOProtocolToken[this]==( old(balances_DUCATOProtocolToken[this]) ) ) && allowed_DUCATOProtocolToken[this][p1][p2]==( old(allowed_DUCATOProtocolToken[this][p1][p2]) ) ) && symbol_DUCATOProtocolToken[this]==( old(symbol_DUCATOProtocolToken[this]) ) ) && name_DUCATOProtocolToken[this]==( old(name_DUCATOProtocolToken[this]) ) ) && decimals_DUCATOProtocolToken[this]==( old(decimals_DUCATOProtocolToken[this]) ) ) && _stopTrade_DUCATOProtocolToken[this]==( old(_stopTrade_DUCATOProtocolToken[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s510,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[from_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]],IdentifierExpression[tokens_s510,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_stopTrade_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_stopTrade_DUCATOProtocolToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_DUCATOProtocolToken>]]]]]]
[2020-11-25 14:26:15,917 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(DUCATOProtocolToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= balances_DUCATOProtocolToken[this][from] && value <= allowed_DUCATOProtocolToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][to] >= 0 && balances_DUCATOProtocolToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_DUCATOProtocolToken[this][from] >= 0 &&  balances_DUCATOProtocolToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_DUCATOProtocolToken[this][from][msg.sender] >= 0 && allowed_DUCATOProtocolToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(DUCATOProtocolToken.transferFrom(from, to, value), return == true && allowed_DUCATOProtocolToken[this][from][msg.sender] == old(allowed_DUCATOProtocolToken[this][from][msg.sender]) - value && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this]) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this]) && allowed_DUCATOProtocolToken[this][p1][p2] == old(allowed_DUCATOProtocolToken[this][p1][p2]) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this]) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this]) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this]) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this]) && owner_Owned[this] == old(owner_Owned[this]))))
[2020-11-25 14:26:15,917 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_DUCATOProtocolToken0) ==> ( <>AP(success_transferFrom_DUCATOProtocolToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 14:26:15,924 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:26:15 PropertyContainer
[2020-11-25 14:26:15,924 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 14:26:15,924 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 14:26:15,924 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 14:26:15,924 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 14:26:15,925 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/2) ...
[2020-11-25 14:26:15,925 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 14:26:15,925 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 14:26:15,937 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:26:15" (2/2) ...
[2020-11-25 14:26:15,938 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 14:26:15,938 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 14:26:15,938 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 14:26:15,938 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 14:26:15,939 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/2) ...
[2020-11-25 14:26:15,989 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 14:26:15,989 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:26:15,989 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 14:26:15,989 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 14:26:15,989 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:26:15,989 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 14:26:15,990 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 14:26:15,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 14:26:15,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 14:26:15,991 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success
[2020-11-25 14:26:15,991 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,992 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DUCATOProtocolToken__success
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken
[2020-11-25 14:26:15,993 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken
[2020-11-25 14:26:15,994 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 14:26:15,994 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DUCATOProtocolToken
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:26:15,995 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken__success
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure DUCATOProtocolToken_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,996 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure stopTrade_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure startTrade_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:15,997 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken__success
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__success
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken__success
[2020-11-25 14:26:15,998 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken__success
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure name_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken__success
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_DUCATOProtocolToken__fail
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 14:26:15,999 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 14:26:15,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 14:26:15,999 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:16,000 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 14:26:16,001 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__fail
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success
[2020-11-25 14:26:16,002 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure DUCATOProtocolToken_DUCATOProtocolToken__success
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_DUCATOProtocolToken__success
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure stopTrade_DUCATOProtocolToken__success
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure startTrade_DUCATOProtocolToken__success
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,003 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_DUCATOProtocolToken__success
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_DUCATOProtocolToken__success
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_DUCATOProtocolToken__success
[2020-11-25 14:26:16,004 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_DUCATOProtocolToken__success
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_DUCATOProtocolToken__success
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_DUCATOProtocolToken__success
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_DUCATOProtocolToken__success
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken__fail
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_DUCATOProtocolToken__success
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 14:26:16,005 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 14:26:16,006 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 14:26:16,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 14:26:16,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 14:26:16,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DUCATOProtocolToken
[2020-11-25 14:26:16,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 14:26:16,007 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 14:26:16,007 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 14:26:16,368 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:26:16,368 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:26:16,369 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:26:16,411 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 14:26:16,574 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 14:26:16,574 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 14:26:16,576 INFO  L202        PluginConnector]: Adding new model DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:26:16 BoogieIcfgContainer
[2020-11-25 14:26:16,576 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:26:15" (2/2) ...
[2020-11-25 14:26:16,576 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 14:26:16,577 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2ec113ff and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:26:16, skipping insertion in model container
[2020-11-25 14:26:16,577 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 14:26:16,577 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 14:26:16,577 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 14:26:16,578 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 14:26:16,579 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/3) ...
[2020-11-25 14:26:16,579 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@54f725e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:26:16, skipping insertion in model container
[2020-11-25 14:26:16,579 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:26:15" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 14:26:16,614 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:26:16 NWAContainer
[2020-11-25 14:26:16,614 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 14:26:16,615 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 14:26:16,615 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 14:26:16,615 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 14:26:16,616 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:26:16" (3/4) ...
[2020-11-25 14:26:16,617 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@23ac3e7b and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:26:16, skipping insertion in model container
[2020-11-25 14:26:16,617 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:26:16" (4/4) ...
[2020-11-25 14:26:16,620 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 14:26:16,623 INFO  L110   BuchiProductObserver]: Initial RCFG 1246 locations, 1548 edges
[2020-11-25 14:26:16,623 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 14:26:16,633 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 14:26:17,912 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 14:26:17,917 INFO  L110   BuchiProductObserver]: BuchiProgram size 2934 locations, 4986 edges
[2020-11-25 14:26:17,917 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:26:17 BoogieIcfgContainer
[2020-11-25 14:26:17,917 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 14:26:17,917 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 14:26:17,918 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 14:26:17,919 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 14:26:17,920 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:26:17" (1/1) ...
[2020-11-25 14:26:17,997 INFO  L313           BlockEncoder]: Initial Icfg 2934 locations, 4986 edges
[2020-11-25 14:26:17,997 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 14:26:17,998 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 14:26:17,998 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 14:26:17,999 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 14:26:18,010 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 13 locations because of local infeasibility
[2020-11-25 14:26:18,017 INFO  L70        RemoveSinkStates]: Removed 8 edges and 5 locations by removing sink states
[2020-11-25 14:26:18,027 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 14:26:18,030 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 14:26:18,033 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 14:26:18,033 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 14:26:18,038 INFO  L313           BlockEncoder]: Encoded RCFG 2896 locations, 4892 edges
[2020-11-25 14:26:18,038 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:26:18 BasicIcfg
[2020-11-25 14:26:18,038 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 14:26:18,039 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 14:26:18,039 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 14:26:18,041 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 14:26:18,041 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:26:18,041 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 02:26:15" (1/6) ...
[2020-11-25 14:26:18,043 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@509e0c48 and model type DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:26:18, skipping insertion in model container
[2020-11-25 14:26:18,043 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:26:18,043 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 02:26:15" (2/6) ...
[2020-11-25 14:26:18,043 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@509e0c48 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:26:18, skipping insertion in model container
[2020-11-25 14:26:18,044 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:26:18,044 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 02:26:16" (3/6) ...
[2020-11-25 14:26:18,044 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@509e0c48 and model type DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:26:18, skipping insertion in model container
[2020-11-25 14:26:18,044 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:26:18,044 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 02:26:16" (4/6) ...
[2020-11-25 14:26:18,044 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@509e0c48 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 02:26:18, skipping insertion in model container
[2020-11-25 14:26:18,044 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:26:18,044 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 02:26:17" (5/6) ...
[2020-11-25 14:26:18,045 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@509e0c48 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 02:26:18, skipping insertion in model container
[2020-11-25 14:26:18,045 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 14:26:18,045 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 02:26:18" (6/6) ...
[2020-11-25 14:26:18,046 INFO  L404   chiAutomizerObserver]: Analyzing ICFG DUCATOProtocolToken_0xa117ea1c0c85cef648df2b6f40e50bb5475c228d_transferfrom-self.bpl_BEv2
[2020-11-25 14:26:18,084 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 14:26:18,084 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 14:26:18,084 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 14:26:18,085 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 14:26:18,085 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 14:26:18,085 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 14:26:18,085 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 14:26:18,085 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 14:26:18,085 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 14:26:18,117 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2896 states.
[2020-11-25 14:26:18,168 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:26:18,169 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:26:18,169 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:26:18,178 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:26:18,178 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:26:18,178 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 14:26:18,178 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2896 states.
[2020-11-25 14:26:18,196 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:26:18,196 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:26:18,196 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:26:18,198 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:26:18,198 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND TRUE   revert
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND TRUE   choice == 14
[L3358]              gas := gas - 21000;
[L3359]  COND FALSE  !(gas >= 0)
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:26:18,215 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:26:18,215 INFO  L82        PathProgramCache]: Analyzing trace with hash 773042491, now seen corresponding path program 1 times
[2020-11-25 14:26:18,220 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:26:18,240 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:26:18,277 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:26:18,280 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:26:18,280 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:26:18,284 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:26:18,420 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:26:18,421 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:26:18,422 INFO  L87              Difference]: Start difference. First operand 2896 states. Second operand 4 states.
[2020-11-25 14:26:18,670 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:26:18,670 INFO  L93              Difference]: Finished difference Result 2004 states and 2233 transitions.
[2020-11-25 14:26:18,672 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:26:18,674 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2004 states and 2233 transitions.
[2020-11-25 14:26:18,693 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:26:18,711 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2004 states to 2004 states and 2233 transitions.
[2020-11-25 14:26:18,712 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 14:26:18,714 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 584
[2020-11-25 14:26:18,715 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2004 states and 2233 transitions.
[2020-11-25 14:26:18,722 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:26:18,722 INFO  L728         BuchiCegarLoop]: Abstraction has 2004 states and 2233 transitions.
[2020-11-25 14:26:18,739 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2004 states and 2233 transitions.
[2020-11-25 14:26:18,782 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2004 to 2004.
[2020-11-25 14:26:18,782 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2004 states.
[2020-11-25 14:26:18,787 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2004 states to 2004 states and 2233 transitions.
[2020-11-25 14:26:18,788 INFO  L751         BuchiCegarLoop]: Abstraction has 2004 states and 2233 transitions.
[2020-11-25 14:26:18,788 INFO  L631         BuchiCegarLoop]: Abstraction has 2004 states and 2233 transitions.
[2020-11-25 14:26:18,789 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 14:26:18,789 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2004 states and 2233 transitions.
[2020-11-25 14:26:18,796 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:26:18,796 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:26:18,796 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:26:18,799 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:26:18,799 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND TRUE   revert
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND FALSE  !(choice == 11)
[L3382]  COND FALSE  !(choice == 10)
[L3389]  COND TRUE   choice == 9
[L3390]              gas := gas - 21000;
[L3391]  COND TRUE   gas >= 0
[L3392]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3393]              assume msgvalue_MSG == 0;
[L3394]  CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L808]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2101]  COND TRUE   !(_stopTrade_DUCATOProtocolToken[this] != true)
[L2102]              revert := true;
[L808]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L809]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s510 == true && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] == old(allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) - tokens_s510) && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this][p1][p2] == old(allowed_DUCATOProtocolToken[this][p1][p2])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND FALSE  !(choice == 11)
[L3382]  COND FALSE  !(choice == 10)
[L3389]  COND TRUE   choice == 9
[L3390]              gas := gas - 21000;
[L3391]  COND TRUE   gas >= 0
[L3392]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3393]              assume msgvalue_MSG == 0;
[L3394]  CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND FALSE  !(__exception)
[L808]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2101]  COND TRUE   !(_stopTrade_DUCATOProtocolToken[this] != true)
[L2102]              revert := true;
[L808]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L809]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s510 == true && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] == old(allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) - tokens_s510) && _totalSupply_DUCATOProtocolToken[this] == old(_totalSupply_DUCATOProtocolToken[this])) && balances_DUCATOProtocolToken[this] == old(balances_DUCATOProtocolToken[this])) && allowed_DUCATOProtocolToken[this][p1][p2] == old(allowed_DUCATOProtocolToken[this][p1][p2])) && symbol_DUCATOProtocolToken[this] == old(symbol_DUCATOProtocolToken[this])) && name_DUCATOProtocolToken[this] == old(name_DUCATOProtocolToken[this])) && decimals_DUCATOProtocolToken[this] == old(decimals_DUCATOProtocolToken[this])) && _stopTrade_DUCATOProtocolToken[this] == old(_stopTrade_DUCATOProtocolToken[this])) && owner_Owned[this] == old(owner_Owned[this]));
[L3]                 revert := revert_hold;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:26:18,803 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:26:18,804 INFO  L82        PathProgramCache]: Analyzing trace with hash -1976435955, now seen corresponding path program 1 times
[2020-11-25 14:26:18,805 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:26:18,814 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:26:18,837 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:26:18,837 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:26:18,838 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 14:26:18,839 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:26:18,839 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 14:26:18,839 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 14:26:18,840 INFO  L87              Difference]: Start difference. First operand 2004 states and 2233 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 14:26:19,290 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:26:19,290 INFO  L93              Difference]: Finished difference Result 2972 states and 3397 transitions.
[2020-11-25 14:26:19,291 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 14:26:19,291 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2972 states and 3397 transitions.
[2020-11-25 14:26:19,303 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 14:26:19,317 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2972 states to 2822 states and 3225 transitions.
[2020-11-25 14:26:19,317 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 797
[2020-11-25 14:26:19,318 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 807
[2020-11-25 14:26:19,318 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2822 states and 3225 transitions.
[2020-11-25 14:26:19,323 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:26:19,323 INFO  L728         BuchiCegarLoop]: Abstraction has 2822 states and 3225 transitions.
[2020-11-25 14:26:19,325 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2822 states and 3225 transitions.
[2020-11-25 14:26:19,347 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2822 to 2034.
[2020-11-25 14:26:19,348 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2034 states.
[2020-11-25 14:26:19,351 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2034 states to 2034 states and 2201 transitions.
[2020-11-25 14:26:19,351 INFO  L751         BuchiCegarLoop]: Abstraction has 2034 states and 2201 transitions.
[2020-11-25 14:26:19,351 INFO  L631         BuchiCegarLoop]: Abstraction has 2034 states and 2201 transitions.
[2020-11-25 14:26:19,351 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 14:26:19,351 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2034 states and 2201 transitions.
[2020-11-25 14:26:19,355 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 14:26:19,355 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:26:19,356 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:26:19,357 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:26:19,357 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND FALSE  !(revert)
[L1854]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]              assume msgsender_MSG != null;
[L1741]              Balance[this] := 0;
[L1742]              owner_Owned[this] := null;
[L1744]              owner_Owned[this] := msgsender_MSG;
[L1757]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1758]  COND FALSE  !(revert)
[L1854]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1855]  COND FALSE  !(revert)
[L1858]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1806]              assume msgsender_MSG != null;
[L1807]              Balance[this] := 0;
[L1808]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1809]              name_DUCATOProtocolToken[this] := 1405682701;
[L1810]              decimals_DUCATOProtocolToken[this] := 0;
[L1811]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1812]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1813]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1814]              sum_balances0[this] := 0;
[L1815]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1816]              sum_allowed1[this] := 0;
[L1818]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1819]              name_DUCATOProtocolToken[this] := -2134480732;
[L1820]              decimals_DUCATOProtocolToken[this] := 18;
[L1821]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1823]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1824]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1825]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1826]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1827]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1858]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND FALSE  !(choice == 11)
[L3382]  COND FALSE  !(choice == 10)
[L3389]  COND TRUE   choice == 9
[L3390]              gas := gas - 21000;
[L3391]  COND TRUE   gas >= 0
[L3392]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3393]              assume msgvalue_MSG == 0;
[L3394]  CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L799]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L800]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L801]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L802]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L803]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L804]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2053]  COND TRUE   !(__tmp___stopTrade_DUCATOProtocolToken[this] != true)
[L2054]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND FALSE  !(choice == 11)
[L3382]  COND FALSE  !(choice == 10)
[L3389]  COND TRUE   choice == 9
[L3390]              gas := gas - 21000;
[L3391]  COND TRUE   gas >= 0
[L3392]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3393]              assume msgvalue_MSG == 0;
[L3394]  CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L799]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L800]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L801]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L802]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L803]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L804]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2053]  COND TRUE   !(__tmp___stopTrade_DUCATOProtocolToken[this] != true)
[L2054]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:26:19,361 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:26:19,361 INFO  L82        PathProgramCache]: Analyzing trace with hash 2039588026, now seen corresponding path program 1 times
[2020-11-25 14:26:19,361 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:26:19,373 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 14:26:19,425 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 14:26:19,425 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 14:26:19,425 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [10] imperfect sequences [] total 10
[2020-11-25 14:26:19,426 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 14:26:19,426 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 11 interpolants.
[2020-11-25 14:26:19,426 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=19, Invalid=91, Unknown=0, NotChecked=0, Total=110
[2020-11-25 14:26:19,427 INFO  L87              Difference]: Start difference. First operand 2034 states and 2201 transitions. cyclomatic complexity: 169 Second operand 11 states.
[2020-11-25 14:26:20,824 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 14:26:20,825 INFO  L93              Difference]: Finished difference Result 3424 states and 3791 transitions.
[2020-11-25 14:26:20,825 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 14:26:20,825 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3424 states and 3791 transitions.
[2020-11-25 14:26:20,850 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 14:26:20,866 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3424 states to 3424 states and 3791 transitions.
[2020-11-25 14:26:20,866 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1035
[2020-11-25 14:26:20,868 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1035
[2020-11-25 14:26:20,868 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3424 states and 3791 transitions.
[2020-11-25 14:26:20,876 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 14:26:20,876 INFO  L728         BuchiCegarLoop]: Abstraction has 3424 states and 3791 transitions.
[2020-11-25 14:26:20,880 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3424 states and 3791 transitions.
[2020-11-25 14:26:20,901 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3424 to 2076.
[2020-11-25 14:26:20,901 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2076 states.
[2020-11-25 14:26:20,903 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2076 states to 2076 states and 2250 transitions.
[2020-11-25 14:26:20,903 INFO  L751         BuchiCegarLoop]: Abstraction has 2076 states and 2250 transitions.
[2020-11-25 14:26:20,904 INFO  L631         BuchiCegarLoop]: Abstraction has 2076 states and 2250 transitions.
[2020-11-25 14:26:20,904 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 14:26:20,904 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2076 states and 2250 transitions.
[2020-11-25 14:26:20,907 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 14:26:20,907 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 14:26:20,907 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 14:26:20,909 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 14:26:20,909 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L3454]              assume null == 0;
[L3455]  CALL        call this := FreshRefGenerator__success();
[L1553]              havoc newRef;
[L1554]              assume Alloc[newRef] == false;
[L1555]              Alloc[newRef] := true;
[L1556]              assume newRef != null;
[L3455]  RET         call this := FreshRefGenerator__success();
[L3456]              assume now >= 0;
[L3457]              assume DType[this] == DUCATOProtocolToken;
[L3458]              assume msgvalue_MSG == 0;
[L3459]              gas := gas - 53000;
[L3460]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND FALSE  !(revert)
[L1854]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]              assume msgsender_MSG != null;
[L1741]              Balance[this] := 0;
[L1742]              owner_Owned[this] := null;
[L1744]              owner_Owned[this] := msgsender_MSG;
[L1757]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1758]  COND FALSE  !(revert)
[L1854]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1855]  COND FALSE  !(revert)
[L1858]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1806]              assume msgsender_MSG != null;
[L1807]              Balance[this] := 0;
[L1808]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1809]              name_DUCATOProtocolToken[this] := 1405682701;
[L1810]              decimals_DUCATOProtocolToken[this] := 0;
[L1811]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1812]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1813]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1814]              sum_balances0[this] := 0;
[L1815]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1816]              sum_allowed1[this] := 0;
[L1818]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1819]              name_DUCATOProtocolToken[this] := -2134480732;
[L1820]              decimals_DUCATOProtocolToken[this] := 18;
[L1821]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1823]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1824]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1825]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1826]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1827]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1858]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
[L3461]              assume !revert && gas >= 0;
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND FALSE  !(choice == 11)
[L3382]  COND FALSE  !(choice == 10)
[L3389]  COND TRUE   choice == 9
[L3390]              gas := gas - 21000;
[L3391]  COND TRUE   gas >= 0
[L3392]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3393]              assume msgvalue_MSG == 0;
[L3394]  CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L799]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L800]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L801]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L802]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L803]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L804]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2053]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L2057]              __var_7 := null;
[L2058]  COND TRUE   !(from_s510 > null)
[L2059]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

Loop:
[L3464]  CALL        call CorralChoice_DUCATOProtocolToken(this);
[L3314]              havoc msgsender_MSG;
[L3315]              havoc msgvalue_MSG;
[L3316]              havoc choice;
[L3317]              havoc __ret_0_totalSupply;
[L3318]              havoc tokenOwner_s328;
[L3319]              havoc balance_s328;
[L3320]              havoc tokenOwner_s532;
[L3321]              havoc spender_s532;
[L3322]              havoc remaining_s532;
[L3323]              havoc to_s385;
[L3324]              havoc tokens_s385;
[L3325]              havoc success_s385;
[L3326]              havoc spender_s419;
[L3327]              havoc tokens_s419;
[L3328]              havoc success_s419;
[L3329]              havoc from_s510;
[L3330]              havoc to_s510;
[L3331]              havoc tokens_s510;
[L3332]              havoc success_s510;
[L3333]              havoc __ret_0_owner;
[L3334]              havoc __ret_0_symbol;
[L3335]              havoc __ret_0_name;
[L3336]              havoc __ret_0_decimals;
[L3337]              havoc spender_s582;
[L3338]              havoc tokens_s582;
[L3339]              havoc data_s582;
[L3340]              havoc success_s582;
[L3341]              havoc tokenAddress_s609;
[L3342]              havoc tokens_s609;
[L3343]              havoc success_s609;
[L3344]              havoc tmpNow;
[L3345]              havoc gas;
[L3346]              assume gas > 4000000 && gas <= 8000000;
[L3347]              tmpNow := now;
[L3348]              havoc now;
[L3349]              assume now > tmpNow;
[L3350]              assume msgsender_MSG != null;
[L3351]              assume DType[msgsender_MSG] != SafeMath;
[L3352]              assume DType[msgsender_MSG] != ERC20Interface;
[L3353]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L3354]              assume DType[msgsender_MSG] != Owned;
[L3355]              assume DType[msgsender_MSG] != DUCATOProtocolToken;
[L3356]              Alloc[msgsender_MSG] := true;
[L3357]  COND FALSE  !(choice == 14)
[L3363]  COND FALSE  !(choice == 13)
[L3369]  COND FALSE  !(choice == 12)
[L3375]  COND FALSE  !(choice == 11)
[L3382]  COND FALSE  !(choice == 10)
[L3389]  COND TRUE   choice == 9
[L3390]              gas := gas - 21000;
[L3391]  COND TRUE   gas >= 0
[L3392]              assume tokens_s510 >= 0 && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3393]              assume msgvalue_MSG == 0;
[L3394]  CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L799]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L800]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L801]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L802]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L803]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L804]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2053]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L2057]              __var_7 := null;
[L2058]  COND TRUE   !(from_s510 > null)
[L2059]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L3464]  RET         call CorralChoice_DUCATOProtocolToken(this);

[2020-11-25 14:26:20,915 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:26:20,915 INFO  L82        PathProgramCache]: Analyzing trace with hash -186939306, now seen corresponding path program 1 times
[2020-11-25 14:26:20,916 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:26:20,928 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:20,947 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:20,989 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:26:20,989 INFO  L82        PathProgramCache]: Analyzing trace with hash -1693199558, now seen corresponding path program 1 times
[2020-11-25 14:26:20,990 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:26:20,994 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:20,998 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:21,007 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 14:26:21,007 INFO  L82        PathProgramCache]: Analyzing trace with hash 97481733, now seen corresponding path program 1 times
[2020-11-25 14:26:21,008 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 14:26:21,029 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:21,051 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2503 to 5003
[2020-11-25 14:26:21,345 WARN  L188               SmtUtils]: Spent 123.00 ms on a formula simplification. DAG size of input: 106 DAG size of output: 100
[2020-11-25 14:26:21,478 WARN  L188               SmtUtils]: Spent 131.00 ms on a formula simplification that was a NOOP. DAG size: 250
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6271 to 12541
[2020-11-25 14:26:22,052 WARN  L188               SmtUtils]: Spent 556.00 ms on a formula simplification. DAG size of input: 206 DAG size of output: 206
[2020-11-25 14:26:22,788 WARN  L188               SmtUtils]: Spent 733.00 ms on a formula simplification. DAG size of input: 265 DAG size of output: 246
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 14:26:23,033 WARN  L188               SmtUtils]: Spent 212.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 148
[2020-11-25 14:26:23,217 WARN  L188               SmtUtils]: Spent 182.00 ms on a formula simplification that was a NOOP. DAG size: 297
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-25 14:26:23,668 WARN  L188               SmtUtils]: Spent 432.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 236
[2020-11-25 14:26:23,915 WARN  L188               SmtUtils]: Spent 245.00 ms on a formula simplification that was a NOOP. DAG size: 236
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 14:26:24,349 WARN  L188               SmtUtils]: Spent 417.00 ms on a formula simplification. DAG size of input: 175 DAG size of output: 154
[2020-11-25 14:26:24,357 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #8: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
[2020-11-25 14:26:25,485 WARN  L188               SmtUtils]: Spent 465.00 ms on a formula simplification. DAG size of input: 206 DAG size of output: 206
[2020-11-25 14:26:26,082 WARN  L188               SmtUtils]: Spent 595.00 ms on a formula simplification. DAG size of input: 264 DAG size of output: 246
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #8: 12073 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12073 to 24137
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
[2020-11-25 14:26:26,252 WARN  L188               SmtUtils]: Spent 154.00 ms on a formula simplification. DAG size of input: 151 DAG size of output: 145
[2020-11-25 14:26:26,402 WARN  L188               SmtUtils]: Spent 148.00 ms on a formula simplification that was a NOOP. DAG size: 294
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
[2020-11-25 14:26:26,786 WARN  L188               SmtUtils]: Spent 372.00 ms on a formula simplification. DAG size of input: 233 DAG size of output: 233
[2020-11-25 14:26:27,980 WARN  L188               SmtUtils]: Spent 1.19 s on a formula simplification. DAG size of input: 425 DAG size of output: 415
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 14:26:28,292 WARN  L188               SmtUtils]: Spent 296.00 ms on a formula simplification. DAG size of input: 213 DAG size of output: 197
[2020-11-25 14:26:28,600 WARN  L188               SmtUtils]: Spent 293.00 ms on a formula simplification that was a NOOP. DAG size: 300
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 14:26:28,954 WARN  L188               SmtUtils]: Spent 335.00 ms on a formula simplification. DAG size of input: 205 DAG size of output: 190
[2020-11-25 14:26:29,426 WARN  L188               SmtUtils]: Spent 471.00 ms on a formula simplification. DAG size of input: 295 DAG size of output: 294
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 26597 to 53189
[2020-11-25 14:26:30,815 WARN  L188               SmtUtils]: Spent 1.36 s on a formula simplification. DAG size of input: 381 DAG size of output: 289
[2020-11-25 14:26:30,832 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:30,855 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 14:26:30,863 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 02:26:30 BasicIcfg
[2020-11-25 14:26:30,863 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 14:26:30,863 INFO  L168              Benchmark]: Toolchain (without parser) took 15084.43 ms. Allocated memory was 1.0 GB in the beginning and 2.3 GB in the end (delta: 1.3 GB). Free memory was 945.9 MB in the beginning and 1.6 GB in the end (delta: -616.5 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,864 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,864 INFO  L168              Benchmark]: Boogie Preprocessor took 85.99 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,864 INFO  L168              Benchmark]: UtopiaSpecLang took 57.73 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,865 INFO  L168              Benchmark]: Boogie Printer took 13.50 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,865 INFO  L168              Benchmark]: RCFGBuilder took 638.86 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 827.8 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,865 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.40 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,865 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1302.72 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.8 MB). Free memory was 824.2 MB in the beginning and 1.1 GB in the end (delta: -312.5 MB). Peak memory consumption was 196.7 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,866 INFO  L168              Benchmark]: BlockEncodingV2 took 120.70 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 50.1 MB). Peak memory consumption was 50.1 MB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,866 INFO  L168              Benchmark]: BuchiAutomizer took 12824.54 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: -475.8 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
[2020-11-25 14:26:30,868 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2934 locations, 4986 edges
  - StatisticsResult: Encoded RCFG
    2896 locations, 4892 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 85.99 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 57.73 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.50 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 638.86 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 827.8 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.40 ms. Allocated memory is still 1.0 GB. Free memory was 827.8 MB in the beginning and 824.2 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1302.72 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 200.8 MB). Free memory was 824.2 MB in the beginning and 1.1 GB in the end (delta: -312.5 MB). Peak memory consumption was 196.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 120.70 ms. Allocated memory is still 1.2 GB. Free memory was 1.1 GB in the beginning and 1.1 GB in the end (delta: 50.1 MB). Peak memory consumption was 50.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 12824.54 ms. Allocated memory was 1.2 GB in the beginning and 2.3 GB in the end (delta: 1.1 GB). Free memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: -475.8 MB). Peak memory consumption was 1.4 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1246 locations, 1548 edges
  - StatisticsResult: BuchiProgram size
    2934 locations, 4986 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 11 locations. The remainder module has 2076 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 12.7s and 4 iterations.  TraceHistogramMax:1. Analysis of lassos took 10.1s. Construction of modules took 1.5s. BÃ¼chi inclusion checks took 0.7s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 2136 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2076 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 7727 SDtfs, 9179 SDslu, 9881 SDs, 0 SdLazy, 19075 SolverSat, 1934 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.5s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639697) = (new DUCATOProtocolToken)({from : (- 1)});
[L395]               havoc __exception;
[L396]               revert := false;
[L397]   COND FALSE  !(__exception)
[L420]   CALL        call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1850]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1689]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1674]              assume msgsender_MSG != null;
[L1675]              Balance[this] := 0;
[L1689]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1690]  COND FALSE  !(revert)
[L1850]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L1851]  COND FALSE  !(revert)
[L1854]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1757]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1740]              assume msgsender_MSG != null;
[L1741]              Balance[this] := 0;
[L1742]              owner_Owned[this] := null;
[L1744]              owner_Owned[this] := msgsender_MSG;
[L1757]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1758]  COND FALSE  !(revert)
[L1854]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L1855]  COND FALSE  !(revert)
[L1858]  CALL        call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1806]              assume msgsender_MSG != null;
[L1807]              Balance[this] := 0;
[L1808]              symbol_DUCATOProtocolToken[this] := 1405682701;
[L1809]              name_DUCATOProtocolToken[this] := 1405682701;
[L1810]              decimals_DUCATOProtocolToken[this] := 0;
[L1811]              _totalSupply_DUCATOProtocolToken[this] := 0;
[L1812]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1813]              balances_DUCATOProtocolToken[this] := zeroRefintArr();
[L1814]              sum_balances0[this] := 0;
[L1815]              allowed_DUCATOProtocolToken[this] := zeroRefRefintArr();
[L1816]              sum_allowed1[this] := 0;
[L1818]              symbol_DUCATOProtocolToken[this] := -169935380;
[L1819]              name_DUCATOProtocolToken[this] := -2134480732;
[L1820]              decimals_DUCATOProtocolToken[this] := 18;
[L1821]              __var_1 := decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1822]              _totalSupply_DUCATOProtocolToken[this] := 50000000 * (nonlinearPow(10, decimals_DUCATOProtocolToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1823]              _stopTrade_DUCATOProtocolToken[this] := false;
[L1824]              sum_balances0[this] := sum_balances0[this] - balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1825]              balances_DUCATOProtocolToken[this][owner_Owned[this]] := _totalSupply_DUCATOProtocolToken[this];
[L1826]              sum_balances0[this] := sum_balances0[this] + balances_DUCATOProtocolToken[this][owner_Owned[this]];
[L1827]              assert { :EventEmitted "Transfer_DUCATOProtocolToken" } true;
[L1858]  RET         call DUCATOProtocolToken_DUCATOProtocolToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1859]  COND FALSE  !(revert)
[L420]   RET         call DUCATOProtocolToken_DUCATOProtocolToken__success(this, msgsender_MSG, msgvalue_MSG);
[L421]               assume !revert && gas >= 0;
[L3460]  RET         call DUCATOProtocolToken_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG);
DUCATOProtocolToken(115792089237316195423570985008687907853269984665640564039457584007913129639697).transferFrom~address~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639689, from : (- 1), to : (- 1), tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L799]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L800]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L801]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L802]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L803]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L804]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2053]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L2057]              __var_7 := null;
[L2058]  COND TRUE   !(from_s510 > null)
[L2059]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);

Loop:
DUCATOProtocolToken(115792089237316195423570985008687907853269984665640564039457584007913129639697).transferFrom~address~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639688, from : (- 1), to : (- 1), tokens : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != from_s510 || p2 != msgsender_MSG) && from_s510 == to_s510) && tokens_s510 <= balances_DUCATOProtocolToken[this][from_s510]) && tokens_s510 <= allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG]) && tokens_s510 >= 0) && tokens_s510 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][to_s510] >= 0) && balances_DUCATOProtocolToken[this][to_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_DUCATOProtocolToken[this][from_s510] >= 0) && balances_DUCATOProtocolToken[this][from_s510] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] >= 0) && allowed_DUCATOProtocolToken[this][from_s510][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := true;
[L3]                 call_transferFrom_DUCATOProtocolToken0 := false;
[L3]                 revert := revert_hold;
[L783]               havoc __exception;
[L784]               revert := false;
[L785]   COND TRUE   __exception
[L786]               __tmp__Balance := Balance;
[L787]               __tmp__DType := DType;
[L788]               __tmp__Alloc := Alloc;
[L789]               __tmp__balance_ADDR := balance_ADDR;
[L790]               __tmp__M_Ref_int := M_Ref_int;
[L791]               __tmp__sum_balances0 := sum_balances0;
[L792]               __tmp__alloc_allowed_DUCATOProtocolToken_lvl0 := alloc_allowed_DUCATOProtocolToken_lvl0;
[L793]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L794]               __tmp__sum_allowed1 := sum_allowed1;
[L795]               __tmp__Length := Length;
[L796]               __tmp__now := now;
[L797]               __tmp__owner_Owned := owner_Owned;
[L798]               __tmp__symbol_DUCATOProtocolToken := symbol_DUCATOProtocolToken;
[L799]               __tmp__name_DUCATOProtocolToken := name_DUCATOProtocolToken;
[L800]               __tmp__decimals_DUCATOProtocolToken := decimals_DUCATOProtocolToken;
[L801]               __tmp___totalSupply_DUCATOProtocolToken := _totalSupply_DUCATOProtocolToken;
[L802]               __tmp___stopTrade_DUCATOProtocolToken := _stopTrade_DUCATOProtocolToken;
[L803]               __tmp__balances_DUCATOProtocolToken := balances_DUCATOProtocolToken;
[L804]               __tmp__allowed_DUCATOProtocolToken := allowed_DUCATOProtocolToken;
[L805]   CALL        call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L2053]  COND FALSE  !(!(__tmp___stopTrade_DUCATOProtocolToken[this] != true))
[L2057]              __var_7 := null;
[L2058]  COND TRUE   !(from_s510 > null)
[L2059]              revert := true;
[L805]   RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);
[L806]               assume revert || gas < 0;
[L3394]  RET         call success_s510 := transferFrom~address~address~uint256_DUCATOProtocolToken(this, msgsender_MSG, msgvalue_MSG, from_s510, to_s510, tokens_s510);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
