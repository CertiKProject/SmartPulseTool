This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:58:39,210 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:58:39,212 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:58:39,223 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:58:39,223 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:58:39,224 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:58:39,225 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:58:39,227 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:58:39,228 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:58:39,229 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:58:39,229 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:58:39,230 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:58:39,230 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:58:39,231 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:58:39,232 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:58:39,232 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:58:39,233 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:58:39,234 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:58:39,235 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:58:39,237 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:58:39,238 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:58:39,238 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:58:39,240 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:58:39,240 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:58:39,240 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:58:39,241 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:58:39,241 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:58:39,242 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:58:39,242 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:58:39,242 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:58:39,242 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:58:39,243 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:58:39,243 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:58:39,244 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:58:39,245 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:58:39,245 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:58:39,245 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:58:39,245 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:58:39,246 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:58:39,246 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:58:39,247 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:58:39,247 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:58:39,255 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:58:39,255 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:58:39,256 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:58:39,256 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:58:39,256 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:58:39,256 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:58:39,256 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:58:39,256 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:58:39,256 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:58:39,256 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:58:39,256 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:58:39,257 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:58:39,257 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:58:39,258 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:58:39,258 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:58:39,258 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:58:39,258 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:58:39,258 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:58:39,282 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:58:39,296 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:58:39,298 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:58:39,299 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:58:39,300 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:58:39,300 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl
[2020-11-25 11:58:39,300 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl'
[2020-11-25 11:58:39,371 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:58:39,372 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:58:39,373 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:58:39,373 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:58:39,373 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:58:39,389 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,391 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,425 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,425 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,444 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,452 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,457 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,465 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:58:39,465 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:58:39,465 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:58:39,467 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:58:39,471 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/1) ...
[2020-11-25 11:58:39,487 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CoinHemp.transferFrom(from, to, value), from == to && (value > balances_CoinHemp[this][from] || value > allowed_CoinHemp[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transferFrom)))
[2020-11-25 11:58:39,493 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CoinHemp.transferFrom(from, to, value), from == to && (value > balances_CoinHemp[this][from] || value > allowed_CoinHemp[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transferFrom)))
[2020-11-25 11:58:39,500 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CoinHemp.transferFrom(from, to, value), from == to && (value > balances_CoinHemp[this][from] || value > allowed_CoinHemp[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transferFrom)))
[2020-11-25 11:58:39,506 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s231==_to_s231 && ( _value_s231>balances_CoinHemp[this][_from_s231] || _value_s231>allowed_CoinHemp[this][_from_s231][msg.sender] ) ) && _value_s231>=0 ) && _value_s231<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][_to_s231]>=0 ) && balances_CoinHemp[this][_to_s231]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balances_CoinHemp[this][_from_s231]>=0 ) && balances_CoinHemp[this][_from_s231]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowed_CoinHemp[this][_from_s231][msg.sender]>=0 ) && allowed_CoinHemp[this][_from_s231][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_to_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[_from_s231,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_CoinHemp>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:58:39,511 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CoinHemp.transferFrom(from, to, value), from == to && (value > balances_CoinHemp[this][from] || value > allowed_CoinHemp[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][to] >= 0 && balances_CoinHemp[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balances_CoinHemp[this][from] >= 0 &&  balances_CoinHemp[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowed_CoinHemp[this][from][msg.sender] >= 0 && allowed_CoinHemp[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(CoinHemp.transferFrom)))
[2020-11-25 11:58:39,511 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_CoinHemp0) ==> ( <>AP(fail_transferFrom_CoinHemp0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:58:39,517 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:58:39 PropertyContainer
[2020-11-25 11:58:39,518 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:58:39,518 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:58:39,518 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:58:39,518 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:58:39,519 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/2) ...
[2020-11-25 11:58:39,519 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:58:39,519 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:58:39,529 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:58:39" (2/2) ...
[2020-11-25 11:58:39,529 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:58:39,530 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:58:39,530 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:58:39,530 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:58:39,531 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/2) ...
[2020-11-25 11:58:39,585 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:58:39,585 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:58:39,585 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp
[2020-11-25 11:58:39,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp
[2020-11-25 11:58:39,585 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp
[2020-11-25 11:58:39,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp
[2020-11-25 11:58:39,586 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:58:39,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:58:39,586 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:58:39,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:58:39,586 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:58:39,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:58:39,586 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp
[2020-11-25 11:58:39,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp
[2020-11-25 11:58:39,586 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:58:39,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:58:39,587 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:58:39,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:58:39,587 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp
[2020-11-25 11:58:39,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp
[2020-11-25 11:58:39,587 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp
[2020-11-25 11:58:39,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp
[2020-11-25 11:58:39,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp
[2020-11-25 11:58:39,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp
[2020-11-25 11:58:39,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp
[2020-11-25 11:58:39,588 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp
[2020-11-25 11:58:39,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp
[2020-11-25 11:58:39,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp
[2020-11-25 11:58:39,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__success
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CoinHemp
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:58:39,589 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,590 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__success
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__success
[2020-11-25 11:58:39,591 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__success
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__success
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__success
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__success
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__success
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:58:39,592 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:58:39,593 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,593 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__fail
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__success
[2020-11-25 11:58:39,594 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:58:39,595 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__fail
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__success
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__fail
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__success
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__fail
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__success
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__fail
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__success
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__fail
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__success
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:58:39,596 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__success
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__fail
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__success
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CoinHemp
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:58:39,597 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:58:39,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:58:39,898 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:58:39,899 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:58:40,174 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:58:40,174 INFO  L286             CfgBuilder]: Removed 1 assue(true) statements.
[2020-11-25 11:58:40,176 INFO  L202        PluginConnector]: Adding new model CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:58:40 BoogieIcfgContainer
[2020-11-25 11:58:40,177 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:58:39" (2/2) ...
[2020-11-25 11:58:40,177 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:58:40,177 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@239445f6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:58:40, skipping insertion in model container
[2020-11-25 11:58:40,177 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:58:40,177 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:58:40,177 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:58:40,179 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:58:40,179 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/3) ...
[2020-11-25 11:58:40,180 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@9020b6e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:58:40, skipping insertion in model container
[2020-11-25 11:58:40,180 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:58:39" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:58:40,215 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:58:40 NWAContainer
[2020-11-25 11:58:40,215 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:58:40,215 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:58:40,215 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:58:40,216 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:58:40,217 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:58:40" (3/4) ...
[2020-11-25 11:58:40,218 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@72b25c89 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:58:40, skipping insertion in model container
[2020-11-25 11:58:40,218 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:58:40" (4/4) ...
[2020-11-25 11:58:40,221 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:58:40,225 INFO  L110   BuchiProductObserver]: Initial RCFG 1290 locations, 1648 edges
[2020-11-25 11:58:40,225 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:58:40,236 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:58:41,236 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:58:41,240 INFO  L110   BuchiProductObserver]: BuchiProgram size 3022 locations, 5180 edges
[2020-11-25 11:58:41,240 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:58:41 BoogieIcfgContainer
[2020-11-25 11:58:41,240 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:58:41,240 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:58:41,240 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:58:41,242 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:58:41,242 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:58:41" (1/1) ...
[2020-11-25 11:58:41,301 INFO  L313           BlockEncoder]: Initial Icfg 3022 locations, 5180 edges
[2020-11-25 11:58:41,301 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:58:41,302 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:58:41,302 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:58:41,303 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:58:41,316 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 5 locations because of local infeasibility
[2020-11-25 11:58:41,324 INFO  L70        RemoveSinkStates]: Removed 46 edges and 23 locations by removing sink states
[2020-11-25 11:58:41,335 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:58:41,339 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:58:41,343 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:58:41,343 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:58:41,348 INFO  L313           BlockEncoder]: Encoded RCFG 2982 locations, 5090 edges
[2020-11-25 11:58:41,349 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:58:41 BasicIcfg
[2020-11-25 11:58:41,349 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:58:41,349 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:58:41,349 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:58:41,352 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:58:41,352 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:58:41,352 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:58:39" (1/6) ...
[2020-11-25 11:58:41,354 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:58:41, skipping insertion in model container
[2020-11-25 11:58:41,354 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:58:41,354 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:58:39" (2/6) ...
[2020-11-25 11:58:41,355 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:58:41, skipping insertion in model container
[2020-11-25 11:58:41,355 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:58:41,355 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:58:40" (3/6) ...
[2020-11-25 11:58:41,355 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:58:41, skipping insertion in model container
[2020-11-25 11:58:41,355 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:58:41,355 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:58:40" (4/6) ...
[2020-11-25 11:58:41,355 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:58:41, skipping insertion in model container
[2020-11-25 11:58:41,355 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:58:41,355 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:58:41" (5/6) ...
[2020-11-25 11:58:41,356 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@57e20484 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:58:41, skipping insertion in model container
[2020-11-25 11:58:41,356 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:58:41,356 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:58:41" (6/6) ...
[2020-11-25 11:58:41,357 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_transferfrom-self-fail.bpl_BEv2
[2020-11-25 11:58:41,396 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:58:41,397 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:58:41,397 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:58:41,397 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:58:41,397 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:58:41,397 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:58:41,397 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:58:41,397 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:58:41,397 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:58:41,427 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2982 states.
[2020-11-25 11:58:41,485 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:41,485 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:41,485 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:41,495 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:41,495 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:41,495 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:58:41,495 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2982 states.
[2020-11-25 11:58:41,521 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:41,521 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:41,521 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:41,523 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:41,523 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_CoinHemp0 := false;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND TRUE   a_s472 == 0
[L1913]              c_s472 := 0;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND TRUE   choice == 15
[L2665]              gas := gas - 21000;
[L2666]  COND FALSE  !(gas >= 0)
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:58:41,541 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:58:41,541 INFO  L82        PathProgramCache]: Analyzing trace with hash -360205824, now seen corresponding path program 1 times
[2020-11-25 11:58:41,546 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:58:41,568 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:58:41,623 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:58:41,625 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:58:41,626 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:58:41,630 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:58:41,742 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:58:41,743 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:58:41,745 INFO  L87              Difference]: Start difference. First operand 2982 states. Second operand 4 states.
[2020-11-25 11:58:42,192 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:58:42,192 INFO  L93              Difference]: Finished difference Result 2843 states and 3332 transitions.
[2020-11-25 11:58:42,192 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:58:42,193 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2843 states and 3332 transitions.
[2020-11-25 11:58:42,205 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:42,223 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2843 states to 2838 states and 3322 transitions.
[2020-11-25 11:58:42,224 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 11:58:42,224 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 119
[2020-11-25 11:58:42,225 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2838 states and 3322 transitions.
[2020-11-25 11:58:42,231 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:58:42,231 INFO  L728         BuchiCegarLoop]: Abstraction has 2838 states and 3322 transitions.
[2020-11-25 11:58:42,247 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2838 states and 3322 transitions.
[2020-11-25 11:58:42,293 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2838 to 2838.
[2020-11-25 11:58:42,294 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2838 states.
[2020-11-25 11:58:42,298 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2838 states to 2838 states and 3322 transitions.
[2020-11-25 11:58:42,299 INFO  L751         BuchiCegarLoop]: Abstraction has 2838 states and 3322 transitions.
[2020-11-25 11:58:42,299 INFO  L631         BuchiCegarLoop]: Abstraction has 2838 states and 3322 transitions.
[2020-11-25 11:58:42,299 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:58:42,299 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2838 states and 3322 transitions.
[2020-11-25 11:58:42,305 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:42,305 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:42,305 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:42,307 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:42,307 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_CoinHemp0 := false;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND TRUE   a_s472 == 0
[L1913]              c_s472 := 0;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND TRUE   !(_to_s231 != null)
[L1647]              revert := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND TRUE   !(_to_s231 != null)
[L1647]              revert := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:58:42,311 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:58:42,311 INFO  L82        PathProgramCache]: Analyzing trace with hash 2105027192, now seen corresponding path program 1 times
[2020-11-25 11:58:42,311 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:58:42,322 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:58:42,355 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:58:42,356 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:58:42,356 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:58:42,357 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:58:42,358 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:58:42,358 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:58:42,358 INFO  L87              Difference]: Start difference. First operand 2838 states and 3322 transitions. cyclomatic complexity: 490 Second operand 4 states.
[2020-11-25 11:58:42,401 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:58:42,402 INFO  L93              Difference]: Finished difference Result 2840 states and 3323 transitions.
[2020-11-25 11:58:42,402 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:58:42,402 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2840 states and 3323 transitions.
[2020-11-25 11:58:42,411 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:42,422 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2840 states to 2837 states and 3320 transitions.
[2020-11-25 11:58:42,422 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 119
[2020-11-25 11:58:42,422 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 119
[2020-11-25 11:58:42,422 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2837 states and 3320 transitions.
[2020-11-25 11:58:42,426 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:58:42,426 INFO  L728         BuchiCegarLoop]: Abstraction has 2837 states and 3320 transitions.
[2020-11-25 11:58:42,428 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2837 states and 3320 transitions.
[2020-11-25 11:58:42,448 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2837 to 2837.
[2020-11-25 11:58:42,449 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2837 states.
[2020-11-25 11:58:42,453 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2837 states to 2837 states and 3320 transitions.
[2020-11-25 11:58:42,453 INFO  L751         BuchiCegarLoop]: Abstraction has 2837 states and 3320 transitions.
[2020-11-25 11:58:42,453 INFO  L631         BuchiCegarLoop]: Abstraction has 2837 states and 3320 transitions.
[2020-11-25 11:58:42,453 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:58:42,453 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2837 states and 3320 transitions.
[2020-11-25 11:58:42,458 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:42,458 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:42,458 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:42,459 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:42,460 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_CoinHemp0 := false;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND TRUE   revert
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND TRUE   !(_to_s231 != null)
[L1647]              revert := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND TRUE   !(_to_s231 != null)
[L1647]              revert := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:58:42,463 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:58:42,463 INFO  L82        PathProgramCache]: Analyzing trace with hash 1928425192, now seen corresponding path program 1 times
[2020-11-25 11:58:42,463 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:58:42,471 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:58:42,487 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:58:42,488 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:58:42,488 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:58:42,488 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:58:42,488 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:58:42,488 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:58:42,488 INFO  L87              Difference]: Start difference. First operand 2837 states and 3320 transitions. cyclomatic complexity: 489 Second operand 4 states.
[2020-11-25 11:58:42,976 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:58:42,976 INFO  L93              Difference]: Finished difference Result 3424 states and 3917 transitions.
[2020-11-25 11:58:42,976 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:58:42,977 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3424 states and 3917 transitions.
[2020-11-25 11:58:42,988 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:58:43,002 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3424 states to 3320 states and 3793 transitions.
[2020-11-25 11:58:43,002 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 146
[2020-11-25 11:58:43,003 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 146
[2020-11-25 11:58:43,003 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3320 states and 3793 transitions.
[2020-11-25 11:58:43,007 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:58:43,008 INFO  L728         BuchiCegarLoop]: Abstraction has 3320 states and 3793 transitions.
[2020-11-25 11:58:43,011 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3320 states and 3793 transitions.
[2020-11-25 11:58:43,039 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3320 to 2990.
[2020-11-25 11:58:43,039 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2990 states.
[2020-11-25 11:58:43,044 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2990 states to 2990 states and 3392 transitions.
[2020-11-25 11:58:43,045 INFO  L751         BuchiCegarLoop]: Abstraction has 2990 states and 3392 transitions.
[2020-11-25 11:58:43,045 INFO  L631         BuchiCegarLoop]: Abstraction has 2990 states and 3392 transitions.
[2020-11-25 11:58:43,045 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:58:43,045 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2990 states and 3392 transitions.
[2020-11-25 11:58:43,049 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:58:43,049 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:43,049 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:43,051 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:43,051 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_CoinHemp0 := false;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND FALSE  !(revert)
[L1488]              totalSupply_CoinHemp[this] := __var_1;
[L1489]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1490]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1491]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND FALSE  !(!(_to_s231 != null))
[L1650]  COND FALSE  !(!(_value_s231 <= balances_CoinHemp[this][_from_s231]))
[L1654]  COND FALSE  !(!(_value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]))
[L1658]  CALL        call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1658]  RET         call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1659]  COND FALSE  !(revert)
[L1662]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_from_s231];
[L1663]              balances_CoinHemp[this][_from_s231] := __var_9;
[L1664]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_from_s231];
[L1665]  CALL        call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1665]  RET         call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1666]  COND FALSE  !(revert)
[L1669]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s231];
[L1670]              balances_CoinHemp[this][_to_s231] := __var_10;
[L1671]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s231];
[L1672]  CALL        call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1672]  RET         call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1673]  COND FALSE  !(revert)
[L1676]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] - allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1677]              allowed_CoinHemp[this][_from_s231][msgsender_MSG] := __var_11;
[L1678]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] + allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1679]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1680]              __ret_0_ := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND FALSE  !(!(_to_s231 != null))
[L1650]  COND FALSE  !(!(_value_s231 <= balances_CoinHemp[this][_from_s231]))
[L1654]  COND FALSE  !(!(_value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]))
[L1658]  CALL        call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1658]  RET         call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1659]  COND FALSE  !(revert)
[L1662]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_from_s231];
[L1663]              balances_CoinHemp[this][_from_s231] := __var_9;
[L1664]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_from_s231];
[L1665]  CALL        call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1665]  RET         call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1666]  COND FALSE  !(revert)
[L1669]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s231];
[L1670]              balances_CoinHemp[this][_to_s231] := __var_10;
[L1671]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s231];
[L1672]  CALL        call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1672]  RET         call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1673]  COND FALSE  !(revert)
[L1676]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] - allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1677]              allowed_CoinHemp[this][_from_s231][msgsender_MSG] := __var_11;
[L1678]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] + allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1679]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1680]              __ret_0_ := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:58:43,054 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:58:43,054 INFO  L82        PathProgramCache]: Analyzing trace with hash 1096048127, now seen corresponding path program 1 times
[2020-11-25 11:58:43,055 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:58:43,069 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:58:43,182 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 3 proven. 0 refuted. 0 times theorem prover too weak. 1 trivial. 0 not checked.
[2020-11-25 11:58:43,182 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:58:43,182 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 11:58:43,183 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:58:43,183 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 11:58:43,183 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=24, Invalid=132, Unknown=0, NotChecked=0, Total=156
[2020-11-25 11:58:43,183 INFO  L87              Difference]: Start difference. First operand 2990 states and 3392 transitions. cyclomatic complexity: 408 Second operand 13 states.
[2020-11-25 11:58:44,573 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:58:44,573 INFO  L93              Difference]: Finished difference Result 3125 states and 3542 transitions.
[2020-11-25 11:58:44,573 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 11:58:44,573 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3125 states and 3542 transitions.
[2020-11-25 11:58:44,579 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:58:44,588 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3125 states to 3125 states and 3542 transitions.
[2020-11-25 11:58:44,588 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 164
[2020-11-25 11:58:44,589 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 164
[2020-11-25 11:58:44,589 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3125 states and 3542 transitions.
[2020-11-25 11:58:44,591 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:58:44,591 INFO  L728         BuchiCegarLoop]: Abstraction has 3125 states and 3542 transitions.
[2020-11-25 11:58:44,593 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3125 states and 3542 transitions.
[2020-11-25 11:58:44,614 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3125 to 2951.
[2020-11-25 11:58:44,614 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2951 states.
[2020-11-25 11:58:44,617 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2951 states to 2951 states and 3327 transitions.
[2020-11-25 11:58:44,617 INFO  L751         BuchiCegarLoop]: Abstraction has 2951 states and 3327 transitions.
[2020-11-25 11:58:44,617 INFO  L631         BuchiCegarLoop]: Abstraction has 2951 states and 3327 transitions.
[2020-11-25 11:58:44,617 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:58:44,617 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2951 states and 3327 transitions.
[2020-11-25 11:58:44,620 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:44,620 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:44,620 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:44,622 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:44,622 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_CoinHemp0 := false;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND TRUE   __exception
[L98]                __tmp__Balance := Balance;
[L99]                __tmp__DType := DType;
[L100]               __tmp__Alloc := Alloc;
[L101]               __tmp__balance_ADDR := balance_ADDR;
[L102]               __tmp__M_Ref_int := M_Ref_int;
[L103]               __tmp__sum_balances0 := sum_balances0;
[L104]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L105]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L106]               __tmp__sum_allowed1 := sum_allowed1;
[L107]               __tmp__Length := Length;
[L108]               __tmp__now := now;
[L109]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L110]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L111]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L112]               __tmp__name_CoinHemp := name_CoinHemp;
[L113]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L114]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L115]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L116]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L117]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L118]   CALL        call CoinHemp_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG);
[L1500]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1423]              assume msgsender_MSG != null;
[L1424]              __tmp__Balance[this] := 0;
[L1425]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1426]              __tmp__admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1427]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1428]              __tmp__account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1429]              __tmp__balances_CoinHemp[this] := zeroRefintArr();
[L1430]              __tmp__sum_balances0[this] := 0;
[L1431]              __tmp__name_CoinHemp[this] := -1920728545;
[L1432]              __tmp__symbol_CoinHemp[this] := 294157574;
[L1433]              __tmp__decimals_CoinHemp[this] := 18;
[L1434]              __tmp__initSupply_CoinHemp[this] := 400000000;
[L1435]              __tmp__totalSupply_CoinHemp[this] := 0;
[L1436]              __tmp__allowed_CoinHemp[this] := zeroRefRefintArr();
[L1437]              __tmp__sum_allowed1[this] := 0;
[L1440]              assume __tmp__Balance[msgsender_MSG] >= msgvalue_MSG;
[L1441]              __tmp__Balance[msgsender_MSG] := __tmp__Balance[msgsender_MSG] - msgvalue_MSG;
[L1442]              __tmp__Balance[this] := __tmp__Balance[this] + msgvalue_MSG;
[L1444]              __var_2 := __tmp__decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1445]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__initSupply_CoinHemp[this], nonlinearPow(10, __tmp__decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1901]  COND TRUE   a_s472 == 0
[L1902]              c_s472 := 0;
[L1445]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__initSupply_CoinHemp[this], nonlinearPow(10, __tmp__decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1446]  COND FALSE  !(revert)
[L1449]              __tmp__totalSupply_CoinHemp[this] := __var_1;
[L1450]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] - __tmp__balances_CoinHemp[this][__tmp__account_address_CoinHemp[this]];
[L1451]              __tmp__balances_CoinHemp[this][__tmp__account_address_CoinHemp[this]] := __tmp__totalSupply_CoinHemp[this];
[L1452]              __tmp__sum_balances0[this] := __tmp__sum_balances0[this] + __tmp__balances_CoinHemp[this][__tmp__account_address_CoinHemp[this]];
[L1500]  RET         call CoinHemp_CoinHemp_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1501]  COND FALSE  !(revert)
[L118]   RET         call CoinHemp_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG);
[L119]               assume revert || gas < 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND FALSE  !(!(_to_s231 != null))
[L1650]  COND FALSE  !(!(_value_s231 <= balances_CoinHemp[this][_from_s231]))
[L1654]  COND FALSE  !(!(_value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]))
[L1658]  CALL        call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1658]  RET         call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1659]  COND FALSE  !(revert)
[L1662]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_from_s231];
[L1663]              balances_CoinHemp[this][_from_s231] := __var_9;
[L1664]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_from_s231];
[L1665]  CALL        call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1665]  RET         call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1666]  COND FALSE  !(revert)
[L1669]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s231];
[L1670]              balances_CoinHemp[this][_to_s231] := __var_10;
[L1671]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s231];
[L1672]  CALL        call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1672]  RET         call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1673]  COND FALSE  !(revert)
[L1676]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] - allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1677]              allowed_CoinHemp[this][_from_s231][msgsender_MSG] := __var_11;
[L1678]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] + allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1679]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1680]              __ret_0_ := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND TRUE   choice == 15
[L2665]              gas := gas - 21000;
[L2666]  COND FALSE  !(gas >= 0)
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:58:44,624 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:58:44,624 INFO  L82        PathProgramCache]: Analyzing trace with hash -1018250873, now seen corresponding path program 1 times
[2020-11-25 11:58:44,625 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:58:44,631 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:58:44,652 INFO  L134       CoverageAnalysis]: Checked inductivity of 4 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 4 trivial. 0 not checked.
[2020-11-25 11:58:44,652 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:58:44,653 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:58:44,653 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:58:44,653 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:58:44,653 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:58:44,653 INFO  L87              Difference]: Start difference. First operand 2951 states and 3327 transitions. cyclomatic complexity: 383 Second operand 4 states.
[2020-11-25 11:58:44,916 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:58:44,916 INFO  L93              Difference]: Finished difference Result 3614 states and 4151 transitions.
[2020-11-25 11:58:44,916 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:58:44,916 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3614 states and 4151 transitions.
[2020-11-25 11:58:44,924 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:58:44,934 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3614 states to 3521 states and 4029 transitions.
[2020-11-25 11:58:44,935 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 200
[2020-11-25 11:58:44,935 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 200
[2020-11-25 11:58:44,935 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3521 states and 4029 transitions.
[2020-11-25 11:58:44,938 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:58:44,938 INFO  L728         BuchiCegarLoop]: Abstraction has 3521 states and 4029 transitions.
[2020-11-25 11:58:44,940 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3521 states and 4029 transitions.
[2020-11-25 11:58:44,959 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3521 to 2890.
[2020-11-25 11:58:44,959 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2890 states.
[2020-11-25 11:58:44,961 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2890 states to 2890 states and 3234 transitions.
[2020-11-25 11:58:44,961 INFO  L751         BuchiCegarLoop]: Abstraction has 2890 states and 3234 transitions.
[2020-11-25 11:58:44,961 INFO  L631         BuchiCegarLoop]: Abstraction has 2890 states and 3234 transitions.
[2020-11-25 11:58:44,962 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 11:58:44,962 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2890 states and 3234 transitions.
[2020-11-25 11:58:44,964 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:58:44,964 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:58:44,964 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:58:44,965 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:58:44,965 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transferFrom_CoinHemp0 := false;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]     CALL        call main();
[L2767]              assume null == 0;
[L2768]  CALL        call this := FreshRefGenerator__success();
[L1410]              havoc newRef;
[L1411]              assume Alloc[newRef] == false;
[L1412]              Alloc[newRef] := true;
[L1413]              assume newRef != null;
[L2768]  RET         call this := FreshRefGenerator__success();
[L2769]              assume now >= 0;
[L2770]              assume DType[this] == CoinHemp;
[L2771]              assume msgvalue_MSG >= 0;
[L2772]              gas := gas - 53000;
[L2773]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L95]                havoc __exception;
[L96]                revert := false;
[L97]    COND FALSE  !(__exception)
[L121]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1512]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1462]              assume msgsender_MSG != null;
[L1463]              Balance[this] := 0;
[L1464]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1465]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              balances_CoinHemp[this] := zeroRefintArr();
[L1469]              sum_balances0[this] := 0;
[L1470]              name_CoinHemp[this] := -1920728545;
[L1471]              symbol_CoinHemp[this] := 294157574;
[L1472]              decimals_CoinHemp[this] := 18;
[L1473]              initSupply_CoinHemp[this] := 400000000;
[L1474]              totalSupply_CoinHemp[this] := 0;
[L1475]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1476]              sum_allowed1[this] := 0;
[L1479]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1480]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1481]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1483]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1484]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1912]  COND FALSE  !(a_s472 == 0)
[L1916]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1917]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1918]              c_s472 := c_s472;
[L1484]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1485]  COND FALSE  !(revert)
[L1488]              totalSupply_CoinHemp[this] := __var_1;
[L1489]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1490]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1491]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1512]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  COND FALSE  !(revert)
[L121]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L122]               assume !revert && gas >= 0;
[L2773]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2774]              assume !revert && gas >= 0;
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND FALSE  !(choice == 7)
[L2720]  COND TRUE   choice == 6
[L2721]              gas := gas - 21000;
[L2722]  COND TRUE   gas >= 0
[L2723]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2724]              assume msgvalue_MSG == 0;
[L2725]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L328]               havoc __exception;
[L329]               revert := false;
[L330]   COND FALSE  !(__exception)
[L354]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1695]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1696]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1697]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1698]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1699]              __ret_0_ := true;
[L354]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L355]               assume !revert && gas >= 0;
[L2725]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2777]  RET         call CorralChoice_CoinHemp(this);
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND FALSE  !(!(_to_s231 != null))
[L1650]  COND FALSE  !(!(_value_s231 <= balances_CoinHemp[this][_from_s231]))
[L1654]  COND FALSE  !(!(_value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]))
[L1658]  CALL        call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1658]  RET         call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1659]  COND FALSE  !(revert)
[L1662]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_from_s231];
[L1663]              balances_CoinHemp[this][_from_s231] := __var_9;
[L1664]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_from_s231];
[L1665]  CALL        call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1665]  RET         call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1666]  COND FALSE  !(revert)
[L1669]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s231];
[L1670]              balances_CoinHemp[this][_to_s231] := __var_10;
[L1671]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s231];
[L1672]  CALL        call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1672]  RET         call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1673]  COND FALSE  !(revert)
[L1676]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] - allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1677]              allowed_CoinHemp[this][_from_s231][msgsender_MSG] := __var_11;
[L1678]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] + allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1679]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1680]              __ret_0_ := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2777]  CALL        call CorralChoice_CoinHemp(this);
[L2623]              havoc msgsender_MSG;
[L2624]              havoc msgvalue_MSG;
[L2625]              havoc choice;
[L2626]              havoc __ret_0_admin_address;
[L2627]              havoc __ret_0_account_address;
[L2628]              havoc __ret_0_name;
[L2629]              havoc __ret_0_symbol;
[L2630]              havoc __ret_0_decimals;
[L2631]              havoc __ret_0_totalSupply;
[L2632]              havoc _addr_s63;
[L2633]              havoc __ret_0_balanceOf;
[L2634]              havoc _to_s131;
[L2635]              havoc _value_s131;
[L2636]              havoc __ret_0_transfer;
[L2637]              havoc _from_s231;
[L2638]              havoc _to_s231;
[L2639]              havoc _value_s231;
[L2640]              havoc __ret_0_transferFrom;
[L2641]              havoc _spender_s259;
[L2642]              havoc _value_s259;
[L2643]              havoc __ret_0_approve;
[L2644]              havoc _owner_s275;
[L2645]              havoc _spender_s275;
[L2646]              havoc __ret_0_allowance;
[L2647]              havoc _spender_s316;
[L2648]              havoc _addedValue_s316;
[L2649]              havoc __ret_0_increaseApproval;
[L2650]              havoc _spender_s376;
[L2651]              havoc _subtractedValue_s376;
[L2652]              havoc __ret_0_decreaseApproval;
[L2653]              havoc new_admin_address_s411;
[L2654]              havoc __ret_0_setAdmin;
[L2655]              havoc tmpNow;
[L2656]              havoc gas;
[L2657]              assume gas > 4000000 && gas <= 8000000;
[L2658]              tmpNow := now;
[L2659]              havoc now;
[L2660]              assume now > tmpNow;
[L2661]              assume msgsender_MSG != null;
[L2662]              assume DType[msgsender_MSG] != CoinHemp;
[L2663]              Alloc[msgsender_MSG] := true;
[L2664]  COND FALSE  !(choice == 15)
[L2670]  COND FALSE  !(choice == 14)
[L2676]  COND FALSE  !(choice == 13)
[L2682]  COND FALSE  !(choice == 12)
[L2688]  COND FALSE  !(choice == 11)
[L2694]  COND FALSE  !(choice == 10)
[L2700]  COND FALSE  !(choice == 9)
[L2706]  COND FALSE  !(choice == 8)
[L2713]  COND TRUE   choice == 7
[L2714]              gas := gas - 21000;
[L2715]  COND TRUE   gas >= 0
[L2716]              assume _value_s231 >= 0 && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2717]              assume msgvalue_MSG == 0;
[L2718]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((((_from_s231 == _to_s231 && (_value_s231 > balances_CoinHemp[this][_from_s231] || _value_s231 > allowed_CoinHemp[this][_from_s231][msgsender_MSG])) && _value_s231 >= 0) && _value_s231 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_to_s231] >= 0) && balances_CoinHemp[this][_to_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balances_CoinHemp[this][_from_s231] >= 0) && balances_CoinHemp[this][_from_s231] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] >= 0) && allowed_CoinHemp[this][_from_s231][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transferFrom_CoinHemp0 := true;
[L2]                 call_transferFrom_CoinHemp0 := false;
[L2]                 revert := revert_hold;
[L270]               havoc __exception;
[L271]               revert := false;
[L272]   COND FALSE  !(__exception)
[L296]   CALL        call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L1645]              __var_8 := null;
[L1646]  COND FALSE  !(!(_to_s231 != null))
[L1650]  COND FALSE  !(!(_value_s231 <= balances_CoinHemp[this][_from_s231]))
[L1654]  COND FALSE  !(!(_value_s231 <= allowed_CoinHemp[this][_from_s231][msgsender_MSG]))
[L1658]  CALL        call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1658]  RET         call __var_9 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_from_s231], _value_s231);
[L1659]  COND FALSE  !(revert)
[L1662]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_from_s231];
[L1663]              balances_CoinHemp[this][_from_s231] := __var_9;
[L1664]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_from_s231];
[L1665]  CALL        call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1956]              c_s530 := (a_s530 + b_s530) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1957]              assert c_s530 >= a_s530;
[L1958]              c_s530 := c_s530;
[L1665]  RET         call __var_10 := add~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, balances_CoinHemp[this][_to_s231], _value_s231);
[L1666]  COND FALSE  !(revert)
[L1669]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][_to_s231];
[L1670]              balances_CoinHemp[this][_to_s231] := __var_10;
[L1671]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][_to_s231];
[L1672]  CALL        call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1942]              assert b_s506 <= a_s506;
[L1943]              __ret_0_ := (a_s506 - b_s506) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1672]  RET         call __var_11 := sub~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, allowed_CoinHemp[this][_from_s231][msgsender_MSG], _value_s231);
[L1673]  COND FALSE  !(revert)
[L1676]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] - allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1677]              allowed_CoinHemp[this][_from_s231][msgsender_MSG] := __var_11;
[L1678]              sum_allowed1[_from_s231] := sum_allowed1[_from_s231] + allowed_CoinHemp[this][_from_s231][msgsender_MSG];
[L1679]              assert { :EventEmitted "Transfer_CoinHemp" } true;
[L1680]              __ret_0_ := true;
[L296]   RET         call __ret_0_ := transferFrom~address~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L297]               assume !revert && gas >= 0;
[L2718]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _from_s231, _to_s231, _value_s231);
[L2777]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:58:44,969 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:58:44,969 INFO  L82        PathProgramCache]: Analyzing trace with hash -575229805, now seen corresponding path program 1 times
[2020-11-25 11:58:44,970 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:58:44,987 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:58:45,091 INFO  L134       CoverageAnalysis]: Checked inductivity of 56 backedges. 0 proven. 3 refuted. 0 times theorem prover too weak. 53 trivial. 0 not checked.
[2020-11-25 11:58:45,091 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-25 11:58:45,091 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [9] total 9
[2020-11-25 11:58:45,091 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:58:45,091 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 9 interpolants.
[2020-11-25 11:58:45,092 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=21, Invalid=51, Unknown=0, NotChecked=0, Total=72
[2020-11-25 11:58:45,093 INFO  L87              Difference]: Start difference. First operand 2890 states and 3234 transitions. cyclomatic complexity: 351 Second operand 9 states.
[2020-11-25 11:58:45,640 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:58:45,640 INFO  L93              Difference]: Finished difference Result 1618 states and 1798 transitions.
[2020-11-25 11:58:45,641 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 9 states. 
[2020-11-25 11:58:45,641 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1618 states and 1798 transitions.
[2020-11-25 11:58:45,643 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:58:45,644 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1618 states to 0 states and 0 transitions.
[2020-11-25 11:58:45,644 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:58:45,644 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:58:45,644 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:58:45,644 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:58:45,644 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:58:45,644 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:58:45,644 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:58:45,644 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 11:58:45,644 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:58:45,644 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:58:45,644 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:58:45,647 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:58:45 BasicIcfg
[2020-11-25 11:58:45,647 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:58:45,647 INFO  L168              Benchmark]: Toolchain (without parser) took 6275.61 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 503.3 MB). Free memory was 945.9 MB in the beginning and 978.5 MB in the end (delta: -32.6 MB). Peak memory consumption was 470.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,648 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,648 INFO  L168              Benchmark]: Boogie Preprocessor took 92.23 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,649 INFO  L168              Benchmark]: UtopiaSpecLang took 52.42 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,649 INFO  L168              Benchmark]: Boogie Printer took 11.37 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,649 INFO  L168              Benchmark]: RCFGBuilder took 647.63 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,649 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.87 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,650 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1024.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 845.7 MB in the beginning and 823.2 MB in the end (delta: 22.5 MB). Peak memory consumption was 131.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,650 INFO  L168              Benchmark]: BlockEncodingV2 took 108.47 ms. Allocated memory is still 1.1 GB. Free memory was 823.2 MB in the beginning and 782.9 MB in the end (delta: 40.3 MB). Peak memory consumption was 40.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,651 INFO  L168              Benchmark]: BuchiAutomizer took 4297.93 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 445.6 MB). Free memory was 782.9 MB in the beginning and 978.5 MB in the end (delta: -195.6 MB). Peak memory consumption was 250.0 MB. Max. memory is 15.3 GB.
[2020-11-25 11:58:45,653 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3022 locations, 5180 edges
  - StatisticsResult: Encoded RCFG
    2982 locations, 5090 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.14 ms. Allocated memory is still 1.0 GB. Free memory is still 956.7 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 92.23 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 52.42 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 11.37 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.4 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 647.63 ms. Allocated memory is still 1.0 GB. Free memory was 924.4 MB in the beginning and 849.3 MB in the end (delta: 75.2 MB). Peak memory consumption was 75.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.87 ms. Allocated memory is still 1.0 GB. Free memory was 849.3 MB in the beginning and 845.7 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1024.72 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 57.7 MB). Free memory was 845.7 MB in the beginning and 823.2 MB in the end (delta: 22.5 MB). Peak memory consumption was 131.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 108.47 ms. Allocated memory is still 1.1 GB. Free memory was 823.2 MB in the beginning and 782.9 MB in the end (delta: 40.3 MB). Peak memory consumption was 40.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 4297.93 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 445.6 MB). Free memory was 782.9 MB in the beginning and 978.5 MB in the end (delta: -195.6 MB). Peak memory consumption was 250.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1290 locations, 1648 edges
  - StatisticsResult: BuchiProgram size
    3022 locations, 5180 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 6 terminating modules (6 trivial, 0 deterministic, 0 nondeterministic). 6 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 4.2s and 7 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 2.3s. BÃ¼chi inclusion checks took 0.9s. Highest rank in rank-based complementation 0. Minimization of det autom 6. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 5 MinimizatonAttempts, 1135 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2990 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 18176 SDtfs, 14535 SDslu, 29948 SDs, 0 SdLazy, 29527 SolverSat, 2266 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.3s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU6 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_CoinHemp0) ==> ( <>(fail_transferFrom_CoinHemp0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
