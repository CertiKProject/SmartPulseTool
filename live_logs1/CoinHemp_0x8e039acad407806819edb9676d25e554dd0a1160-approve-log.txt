This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:57:05,388 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:57:05,389 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:57:05,402 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:57:05,402 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:57:05,403 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:57:05,404 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:57:05,406 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:57:05,408 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:57:05,409 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:57:05,410 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:57:05,411 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:57:05,411 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:57:05,412 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:57:05,413 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:57:05,414 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:57:05,414 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:57:05,416 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:57:05,417 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:57:05,419 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:57:05,419 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:57:05,420 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:57:05,422 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:57:05,422 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:57:05,422 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:57:05,423 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:57:05,423 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:57:05,424 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:57:05,424 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:57:05,424 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:57:05,425 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:57:05,425 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:57:05,426 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:57:05,426 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:57:05,427 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:57:05,427 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:57:05,428 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:57:05,428 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:57:05,428 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:57:05,429 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:57:05,430 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:57:05,430 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:57:05,438 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:57:05,438 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:57:05,439 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:57:05,439 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:57:05,439 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:57:05,439 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:57:05,439 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:57:05,439 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:05,439 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:57:05,440 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:57:05,440 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:57:05,440 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:57:05,441 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:57:05,441 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:57:05,441 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:57:05,441 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:57:05,441 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:57:05,441 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:57:05,441 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:57:05,465 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:57:05,479 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:57:05,482 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:57:05,483 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:57:05,483 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:57:05,484 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl
[2020-11-25 11:57:05,484 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl'
[2020-11-25 11:57:05,566 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:57:05,567 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:57:05,568 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:57:05,568 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:57:05,568 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:57:05,585 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,587 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,616 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,616 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,636 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,644 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,650 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,658 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:57:05,659 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:57:05,659 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:57:05,663 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:57:05,670 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/1) ...
[2020-11-25 11:57:05,687 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(CoinHemp.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CoinHemp.approve(spender, value), return == true && allowed_CoinHemp[this][msg.sender][spender] == value &&  totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:05,692 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(CoinHemp.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CoinHemp.approve(spender, value), return == true && allowed_CoinHemp[this][msg.sender][spender] == value &&  totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:05,700 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(CoinHemp.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CoinHemp.approve(spender, value), return == true && allowed_CoinHemp[this][msg.sender][spender] == value &&  totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:05,706 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=_spender_s259 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_spender_s259,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]
[2020-11-25 11:57:05,709 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( __ret_0_==true && allowed_CoinHemp[this][msg.sender][_spender_s259]==_value_s259 ) && totalSupply_CoinHemp[this]==( old(totalSupply_CoinHemp[this]) ) ) && balances_CoinHemp[this]==( old(balances_CoinHemp[this]) ) ) && allowed_CoinHemp[this][p1][p2]==( old(allowed_CoinHemp[this][p1][p2]) ) ) && admin_address_CoinHemp[this]==( old(admin_address_CoinHemp[this]) ) ) && account_address_CoinHemp[this]==( old(account_address_CoinHemp[this]) ) ) && name_CoinHemp[this]==( old(name_CoinHemp[this]) ) ) && symbol_CoinHemp[this]==( old(symbol_CoinHemp[this]) ) ) && decimals_CoinHemp[this]==( old(decimals_CoinHemp[this]) ) ) && initSupply_CoinHemp[this]==( old(initSupply_CoinHemp[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_CoinHemp>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],[IdentifierExpression[_spender_s259,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],IdentifierExpression[_value_s259,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[admin_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[account_address_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[initSupply_CoinHemp,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_CoinHemp>]]]]]]
[2020-11-25 11:57:05,714 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(CoinHemp.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(CoinHemp.approve(spender, value), return == true && allowed_CoinHemp[this][msg.sender][spender] == value &&  totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this]) && balances_CoinHemp[this] == old(balances_CoinHemp[this]) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2]) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this]) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this]) && name_CoinHemp[this] == old(name_CoinHemp[this]) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this]) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this]) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]))))
[2020-11-25 11:57:05,714 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_CoinHemp0) ==> ( <>AP(success_approve_CoinHemp0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:57:05,723 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:05 PropertyContainer
[2020-11-25 11:57:05,723 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:57:05,723 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:57:05,723 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:57:05,723 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:57:05,724 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/2) ...
[2020-11-25 11:57:05,725 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:57:05,725 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:57:05,739 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:05" (2/2) ...
[2020-11-25 11:57:05,740 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:57:05,741 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:57:05,741 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:57:05,741 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:57:05,742 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/2) ...
[2020-11-25 11:57:05,797 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:57:05,797 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:05,797 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:05,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp
[2020-11-25 11:57:05,797 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:05,797 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp
[2020-11-25 11:57:05,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:05,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp
[2020-11-25 11:57:05,798 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:05,798 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:05,799 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:05,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp
[2020-11-25 11:57:05,799 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:05,799 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp
[2020-11-25 11:57:05,799 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp
[2020-11-25 11:57:05,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp
[2020-11-25 11:57:05,800 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:05,800 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,800 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,800 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,800 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,800 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp
[2020-11-25 11:57:05,800 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp
[2020-11-25 11:57:05,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp
[2020-11-25 11:57:05,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp
[2020-11-25 11:57:05,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp
[2020-11-25 11:57:05,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp
[2020-11-25 11:57:05,801 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:57:05,801 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__success
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,802 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:05,803 INFO  L130     BoogieDeclarations]: Found specification of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__success
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__success
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure name_CoinHemp__fail
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__success
[2020-11-25 11:57:05,804 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__success
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:57:05,805 INFO  L130     BoogieDeclarations]: Found specification of procedure admin_only_pre__fail
[2020-11-25 11:57:05,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:57:05,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:57:05,805 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp_NoBaseCtor__success
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure CoinHemp_CoinHemp__success
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_CoinHemp__success
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__fail
[2020-11-25 11:57:05,806 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_CoinHemp__success
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__fail
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_CoinHemp__success
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__fail
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAdmin~address_CoinHemp__success
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__fail
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure withDraw_CoinHemp__success
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__fail
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_CoinHemp__success
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,807 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__fail
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_CoinHemp__success
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__fail
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_address_CoinHemp__success
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__fail
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure account_address_CoinHemp__success
[2020-11-25 11:57:05,808 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__fail
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_CoinHemp__success
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__fail
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_CoinHemp__success
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__fail
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_CoinHemp__success
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__fail
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_CoinHemp__success
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:57:05,809 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:57:05,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:57:05,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__fail
[2020-11-25 11:57:05,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure admin_only_pre__success
[2020-11-25 11:57:05,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CoinHemp
[2020-11-25 11:57:05,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:57:05,810 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:57:05,810 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:57:05,986 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:06,164 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:06,165 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:06,165 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:57:06,372 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:57:06,372 INFO  L286             CfgBuilder]: Removed 1 assue(true) statements.
[2020-11-25 11:57:06,374 INFO  L202        PluginConnector]: Adding new model CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:06 BoogieIcfgContainer
[2020-11-25 11:57:06,374 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:05" (2/2) ...
[2020-11-25 11:57:06,374 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:57:06,374 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@53842ea2 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:06, skipping insertion in model container
[2020-11-25 11:57:06,374 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:57:06,375 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:06,375 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:57:06,376 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:57:06,377 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/3) ...
[2020-11-25 11:57:06,377 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@15f0594e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:06, skipping insertion in model container
[2020-11-25 11:57:06,377 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:05" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:57:06,415 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:06 NWAContainer
[2020-11-25 11:57:06,415 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:57:06,415 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:06,415 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:57:06,416 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:57:06,417 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:06" (3/4) ...
[2020-11-25 11:57:06,417 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@37bd58ce and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:06, skipping insertion in model container
[2020-11-25 11:57:06,417 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:06" (4/4) ...
[2020-11-25 11:57:06,422 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:57:06,428 INFO  L110   BuchiProductObserver]: Initial RCFG 1293 locations, 1652 edges
[2020-11-25 11:57:06,429 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:57:06,442 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:57:07,487 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:57:07,493 INFO  L110   BuchiProductObserver]: BuchiProgram size 3028 locations, 5192 edges
[2020-11-25 11:57:07,494 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:07 BoogieIcfgContainer
[2020-11-25 11:57:07,494 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:57:07,494 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:57:07,494 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:57:07,496 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:57:07,496 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:07" (1/1) ...
[2020-11-25 11:57:07,556 INFO  L313           BlockEncoder]: Initial Icfg 3028 locations, 5192 edges
[2020-11-25 11:57:07,556 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:57:07,556 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:57:07,557 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:57:07,557 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:57:07,564 INFO  L70    emoveInfeasibleEdges]: Removed 27 edges and 5 locations because of local infeasibility
[2020-11-25 11:57:07,570 INFO  L70        RemoveSinkStates]: Removed 2 edges and 1 locations by removing sink states
[2020-11-25 11:57:07,576 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:57:07,579 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:57:07,582 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:57:07,582 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:57:07,586 INFO  L313           BlockEncoder]: Encoded RCFG 3010 locations, 5146 edges
[2020-11-25 11:57:07,586 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:07 BasicIcfg
[2020-11-25 11:57:07,586 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:57:07,587 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:57:07,587 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:57:07,589 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:57:07,589 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:07,589 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:57:05" (1/6) ...
[2020-11-25 11:57:07,590 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cc876f3 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:07, skipping insertion in model container
[2020-11-25 11:57:07,590 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:07,590 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:57:05" (2/6) ...
[2020-11-25 11:57:07,591 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cc876f3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:07, skipping insertion in model container
[2020-11-25 11:57:07,591 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:07,591 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:57:06" (3/6) ...
[2020-11-25 11:57:07,591 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cc876f3 and model type CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:07, skipping insertion in model container
[2020-11-25 11:57:07,591 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:07,591 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:57:06" (4/6) ...
[2020-11-25 11:57:07,591 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cc876f3 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:57:07, skipping insertion in model container
[2020-11-25 11:57:07,591 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:07,591 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:57:07" (5/6) ...
[2020-11-25 11:57:07,591 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6cc876f3 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:57:07, skipping insertion in model container
[2020-11-25 11:57:07,591 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:57:07,592 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:57:07" (6/6) ...
[2020-11-25 11:57:07,592 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CoinHemp_0x8e039acad407806819edb9676d25e554dd0a1160_approve.bpl_BEv2
[2020-11-25 11:57:07,624 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:57:07,624 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:57:07,624 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:57:07,624 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:57:07,624 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:57:07,624 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:57:07,624 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:57:07,624 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:57:07,624 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:57:07,650 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3010 states.
[2020-11-25 11:57:07,705 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:07,705 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:07,706 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:07,715 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:07,715 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:07,715 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:57:07,715 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3010 states.
[2020-11-25 11:57:07,733 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:07,733 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:07,733 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:07,735 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:07,735 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND TRUE   a_s472 == 0
[L1914]              c_s472 := 0;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND TRUE   choice == 15
[L2666]              gas := gas - 21000;
[L2667]  COND FALSE  !(gas >= 0)
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:07,750 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:07,750 INFO  L82        PathProgramCache]: Analyzing trace with hash -232667236, now seen corresponding path program 1 times
[2020-11-25 11:57:07,754 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:07,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:07,840 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:07,843 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:07,843 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:07,847 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:07,958 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:07,958 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:07,960 INFO  L87              Difference]: Start difference. First operand 3010 states. Second operand 4 states.
[2020-11-25 11:57:08,366 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:08,366 INFO  L93              Difference]: Finished difference Result 2874 states and 3366 transitions.
[2020-11-25 11:57:08,366 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:08,367 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2874 states and 3366 transitions.
[2020-11-25 11:57:08,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:08,398 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2874 states to 2869 states and 3356 transitions.
[2020-11-25 11:57:08,398 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:57:08,399 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 125
[2020-11-25 11:57:08,400 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2869 states and 3356 transitions.
[2020-11-25 11:57:08,406 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:08,406 INFO  L728         BuchiCegarLoop]: Abstraction has 2869 states and 3356 transitions.
[2020-11-25 11:57:08,420 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2869 states and 3356 transitions.
[2020-11-25 11:57:08,466 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2869 to 2869.
[2020-11-25 11:57:08,466 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2869 states.
[2020-11-25 11:57:08,474 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2869 states to 2869 states and 3356 transitions.
[2020-11-25 11:57:08,476 INFO  L751         BuchiCegarLoop]: Abstraction has 2869 states and 3356 transitions.
[2020-11-25 11:57:08,476 INFO  L631         BuchiCegarLoop]: Abstraction has 2869 states and 3356 transitions.
[2020-11-25 11:57:08,476 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:57:08,476 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2869 states and 3356 transitions.
[2020-11-25 11:57:08,484 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:08,485 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:08,485 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:08,487 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:08,487 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND TRUE   a_s472 == 0
[L1914]              c_s472 := 0;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:08,492 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:08,492 INFO  L82        PathProgramCache]: Analyzing trace with hash 352445053, now seen corresponding path program 1 times
[2020-11-25 11:57:08,493 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:08,506 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:08,549 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:08,549 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:08,549 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:08,551 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:08,551 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:08,551 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:08,551 INFO  L87              Difference]: Start difference. First operand 2869 states and 3356 transitions. cyclomatic complexity: 493 Second operand 4 states.
[2020-11-25 11:57:08,610 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:08,610 INFO  L93              Difference]: Finished difference Result 2871 states and 3357 transitions.
[2020-11-25 11:57:08,611 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:08,611 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2871 states and 3357 transitions.
[2020-11-25 11:57:08,623 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:08,638 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2871 states to 2868 states and 3354 transitions.
[2020-11-25 11:57:08,638 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 125
[2020-11-25 11:57:08,638 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 125
[2020-11-25 11:57:08,638 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2868 states and 3354 transitions.
[2020-11-25 11:57:08,643 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:08,644 INFO  L728         BuchiCegarLoop]: Abstraction has 2868 states and 3354 transitions.
[2020-11-25 11:57:08,647 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2868 states and 3354 transitions.
[2020-11-25 11:57:08,674 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2868 to 2868.
[2020-11-25 11:57:08,674 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2868 states.
[2020-11-25 11:57:08,680 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2868 states to 2868 states and 3354 transitions.
[2020-11-25 11:57:08,680 INFO  L751         BuchiCegarLoop]: Abstraction has 2868 states and 3354 transitions.
[2020-11-25 11:57:08,680 INFO  L631         BuchiCegarLoop]: Abstraction has 2868 states and 3354 transitions.
[2020-11-25 11:57:08,680 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:57:08,680 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2868 states and 3354 transitions.
[2020-11-25 11:57:08,687 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:08,687 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:08,687 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:08,689 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:08,689 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND TRUE   revert
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:08,693 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:08,693 INFO  L82        PathProgramCache]: Analyzing trace with hash 1865565672, now seen corresponding path program 1 times
[2020-11-25 11:57:08,694 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:08,705 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:08,730 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:08,730 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:08,730 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:57:08,731 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:08,731 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:57:08,731 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:57:08,731 INFO  L87              Difference]: Start difference. First operand 2868 states and 3354 transitions. cyclomatic complexity: 492 Second operand 4 states.
[2020-11-25 11:57:09,281 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:09,281 INFO  L93              Difference]: Finished difference Result 3794 states and 4406 transitions.
[2020-11-25 11:57:09,281 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:57:09,281 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3794 states and 4406 transitions.
[2020-11-25 11:57:09,294 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:57:09,306 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3794 states to 3690 states and 4282 transitions.
[2020-11-25 11:57:09,306 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 172
[2020-11-25 11:57:09,307 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 172
[2020-11-25 11:57:09,307 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3690 states and 4282 transitions.
[2020-11-25 11:57:09,311 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:09,311 INFO  L728         BuchiCegarLoop]: Abstraction has 3690 states and 4282 transitions.
[2020-11-25 11:57:09,314 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3690 states and 4282 transitions.
[2020-11-25 11:57:09,342 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3690 to 3015.
[2020-11-25 11:57:09,342 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3015 states.
[2020-11-25 11:57:09,345 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3015 states to 3015 states and 3417 transitions.
[2020-11-25 11:57:09,346 INFO  L751         BuchiCegarLoop]: Abstraction has 3015 states and 3417 transitions.
[2020-11-25 11:57:09,346 INFO  L631         BuchiCegarLoop]: Abstraction has 3015 states and 3417 transitions.
[2020-11-25 11:57:09,346 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:57:09,346 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3015 states and 3417 transitions.
[2020-11-25 11:57:09,350 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 11:57:09,350 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:09,350 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:09,351 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:09,351 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:09,354 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:09,354 INFO  L82        PathProgramCache]: Analyzing trace with hash -461726215, now seen corresponding path program 1 times
[2020-11-25 11:57:09,355 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:09,382 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:09,507 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:09,508 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:09,508 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 11:57:09,508 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:09,508 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 11:57:09,508 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 11:57:09,509 INFO  L87              Difference]: Start difference. First operand 3015 states and 3417 transitions. cyclomatic complexity: 408 Second operand 13 states.
[2020-11-25 11:57:10,926 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:10,926 INFO  L93              Difference]: Finished difference Result 3190 states and 3627 transitions.
[2020-11-25 11:57:10,926 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 11:57:10,926 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3190 states and 3627 transitions.
[2020-11-25 11:57:10,931 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 11:57:10,942 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3190 states to 3190 states and 3627 transitions.
[2020-11-25 11:57:10,942 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 194
[2020-11-25 11:57:10,943 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 194
[2020-11-25 11:57:10,943 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3190 states and 3627 transitions.
[2020-11-25 11:57:10,946 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:10,946 INFO  L728         BuchiCegarLoop]: Abstraction has 3190 states and 3627 transitions.
[2020-11-25 11:57:10,949 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3190 states and 3627 transitions.
[2020-11-25 11:57:10,973 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3190 to 3156.
[2020-11-25 11:57:10,973 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3156 states.
[2020-11-25 11:57:10,976 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3156 states to 3156 states and 3579 transitions.
[2020-11-25 11:57:10,976 INFO  L751         BuchiCegarLoop]: Abstraction has 3156 states and 3579 transitions.
[2020-11-25 11:57:10,976 INFO  L631         BuchiCegarLoop]: Abstraction has 3156 states and 3579 transitions.
[2020-11-25 11:57:10,976 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 11:57:10,976 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3156 states and 3579 transitions.
[2020-11-25 11:57:10,979 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 11:57:10,979 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:10,979 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:10,981 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:10,981 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND TRUE   __exception
[L332]               __tmp__Balance := Balance;
[L333]               __tmp__DType := DType;
[L334]               __tmp__Alloc := Alloc;
[L335]               __tmp__balance_ADDR := balance_ADDR;
[L336]               __tmp__M_Ref_int := M_Ref_int;
[L337]               __tmp__sum_balances0 := sum_balances0;
[L338]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L339]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L340]               __tmp__sum_allowed1 := sum_allowed1;
[L341]               __tmp__Length := Length;
[L342]               __tmp__now := now;
[L343]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L344]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L345]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L346]               __tmp__name_CoinHemp := name_CoinHemp;
[L347]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L348]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L349]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L350]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L351]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L352]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1687]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1688]              __tmp__allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1689]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1690]              __ret_0_ := true;
[L352]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L353]               assume revert || gas < 0;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND TRUE   __exception
[L332]               __tmp__Balance := Balance;
[L333]               __tmp__DType := DType;
[L334]               __tmp__Alloc := Alloc;
[L335]               __tmp__balance_ADDR := balance_ADDR;
[L336]               __tmp__M_Ref_int := M_Ref_int;
[L337]               __tmp__sum_balances0 := sum_balances0;
[L338]               __tmp__alloc_allowed_CoinHemp_lvl0 := alloc_allowed_CoinHemp_lvl0;
[L339]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L340]               __tmp__sum_allowed1 := sum_allowed1;
[L341]               __tmp__Length := Length;
[L342]               __tmp__now := now;
[L343]               __tmp__admin_address_CoinHemp := admin_address_CoinHemp;
[L344]               __tmp__account_address_CoinHemp := account_address_CoinHemp;
[L345]               __tmp__balances_CoinHemp := balances_CoinHemp;
[L346]               __tmp__name_CoinHemp := name_CoinHemp;
[L347]               __tmp__symbol_CoinHemp := symbol_CoinHemp;
[L348]               __tmp__decimals_CoinHemp := decimals_CoinHemp;
[L349]               __tmp__initSupply_CoinHemp := initSupply_CoinHemp;
[L350]               __tmp__totalSupply_CoinHemp := totalSupply_CoinHemp;
[L351]               __tmp__allowed_CoinHemp := allowed_CoinHemp;
[L352]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1687]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1688]              __tmp__allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1689]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1690]              __ret_0_ := true;
[L352]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__fail(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L353]               assume revert || gas < 0;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:10,983 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:10,983 INFO  L82        PathProgramCache]: Analyzing trace with hash 716377061, now seen corresponding path program 1 times
[2020-11-25 11:57:10,984 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:10,990 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:11,008 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:57:11,008 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:11,008 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 11:57:11,009 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:11,009 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 11:57:11,009 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 11:57:11,009 INFO  L87              Difference]: Start difference. First operand 3156 states and 3579 transitions. cyclomatic complexity: 431 Second operand 5 states.
[2020-11-25 11:57:11,422 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:11,423 INFO  L93              Difference]: Finished difference Result 3977 states and 4553 transitions.
[2020-11-25 11:57:11,423 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:57:11,423 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3977 states and 4553 transitions.
[2020-11-25 11:57:11,451 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 11:57:11,469 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3977 states to 3309 states and 3828 transitions.
[2020-11-25 11:57:11,469 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 176
[2020-11-25 11:57:11,470 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 176
[2020-11-25 11:57:11,470 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3309 states and 3828 transitions.
[2020-11-25 11:57:11,473 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:11,473 INFO  L728         BuchiCegarLoop]: Abstraction has 3309 states and 3828 transitions.
[2020-11-25 11:57:11,475 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3309 states and 3828 transitions.
[2020-11-25 11:57:11,489 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3309 to 2393.
[2020-11-25 11:57:11,489 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2393 states.
[2020-11-25 11:57:11,491 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2393 states to 2393 states and 2683 transitions.
[2020-11-25 11:57:11,491 INFO  L751         BuchiCegarLoop]: Abstraction has 2393 states and 2683 transitions.
[2020-11-25 11:57:11,491 INFO  L631         BuchiCegarLoop]: Abstraction has 2393 states and 2683 transitions.
[2020-11-25 11:57:11,492 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 11:57:11,492 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2393 states and 2683 transitions.
[2020-11-25 11:57:11,494 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:11,494 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:11,494 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:11,495 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:11,495 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND FALSE  !(choice == 6)
[L2728]  COND FALSE  !(choice == 5)
[L2734]  COND FALSE  !(choice == 4)
[L2741]  COND TRUE   choice == 3
[L2742]              gas := gas - 21000;
[L2743]  COND TRUE   gas >= 0
[L2744]              assume _subtractedValue_s376 >= 0 && _subtractedValue_s376 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2745]              assume msgvalue_MSG == 0;
[L2746]  CALL        call __ret_0_decreaseApproval := decreaseApproval~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _subtractedValue_s376);
[L501]               havoc __exception;
[L502]               revert := false;
[L503]   COND FALSE  !(__exception)
[L527]   CALL        call __ret_0_ := decreaseApproval~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _subtractedValue_s376);
[L1771]              oldValue_s376 := allowed_CoinHemp[this][msgsender_MSG][_spender_s376];
[L1772]  COND TRUE   _subtractedValue_s376 > oldValue_s376
[L1773]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s376];
[L1774]              allowed_CoinHemp[this][msgsender_MSG][_spender_s376] := 0;
[L1775]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s376];
[L1785]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1786]              __ret_0_ := true;
[L527]   RET         call __ret_0_ := decreaseApproval~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _subtractedValue_s376);
[L528]               assume !revert && gas >= 0;
[L2746]  RET         call __ret_0_decreaseApproval := decreaseApproval~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s376, _subtractedValue_s376);
[L2778]  RET         call CorralChoice_CoinHemp(this);
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:11,504 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:11,504 INFO  L82        PathProgramCache]: Analyzing trace with hash -444969877, now seen corresponding path program 1 times
[2020-11-25 11:57:11,504 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:11,522 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:11,619 INFO  L134       CoverageAnalysis]: Checked inductivity of 53 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 53 trivial. 0 not checked.
[2020-11-25 11:57:11,619 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:11,619 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 11:57:11,619 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:11,619 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 11:57:11,619 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=38, Invalid=202, Unknown=0, NotChecked=0, Total=240
[2020-11-25 11:57:11,620 INFO  L87              Difference]: Start difference. First operand 2393 states and 2683 transitions. cyclomatic complexity: 297 Second operand 16 states.
[2020-11-25 11:57:12,521 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:12,521 INFO  L93              Difference]: Finished difference Result 2448 states and 2745 transitions.
[2020-11-25 11:57:12,521 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 16 states. 
[2020-11-25 11:57:12,521 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2448 states and 2745 transitions.
[2020-11-25 11:57:12,525 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:12,530 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2448 states to 2448 states and 2745 transitions.
[2020-11-25 11:57:12,530 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 132
[2020-11-25 11:57:12,530 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 132
[2020-11-25 11:57:12,530 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2448 states and 2745 transitions.
[2020-11-25 11:57:12,532 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:12,532 INFO  L728         BuchiCegarLoop]: Abstraction has 2448 states and 2745 transitions.
[2020-11-25 11:57:12,534 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2448 states and 2745 transitions.
[2020-11-25 11:57:12,545 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2448 to 2402.
[2020-11-25 11:57:12,545 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2402 states.
[2020-11-25 11:57:12,547 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2402 states to 2402 states and 2693 transitions.
[2020-11-25 11:57:12,547 INFO  L751         BuchiCegarLoop]: Abstraction has 2402 states and 2693 transitions.
[2020-11-25 11:57:12,547 INFO  L631         BuchiCegarLoop]: Abstraction has 2402 states and 2693 transitions.
[2020-11-25 11:57:12,547 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 11:57:12,547 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2402 states and 2693 transitions.
[2020-11-25 11:57:12,549 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:57:12,549 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:57:12,549 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:57:12,550 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:57:12,550 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_CoinHemp0 := false;
[L3]                 call_approve_CoinHemp0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L2768]              assume null == 0;
[L2769]  CALL        call this := FreshRefGenerator__success();
[L1411]              havoc newRef;
[L1412]              assume Alloc[newRef] == false;
[L1413]              Alloc[newRef] := true;
[L1414]              assume newRef != null;
[L2769]  RET         call this := FreshRefGenerator__success();
[L2770]              assume now >= 0;
[L2771]              assume DType[this] == CoinHemp;
[L2772]              assume msgvalue_MSG >= 0;
[L2773]              gas := gas - 53000;
[L2774]  CALL        call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L96]                havoc __exception;
[L97]                revert := false;
[L98]    COND FALSE  !(__exception)
[L122]   CALL        call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L1513]  CALL        call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1463]              assume msgsender_MSG != null;
[L1464]              Balance[this] := 0;
[L1465]              __var_3 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1466]              admin_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1467]              __var_4 := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1468]              account_address_CoinHemp[this] := ConstantToRef(-182358906535111088895143494585461487715820733502);
[L1469]              balances_CoinHemp[this] := zeroRefintArr();
[L1470]              sum_balances0[this] := 0;
[L1471]              name_CoinHemp[this] := -1920728545;
[L1472]              symbol_CoinHemp[this] := 294157574;
[L1473]              decimals_CoinHemp[this] := 18;
[L1474]              initSupply_CoinHemp[this] := 400000000;
[L1475]              totalSupply_CoinHemp[this] := 0;
[L1476]              allowed_CoinHemp[this] := zeroRefRefintArr();
[L1477]              sum_allowed1[this] := 0;
[L1480]              assume Balance[msgsender_MSG] >= msgvalue_MSG;
[L1481]              Balance[msgsender_MSG] := Balance[msgsender_MSG] - msgvalue_MSG;
[L1482]              Balance[this] := Balance[this] + msgvalue_MSG;
[L1484]              __var_2 := decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1485]  CALL        call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1913]  COND FALSE  !(a_s472 == 0)
[L1917]              c_s472 := nonlinearMul(a_s472, b_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1918]              assert nonlinearDiv(c_s472, a_s472) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == b_s472;
[L1919]              c_s472 := c_s472;
[L1485]  RET         call __var_1 := mul~uint256~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, initSupply_CoinHemp[this], nonlinearPow(10, decimals_CoinHemp[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L1486]  COND FALSE  !(revert)
[L1489]              totalSupply_CoinHemp[this] := __var_1;
[L1490]              sum_balances0[this] := sum_balances0[this] - balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1491]              balances_CoinHemp[this][account_address_CoinHemp[this]] := totalSupply_CoinHemp[this];
[L1492]              sum_balances0[this] := sum_balances0[this] + balances_CoinHemp[this][account_address_CoinHemp[this]];
[L1513]  RET         call CoinHemp_CoinHemp_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1514]  COND FALSE  !(revert)
[L122]   RET         call CoinHemp_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG);
[L123]               assume !revert && gas >= 0;
[L2774]  RET         call CoinHemp_CoinHemp(this, msgsender_MSG, msgvalue_MSG);
[L2775]              assume !revert && gas >= 0;
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != _spender_s259);
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

Loop:
[L2778]  CALL        call CorralChoice_CoinHemp(this);
[L2624]              havoc msgsender_MSG;
[L2625]              havoc msgvalue_MSG;
[L2626]              havoc choice;
[L2627]              havoc __ret_0_admin_address;
[L2628]              havoc __ret_0_account_address;
[L2629]              havoc __ret_0_name;
[L2630]              havoc __ret_0_symbol;
[L2631]              havoc __ret_0_decimals;
[L2632]              havoc __ret_0_totalSupply;
[L2633]              havoc _addr_s63;
[L2634]              havoc __ret_0_balanceOf;
[L2635]              havoc _to_s131;
[L2636]              havoc _value_s131;
[L2637]              havoc __ret_0_transfer;
[L2638]              havoc _from_s231;
[L2639]              havoc _to_s231;
[L2640]              havoc _value_s231;
[L2641]              havoc __ret_0_transferFrom;
[L2642]              havoc _spender_s259;
[L2643]              havoc _value_s259;
[L2644]              havoc __ret_0_approve;
[L2645]              havoc _owner_s275;
[L2646]              havoc _spender_s275;
[L2647]              havoc __ret_0_allowance;
[L2648]              havoc _spender_s316;
[L2649]              havoc _addedValue_s316;
[L2650]              havoc __ret_0_increaseApproval;
[L2651]              havoc _spender_s376;
[L2652]              havoc _subtractedValue_s376;
[L2653]              havoc __ret_0_decreaseApproval;
[L2654]              havoc new_admin_address_s411;
[L2655]              havoc __ret_0_setAdmin;
[L2656]              havoc tmpNow;
[L2657]              havoc gas;
[L2658]              assume gas > 4000000 && gas <= 8000000;
[L2659]              tmpNow := now;
[L2660]              havoc now;
[L2661]              assume now > tmpNow;
[L2662]              assume msgsender_MSG != null;
[L2663]              assume DType[msgsender_MSG] != CoinHemp;
[L2664]              Alloc[msgsender_MSG] := true;
[L2665]  COND FALSE  !(choice == 15)
[L2671]  COND FALSE  !(choice == 14)
[L2677]  COND FALSE  !(choice == 13)
[L2683]  COND FALSE  !(choice == 12)
[L2689]  COND FALSE  !(choice == 11)
[L2695]  COND FALSE  !(choice == 10)
[L2701]  COND FALSE  !(choice == 9)
[L2707]  COND FALSE  !(choice == 8)
[L2714]  COND FALSE  !(choice == 7)
[L2721]  COND TRUE   choice == 6
[L2722]              gas := gas - 21000;
[L2723]  COND TRUE   gas >= 0
[L2724]              assume _value_s259 >= 0 && _value_s259 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2725]              assume msgvalue_MSG == 0;
[L2726]  CALL        call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != _spender_s259;
[L3]                 call_approve_CoinHemp0 := true;
[L3]                 call_approve_CoinHemp0 := false;
[L3]                 revert := revert_hold;
[L329]               havoc __exception;
[L330]               revert := false;
[L331]   COND FALSE  !(__exception)
[L355]   CALL        call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L1696]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1697]              allowed_CoinHemp[this][msgsender_MSG][_spender_s259] := _value_s259;
[L1698]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_CoinHemp[this][msgsender_MSG][_spender_s259];
[L1699]              assert { :EventEmitted "Approval_CoinHemp" } true;
[L1700]              __ret_0_ := true;
[L355]   RET         call __ret_0_ := approve~address~uint256_CoinHemp__success(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L356]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((__ret_0_ == true && allowed_CoinHemp[this][msgsender_MSG][_spender_s259] == _value_s259) && totalSupply_CoinHemp[this] == old(totalSupply_CoinHemp[this])) && balances_CoinHemp[this] == old(balances_CoinHemp[this])) && allowed_CoinHemp[this][p1][p2] == old(allowed_CoinHemp[this][p1][p2])) && admin_address_CoinHemp[this] == old(admin_address_CoinHemp[this])) && account_address_CoinHemp[this] == old(account_address_CoinHemp[this])) && name_CoinHemp[this] == old(name_CoinHemp[this])) && symbol_CoinHemp[this] == old(symbol_CoinHemp[this])) && decimals_CoinHemp[this] == old(decimals_CoinHemp[this])) && initSupply_CoinHemp[this] == old(initSupply_CoinHemp[this]));
[L3]                 revert := revert_hold;
[L2726]  RET         call __ret_0_approve := approve~address~uint256_CoinHemp(this, msgsender_MSG, msgvalue_MSG, _spender_s259, _value_s259);
[L2778]  RET         call CorralChoice_CoinHemp(this);

[2020-11-25 11:57:12,553 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:57:12,553 INFO  L82        PathProgramCache]: Analyzing trace with hash -1023128387, now seen corresponding path program 1 times
[2020-11-25 11:57:12,554 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:57:12,569 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:57:12,615 INFO  L134       CoverageAnalysis]: Checked inductivity of 62 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 58 trivial. 0 not checked.
[2020-11-25 11:57:12,616 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:57:12,616 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 11:57:12,616 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:57:12,616 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 11:57:12,616 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 11:57:12,616 INFO  L87              Difference]: Start difference. First operand 2402 states and 2693 transitions. cyclomatic complexity: 298 Second operand 7 states.
[2020-11-25 11:57:12,818 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:57:12,818 INFO  L93              Difference]: Finished difference Result 1276 states and 1423 transitions.
[2020-11-25 11:57:12,818 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 11:57:12,819 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1276 states and 1423 transitions.
[2020-11-25 11:57:12,821 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:57:12,821 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1276 states to 0 states and 0 transitions.
[2020-11-25 11:57:12,821 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 11:57:12,821 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 11:57:12,821 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 11:57:12,821 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:57:12,821 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:57:12,821 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:57:12,821 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 11:57:12,821 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 11:57:12,821 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 11:57:12,821 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 11:57:12,821 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 11:57:12,824 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:57:12 BasicIcfg
[2020-11-25 11:57:12,824 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:57:12,825 INFO  L168              Benchmark]: Toolchain (without parser) took 7258.25 ms. Allocated memory was 1.0 GB in the beginning and 1.5 GB in the end (delta: 494.9 MB). Free memory was 940.6 MB in the beginning and 1.1 GB in the end (delta: -154.2 MB). Peak memory consumption was 340.7 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,825 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,826 INFO  L168              Benchmark]: Boogie Preprocessor took 90.74 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,826 INFO  L168              Benchmark]: UtopiaSpecLang took 64.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,826 INFO  L168              Benchmark]: Boogie Printer took 16.95 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,826 INFO  L168              Benchmark]: RCFGBuilder took 633.90 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,827 INFO  L168              Benchmark]: UtopiaLTL2Aut took 40.10 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 851.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,827 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1078.78 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 851.1 MB in the beginning and 828.4 MB in the end (delta: 22.6 MB). Peak memory consumption was 137.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,827 INFO  L168              Benchmark]: BlockEncodingV2 took 92.42 ms. Allocated memory is still 1.1 GB. Free memory was 828.4 MB in the beginning and 787.4 MB in the end (delta: 41.0 MB). Peak memory consumption was 41.0 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,828 INFO  L168              Benchmark]: BuchiAutomizer took 5237.64 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 435.7 MB). Free memory was 787.4 MB in the beginning and 1.1 GB in the end (delta: -307.4 MB). Peak memory consumption was 128.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:57:12,830 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3028 locations, 5192 edges
  - StatisticsResult: Encoded RCFG
    3010 locations, 5146 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.17 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 90.74 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 935.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.10 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.95 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 633.90 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 854.7 MB in the end (delta: 69.8 MB). Peak memory consumption was 69.8 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 40.10 ms. Allocated memory is still 1.0 GB. Free memory was 854.7 MB in the beginning and 851.1 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1078.78 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.2 MB). Free memory was 851.1 MB in the beginning and 828.4 MB in the end (delta: 22.6 MB). Peak memory consumption was 137.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 92.42 ms. Allocated memory is still 1.1 GB. Free memory was 828.4 MB in the beginning and 787.4 MB in the end (delta: 41.0 MB). Peak memory consumption was 41.0 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 5237.64 ms. Allocated memory was 1.1 GB in the beginning and 1.5 GB in the end (delta: 435.7 MB). Free memory was 787.4 MB in the beginning and 1.1 GB in the end (delta: -307.4 MB). Peak memory consumption was 128.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1293 locations, 1652 edges
  - StatisticsResult: BuchiProgram size
    3028 locations, 5192 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 7 terminating modules (7 trivial, 0 deterministic, 0 nondeterministic). 7 modules have a trivial ranking function, the largest among these consists of 16 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 5.2s and 8 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.5s. Construction of modules took 2.9s. BÃ¼chi inclusion checks took 1.1s. Highest rank in rank-based complementation 0. Minimization of det autom 7. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 6 MinimizatonAttempts, 1671 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3156 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20723 SDtfs, 18918 SDslu, 38593 SDs, 0 SdLazy, 39646 SolverSat, 3576 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.9s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU7 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_CoinHemp0) ==> ( <>(success_approve_CoinHemp0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
