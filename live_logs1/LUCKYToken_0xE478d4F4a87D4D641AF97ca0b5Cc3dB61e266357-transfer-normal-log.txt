This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:40:28,935 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:40:28,936 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:40:28,943 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:40:28,943 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:40:28,944 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:40:28,945 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:40:28,946 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:40:28,947 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:40:28,947 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:40:28,948 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:40:28,948 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:40:28,948 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:40:28,949 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:40:28,950 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:40:28,950 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:40:28,951 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:40:28,952 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:40:28,953 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:40:28,954 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:40:28,955 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:40:28,956 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:40:28,957 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:40:28,958 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:40:28,958 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:40:28,958 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:40:28,958 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:40:28,959 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:40:28,959 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:40:28,959 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:40:28,960 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:40:28,960 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:40:28,961 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:40:28,961 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:40:28,961 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:40:28,961 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:40:28,962 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:40:28,962 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:40:28,962 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:40:28,962 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:40:28,963 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:40:28,963 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:40:28,968 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:40:28,968 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:40:28,969 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:40:28,969 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:40:28,969 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:40:28,969 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:40:28,969 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:40:28,969 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:40:28,969 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:40:28,970 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:40:28,970 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:40:28,970 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:40:28,970 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:40:28,971 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:40:28,971 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:40:28,985 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:40:28,992 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:40:28,996 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:40:28,998 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:40:28,999 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:40:29,000 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl
[2020-11-24 20:40:29,000 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl'
[2020-11-24 20:40:29,100 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:40:29,102 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:40:29,102 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:40:29,102 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:40:29,102 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:40:29,119 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,120 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,162 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,163 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,190 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,204 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,215 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,229 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:40:29,229 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:40:29,229 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:40:29,232 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:40:29,235 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/1) ...
[2020-11-24 20:40:29,256 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(PausableToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_StandardToken[this][msg.sender] && _balances_StandardToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][msg.sender] >= 0 &&  _balances_StandardToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transfer(to, value), return == true && _balances_StandardToken[this][msg.sender] == old(_balances_StandardToken[this][msg.sender]) - value && _balances_StandardToken[this][to] == old(_balances_StandardToken[this][to]) + value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _allowed_StandardToken[this] == old(_allowed_StandardToken[this]) && _balances_StandardToken[this][p1] == old(_balances_StandardToken[this][p1]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:40:29,261 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(PausableToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_StandardToken[this][msg.sender] && _balances_StandardToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][msg.sender] >= 0 &&  _balances_StandardToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transfer(to, value), return == true && _balances_StandardToken[this][msg.sender] == old(_balances_StandardToken[this][msg.sender]) - value && _balances_StandardToken[this][to] == old(_balances_StandardToken[this][to]) + value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _allowed_StandardToken[this] == old(_allowed_StandardToken[this]) && _balances_StandardToken[this][p1] == old(_balances_StandardToken[this][p1]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:40:29,270 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(PausableToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_StandardToken[this][msg.sender] && _balances_StandardToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][msg.sender] >= 0 &&  _balances_StandardToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transfer(to, value), return == true && _balances_StandardToken[this][msg.sender] == old(_balances_StandardToken[this][msg.sender]) - value && _balances_StandardToken[this][to] == old(_balances_StandardToken[this][to]) + value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _allowed_StandardToken[this] == old(_allowed_StandardToken[this]) && _balances_StandardToken[this][p1] == old(_balances_StandardToken[this][p1]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:40:29,279 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=_to_s670 ) && msg.sender!=_to_s670 ) && _value_s670<=_balances_StandardToken[this][msg.sender] ) && ( _balances_StandardToken[this][_to_s670] + _value_s670 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s670>=0 ) && _value_s670<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_StandardToken[this][_to_s670]>=0 ) && _balances_StandardToken[this][_to_s670]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_StandardToken[this][msg.sender]>=0 ) && _balances_StandardToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>],IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],IdentifierExpression[_value_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:40:29,282 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( __ret_0_==true && _balances_StandardToken[this][msg.sender]==( ( old(_balances_StandardToken[this][msg.sender]) ) - _value_s670 ) ) && _balances_StandardToken[this][_to_s670]==( ( old(_balances_StandardToken[this][_to_s670]) ) + _value_s670 ) ) && _totalSupply_StandardToken[this]==( old(_totalSupply_StandardToken[this]) ) ) && _allowed_StandardToken[this]==( old(_allowed_StandardToken[this]) ) ) && _balances_StandardToken[this][p1]==( old(_balances_StandardToken[this][p1]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_PausableToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]],IdentifierExpression[_value_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]],IdentifierExpression[_value_s670,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_PausableToken>]]]]]]
[2020-11-24 20:40:29,289 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(PausableToken.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_StandardToken[this][msg.sender] && _balances_StandardToken[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][msg.sender] >= 0 &&  _balances_StandardToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transfer(to, value), return == true && _balances_StandardToken[this][msg.sender] == old(_balances_StandardToken[this][msg.sender]) - value && _balances_StandardToken[this][to] == old(_balances_StandardToken[this][to]) + value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _allowed_StandardToken[this] == old(_allowed_StandardToken[this]) && _balances_StandardToken[this][p1] == old(_balances_StandardToken[this][p1]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:40:29,290 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_PausableToken0) ==> ( <>AP(success_transfer_PausableToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:40:29,305 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:40:29 PropertyContainer
[2020-11-24 20:40:29,305 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:40:29,306 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:40:29,306 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:40:29,306 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:40:29,307 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/2) ...
[2020-11-24 20:40:29,307 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:40:29,307 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:40:29,329 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:40:29" (2/2) ...
[2020-11-24 20:40:29,329 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:40:29,330 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:40:29,330 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:40:29,330 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:40:29,331 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/2) ...
[2020-11-24 20:40:29,390 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:40:29,390 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:40:29,390 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:40:29,390 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:40:29,390 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,390 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,390 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:40:29,391 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:40:29,391 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:40:29,392 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:40:29,392 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:40:29,392 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 20:40:29,392 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 20:40:29,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 20:40:29,392 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StandardToken
[2020-11-24 20:40:29,392 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StandardToken
[2020-11-24 20:40:29,393 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken
[2020-11-24 20:40:29,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken
[2020-11-24 20:40:29,393 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 20:40:29,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 20:40:29,393 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken
[2020-11-24 20:40:29,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken
[2020-11-24 20:40:29,393 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 20:40:29,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 20:40:29,393 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 20:40:29,393 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_StandardToken
[2020-11-24 20:40:29,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_StandardToken
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_StandardToken
[2020-11-24 20:40:29,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_StandardToken
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_StandardToken__success
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_StandardToken__success
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_StandardToken__success
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_StandardToken__success
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 20:40:29,394 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 20:40:29,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 20:40:29,395 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 20:40:29,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 20:40:29,395 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-24 20:40:29,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-24 20:40:29,395 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 20:40:29,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 20:40:29,395 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-24 20:40:29,395 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 20:40:29,395 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-24 20:40:29,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-24 20:40:29,396 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-24 20:40:29,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-24 20:40:29,396 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-24 20:40:29,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-24 20:40:29,396 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-24 20:40:29,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-24 20:40:29,396 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken_NoBaseCtor__success
[2020-11-24 20:40:29,396 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken
[2020-11-24 20:40:29,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken
[2020-11-24 20:40:29,396 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_PausableToken
[2020-11-24 20:40:29,397 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 20:40:29,398 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-24 20:40:29,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-24 20:40:29,398 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-24 20:40:29,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-24 20:40:29,398 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BurnableToken
[2020-11-24 20:40:29,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BurnableToken
[2020-11-24 20:40:29,398 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken_NoBaseCtor__success
[2020-11-24 20:40:29,398 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken
[2020-11-24 20:40:29,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken
[2020-11-24 20:40:29,398 INFO  L130     BoogieDeclarations]: Found specification of procedure name_LUCKYToken
[2020-11-24 20:40:29,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_LUCKYToken
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_LUCKYToken
[2020-11-24 20:40:29,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_LUCKYToken
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_LUCKYToken
[2020-11-24 20:40:29,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_LUCKYToken
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 20:40:29,399 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 20:40:29,400 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PausableToken
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PausableToken
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_LUCKYToken
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:40:29,401 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 20:40:29,402 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StandardToken__success
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StandardToken__fail
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__success
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__fail
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 20:40:29,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,404 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 20:40:29,405 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-24 20:40:29,406 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken_NoBaseCtor__fail
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken__success
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken__fail
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__success
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,407 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__success
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BurnableToken__success
[2020-11-24 20:40:29,408 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BurnableToken__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken_NoBaseCtor__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken__success
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure name_LUCKYToken__success
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure name_LUCKYToken__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_LUCKYToken__success
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_LUCKYToken__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_LUCKYToken__success
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_LUCKYToken__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:40:29,409 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:40:29,410 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 20:40:29,410 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 20:40:29,410 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 20:40:29,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StandardToken__fail
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StandardToken__success
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__fail
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__success
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 20:40:29,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_StandardToken__success
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_StandardToken__success
[2020-11-24 20:40:29,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_StandardToken__success
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_StandardToken__fail
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_StandardToken__success
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-24 20:40:29,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-24 20:40:29,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken_NoBaseCtor__fail
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken_NoBaseCtor__success
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken__fail
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken__success
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__success
[2020-11-24 20:40:29,416 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__success
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 20:40:29,417 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BurnableToken__fail
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BurnableToken__success
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken_NoBaseCtor__fail
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken_NoBaseCtor__success
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken__fail
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken__success
[2020-11-24 20:40:29,418 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_LUCKYToken__fail
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_LUCKYToken__success
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_LUCKYToken__fail
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_LUCKYToken__success
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_LUCKYToken__fail
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_LUCKYToken__success
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:40:29,419 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:40:29,420 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PausableToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PausableToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_LUCKYToken
[2020-11-24 20:40:29,421 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:40:29,422 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:40:29,422 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:40:29,884 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:40:29,885 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:40:29,885 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:40:29,998 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:40:30,324 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:40:30,324 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:40:30,326 INFO  L202        PluginConnector]: Adding new model LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:40:30 BoogieIcfgContainer
[2020-11-24 20:40:30,326 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:40:29" (2/2) ...
[2020-11-24 20:40:30,326 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:40:30,327 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@30a0609b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:40:30, skipping insertion in model container
[2020-11-24 20:40:30,327 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:40:30,327 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:40:30,327 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:40:30,328 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:40:30,328 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/3) ...
[2020-11-24 20:40:30,328 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2fcac7c4 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:40:30, skipping insertion in model container
[2020-11-24 20:40:30,328 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:40:29" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:40:30,361 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:40:30 NWAContainer
[2020-11-24 20:40:30,361 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:40:30,361 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:40:30,361 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:40:30,362 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:40:30,362 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:40:30" (3/4) ...
[2020-11-24 20:40:30,363 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@20924817 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:40:30, skipping insertion in model container
[2020-11-24 20:40:30,363 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:40:30" (4/4) ...
[2020-11-24 20:40:30,365 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:40:30,371 INFO  L110   BuchiProductObserver]: Initial RCFG 2616 locations, 3888 edges
[2020-11-24 20:40:30,371 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:40:30,382 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:40:32,086 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:40:32,095 INFO  L110   BuchiProductObserver]: BuchiProgram size 6838 locations, 12834 edges
[2020-11-24 20:40:32,095 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:40:32 BoogieIcfgContainer
[2020-11-24 20:40:32,095 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:40:32,095 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:40:32,095 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:40:32,097 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:40:32,097 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:40:32" (1/1) ...
[2020-11-24 20:40:32,223 INFO  L313           BlockEncoder]: Initial Icfg 6838 locations, 12834 edges
[2020-11-24 20:40:32,223 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:40:32,224 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:40:32,224 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:40:32,225 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:40:32,239 INFO  L70    emoveInfeasibleEdges]: Removed 180 edges and 19 locations because of local infeasibility
[2020-11-24 20:40:32,254 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-24 20:40:32,268 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:40:32,272 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:40:32,277 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:40:32,277 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:40:32,281 INFO  L313           BlockEncoder]: Encoded RCFG 6718 locations, 12503 edges
[2020-11-24 20:40:32,281 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:40:32 BasicIcfg
[2020-11-24 20:40:32,281 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:40:32,282 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:40:32,282 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:40:32,283 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:40:32,284 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:40:32,284 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:40:29" (1/6) ...
[2020-11-24 20:40:32,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32101e4d and model type LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:40:32, skipping insertion in model container
[2020-11-24 20:40:32,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:40:32,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:40:29" (2/6) ...
[2020-11-24 20:40:32,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32101e4d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:40:32, skipping insertion in model container
[2020-11-24 20:40:32,285 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:40:32,285 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:40:30" (3/6) ...
[2020-11-24 20:40:32,285 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32101e4d and model type LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:40:32, skipping insertion in model container
[2020-11-24 20:40:32,286 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:40:32,286 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:40:30" (4/6) ...
[2020-11-24 20:40:32,286 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32101e4d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:40:32, skipping insertion in model container
[2020-11-24 20:40:32,286 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:40:32,286 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:40:32" (5/6) ...
[2020-11-24 20:40:32,286 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@32101e4d and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:40:32, skipping insertion in model container
[2020-11-24 20:40:32,287 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:40:32,287 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:40:32" (6/6) ...
[2020-11-24 20:40:32,287 INFO  L404   chiAutomizerObserver]: Analyzing ICFG LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transfer-normal.bpl_BEv2
[2020-11-24 20:40:32,322 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:40:32,322 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:40:32,323 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:40:32,323 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:40:32,323 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:40:32,323 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:40:32,323 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:40:32,323 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:40:32,323 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:40:32,372 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6718 states.
[2020-11-24 20:40:32,432 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:40:32,433 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:40:32,433 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:40:32,440 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:32,440 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:32,440 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:40:32,440 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6718 states.
[2020-11-24 20:40:32,470 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:40:32,470 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:40:32,470 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:40:32,471 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:32,472 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_PausableToken0 := false;
[L3]                 call_transfer_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND TRUE   revert
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND FALSE  !(gas >= 0)
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:40:32,485 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:32,486 INFO  L82        PathProgramCache]: Analyzing trace with hash -2018631613, now seen corresponding path program 1 times
[2020-11-24 20:40:32,490 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:32,512 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:40:32,557 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:40:32,559 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:40:32,559 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:40:32,975 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:40:32,987 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:40:32,987 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:40:32,989 INFO  L87              Difference]: Start difference. First operand 6718 states. Second operand 4 states.
[2020-11-24 20:40:35,573 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:40:35,573 INFO  L93              Difference]: Finished difference Result 6168 states and 10143 transitions.
[2020-11-24 20:40:35,574 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:40:35,575 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6168 states and 10143 transitions.
[2020-11-24 20:40:35,616 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:40:35,659 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6168 states to 5724 states and 9390 transitions.
[2020-11-24 20:40:35,660 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 14
[2020-11-24 20:40:35,665 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1462
[2020-11-24 20:40:35,665 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5724 states and 9390 transitions.
[2020-11-24 20:40:35,687 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:40:35,687 INFO  L728         BuchiCegarLoop]: Abstraction has 5724 states and 9390 transitions.
[2020-11-24 20:40:35,703 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5724 states and 9390 transitions.
[2020-11-24 20:40:35,803 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5724 to 4718.
[2020-11-24 20:40:35,804 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4718 states.
[2020-11-24 20:40:35,815 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4718 states to 4718 states and 7518 transitions.
[2020-11-24 20:40:35,815 INFO  L751         BuchiCegarLoop]: Abstraction has 4718 states and 7518 transitions.
[2020-11-24 20:40:35,816 INFO  L631         BuchiCegarLoop]: Abstraction has 4718 states and 7518 transitions.
[2020-11-24 20:40:35,816 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:40:35,816 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4718 states and 7518 transitions.
[2020-11-24 20:40:35,855 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:40:35,855 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:40:35,855 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:40:35,859 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:35,859 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_PausableToken0 := false;
[L3]                 call_transfer_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND FALSE  !(gas >= 0)
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:40:35,897 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:35,897 INFO  L82        PathProgramCache]: Analyzing trace with hash 1151979093, now seen corresponding path program 1 times
[2020-11-24 20:40:35,898 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:35,908 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:40:35,957 INFO  L134       CoverageAnalysis]: Checked inductivity of 282 backedges. 0 proven. 16 refuted. 0 times theorem prover too weak. 266 trivial. 0 not checked.
[2020-11-24 20:40:35,958 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:40:35,958 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [4] total 4
[2020-11-24 20:40:35,959 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:40:35,959 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:40:35,959 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:40:35,959 INFO  L87              Difference]: Start difference. First operand 4718 states and 7518 transitions. cyclomatic complexity: 2802 Second operand 4 states.
[2020-11-24 20:40:36,411 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:40:36,411 INFO  L93              Difference]: Finished difference Result 4366 states and 5037 transitions.
[2020-11-24 20:40:36,412 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:40:36,412 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4366 states and 5037 transitions.
[2020-11-24 20:40:36,423 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:40:36,435 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4366 states to 4366 states and 5037 transitions.
[2020-11-24 20:40:36,435 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1150
[2020-11-24 20:40:36,436 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1150
[2020-11-24 20:40:36,436 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4366 states and 5037 transitions.
[2020-11-24 20:40:36,439 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:40:36,439 INFO  L728         BuchiCegarLoop]: Abstraction has 4366 states and 5037 transitions.
[2020-11-24 20:40:36,443 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4366 states and 5037 transitions.
[2020-11-24 20:40:36,472 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4366 to 4366.
[2020-11-24 20:40:36,472 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4366 states.
[2020-11-24 20:40:36,476 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4366 states to 4366 states and 5037 transitions.
[2020-11-24 20:40:36,476 INFO  L751         BuchiCegarLoop]: Abstraction has 4366 states and 5037 transitions.
[2020-11-24 20:40:36,476 INFO  L631         BuchiCegarLoop]: Abstraction has 4366 states and 5037 transitions.
[2020-11-24 20:40:36,476 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:40:36,476 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4366 states and 5037 transitions.
[2020-11-24 20:40:36,482 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:40:36,482 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:40:36,482 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:40:36,484 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:36,484 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_PausableToken0 := false;
[L3]                 call_transfer_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND TRUE   gas >= 0
[L7133]              assume _value_s670 >= 0 && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7134]              assume msgvalue_MSG == 0;
[L7135]  CALL        call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND TRUE   !!__tmp__paused_Pausable[this]
[L6238]              revert := true;
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL       call CorralChoice_LUCKYToken(this);
[L7079]             havoc msgsender_MSG;
[L7080]             havoc msgvalue_MSG;
[L7081]             havoc choice;
[L7082]             havoc _to_s670;
[L7083]             havoc _value_s670;
[L7084]             havoc __ret_0_transfer;
[L7085]             havoc _spender_s709;
[L7086]             havoc _value_s709;
[L7087]             havoc __ret_0_approve;
[L7088]             havoc _from_s691;
[L7089]             havoc _to_s691;
[L7090]             havoc _value_s691;
[L7091]             havoc __ret_0_transferFrom;
[L7092]             havoc __ret_0_totalSupply;
[L7093]             havoc owner_s211;
[L7094]             havoc __ret_0_balanceOf;
[L7095]             havoc owner_s227;
[L7096]             havoc spender_s227;
[L7097]             havoc __ret_0_allowance;
[L7098]             havoc _spender_s727;
[L7099]             havoc _addedValue_s727;
[L7100]             havoc success_s727;
[L7101]             havoc _spender_s745;
[L7102]             havoc _subtractedValue_s745;
[L7103]             havoc success_s745;
[L7104]             havoc __ret_0_owner;
[L7105]             havoc __ret_0_isOwner;
[L7106]             havoc newOwner_s564;
[L7107]             havoc __ret_0_paused;
[L7108]             havoc amount_s764;
[L7109]             havoc account_s779;
[L7110]             havoc amount_s779;
[L7111]             havoc __ret_0_name;
[L7112]             havoc __ret_0_symbol;
[L7113]             havoc __ret_0_decimals;
[L7114]             havoc tmpNow;
[L7115]             havoc gas;
[L7116]             assume gas > 4000000 && gas <= 8000000;
[L7117]             tmpNow := now;
[L7118]             havoc now;
[L7119]             assume now > tmpNow;
[L7120]             assume msgsender_MSG != null;
[L7121]             assume DType[msgsender_MSG] != SafeMath;
[L7122]             assume DType[msgsender_MSG] != IERC20;
[L7123]             assume DType[msgsender_MSG] != StandardToken;
[L7124]             assume DType[msgsender_MSG] != Ownable;
[L7125]             assume DType[msgsender_MSG] != Pausable;
[L7126]             assume DType[msgsender_MSG] != PausableToken;
[L7127]             assume DType[msgsender_MSG] != BurnableToken;
[L7128]             assume DType[msgsender_MSG] != LUCKYToken;
[L7129]             Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE  choice == 19
[L7131]             gas := gas - 21000;
[L7132]  COND TRUE  gas >= 0
[L7133]             assume _value_s670 >= 0 && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7134]             assume msgvalue_MSG == 0;
[L7135]  CALL       call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3]                revert_hold := revert;
[L3]                revert := false;
[L3]                assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                call_transfer_PausableToken0 := true;
[L3]                call_transfer_PausableToken0 := false;
[L3]                revert := revert_hold;
[L1330]             havoc __exception;
[L1331]             revert := false;
[L1332]  COND TRUE  __exception
[L1333]             __tmp__Balance := Balance;
[L1334]             __tmp__DType := DType;
[L1335]             __tmp__Alloc := Alloc;
[L1336]             __tmp__balance_ADDR := balance_ADDR;
[L1337]             __tmp__M_Ref_int := M_Ref_int;
[L1338]             __tmp__sum__balances0 := sum__balances0;
[L1339]             __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]             __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]             __tmp__sum__allowed1 := sum__allowed1;
[L1342]             __tmp__Length := Length;
[L1343]             __tmp__now := now;
[L1344]             __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]             __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]             __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]             __tmp___owner_Ownable := _owner_Ownable;
[L1348]             __tmp__paused_Pausable := paused_Pausable;
[L1349]             __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]             __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]             __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]             __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]             __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL       call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL       call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND TRUE  !!__tmp__paused_Pausable[this]
[L6238]             revert := true;
[L4111]  RET        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND TRUE  revert
[L1354]  RET        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]             assume revert || gas < 0;
[L7135]  RET        call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L7269]  RET        call CorralChoice_LUCKYToken(this);

[2020-11-24 20:40:36,489 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:36,489 INFO  L82        PathProgramCache]: Analyzing trace with hash -47996352, now seen corresponding path program 1 times
[2020-11-24 20:40:36,490 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:36,508 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:40:36,651 INFO  L134       CoverageAnalysis]: Checked inductivity of 332 backedges. 6 proven. 0 refuted. 0 times theorem prover too weak. 326 trivial. 0 not checked.
[2020-11-24 20:40:36,651 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:40:36,651 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 20:40:36,652 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:40:36,652 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 20:40:36,652 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=157, Unknown=0, NotChecked=0, Total=182
[2020-11-24 20:40:36,653 INFO  L87              Difference]: Start difference. First operand 4366 states and 5037 transitions. cyclomatic complexity: 673 Second operand 14 states.
[2020-11-24 20:40:40,364 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:40:40,364 INFO  L93              Difference]: Finished difference Result 6819 states and 7912 transitions.
[2020-11-24 20:40:40,364 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 20:40:40,364 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6819 states and 7912 transitions.
[2020-11-24 20:40:40,407 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 20:40:40,431 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6819 states to 6819 states and 7912 transitions.
[2020-11-24 20:40:40,431 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1775
[2020-11-24 20:40:40,432 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1775
[2020-11-24 20:40:40,433 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6819 states and 7912 transitions.
[2020-11-24 20:40:40,439 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:40:40,439 INFO  L728         BuchiCegarLoop]: Abstraction has 6819 states and 7912 transitions.
[2020-11-24 20:40:40,443 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6819 states and 7912 transitions.
[2020-11-24 20:40:40,483 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6819 to 4464.
[2020-11-24 20:40:40,484 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4464 states.
[2020-11-24 20:40:40,488 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4464 states to 4464 states and 5141 transitions.
[2020-11-24 20:40:40,488 INFO  L751         BuchiCegarLoop]: Abstraction has 4464 states and 5141 transitions.
[2020-11-24 20:40:40,488 INFO  L631         BuchiCegarLoop]: Abstraction has 4464 states and 5141 transitions.
[2020-11-24 20:40:40,488 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:40:40,488 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4464 states and 5141 transitions.
[2020-11-24 20:40:40,494 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 20:40:40,494 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:40:40,494 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:40:40,496 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:40,496 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_PausableToken0 := false;
[L3]                 call_transfer_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND TRUE   __exception
[L1853]              __tmp__Balance := Balance;
[L1854]              __tmp__DType := DType;
[L1855]              __tmp__Alloc := Alloc;
[L1856]              __tmp__balance_ADDR := balance_ADDR;
[L1857]              __tmp__M_Ref_int := M_Ref_int;
[L1858]              __tmp__sum__balances0 := sum__balances0;
[L1859]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1860]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1861]              __tmp__sum__allowed1 := sum__allowed1;
[L1862]              __tmp__Length := Length;
[L1863]              __tmp__now := now;
[L1864]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1865]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1866]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1867]              __tmp___owner_Ownable := _owner_Ownable;
[L1868]              __tmp__paused_Pausable := paused_Pausable;
[L1869]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1870]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1871]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1872]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1873]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1874]  CALL        call LUCKYToken_LUCKYToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4547]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L4547]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4548]  COND FALSE  !(revert)
[L4551]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3107]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L3107]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3108]  COND FALSE  !(revert)
[L3111]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3082]              assume msgsender_MSG != null;
[L3083]              __tmp__Balance[this] := 0;
[L3084]              __tmp___balances_StandardToken[this] := zeroRefintArr();
[L3085]              __tmp__sum__balances0[this] := 0;
[L3086]              __tmp___allowed_StandardToken[this] := zeroRefRefintArr();
[L3087]              __tmp__sum__allowed1[this] := 0;
[L3088]              __tmp___totalSupply_StandardToken[this] := 0;
[L3111]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3112]  COND FALSE  !(revert)
[L4551]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4552]  COND FALSE  !(revert)
[L4555]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L4555]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4556]  COND FALSE  !(revert)
[L4559]  CALL        call BurnableToken_BurnableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4375]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L4375]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4376]  COND FALSE  !(revert)
[L4379]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3107]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L3107]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3108]  COND FALSE  !(revert)
[L3111]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3082]              assume msgsender_MSG != null;
[L3083]              __tmp__Balance[this] := 0;
[L3084]              __tmp___balances_StandardToken[this] := zeroRefintArr();
[L3085]              __tmp__sum__balances0[this] := 0;
[L3086]              __tmp___allowed_StandardToken[this] := zeroRefRefintArr();
[L3087]              __tmp__sum__allowed1[this] := 0;
[L3088]              __tmp___totalSupply_StandardToken[this] := 0;
[L3111]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3112]  COND FALSE  !(revert)
[L4379]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4380]  COND FALSE  !(revert)
[L4383]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L4383]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4384]  COND FALSE  !(revert)
[L4387]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4360]              assume msgsender_MSG != null;
[L4361]              __tmp__Balance[this] := 0;
[L4387]  RET         call BurnableToken_BurnableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4388]  COND FALSE  !(revert)
[L4559]  RET         call BurnableToken_BurnableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4560]  COND FALSE  !(revert)
[L4563]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3955]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L3955]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3956]  COND FALSE  !(revert)
[L3959]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]              assume msgsender_MSG != null;
[L3939]              __tmp__Balance[this] := 0;
[L3940]              __tmp__paused_Pausable[this] := false;
[L3959]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3960]  COND FALSE  !(revert)
[L4563]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4564]  COND FALSE  !(revert)
[L4567]  CALL        call PausableToken_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4061]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L4061]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3107]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L3107]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3108]  COND FALSE  !(revert)
[L3111]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3082]              assume msgsender_MSG != null;
[L3083]              __tmp__Balance[this] := 0;
[L3084]              __tmp___balances_StandardToken[this] := zeroRefintArr();
[L3085]              __tmp__sum__balances0[this] := 0;
[L3086]              __tmp___allowed_StandardToken[this] := zeroRefRefintArr();
[L3087]              __tmp__sum__allowed1[this] := 0;
[L3088]              __tmp___totalSupply_StandardToken[this] := 0;
[L3111]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3112]  COND FALSE  !(revert)
[L4065]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4069]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L4069]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4070]  COND FALSE  !(revert)
[L4073]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3955]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L3955]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3956]  COND FALSE  !(revert)
[L3959]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]              assume msgsender_MSG != null;
[L3939]              __tmp__Balance[this] := 0;
[L3940]              __tmp__paused_Pausable[this] := false;
[L3959]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3960]  COND FALSE  !(revert)
[L4073]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4074]  COND FALSE  !(revert)
[L4077]  CALL        call PausableToken_PausableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4046]              assume msgsender_MSG != null;
[L4047]              __tmp__Balance[this] := 0;
[L4077]  RET         call PausableToken_PausableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4078]  COND FALSE  !(revert)
[L4567]  RET         call PausableToken_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4568]  COND FALSE  !(revert)
[L4571]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4502]              assume msgsender_MSG != null;
[L4503]              __tmp__Balance[this] := 0;
[L4504]              __tmp__name_LUCKYToken[this] := -927166810;
[L4505]              __tmp__symbol_LUCKYToken[this] := -927166810;
[L4506]              __tmp__decimals_LUCKYToken[this] := 18;
[L4507]              __tmp__INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4508]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4509]              __tmp___tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4511]              __var_25 := __tmp__decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4512]              __tmp___totalSupply_StandardToken[this] := nonlinearMul(__tmp__INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, __tmp__decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              __tmp___owner_Ownable[this] := __tmp___tokenOwner_LUCKYToken[this];
[L4514]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_StandardToken[this][__tmp___owner_Ownable[this]];
[L4515]              __tmp___balances_StandardToken[this][__tmp___owner_Ownable[this]] := __tmp___totalSupply_StandardToken[this];
[L4516]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_StandardToken[this][__tmp___owner_Ownable[this]];
[L4571]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4572]  COND FALSE  !(revert)
[L1874]  RET         call LUCKYToken_LUCKYToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1875]              assume revert || gas < 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND TRUE   gas >= 0
[L7133]              assume _value_s670 >= 0 && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7134]              assume msgvalue_MSG == 0;
[L7135]  CALL        call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND TRUE   !!__tmp__paused_Pausable[this]
[L6238]              revert := true;
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND TRUE   gas >= 0
[L7133]              assume _value_s670 >= 0 && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7134]              assume msgvalue_MSG == 0;
[L7135]  CALL        call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4115]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4116]  CALL        call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3167]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3168]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3168]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3169]  COND TRUE   revert
[L4116]  RET         call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4117]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:40:40,511 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:40,512 INFO  L82        PathProgramCache]: Analyzing trace with hash -1500551444, now seen corresponding path program 1 times
[2020-11-24 20:40:40,513 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:40,524 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:40:40,588 INFO  L134       CoverageAnalysis]: Checked inductivity of 332 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 332 trivial. 0 not checked.
[2020-11-24 20:40:40,588 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:40:40,588 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:40:40,589 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:40:40,589 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:40:40,589 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:40:40,589 INFO  L87              Difference]: Start difference. First operand 4464 states and 5141 transitions. cyclomatic complexity: 681 Second operand 4 states.
[2020-11-24 20:40:41,086 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:40:41,086 INFO  L93              Difference]: Finished difference Result 5222 states and 6126 transitions.
[2020-11-24 20:40:41,086 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:40:41,087 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5222 states and 6126 transitions.
[2020-11-24 20:40:41,100 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2020-11-24 20:40:41,116 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5222 states to 5002 states and 5898 transitions.
[2020-11-24 20:40:41,116 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1366
[2020-11-24 20:40:41,117 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1366
[2020-11-24 20:40:41,117 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5002 states and 5898 transitions.
[2020-11-24 20:40:41,121 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:40:41,121 INFO  L728         BuchiCegarLoop]: Abstraction has 5002 states and 5898 transitions.
[2020-11-24 20:40:41,125 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5002 states and 5898 transitions.
[2020-11-24 20:40:41,171 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5002 to 4479.
[2020-11-24 20:40:41,171 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4479 states.
[2020-11-24 20:40:41,176 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4479 states to 4479 states and 5199 transitions.
[2020-11-24 20:40:41,176 INFO  L751         BuchiCegarLoop]: Abstraction has 4479 states and 5199 transitions.
[2020-11-24 20:40:41,176 INFO  L631         BuchiCegarLoop]: Abstraction has 4479 states and 5199 transitions.
[2020-11-24 20:40:41,176 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:40:41,176 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4479 states and 5199 transitions.
[2020-11-24 20:40:41,182 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 20:40:41,182 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:40:41,182 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:40:41,184 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:40:41,184 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_PausableToken0 := false;
[L3]                 call_transfer_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND TRUE   gas >= 0
[L7133]              assume _value_s670 >= 0 && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7134]              assume msgvalue_MSG == 0;
[L7135]  CALL        call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4115]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4116]  CALL        call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3167]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3168]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3168]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3169]  COND TRUE   revert
[L4116]  RET         call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4117]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND TRUE   gas >= 0
[L7133]              assume _value_s670 >= 0 && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7134]              assume msgvalue_MSG == 0;
[L7135]  CALL        call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4115]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4116]  CALL        call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3167]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3168]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3168]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3169]  COND TRUE   revert
[L4116]  RET         call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4117]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:40:41,188 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:41,188 INFO  L82        PathProgramCache]: Analyzing trace with hash -455608994, now seen corresponding path program 1 times
[2020-11-24 20:40:41,189 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:41,207 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:41,228 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:41,337 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:41,337 INFO  L82        PathProgramCache]: Analyzing trace with hash 597863048, now seen corresponding path program 1 times
[2020-11-24 20:40:41,338 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:41,342 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:41,347 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:41,356 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:40:41,356 INFO  L82        PathProgramCache]: Analyzing trace with hash 458982181, now seen corresponding path program 1 times
[2020-11-24 20:40:41,357 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:40:41,379 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:41,404 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #4: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
[2020-11-24 20:40:41,694 WARN  L188               SmtUtils]: Spent 125.00 ms on a formula simplification. DAG size of input: 151 DAG size of output: 144
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 6271 to 12541
[2020-11-24 20:40:42,088 WARN  L188               SmtUtils]: Spent 218.00 ms on a formula simplification that was a NOOP. DAG size: 205
[2020-11-24 20:40:42,455 WARN  L188               SmtUtils]: Spent 363.00 ms on a formula simplification. DAG size of input: 257 DAG size of output: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6037 to 12073
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 20:40:42,705 WARN  L188               SmtUtils]: Spent 143.00 ms on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 4027 to 8053
[2020-11-24 20:40:42,826 WARN  L188               SmtUtils]: Spent 115.00 ms on a formula simplification that was a NOOP. DAG size: 258
[2020-11-24 20:40:43,014 WARN  L188               SmtUtils]: Spent 186.00 ms on a formula simplification that was a NOOP. DAG size: 258
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-24 20:40:43,073 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 20:40:43,931 WARN  L188               SmtUtils]: Spent 518.00 ms on a formula simplification. DAG size of input: 294 DAG size of output: 282
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 20:40:44,186 WARN  L188               SmtUtils]: Spent 128.00 ms on a formula simplification that was a NOOP. DAG size: 260
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #4: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-24 20:40:44,593 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 205
[2020-11-24 20:40:44,920 WARN  L188               SmtUtils]: Spent 324.00 ms on a formula simplification. DAG size of input: 256 DAG size of output: 251
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-24 20:40:45,156 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 319
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-24 20:40:45,267 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification that was a NOOP. DAG size: 258
[2020-11-24 20:40:45,988 WARN  L188               SmtUtils]: Spent 719.00 ms on a formula simplification. DAG size of input: 470 DAG size of output: 458
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2017 to 4027
[2020-11-24 20:40:46,132 WARN  L188               SmtUtils]: Spent 134.00 ms on a formula simplification. DAG size of input: 201 DAG size of output: 198
[2020-11-24 20:40:46,295 WARN  L188               SmtUtils]: Spent 140.00 ms on a formula simplification that was a NOOP. DAG size: 307
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-24 20:40:46,575 WARN  L188               SmtUtils]: Spent 220.00 ms on a formula simplification. DAG size of input: 309 DAG size of output: 308
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 20:40:46,680 WARN  L188               SmtUtils]: Spent 103.00 ms on a formula simplification that was a NOOP. DAG size: 304
[2020-11-24 20:40:46,698 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:46,719 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:40:46,729 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:40:46 BasicIcfg
[2020-11-24 20:40:46,729 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:40:46,729 INFO  L168              Benchmark]: Toolchain (without parser) took 17628.36 ms. Allocated memory was 1.0 GB in the beginning and 2.2 GB in the end (delta: 1.1 GB). Free memory was 929.8 MB in the beginning and 1.5 GB in the end (delta: -547.3 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,729 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.29 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,730 INFO  L168              Benchmark]: Boogie Preprocessor took 126.85 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,730 INFO  L168              Benchmark]: UtopiaSpecLang took 76.05 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 902.9 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,730 INFO  L168              Benchmark]: Boogie Printer took 23.82 ms. Allocated memory is still 1.0 GB. Free memory is still 902.9 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,730 INFO  L168              Benchmark]: RCFGBuilder took 997.04 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 73.4 MB). Free memory was 902.9 MB in the beginning and 998.1 MB in the end (delta: -95.2 MB). Peak memory consumption was 191.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,731 INFO  L168              Benchmark]: UtopiaLTL2Aut took 33.97 ms. Allocated memory is still 1.1 GB. Free memory was 998.1 MB in the beginning and 990.5 MB in the end (delta: 7.6 MB). Peak memory consumption was 7.6 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,731 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1734.22 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 151.0 MB). Free memory was 990.5 MB in the beginning and 871.8 MB in the end (delta: 118.7 MB). Peak memory consumption was 524.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,731 INFO  L168              Benchmark]: BlockEncodingV2 took 186.03 ms. Allocated memory is still 1.3 GB. Free memory was 871.8 MB in the beginning and 775.1 MB in the end (delta: 96.7 MB). Peak memory consumption was 96.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,731 INFO  L168              Benchmark]: BuchiAutomizer took 14447.09 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 919.6 MB). Free memory was 775.1 MB in the beginning and 1.5 GB in the end (delta: -702.0 MB). Peak memory consumption was 834.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:40:46,734 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6838 locations, 12834 edges
  - StatisticsResult: Encoded RCFG
    6718 locations, 12503 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.29 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 126.85 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 76.05 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 902.9 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 23.82 ms. Allocated memory is still 1.0 GB. Free memory is still 902.9 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 997.04 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 73.4 MB). Free memory was 902.9 MB in the beginning and 998.1 MB in the end (delta: -95.2 MB). Peak memory consumption was 191.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 33.97 ms. Allocated memory is still 1.1 GB. Free memory was 998.1 MB in the beginning and 990.5 MB in the end (delta: 7.6 MB). Peak memory consumption was 7.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1734.22 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 151.0 MB). Free memory was 990.5 MB in the beginning and 871.8 MB in the end (delta: 118.7 MB). Peak memory consumption was 524.3 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 186.03 ms. Allocated memory is still 1.3 GB. Free memory was 871.8 MB in the beginning and 775.1 MB in the end (delta: 96.7 MB). Peak memory consumption was 96.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 14447.09 ms. Allocated memory was 1.3 GB in the beginning and 2.2 GB in the end (delta: 919.6 MB). Free memory was 775.1 MB in the beginning and 1.5 GB in the end (delta: -702.0 MB). Peak memory consumption was 834.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2616 locations, 3888 edges
  - StatisticsResult: BuchiProgram size
    6838 locations, 12834 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 4479 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 14.3s and 5 iterations.  TraceHistogramMax:6. Analysis of lassos took 6.3s. Construction of modules took 5.8s. BÃ¼chi inclusion checks took 1.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 3884 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.2s Buchi closure took 0.0s. Biggest automaton had 4718 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 23581 SDtfs, 26941 SDslu, 23599 SDs, 0 SdLazy, 65396 SolverSat, 5302 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 5.8s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639947) = (new LUCKYToken)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639949});
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
PausableToken(115792089237316195423570985008687907853269984665640564039457584007913129639947).transfer~address~uint256.gas(3979002)({from : 625314775344980695514831456764478199936221022047, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4115]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4116]  CALL        call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3167]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3168]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3168]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3169]  COND TRUE   revert
[L4116]  RET         call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4117]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);

Loop:
PausableToken(115792089237316195423570985008687907853269984665640564039457584007913129639947).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639953, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != _to_s670) && msgsender_MSG != _to_s670) && _value_s670 <= _balances_StandardToken[this][msgsender_MSG]) && _balances_StandardToken[this][_to_s670] + _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s670 >= 0) && _value_s670 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s670] >= 0) && _balances_StandardToken[this][_to_s670] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][msgsender_MSG] >= 0) && _balances_StandardToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_PausableToken0 := true;
[L3]                 call_transfer_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1330]              havoc __exception;
[L1331]              revert := false;
[L1332]  COND TRUE   __exception
[L1333]              __tmp__Balance := Balance;
[L1334]              __tmp__DType := DType;
[L1335]              __tmp__Alloc := Alloc;
[L1336]              __tmp__balance_ADDR := balance_ADDR;
[L1337]              __tmp__M_Ref_int := M_Ref_int;
[L1338]              __tmp__sum__balances0 := sum__balances0;
[L1339]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1340]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1341]              __tmp__sum__allowed1 := sum__allowed1;
[L1342]              __tmp__Length := Length;
[L1343]              __tmp__now := now;
[L1344]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1345]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1346]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1347]              __tmp___owner_Ownable := _owner_Ownable;
[L1348]              __tmp__paused_Pausable := paused_Pausable;
[L1349]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1350]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1351]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1352]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1353]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1354]  CALL        call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4111]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4111]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4112]  COND FALSE  !(revert)
[L4115]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4116]  CALL        call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L3167]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3168]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3168]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s246, value_s246);
[L3169]  COND TRUE   revert
[L4116]  RET         call __var_15 := transfer~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L4117]  COND TRUE   revert
[L1354]  RET         call __ret_0_ := transfer~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);
[L1355]              assume revert || gas < 0;
[L7135]  RET         call __ret_0_transfer := transfer~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _to_s670, _value_s670);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
