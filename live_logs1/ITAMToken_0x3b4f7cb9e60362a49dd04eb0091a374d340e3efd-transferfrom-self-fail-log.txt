This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 18:41:07,518 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 18:41:07,519 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 18:41:07,530 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 18:41:07,530 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 18:41:07,531 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 18:41:07,532 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 18:41:07,533 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 18:41:07,535 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 18:41:07,535 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 18:41:07,536 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 18:41:07,537 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 18:41:07,537 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 18:41:07,538 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 18:41:07,539 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 18:41:07,540 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 18:41:07,540 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 18:41:07,541 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 18:41:07,543 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 18:41:07,544 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 18:41:07,545 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 18:41:07,546 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 18:41:07,548 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 18:41:07,548 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 18:41:07,549 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 18:41:07,549 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 18:41:07,550 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 18:41:07,550 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 18:41:07,550 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 18:41:07,551 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 18:41:07,551 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 18:41:07,552 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 18:41:07,552 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 18:41:07,553 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 18:41:07,554 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 18:41:07,554 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 18:41:07,555 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 18:41:07,555 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 18:41:07,555 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 18:41:07,556 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 18:41:07,556 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 18:41:07,557 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 18:41:07,565 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 18:41:07,565 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 18:41:07,566 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 18:41:07,566 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 18:41:07,566 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 18:41:07,567 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 18:41:07,567 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 18:41:07,567 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 18:41:07,567 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 18:41:07,567 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 18:41:07,567 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 18:41:07,567 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 18:41:07,567 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 18:41:07,568 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 18:41:07,568 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 18:41:07,569 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 18:41:07,569 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 18:41:07,569 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 18:41:07,569 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 18:41:07,589 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 18:41:07,603 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 18:41:07,606 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 18:41:07,607 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 18:41:07,608 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 18:41:07,608 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl
[2020-11-25 18:41:07,609 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl'
[2020-11-25 18:41:07,765 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 18:41:07,766 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 18:41:07,766 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 18:41:07,767 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 18:41:07,767 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 18:41:07,783 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,785 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,833 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,834 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,876 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,894 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,918 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,940 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 18:41:07,941 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 18:41:07,941 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 18:41:07,943 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 18:41:07,947 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/1) ...
[2020-11-25 18:41:07,982 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ITAMToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ITAMToken.transferFrom)))
[2020-11-25 18:41:07,988 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ITAMToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ITAMToken.transferFrom)))
[2020-11-25 18:41:07,995 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ITAMToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ITAMToken.transferFrom)))
[2020-11-25 18:41:08,004 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( _from_s962==_to_s962 && ( _value_s962>_balances_ERC20[this][_from_s962] || _value_s962>_allowed_ERC20[this][_from_s962][msg.sender] ) ) && _value_s962>=0 ) && _value_s962<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][_to_s962]>=0 ) && _balances_ERC20[this][_to_s962]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][_from_s962]>=0 ) && _balances_ERC20[this][_from_s962]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_ERC20[this][_from_s962][msg.sender]>=0 ) && _allowed_ERC20[this][_from_s962][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>],IdentifierExpression[_to_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[_value_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]]],BinaryExpression[COMPGT,IdentifierExpression[_value_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_to_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_to_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[_from_s962,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_ITAMToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 18:41:08,015 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ITAMToken.transferFrom(from, to, value), from == to && (value > _balances_ERC20[this][from] || value > _allowed_ERC20[this][from][msg.sender]) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][from] >= 0 &&  _balances_ERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_ERC20[this][from][msg.sender] >= 0 && _allowed_ERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(ITAMToken.transferFrom)))
[2020-11-25 18:41:08,016 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_ITAMToken0) ==> ( <>AP(fail_transferFrom_ITAMToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 18:41:08,048 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:08 PropertyContainer
[2020-11-25 18:41:08,048 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 18:41:08,049 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 18:41:08,049 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 18:41:08,049 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 18:41:08,050 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/2) ...
[2020-11-25 18:41:08,050 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 18:41:08,050 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 18:41:08,082 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:08" (2/2) ...
[2020-11-25 18:41:08,082 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 18:41:08,083 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 18:41:08,083 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 18:41:08,083 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 18:41:08,084 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/2) ...
[2020-11-25 18:41:08,140 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 18:41:08,140 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 18:41:08,141 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:41:08,141 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 18:41:08,142 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 18:41:08,142 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:41:08,143 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 18:41:08,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 18:41:08,143 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 18:41:08,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 18:41:08,143 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 18:41:08,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 18:41:08,143 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 18:41:08,143 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 18:41:08,144 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 18:41:08,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 18:41:08,144 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 18:41:08,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 18:41:08,144 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:41:08,144 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 18:41:08,144 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:41:08,144 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20__success
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped
[2020-11-25 18:41:08,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped
[2020-11-25 18:41:08,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken_NoBaseCtor__success
[2020-11-25 18:41:08,145 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken
[2020-11-25 18:41:08,145 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken
[2020-11-25 18:41:08,146 INFO  L130     BoogieDeclarations]: Found specification of procedure setGameMaster~address_ITAMToken
[2020-11-25 18:41:08,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGameMaster~address_ITAMToken
[2020-11-25 18:41:08,146 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ITAMToken
[2020-11-25 18:41:08,146 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ITAMToken
[2020-11-25 18:41:08,147 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock_ITAMToken
[2020-11-25 18:41:08,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock_ITAMToken
[2020-11-25 18:41:08,147 INFO  L130     BoogieDeclarations]: Found specification of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L130     BoogieDeclarations]: Found specification of procedure addToBlackList~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToBlackList~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromBlackList~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromBlackList~address_ITAMToken
[2020-11-25 18:41:08,147 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ITAMToken__success
[2020-11-25 18:41:08,148 INFO  L130     BoogieDeclarations]: Found specification of procedure withdrawEther~uint256_ITAMToken
[2020-11-25 18:41:08,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure withdrawEther~uint256_ITAMToken
[2020-11-25 18:41:08,148 INFO  L130     BoogieDeclarations]: Found specification of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken
[2020-11-25 18:41:08,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken
[2020-11-25 18:41:08,148 INFO  L130     BoogieDeclarations]: Found specification of procedure _getItemAmount~uint64~uint64~address_ITAMToken__success
[2020-11-25 18:41:08,148 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken
[2020-11-25 18:41:08,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken
[2020-11-25 18:41:08,148 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken
[2020-11-25 18:41:08,148 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken
[2020-11-25 18:41:08,148 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnEther~uint64~uint64_ITAMToken
[2020-11-25 18:41:08,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnEther~uint64~uint64_ITAMToken
[2020-11-25 18:41:08,149 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ITAMToken
[2020-11-25 18:41:08,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ITAMToken
[2020-11-25 18:41:08,149 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ITAMToken
[2020-11-25 18:41:08,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ITAMToken
[2020-11-25 18:41:08,149 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ITAMToken
[2020-11-25 18:41:08,149 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ITAMToken
[2020-11-25 18:41:08,149 INFO  L130     BoogieDeclarations]: Found specification of procedure firstMaster_ITAMToken
[2020-11-25 18:41:08,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure firstMaster_ITAMToken
[2020-11-25 18:41:08,150 INFO  L130     BoogieDeclarations]: Found specification of procedure secondMaster_ITAMToken
[2020-11-25 18:41:08,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure secondMaster_ITAMToken
[2020-11-25 18:41:08,150 INFO  L130     BoogieDeclarations]: Found specification of procedure thirdMaster_ITAMToken
[2020-11-25 18:41:08,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure thirdMaster_ITAMToken
[2020-11-25 18:41:08,150 INFO  L130     BoogieDeclarations]: Found specification of procedure decidedOwner~address~address_ITAMToken
[2020-11-25 18:41:08,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure decidedOwner~address~address_ITAMToken
[2020-11-25 18:41:08,150 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_ITAMToken
[2020-11-25 18:41:08,150 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_ITAMToken
[2020-11-25 18:41:08,150 INFO  L130     BoogieDeclarations]: Found specification of procedure gameMaster_ITAMToken
[2020-11-25 18:41:08,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure gameMaster_ITAMToken
[2020-11-25 18:41:08,151 INFO  L130     BoogieDeclarations]: Found specification of procedure blackLists~address_ITAMToken
[2020-11-25 18:41:08,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure blackLists~address_ITAMToken
[2020-11-25 18:41:08,151 INFO  L130     BoogieDeclarations]: Found specification of procedure unlockCount_ITAMToken
[2020-11-25 18:41:08,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlockCount_ITAMToken
[2020-11-25 18:41:08,151 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleAddress_ITAMToken
[2020-11-25 18:41:08,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleAddress_ITAMToken
[2020-11-25 18:41:08,151 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,151 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleAddress_ITAMToken
[2020-11-25 18:41:08,151 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleAddress_ITAMToken
[2020-11-25 18:41:08,152 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,152 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleAddress_ITAMToken
[2020-11-25 18:41:08,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleAddress_ITAMToken
[2020-11-25 18:41:08,152 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleReleaseCap_ITAMToken
[2020-11-25 18:41:08,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleReleaseCap_ITAMToken
[2020-11-25 18:41:08,152 INFO  L130     BoogieDeclarations]: Found specification of procedure teamAddress_ITAMToken
[2020-11-25 18:41:08,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamAddress_ITAMToken
[2020-11-25 18:41:08,152 INFO  L130     BoogieDeclarations]: Found specification of procedure teamReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,152 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,153 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorAddress_ITAMToken
[2020-11-25 18:41:08,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorAddress_ITAMToken
[2020-11-25 18:41:08,153 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,153 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingAddress_ITAMToken
[2020-11-25 18:41:08,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingAddress_ITAMToken
[2020-11-25 18:41:08,153 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,153 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoAddress_ITAMToken
[2020-11-25 18:41:08,153 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoAddress_ITAMToken
[2020-11-25 18:41:08,154 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoReleaseCaps~uint256_ITAMToken
[2020-11-25 18:41:08,154 INFO  L130     BoogieDeclarations]: Found specification of procedure inAppAddress_ITAMToken
[2020-11-25 18:41:08,154 INFO  L138     BoogieDeclarations]: Found implementation of procedure inAppAddress_ITAMToken
[2020-11-25 18:41:08,154 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 18:41:08,154 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 18:41:08,154 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 18:41:08,154 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGameMaster_pre__success
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMaster_pre__success
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNotBlackList_pre__success
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 18:41:08,155 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Capped
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Capped
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ITAMToken
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:41:08,156 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,157 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:41:08,158 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 18:41:08,158 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 18:41:08,158 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:41:08,158 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 18:41:08,158 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 18:41:08,158 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:41:08,159 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ERC20__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__success
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Capped_ERC20Capped__fail
[2020-11-25 18:41:08,160 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__success
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure cap_ERC20Capped__fail
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken_NoBaseCtor__fail
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken__success
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure ITAMToken_ITAMToken__fail
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure setGameMaster~address_ITAMToken__success
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure setGameMaster~address_ITAMToken__fail
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ITAMToken__success
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ITAMToken__fail
[2020-11-25 18:41:08,161 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ITAMToken__success
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ITAMToken__fail
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ITAMToken__success
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ITAMToken__fail
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ITAMToken__success
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ITAMToken__fail
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock_ITAMToken__success
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure unlock_ITAMToken__fail
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__success
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__fail
[2020-11-25 18:41:08,162 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_ITAMToken__success
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure changeOwner~address_ITAMToken__fail
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure addToBlackList~address_ITAMToken__success
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure addToBlackList~address_ITAMToken__fail
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromBlackList~address_ITAMToken__success
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure removeFromBlackList~address_ITAMToken__fail
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_ITAMToken__fail
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure withdrawEther~uint256_ITAMToken__success
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure withdrawEther~uint256_ITAMToken__fail
[2020-11-25 18:41:08,163 INFO  L130     BoogieDeclarations]: Found specification of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__success
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__fail
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure _getItemAmount~uint64~uint64~address_ITAMToken__fail
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__success
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__fail
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__success
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__fail
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__success
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__fail
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ITAMToken__success
[2020-11-25 18:41:08,164 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ITAMToken__fail
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ITAMToken__success
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ITAMToken__fail
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ITAMToken__success
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ITAMToken__fail
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure firstMaster_ITAMToken__success
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure firstMaster_ITAMToken__fail
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure secondMaster_ITAMToken__success
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure secondMaster_ITAMToken__fail
[2020-11-25 18:41:08,165 INFO  L130     BoogieDeclarations]: Found specification of procedure thirdMaster_ITAMToken__success
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure thirdMaster_ITAMToken__fail
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure decidedOwner~address~address_ITAMToken__success
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure decidedOwner~address~address_ITAMToken__fail
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_ITAMToken__success
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_ITAMToken__fail
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure gameMaster_ITAMToken__success
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure gameMaster_ITAMToken__fail
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure blackLists~address_ITAMToken__success
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure blackLists~address_ITAMToken__fail
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure unlockCount_ITAMToken__success
[2020-11-25 18:41:08,166 INFO  L130     BoogieDeclarations]: Found specification of procedure unlockCount_ITAMToken__fail
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleAddress_ITAMToken__success
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleAddress_ITAMToken__fail
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure strategicSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleAddress_ITAMToken__success
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleAddress_ITAMToken__fail
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure privateSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,167 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleAddress_ITAMToken__success
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleAddress_ITAMToken__fail
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleReleaseCap_ITAMToken__success
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure publicSaleReleaseCap_ITAMToken__fail
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure teamAddress_ITAMToken__success
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure teamAddress_ITAMToken__fail
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure teamReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure teamReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorAddress_ITAMToken__success
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorAddress_ITAMToken__fail
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,168 INFO  L130     BoogieDeclarations]: Found specification of procedure advisorReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingAddress_ITAMToken__success
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingAddress_ITAMToken__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure marketingReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoAddress_ITAMToken__success
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoAddress_ITAMToken__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure ecoReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure inAppAddress_ITAMToken__success
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure inAppAddress_ITAMToken__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 18:41:08,169 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 18:41:08,170 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 18:41:08,170 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 18:41:08,170 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyGameMaster_pre__fail
[2020-11-25 18:41:08,170 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyMaster_pre__fail
[2020-11-25 18:41:08,170 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyNotBlackList_pre__fail
[2020-11-25 18:41:08,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 18:41:08,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 18:41:08,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 18:41:08,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 18:41:08,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 18:41:08,170 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 18:41:08,171 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 18:41:08,172 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20__fail
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ERC20__success
[2020-11-25 18:41:08,173 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped_NoBaseCtor__success
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Capped_ERC20Capped__success
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure cap_ERC20Capped__success
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20Capped__success
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken_NoBaseCtor__fail
[2020-11-25 18:41:08,174 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken_NoBaseCtor__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken__fail
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure ITAMToken_ITAMToken__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGameMaster~address_ITAMToken__fail
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGameMaster~address_ITAMToken__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ITAMToken__fail
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ITAMToken__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ITAMToken__fail
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ITAMToken__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ITAMToken__fail
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ITAMToken__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ITAMToken__fail
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ITAMToken__success
[2020-11-25 18:41:08,175 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlock_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAddresses~address~address~address~address~address~address~address~address_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure changeOwner~address_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToBlackList~address_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure addToBlackList~address_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromBlackList~address_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeFromBlackList~address_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure withdrawEther~uint256_ITAMToken__fail
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure withdrawEther~uint256_ITAMToken__success
[2020-11-25 18:41:08,176 INFO  L138     BoogieDeclarations]: Found implementation of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure createOrUpdateItem~uint64~arr~arr~arr_ITAMToken__success
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure _getItemAmount~uint64~uint64~address_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure _getItemAmount~uint64~uint64~address_ITAMToken__success
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnERC20~address~uint64~uint64_ITAMToken__success
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnITAM~uint64~uint64_ITAMToken__success
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure purchaseItemOnEther~uint64~uint64_ITAMToken__success
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ITAMToken__success
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ITAMToken__fail
[2020-11-25 18:41:08,177 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure firstMaster_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure firstMaster_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure secondMaster_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure secondMaster_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure thirdMaster_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure thirdMaster_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure decidedOwner~address~address_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure decidedOwner~address~address_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_ITAMToken__success
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure gameMaster_ITAMToken__fail
[2020-11-25 18:41:08,178 INFO  L138     BoogieDeclarations]: Found implementation of procedure gameMaster_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure blackLists~address_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure blackLists~address_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlockCount_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure unlockCount_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleAddress_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleAddress_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure strategicSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleAddress_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleAddress_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure privateSaleReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleAddress_ITAMToken__fail
[2020-11-25 18:41:08,179 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleAddress_ITAMToken__success
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleReleaseCap_ITAMToken__fail
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure publicSaleReleaseCap_ITAMToken__success
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamAddress_ITAMToken__fail
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamAddress_ITAMToken__success
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure teamReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorAddress_ITAMToken__fail
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorAddress_ITAMToken__success
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure advisorReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingAddress_ITAMToken__fail
[2020-11-25 18:41:08,180 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingAddress_ITAMToken__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure marketingReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoAddress_ITAMToken__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoAddress_ITAMToken__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoReleaseCaps~uint256_ITAMToken__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure ecoReleaseCaps~uint256_ITAMToken__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure inAppAddress_ITAMToken__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure inAppAddress_ITAMToken__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 18:41:08,181 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGameMaster_pre__fail
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyGameMaster_pre__success
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMaster_pre__fail
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyMaster_pre__success
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNotBlackList_pre__fail
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyNotBlackList_pre__success
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 18:41:08,182 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 18:41:08,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 18:41:08,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Capped
[2020-11-25 18:41:08,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Capped
[2020-11-25 18:41:08,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ITAMToken
[2020-11-25 18:41:08,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 18:41:08,183 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 18:41:08,183 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 18:41:09,081 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:41:09,082 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 18:41:09,266 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 18:41:09,266 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 18:41:09,269 INFO  L202        PluginConnector]: Adding new model ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:09 BoogieIcfgContainer
[2020-11-25 18:41:09,270 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:08" (2/2) ...
[2020-11-25 18:41:09,270 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 18:41:09,270 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@761284b and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:09, skipping insertion in model container
[2020-11-25 18:41:09,270 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 18:41:09,270 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 18:41:09,270 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 18:41:09,272 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 18:41:09,272 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/3) ...
[2020-11-25 18:41:09,272 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@2e9f6ec2 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:09, skipping insertion in model container
[2020-11-25 18:41:09,272 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:08" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 18:41:09,307 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:09 NWAContainer
[2020-11-25 18:41:09,308 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 18:41:09,308 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 18:41:09,308 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 18:41:09,309 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 18:41:09,310 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:09" (3/4) ...
[2020-11-25 18:41:09,310 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@77f4faee and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:41:09, skipping insertion in model container
[2020-11-25 18:41:09,310 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:09" (4/4) ...
[2020-11-25 18:41:09,313 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 18:41:09,322 INFO  L110   BuchiProductObserver]: Initial RCFG 6542 locations, 8020 edges
[2020-11-25 18:41:09,323 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 18:41:09,339 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 18:41:11,713 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 18:41:11,729 INFO  L110   BuchiProductObserver]: BuchiProgram size 14822 locations, 24987 edges
[2020-11-25 18:41:11,730 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:41:11 BoogieIcfgContainer
[2020-11-25 18:41:11,730 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 18:41:11,730 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 18:41:11,730 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 18:41:11,731 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 18:41:11,732 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:41:11" (1/1) ...
[2020-11-25 18:41:12,033 INFO  L313           BlockEncoder]: Initial Icfg 14822 locations, 24987 edges
[2020-11-25 18:41:12,033 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 18:41:12,034 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 18:41:12,034 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 18:41:12,034 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 18:41:12,055 INFO  L70    emoveInfeasibleEdges]: Removed 180 edges and 13 locations because of local infeasibility
[2020-11-25 18:41:12,073 INFO  L70        RemoveSinkStates]: Removed 252 edges and 145 locations by removing sink states
[2020-11-25 18:41:12,103 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 18:41:12,111 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 18:41:12,118 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 18:41:12,119 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 18:41:12,124 INFO  L313           BlockEncoder]: Encoded RCFG 14634 locations, 24511 edges
[2020-11-25 18:41:12,125 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:41:12 BasicIcfg
[2020-11-25 18:41:12,125 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 18:41:12,125 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 18:41:12,125 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 18:41:12,127 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 18:41:12,127 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:41:12,127 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 06:41:07" (1/6) ...
[2020-11-25 18:41:12,128 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f2344d5 and model type ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:41:12, skipping insertion in model container
[2020-11-25 18:41:12,128 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:41:12,128 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 06:41:08" (2/6) ...
[2020-11-25 18:41:12,129 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f2344d5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:41:12, skipping insertion in model container
[2020-11-25 18:41:12,129 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:41:12,129 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 06:41:09" (3/6) ...
[2020-11-25 18:41:12,129 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f2344d5 and model type ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:41:12, skipping insertion in model container
[2020-11-25 18:41:12,129 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:41:12,129 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 06:41:09" (4/6) ...
[2020-11-25 18:41:12,129 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f2344d5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 06:41:12, skipping insertion in model container
[2020-11-25 18:41:12,129 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:41:12,129 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 06:41:11" (5/6) ...
[2020-11-25 18:41:12,130 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@6f2344d5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 06:41:12, skipping insertion in model container
[2020-11-25 18:41:12,130 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 18:41:12,130 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 06:41:12" (6/6) ...
[2020-11-25 18:41:12,131 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ITAMToken_0x3b4f7cb9e60362a49dd04eb0091a374d340e3efd_transferfrom-self-fail.bpl_BEv2
[2020-11-25 18:41:12,166 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 18:41:12,166 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 18:41:12,166 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 18:41:12,166 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 18:41:12,166 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 18:41:12,166 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 18:41:12,166 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 18:41:12,166 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 18:41:12,166 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 18:41:12,258 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14634 states.
[2020-11-25 18:41:12,366 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:41:12,366 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:12,366 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:12,374 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:12,375 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:12,375 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 18:41:12,375 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14634 states.
[2020-11-25 18:41:12,433 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:41:12,434 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:12,434 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:12,435 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:12,436 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND TRUE   revert
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND FALSE  !(gas >= 0)
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:12,450 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:12,450 INFO  L82        PathProgramCache]: Analyzing trace with hash -656644818, now seen corresponding path program 1 times
[2020-11-25 18:41:12,454 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:12,484 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:12,520 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:41:12,522 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:12,522 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:41:13,064 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:13,072 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:41:13,072 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:41:13,074 INFO  L87              Difference]: Start difference. First operand 14634 states. Second operand 4 states.
[2020-11-25 18:41:14,692 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:14,693 INFO  L93              Difference]: Finished difference Result 13127 states and 15012 transitions.
[2020-11-25 18:41:14,693 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 18:41:14,694 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 13127 states and 15012 transitions.
[2020-11-25 18:41:14,745 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:41:14,806 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 13127 states to 13127 states and 15012 transitions.
[2020-11-25 18:41:14,807 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 3
[2020-11-25 18:41:14,808 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 329
[2020-11-25 18:41:14,809 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 13127 states and 15012 transitions.
[2020-11-25 18:41:14,833 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:14,833 INFO  L728         BuchiCegarLoop]: Abstraction has 13127 states and 15012 transitions.
[2020-11-25 18:41:14,861 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 13127 states and 15012 transitions.
[2020-11-25 18:41:15,016 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 13127 to 13127.
[2020-11-25 18:41:15,017 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 13127 states.
[2020-11-25 18:41:15,035 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 13127 states to 13127 states and 15012 transitions.
[2020-11-25 18:41:15,036 INFO  L751         BuchiCegarLoop]: Abstraction has 13127 states and 15012 transitions.
[2020-11-25 18:41:15,036 INFO  L631         BuchiCegarLoop]: Abstraction has 13127 states and 15012 transitions.
[2020-11-25 18:41:15,036 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 18:41:15,037 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 13127 states and 15012 transitions.
[2020-11-25 18:41:15,057 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 18:41:15,057 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:15,057 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:15,060 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:15,060 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND TRUE   revert
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND TRUE   revert
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND TRUE   revert
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:15,065 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:15,066 INFO  L82        PathProgramCache]: Analyzing trace with hash -398558513, now seen corresponding path program 1 times
[2020-11-25 18:41:15,067 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:15,093 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:15,143 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 18:41:15,143 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:15,143 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:41:15,144 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:15,145 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:41:15,145 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:41:15,145 INFO  L87              Difference]: Start difference. First operand 13127 states and 15012 transitions. cyclomatic complexity: 1895 Second operand 3 states.
[2020-11-25 18:41:15,426 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:15,427 INFO  L93              Difference]: Finished difference Result 15416 states and 17679 transitions.
[2020-11-25 18:41:15,427 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:41:15,427 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 15416 states and 17679 transitions.
[2020-11-25 18:41:15,467 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:15,536 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 15416 states to 15416 states and 17679 transitions.
[2020-11-25 18:41:15,536 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 441
[2020-11-25 18:41:15,537 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 441
[2020-11-25 18:41:15,537 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 15416 states and 17679 transitions.
[2020-11-25 18:41:15,553 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:15,553 INFO  L728         BuchiCegarLoop]: Abstraction has 15416 states and 17679 transitions.
[2020-11-25 18:41:15,570 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 15416 states and 17679 transitions.
[2020-11-25 18:41:15,711 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 15416 to 14689.
[2020-11-25 18:41:15,711 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14689 states.
[2020-11-25 18:41:15,730 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14689 states to 14689 states and 16828 transitions.
[2020-11-25 18:41:15,730 INFO  L751         BuchiCegarLoop]: Abstraction has 14689 states and 16828 transitions.
[2020-11-25 18:41:15,730 INFO  L631         BuchiCegarLoop]: Abstraction has 14689 states and 16828 transitions.
[2020-11-25 18:41:15,731 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 18:41:15,731 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14689 states and 16828 transitions.
[2020-11-25 18:41:15,748 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:15,749 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:15,749 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:15,751 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:15,751 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND TRUE   !(cap_s528 > 0)
[L10582]              revert := true;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND TRUE   revert
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND TRUE   revert
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND TRUE   !!blackLists_ITAMToken[this][msgsender_MSG]
[L13805]              revert := true;
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND TRUE   revert
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND TRUE   !!blackLists_ITAMToken[this][msgsender_MSG]
[L13805]              revert := true;
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND TRUE   revert
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:15,755 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:15,755 INFO  L82        PathProgramCache]: Analyzing trace with hash 624882096, now seen corresponding path program 1 times
[2020-11-25 18:41:15,755 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:15,768 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:15,808 INFO  L134       CoverageAnalysis]: Checked inductivity of 15 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 15 trivial. 0 not checked.
[2020-11-25 18:41:15,809 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:15,809 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 18:41:15,809 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:15,809 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 18:41:15,809 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 18:41:15,809 INFO  L87              Difference]: Start difference. First operand 14689 states and 16828 transitions. cyclomatic complexity: 2149 Second operand 3 states.
[2020-11-25 18:41:15,940 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:15,940 INFO  L93              Difference]: Finished difference Result 15425 states and 17340 transitions.
[2020-11-25 18:41:15,940 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 18:41:15,941 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 15425 states and 17340 transitions.
[2020-11-25 18:41:15,972 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:16,013 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 15425 states to 14847 states and 16632 transitions.
[2020-11-25 18:41:16,013 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 411
[2020-11-25 18:41:16,014 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 411
[2020-11-25 18:41:16,014 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 14847 states and 16632 transitions.
[2020-11-25 18:41:16,025 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:16,025 INFO  L728         BuchiCegarLoop]: Abstraction has 14847 states and 16632 transitions.
[2020-11-25 18:41:16,037 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 14847 states and 16632 transitions.
[2020-11-25 18:41:16,125 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 14847 to 14213.
[2020-11-25 18:41:16,125 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14213 states.
[2020-11-25 18:41:16,140 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14213 states to 14213 states and 15878 transitions.
[2020-11-25 18:41:16,140 INFO  L751         BuchiCegarLoop]: Abstraction has 14213 states and 15878 transitions.
[2020-11-25 18:41:16,140 INFO  L631         BuchiCegarLoop]: Abstraction has 14213 states and 15878 transitions.
[2020-11-25 18:41:16,140 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 18:41:16,140 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14213 states and 15878 transitions.
[2020-11-25 18:41:16,154 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:16,154 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:16,154 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:16,156 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:16,156 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:16,165 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:16,166 INFO  L82        PathProgramCache]: Analyzing trace with hash 1330397687, now seen corresponding path program 1 times
[2020-11-25 18:41:16,167 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:16,197 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:16,354 INFO  L134       CoverageAnalysis]: Checked inductivity of 20 backedges. 12 proven. 0 refuted. 0 times theorem prover too weak. 8 trivial. 0 not checked.
[2020-11-25 18:41:16,354 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:16,354 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 18:41:16,355 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:16,355 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 18:41:16,355 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=209, Unknown=0, NotChecked=0, Total=240
[2020-11-25 18:41:16,355 INFO  L87              Difference]: Start difference. First operand 14213 states and 15878 transitions. cyclomatic complexity: 1675 Second operand 16 states.
[2020-11-25 18:41:22,756 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:22,756 INFO  L93              Difference]: Finished difference Result 14429 states and 16122 transitions.
[2020-11-25 18:41:22,757 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 18:41:22,757 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 14429 states and 16122 transitions.
[2020-11-25 18:41:22,781 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:22,812 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 14429 states to 14429 states and 16122 transitions.
[2020-11-25 18:41:22,812 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 428
[2020-11-25 18:41:22,812 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 428
[2020-11-25 18:41:22,812 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 14429 states and 16122 transitions.
[2020-11-25 18:41:22,823 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:22,823 INFO  L728         BuchiCegarLoop]: Abstraction has 14429 states and 16122 transitions.
[2020-11-25 18:41:22,834 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 14429 states and 16122 transitions.
[2020-11-25 18:41:22,924 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 14429 to 14304.
[2020-11-25 18:41:22,925 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14304 states.
[2020-11-25 18:41:22,938 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14304 states to 14304 states and 15982 transitions.
[2020-11-25 18:41:22,938 INFO  L751         BuchiCegarLoop]: Abstraction has 14304 states and 15982 transitions.
[2020-11-25 18:41:22,938 INFO  L631         BuchiCegarLoop]: Abstraction has 14304 states and 15982 transitions.
[2020-11-25 18:41:22,938 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 18:41:22,938 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14304 states and 15982 transitions.
[2020-11-25 18:41:22,951 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:22,951 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:22,951 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:22,954 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:22,954 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND TRUE   choice == 44
[L14359]              gas := gas - 21000;
[L14360]  COND TRUE   gas >= 0
[L14361]              assume value_s980 >= 0 && value_s980 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14362]              assume msgvalue_MSG == 0;
[L14363]  CALL        call __ret_0_approve := approve~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, spender_s980, value_s980);
[L2569]               havoc __exception;
[L2570]               revert := false;
[L2571]   COND FALSE  !(__exception)
[L2641]   CALL        call __ret_0_ := approve~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s980, value_s980);
[L10984]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10984]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10985]  COND FALSE  !(revert)
[L10988]  COND TRUE   DType[this] == ITAMToken
[L10989]  CALL        call __var_20 := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s980, value_s980);
[L10254]  COND TRUE   DType[this] == ITAMToken
[L10255]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s301, value_s301);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10255]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, spender_s301, value_s301);
[L10256]  COND FALSE  !(revert)
[L10272]              __ret_0_ := true;
[L10989]  RET         call __var_20 := approve~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, spender_s980, value_s980);
[L10990]  COND FALSE  !(revert)
[L10996]              __ret_0_ := __var_20;
[L2641]   RET         call __ret_0_ := approve~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, spender_s980, value_s980);
[L2642]               assume !revert && gas >= 0;
[L14363]  RET         call __ret_0_approve := approve~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, spender_s980, value_s980);
[L14673]  RET         call CorralChoice_ITAMToken(this);
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:22,959 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:22,960 INFO  L82        PathProgramCache]: Analyzing trace with hash -1153948582, now seen corresponding path program 1 times
[2020-11-25 18:41:22,960 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:22,986 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:23,288 INFO  L134       CoverageAnalysis]: Checked inductivity of 136 backedges. 14 proven. 0 refuted. 0 times theorem prover too weak. 122 trivial. 0 not checked.
[2020-11-25 18:41:23,288 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:23,288 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [20] imperfect sequences [] total 20
[2020-11-25 18:41:23,288 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:23,289 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 21 interpolants.
[2020-11-25 18:41:23,289 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=44, Invalid=376, Unknown=0, NotChecked=0, Total=420
[2020-11-25 18:41:23,289 INFO  L87              Difference]: Start difference. First operand 14304 states and 15982 transitions. cyclomatic complexity: 1689 Second operand 21 states.
[2020-11-25 18:41:32,126 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:32,126 INFO  L93              Difference]: Finished difference Result 14595 states and 16362 transitions.
[2020-11-25 18:41:32,126 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 25 states. 
[2020-11-25 18:41:32,126 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 14595 states and 16362 transitions.
[2020-11-25 18:41:32,150 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:32,176 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 14595 states to 14595 states and 16362 transitions.
[2020-11-25 18:41:32,176 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 449
[2020-11-25 18:41:32,177 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 449
[2020-11-25 18:41:32,177 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 14595 states and 16362 transitions.
[2020-11-25 18:41:32,185 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:32,185 INFO  L728         BuchiCegarLoop]: Abstraction has 14595 states and 16362 transitions.
[2020-11-25 18:41:32,195 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 14595 states and 16362 transitions.
[2020-11-25 18:41:32,290 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 14595 to 14390.
[2020-11-25 18:41:32,290 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14390 states.
[2020-11-25 18:41:32,306 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14390 states to 14390 states and 16103 transitions.
[2020-11-25 18:41:32,306 INFO  L751         BuchiCegarLoop]: Abstraction has 14390 states and 16103 transitions.
[2020-11-25 18:41:32,306 INFO  L631         BuchiCegarLoop]: Abstraction has 14390 states and 16103 transitions.
[2020-11-25 18:41:32,306 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 18:41:32,306 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14390 states and 16103 transitions.
[2020-11-25 18:41:32,320 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:32,320 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:32,321 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:32,323 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:32,323 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND TRUE   __exception
[L1971]               __tmp__Balance := Balance;
[L1972]               __tmp__DType := DType;
[L1973]               __tmp__Alloc := Alloc;
[L1974]               __tmp__balance_ADDR := balance_ADDR;
[L1975]               __tmp__M_Ref_int := M_Ref_int;
[L1976]               __tmp__sum__balances0 := sum__balances0;
[L1977]               __tmp__alloc__allowed_ERC20_lvl0 := alloc__allowed_ERC20_lvl0;
[L1978]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L1979]               __tmp__sum__allowed1 := sum__allowed1;
[L1980]               __tmp__M_Ref_bool := M_Ref_bool;
[L1981]               __tmp__alloc_decidedOwner_ITAMToken_lvl0 := alloc_decidedOwner_ITAMToken_lvl0;
[L1982]               __tmp__sum_decidedOwner2 := sum_decidedOwner2;
[L1983]               __tmp__sum_blackLists3 := sum_blackLists3;
[L1984]               __tmp__alloc_items_ITAMToken_lvl1 := alloc_items_ITAMToken_lvl1;
[L1985]               __tmp__M_int_Ref := M_int_Ref;
[L1986]               __tmp__alloc_items_ITAMToken_lvl0 := alloc_items_ITAMToken_lvl0;
[L1987]               __tmp__sum_items10 := sum_items10;
[L1988]               __tmp__M_int_int := M_int_int;
[L1989]               __tmp__sum_strategicSaleReleaseCaps4 := sum_strategicSaleReleaseCaps4;
[L1990]               __tmp__sum_privateSaleReleaseCaps5 := sum_privateSaleReleaseCaps5;
[L1991]               __tmp__sum_teamReleaseCaps6 := sum_teamReleaseCaps6;
[L1992]               __tmp__sum_advisorReleaseCaps7 := sum_advisorReleaseCaps7;
[L1993]               __tmp__sum_marketingReleaseCaps8 := sum_marketingReleaseCaps8;
[L1994]               __tmp__sum_ecoReleaseCaps9 := sum_ecoReleaseCaps9;
[L1995]               __tmp__sum := sum;
[L1996]               __tmp__Length := Length;
[L1997]               __tmp__now := now;
[L1998]               __tmp___balances_ERC20 := _balances_ERC20;
[L1999]               __tmp___allowed_ERC20 := _allowed_ERC20;
[L2000]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L2001]               __tmp___cap_ERC20Capped := _cap_ERC20Capped;
[L2002]               __tmp__name_ITAMToken := name_ITAMToken;
[L2003]               __tmp__symbol_ITAMToken := symbol_ITAMToken;
[L2004]               __tmp__decimals_ITAMToken := decimals_ITAMToken;
[L2005]               __tmp__TOTAL_CAP_ITAMToken := TOTAL_CAP_ITAMToken;
[L2006]               __tmp__firstMaster_ITAMToken := firstMaster_ITAMToken;
[L2007]               __tmp__secondMaster_ITAMToken := secondMaster_ITAMToken;
[L2008]               __tmp__thirdMaster_ITAMToken := thirdMaster_ITAMToken;
[L2009]               __tmp__decidedOwner_ITAMToken := decidedOwner_ITAMToken;
[L2010]               __tmp__owner_ITAMToken := owner_ITAMToken;
[L2011]               __tmp__gameMaster_ITAMToken := gameMaster_ITAMToken;
[L2012]               __tmp__blackLists_ITAMToken := blackLists_ITAMToken;
[L2013]               __tmp__unlockCount_ITAMToken := unlockCount_ITAMToken;
[L2014]               __tmp__strategicSaleAddress_ITAMToken := strategicSaleAddress_ITAMToken;
[L2015]               __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0 := Length_strategicSaleReleaseCaps_ITAMToken_lvl0;
[L2016]               __tmp__strategicSaleReleaseCaps_ITAMToken := strategicSaleReleaseCaps_ITAMToken;
[L2017]               __tmp__privateSaleAddress_ITAMToken := privateSaleAddress_ITAMToken;
[L2018]               __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0 := Length_privateSaleReleaseCaps_ITAMToken_lvl0;
[L2019]               __tmp__privateSaleReleaseCaps_ITAMToken := privateSaleReleaseCaps_ITAMToken;
[L2020]               __tmp__publicSaleAddress_ITAMToken := publicSaleAddress_ITAMToken;
[L2021]               __tmp__publicSaleReleaseCap_ITAMToken := publicSaleReleaseCap_ITAMToken;
[L2022]               __tmp__teamAddress_ITAMToken := teamAddress_ITAMToken;
[L2023]               __tmp__Length_teamReleaseCaps_ITAMToken_lvl0 := Length_teamReleaseCaps_ITAMToken_lvl0;
[L2024]               __tmp__teamReleaseCaps_ITAMToken := teamReleaseCaps_ITAMToken;
[L2025]               __tmp__advisorAddress_ITAMToken := advisorAddress_ITAMToken;
[L2026]               __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0 := Length_advisorReleaseCaps_ITAMToken_lvl0;
[L2027]               __tmp__advisorReleaseCaps_ITAMToken := advisorReleaseCaps_ITAMToken;
[L2028]               __tmp__marketingAddress_ITAMToken := marketingAddress_ITAMToken;
[L2029]               __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0 := Length_marketingReleaseCaps_ITAMToken_lvl0;
[L2030]               __tmp__marketingReleaseCaps_ITAMToken := marketingReleaseCaps_ITAMToken;
[L2031]               __tmp__ecoAddress_ITAMToken := ecoAddress_ITAMToken;
[L2032]               __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0 := Length_ecoReleaseCaps_ITAMToken_lvl0;
[L2033]               __tmp__ecoReleaseCaps_ITAMToken := ecoReleaseCaps_ITAMToken;
[L2034]               __tmp__inAppAddress_ITAMToken := inAppAddress_ITAMToken;
[L2035]               __tmp__erc20_ITAMToken := erc20_ITAMToken;
[L2036]               __tmp__items_ITAMToken := items_ITAMToken;
[L2037]   CALL        call ITAMToken_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10832]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10130]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10105]              assume msgsender_MSG != null;
[L10106]              __tmp__Balance[this] := 0;
[L10107]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L10108]              __tmp__sum__balances0[this] := 0;
[L10109]              __tmp___allowed_ERC20[this] := zeroRefRefintArr();
[L10110]              __tmp__sum__allowed1[this] := 0;
[L10111]              __tmp___totalSupply_ERC20[this] := 0;
[L10130]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10131]  COND FALSE  !(revert)
[L10832]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10833]  COND FALSE  !(revert)
[L10836]  CALL        call ERC20Capped_ERC20Capped__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__TOTAL_CAP_ITAMToken[this]);
[L10590]  CALL        call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10130]  CALL        call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10105]              assume msgsender_MSG != null;
[L10106]              __tmp__Balance[this] := 0;
[L10107]              __tmp___balances_ERC20[this] := zeroRefintArr();
[L10108]              __tmp__sum__balances0[this] := 0;
[L10109]              __tmp___allowed_ERC20[this] := zeroRefRefintArr();
[L10110]              __tmp__sum__allowed1[this] := 0;
[L10111]              __tmp___totalSupply_ERC20[this] := 0;
[L10130]  RET         call ERC20_ERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L10131]  COND FALSE  !(revert)
[L10590]  RET         call ERC20_ERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L10591]  COND FALSE  !(revert)
[L10594]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10563]              assume msgsender_MSG != null;
[L10564]              __tmp__Balance[this] := 0;
[L10565]              __tmp___cap_ERC20Capped[this] := 0;
[L10567]  COND FALSE  !(!(cap_s528 > 0))
[L10571]              __tmp___cap_ERC20Capped[this] := cap_s528;
[L10594]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10595]  COND FALSE  !(revert)
[L10836]  RET         call ERC20Capped_ERC20Capped__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__TOTAL_CAP_ITAMToken[this]);
[L10837]  COND FALSE  !(revert)
[L10840]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10709]              assume msgsender_MSG != null;
[L10710]              __tmp__Balance[this] := 0;
[L10711]              __tmp__name_ITAMToken[this] := -1908028786;
[L10712]              __tmp__symbol_ITAMToken[this] := -1908028786;
[L10713]              __tmp__decimals_ITAMToken[this] := 18;
[L10714]              __tmp__TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10715]              __tmp__firstMaster_ITAMToken[this] := null;
[L10716]              __tmp__secondMaster_ITAMToken[this] := null;
[L10717]              __tmp__thirdMaster_ITAMToken[this] := null;
[L10718]              __tmp__decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10719]              __tmp__owner_ITAMToken[this] := null;
[L10720]              __tmp__gameMaster_ITAMToken[this] := null;
[L10721]              __tmp__blackLists_ITAMToken[this] := zeroRefboolArr();
[L10722]              __tmp__unlockCount_ITAMToken[this] := 0;
[L10723]              __tmp__strategicSaleAddress_ITAMToken[this] := null;
[L10724]              __tmp__Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10725]              __tmp__strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10726]              __tmp__sum_strategicSaleReleaseCaps4[this] := 0;
[L10727]              __tmp__privateSaleAddress_ITAMToken[this] := null;
[L10728]              __tmp__Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10729]              __tmp__privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10730]              __tmp__sum_privateSaleReleaseCaps5[this] := 0;
[L10731]              __tmp__publicSaleAddress_ITAMToken[this] := null;
[L10732]              __tmp__publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10733]              __tmp__teamAddress_ITAMToken[this] := null;
[L10734]              __tmp__Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10735]              __tmp__teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10736]              __tmp__sum_teamReleaseCaps6[this] := 0;
[L10737]              __tmp__advisorAddress_ITAMToken[this] := null;
[L10738]              __tmp__Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10739]              __tmp__advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10740]              __tmp__sum_advisorReleaseCaps7[this] := 0;
[L10741]              __tmp__marketingAddress_ITAMToken[this] := null;
[L10742]              __tmp__Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10743]              __tmp__marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10744]              __tmp__sum_marketingReleaseCaps8[this] := 0;
[L10745]              __tmp__ecoAddress_ITAMToken[this] := null;
[L10746]              __tmp__Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10747]              __tmp__ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10748]              __tmp__sum_ecoReleaseCaps9[this] := 0;
[L10749]              __tmp__inAppAddress_ITAMToken[this] := null;
[L10750]              __tmp__items_ITAMToken[this] := zerointintRefintArr();
[L10751]              __tmp__sum_items10[this] := 0;
[L10753]              __tmp__firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10754]              __tmp__secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10755]              __tmp__thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10756]              __tmp__owner_ITAMToken[this] := _owner_s868;
[L10757]              __tmp__gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10758]              __tmp__strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10759]              __tmp__privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10760]              __tmp__publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10761]              __tmp__teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10762]              __tmp__advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10763]              __tmp__marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10764]              __tmp__ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10765]              __tmp__inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10840]  RET         call ITAMToken_ITAMToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10841]  COND FALSE  !(revert)
[L2037]   RET         call ITAMToken_ITAMToken__fail(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2038]               assume revert || gas < 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:32,327 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:32,328 INFO  L82        PathProgramCache]: Analyzing trace with hash -558069129, now seen corresponding path program 1 times
[2020-11-25 18:41:32,328 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:32,348 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:32,405 INFO  L134       CoverageAnalysis]: Checked inductivity of 20 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 20 trivial. 0 not checked.
[2020-11-25 18:41:32,405 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:32,405 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 18:41:32,406 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:32,406 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 18:41:32,406 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 18:41:32,406 INFO  L87              Difference]: Start difference. First operand 14390 states and 16103 transitions. cyclomatic complexity: 1726 Second operand 4 states.
[2020-11-25 18:41:33,136 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:33,136 INFO  L93              Difference]: Finished difference Result 15985 states and 18009 transitions.
[2020-11-25 18:41:33,136 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 5 states. 
[2020-11-25 18:41:33,136 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 15985 states and 18009 transitions.
[2020-11-25 18:41:33,171 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 8
[2020-11-25 18:41:33,209 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 15985 states to 15771 states and 17678 transitions.
[2020-11-25 18:41:33,210 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 566
[2020-11-25 18:41:33,210 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 566
[2020-11-25 18:41:33,210 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 15771 states and 17678 transitions.
[2020-11-25 18:41:33,220 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:33,220 INFO  L728         BuchiCegarLoop]: Abstraction has 15771 states and 17678 transitions.
[2020-11-25 18:41:33,231 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 15771 states and 17678 transitions.
[2020-11-25 18:41:33,319 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 15771 to 14228.
[2020-11-25 18:41:33,319 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14228 states.
[2020-11-25 18:41:33,342 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14228 states to 14228 states and 15823 transitions.
[2020-11-25 18:41:33,342 INFO  L751         BuchiCegarLoop]: Abstraction has 14228 states and 15823 transitions.
[2020-11-25 18:41:33,342 INFO  L631         BuchiCegarLoop]: Abstraction has 14228 states and 15823 transitions.
[2020-11-25 18:41:33,342 INFO  L445         BuchiCegarLoop]: ======== Iteration 7============
[2020-11-25 18:41:33,342 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14228 states and 15823 transitions.
[2020-11-25 18:41:33,356 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:33,356 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:33,356 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:33,358 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:33,358 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !(((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND FALSE  !(DType[this] == ITAMToken)
[L10331]  COND TRUE   DType[this] == ERC20Capped
[L10332]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10332]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10333]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND FALSE  !(DType[this] == ITAMToken)
[L10353]  COND TRUE   DType[this] == ERC20Capped
[L10354]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10354]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10355]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:33,363 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:33,364 INFO  L82        PathProgramCache]: Analyzing trace with hash 1490355946, now seen corresponding path program 1 times
[2020-11-25 18:41:33,364 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:33,385 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:33,489 INFO  L134       CoverageAnalysis]: Checked inductivity of 151 backedges. 1 proven. 0 refuted. 0 times theorem prover too weak. 150 trivial. 0 not checked.
[2020-11-25 18:41:33,489 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:33,489 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 18:41:33,490 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:33,490 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 18:41:33,490 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 18:41:33,490 INFO  L87              Difference]: Start difference. First operand 14228 states and 15823 transitions. cyclomatic complexity: 1608 Second operand 7 states.
[2020-11-25 18:41:33,782 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:33,782 INFO  L93              Difference]: Finished difference Result 14280 states and 15888 transitions.
[2020-11-25 18:41:33,782 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 18:41:33,782 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 14280 states and 15888 transitions.
[2020-11-25 18:41:33,804 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:33,828 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 14280 states to 14252 states and 15859 transitions.
[2020-11-25 18:41:33,828 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 413
[2020-11-25 18:41:33,828 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 413
[2020-11-25 18:41:33,828 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 14252 states and 15859 transitions.
[2020-11-25 18:41:33,835 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:33,835 INFO  L728         BuchiCegarLoop]: Abstraction has 14252 states and 15859 transitions.
[2020-11-25 18:41:33,845 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 14252 states and 15859 transitions.
[2020-11-25 18:41:33,913 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 14252 to 14252.
[2020-11-25 18:41:33,913 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 14252 states.
[2020-11-25 18:41:33,927 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 14252 states to 14252 states and 15859 transitions.
[2020-11-25 18:41:33,927 INFO  L751         BuchiCegarLoop]: Abstraction has 14252 states and 15859 transitions.
[2020-11-25 18:41:33,927 INFO  L631         BuchiCegarLoop]: Abstraction has 14252 states and 15859 transitions.
[2020-11-25 18:41:33,927 INFO  L445         BuchiCegarLoop]: ======== Iteration 8============
[2020-11-25 18:41:33,927 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 14252 states and 15859 transitions.
[2020-11-25 18:41:33,941 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 18:41:33,941 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 18:41:33,941 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 18:41:33,942 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 18:41:33,942 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                  fail_transferFrom_ITAMToken0 := false;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]      CALL        call main();
[L14663]              assume null == 0;
[L14664]  CALL        call this := FreshRefGenerator__success();
[L9908]               havoc newRef;
[L9909]               assume Alloc[newRef] == false;
[L9910]               Alloc[newRef] := true;
[L9911]               assume newRef != null;
[L14664]  RET         call this := FreshRefGenerator__success();
[L14665]              assume now >= 0;
[L14666]              assume DType[this] == ITAMToken;
[L14667]              assume msgvalue_MSG == 0;
[L14668]              gas := gas - 53000;
[L14669]  CALL        call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L1968]               havoc __exception;
[L1969]               revert := false;
[L1970]   COND FALSE  !(__exception)
[L2040]   CALL        call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10848]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10848]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10849]  COND FALSE  !(revert)
[L10852]  CALL        call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10602]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10138]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10118]              assume msgsender_MSG != null;
[L10119]              Balance[this] := 0;
[L10120]              _balances_ERC20[this] := zeroRefintArr();
[L10121]              sum__balances0[this] := 0;
[L10122]              _allowed_ERC20[this] := zeroRefRefintArr();
[L10123]              sum__allowed1[this] := 0;
[L10124]              _totalSupply_ERC20[this] := 0;
[L10138]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L10139]  COND FALSE  !(revert)
[L10602]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L10603]  COND FALSE  !(revert)
[L10606]  CALL        call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10577]              assume msgsender_MSG != null;
[L10578]              Balance[this] := 0;
[L10579]              _cap_ERC20Capped[this] := 0;
[L10581]  COND FALSE  !(!(cap_s528 > 0))
[L10585]              _cap_ERC20Capped[this] := cap_s528;
[L10606]  RET         call ERC20Capped_ERC20Capped_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, cap_s528);
[L10607]  COND FALSE  !(revert)
[L10852]  RET         call ERC20Capped_ERC20Capped__success(this, msgsender_MSG, msgvalue_MSG, TOTAL_CAP_ITAMToken[this]);
[L10853]  COND FALSE  !(revert)
[L10856]  CALL        call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10771]              assume msgsender_MSG != null;
[L10772]              Balance[this] := 0;
[L10773]              name_ITAMToken[this] := -1908028786;
[L10774]              symbol_ITAMToken[this] := -1908028786;
[L10775]              decimals_ITAMToken[this] := 18;
[L10776]              TOTAL_CAP_ITAMToken[this] := 2500000000;
[L10777]              firstMaster_ITAMToken[this] := null;
[L10778]              secondMaster_ITAMToken[this] := null;
[L10779]              thirdMaster_ITAMToken[this] := null;
[L10780]              decidedOwner_ITAMToken[this] := zeroRefRefboolArr();
[L10781]              owner_ITAMToken[this] := null;
[L10782]              gameMaster_ITAMToken[this] := null;
[L10783]              blackLists_ITAMToken[this] := zeroRefboolArr();
[L10784]              unlockCount_ITAMToken[this] := 0;
[L10785]              strategicSaleAddress_ITAMToken[this] := null;
[L10786]              Length_strategicSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10787]              strategicSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10788]              sum_strategicSaleReleaseCaps4[this] := 0;
[L10789]              privateSaleAddress_ITAMToken[this] := null;
[L10790]              Length_privateSaleReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10791]              privateSaleReleaseCaps_ITAMToken[this] := zerointintArr();
[L10792]              sum_privateSaleReleaseCaps5[this] := 0;
[L10793]              publicSaleAddress_ITAMToken[this] := null;
[L10794]              publicSaleReleaseCap_ITAMToken[this] := 200000000;
[L10795]              teamAddress_ITAMToken[this] := null;
[L10796]              Length_teamReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10797]              teamReleaseCaps_ITAMToken[this] := zerointintArr();
[L10798]              sum_teamReleaseCaps6[this] := 0;
[L10799]              advisorAddress_ITAMToken[this] := null;
[L10800]              Length_advisorReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10801]              advisorReleaseCaps_ITAMToken[this] := zerointintArr();
[L10802]              sum_advisorReleaseCaps7[this] := 0;
[L10803]              marketingAddress_ITAMToken[this] := null;
[L10804]              Length_marketingReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10805]              marketingReleaseCaps_ITAMToken[this] := zerointintArr();
[L10806]              sum_marketingReleaseCaps8[this] := 0;
[L10807]              ecoAddress_ITAMToken[this] := null;
[L10808]              Length_ecoReleaseCaps_ITAMToken_lvl0[this] := 0;
[L10809]              ecoReleaseCaps_ITAMToken[this] := zerointintArr();
[L10810]              sum_ecoReleaseCaps9[this] := 0;
[L10811]              inAppAddress_ITAMToken[this] := null;
[L10812]              items_ITAMToken[this] := zerointintRefintArr();
[L10813]              sum_items10[this] := 0;
[L10815]              firstMaster_ITAMToken[this] := _firstMaster_s868;
[L10816]              secondMaster_ITAMToken[this] := _secondMaster_s868;
[L10817]              thirdMaster_ITAMToken[this] := _thirdMaster_s868;
[L10818]              owner_ITAMToken[this] := _owner_s868;
[L10819]              gameMaster_ITAMToken[this] := _gameMaster_s868;
[L10820]              strategicSaleAddress_ITAMToken[this] := _strategicSaleAddress_s868;
[L10821]              privateSaleAddress_ITAMToken[this] := _privateSaleAddress_s868;
[L10822]              publicSaleAddress_ITAMToken[this] := _publicSaleAddress_s868;
[L10823]              teamAddress_ITAMToken[this] := _teamAddress_s868;
[L10824]              advisorAddress_ITAMToken[this] := _advisorAddress_s868;
[L10825]              marketingAddress_ITAMToken[this] := _marketingAddress_s868;
[L10826]              ecoAddress_ITAMToken[this] := _ecoAddress_s868;
[L10827]              inAppAddress_ITAMToken[this] := _inAppAddress_s868;
[L10856]  RET         call ITAMToken_ITAMToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L10857]  COND FALSE  !(revert)
[L2040]   RET         call ITAMToken_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L2041]               assume !revert && gas >= 0;
[L14669]  RET         call ITAMToken_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _firstMaster_s868, _secondMaster_s868, _thirdMaster_s868, _owner_s868, _gameMaster_s868, _strategicSaleAddress_s868, _privateSaleAddress_s868, _publicSaleAddress_s868, _teamAddress_s868, _advisorAddress_s868, _marketingAddress_s868, _ecoAddress_s868, _inAppAddress_s868);
[L14670]              assume !revert && gas >= 0;
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume !(((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND FALSE  !(choice == 45)
[L14358]  COND FALSE  !(choice == 44)
[L14365]  COND TRUE   choice == 43
[L14366]              gas := gas - 21000;
[L14367]  COND TRUE   gas >= 0
[L14368]              assume _value_s962 >= 0 && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L14369]              assume msgvalue_MSG == 0;
[L14370]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2]                  revert_hold := revert;
[L2]                  revert := false;
[L2]                  assume ((((((((_from_s962 == _to_s962 && (_value_s962 > _balances_ERC20[this][_from_s962] || _value_s962 > _allowed_ERC20[this][_from_s962][msgsender_MSG])) && _value_s962 >= 0) && _value_s962 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_to_s962] >= 0) && _balances_ERC20[this][_to_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][_from_s962] >= 0) && _balances_ERC20[this][_from_s962] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_ERC20[this][_from_s962][msgsender_MSG] >= 0) && _allowed_ERC20[this][_from_s962][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                  call_transferFrom_ITAMToken0 := true;
[L2]                  call_transferFrom_ITAMToken0 := false;
[L2]                  revert := revert_hold;
[L2419]               havoc __exception;
[L2420]               revert := false;
[L2421]   COND FALSE  !(__exception)
[L2491]   CALL        call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10944]  CALL        call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L13804]  COND FALSE  !(!!blackLists_ITAMToken[this][msgsender_MSG])
[L10944]  RET         call onlyNotBlackList_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L10945]  COND FALSE  !(revert)
[L10948]  COND TRUE   DType[this] == ITAMToken
[L10949]  CALL        call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10326]  COND TRUE   DType[this] == ITAMToken
[L10327]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10401]              __var_2 := null;
[L10402]  COND FALSE  !(!(to_s382 != null))
[L10406]  CALL        call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10406]  RET         call __var_3 := sub~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][from_s382], value_s382);
[L10407]  COND FALSE  !(revert)
[L10410]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][from_s382];
[L10411]              _balances_ERC20[this][from_s382] := __var_3;
[L10412]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][from_s382];
[L10413]  CALL        call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10041]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10042]  COND FALSE  !(!(c_s106 >= a_s106))
[L10046]              __ret_0_ := c_s106;
[L10413]  RET         call __var_4 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][to_s382], value_s382);
[L10414]  COND FALSE  !(revert)
[L10417]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][to_s382];
[L10418]              _balances_ERC20[this][to_s382] := __var_4;
[L10419]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][to_s382];
[L10420]              assert { :EventEmitted "Transfer_ERC20" } true;
[L10327]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, to_s336, value_s336);
[L10328]  COND FALSE  !(revert)
[L10344]  CALL        call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10017]  COND FALSE  !(!(b_s82 <= a_s82))
[L10021]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L10022]              __ret_0_ := c_s82;
[L10344]  RET         call __var_1 := sub~uint256~uint256_SafeMath__success(this, this, 0, _allowed_ERC20[this][from_s336][msgsender_MSG], value_s336);
[L10345]  COND FALSE  !(revert)
[L10348]  COND TRUE   DType[this] == ITAMToken
[L10349]  CALL        call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10495]              __var_8 := null;
[L10496]  COND FALSE  !(!(spender_s464 != null))
[L10500]              __var_9 := null;
[L10501]  COND FALSE  !(!(owner_s464 != null))
[L10505]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] - _allowed_ERC20[this][owner_s464][spender_s464];
[L10506]              _allowed_ERC20[this][owner_s464][spender_s464] := value_s464;
[L10507]              sum__allowed1[owner_s464] := sum__allowed1[owner_s464] + _allowed_ERC20[this][owner_s464][spender_s464];
[L10508]              assert { :EventEmitted "Approval_ERC20" } true;
[L10349]  RET         call _approve~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, from_s336, msgsender_MSG, __var_1);
[L10350]  COND FALSE  !(revert)
[L10366]              __ret_0_ := true;
[L10949]  RET         call __var_18 := transferFrom~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L10950]  COND FALSE  !(revert)
[L10956]              __ret_0_ := __var_18;
[L2491]   RET         call __ret_0_ := transferFrom~address~address~uint256_ITAMToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L2492]               assume !revert && gas >= 0;
[L14370]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_ITAMToken(this, msgsender_MSG, msgvalue_MSG, _from_s962, _to_s962, _value_s962);
[L14673]  RET         call CorralChoice_ITAMToken(this);

Loop:
[L14673]  CALL        call CorralChoice_ITAMToken(this);
[L14239]              havoc msgsender_MSG;
[L14240]              havoc msgvalue_MSG;
[L14241]              havoc choice;
[L14242]              havoc _to_s941;
[L14243]              havoc _value_s941;
[L14244]              havoc __ret_0_transfer;
[L14245]              havoc spender_s980;
[L14246]              havoc value_s980;
[L14247]              havoc __ret_0_approve;
[L14248]              havoc _from_s962;
[L14249]              havoc _to_s962;
[L14250]              havoc _value_s962;
[L14251]              havoc __ret_0_transferFrom;
[L14252]              havoc __ret_0_totalSupply;
[L14253]              havoc owner_s247;
[L14254]              havoc __ret_0_balanceOf;
[L14255]              havoc owner_s263;
[L14256]              havoc spender_s263;
[L14257]              havoc __ret_0_allowance;
[L14258]              havoc cap_s528;
[L14259]              havoc __ret_0_cap;
[L14260]              havoc __ret_0_name;
[L14261]              havoc __ret_0_symbol;
[L14262]              havoc __ret_0_decimals;
[L14263]              havoc __ret_0_firstMaster;
[L14264]              havoc __ret_0_secondMaster;
[L14265]              havoc __ret_0_thirdMaster;
[L14266]              havoc arg1575_s0;
[L14267]              havoc arg1576_s0;
[L14268]              havoc __ret_0_decidedOwner;
[L14269]              havoc __ret_0_owner;
[L14270]              havoc __ret_0_gameMaster;
[L14271]              havoc arg1577_s0;
[L14272]              havoc __ret_0_blackLists;
[L14273]              havoc __ret_0_unlockCount;
[L14274]              havoc __ret_0_strategicSaleAddress;
[L14275]              havoc arg1578_s0;
[L14276]              havoc __ret_0_strategicSaleReleaseCaps;
[L14277]              havoc __ret_0_privateSaleAddress;
[L14278]              havoc arg1579_s0;
[L14279]              havoc __ret_0_privateSaleReleaseCaps;
[L14280]              havoc __ret_0_publicSaleAddress;
[L14281]              havoc __ret_0_publicSaleReleaseCap;
[L14282]              havoc __ret_0_teamAddress;
[L14283]              havoc arg1580_s0;
[L14284]              havoc __ret_0_teamReleaseCaps;
[L14285]              havoc __ret_0_advisorAddress;
[L14286]              havoc arg1581_s0;
[L14287]              havoc __ret_0_advisorReleaseCaps;
[L14288]              havoc __ret_0_marketingAddress;
[L14289]              havoc arg1582_s0;
[L14290]              havoc __ret_0_marketingReleaseCaps;
[L14291]              havoc __ret_0_ecoAddress;
[L14292]              havoc arg1583_s0;
[L14293]              havoc __ret_0_ecoReleaseCaps;
[L14294]              havoc __ret_0_inAppAddress;
[L14295]              havoc _firstMaster_s868;
[L14296]              havoc _secondMaster_s868;
[L14297]              havoc _thirdMaster_s868;
[L14298]              havoc _owner_s868;
[L14299]              havoc _gameMaster_s868;
[L14300]              havoc _strategicSaleAddress_s868;
[L14301]              havoc _privateSaleAddress_s868;
[L14302]              havoc _publicSaleAddress_s868;
[L14303]              havoc _teamAddress_s868;
[L14304]              havoc _advisorAddress_s868;
[L14305]              havoc _marketingAddress_s868;
[L14306]              havoc _ecoAddress_s868;
[L14307]              havoc _inAppAddress_s868;
[L14308]              havoc _gameMaster_s923;
[L14309]              havoc value_s996;
[L14310]              havoc __ret_0_unlock;
[L14311]              havoc _strategicSaleAddress_s1169;
[L14312]              havoc _privateSaleAddress_s1169;
[L14313]              havoc _publicSaleAddress_s1169;
[L14314]              havoc _teamAddress_s1169;
[L14315]              havoc _advisorAddress_s1169;
[L14316]              havoc _marketingAddress_s1169;
[L14317]              havoc _ecoAddress_s1169;
[L14318]              havoc _inAppAddress_s1169;
[L14319]              havoc _owner_s1242;
[L14320]              havoc _to_s1264;
[L14321]              havoc _to_s1285;
[L14322]              havoc amount_s1321;
[L14323]              havoc appId_s1413;
[L14324]              havoc itemIds_s1413;
[L14325]              havoc tokenAddresses_s1413;
[L14326]              havoc values_s1413;
[L14327]              havoc __ret_0_createOrUpdateItem;
[L14328]              havoc tokenAddress_s1494;
[L14329]              havoc appId_s1494;
[L14330]              havoc itemId_s1494;
[L14331]              havoc __ret_0_purchaseItemOnERC20;
[L14332]              havoc appId_s1531;
[L14333]              havoc itemId_s1531;
[L14334]              havoc __ret_0_purchaseItemOnITAM;
[L14335]              havoc appId_s1572;
[L14336]              havoc itemId_s1572;
[L14337]              havoc __ret_0_purchaseItemOnEther;
[L14338]              havoc tmpNow;
[L14339]              havoc gas;
[L14340]              assume gas > 4000000 && gas <= 8000000;
[L14341]              tmpNow := now;
[L14342]              havoc now;
[L14343]              assume now > tmpNow;
[L14344]              assume msgsender_MSG != null;
[L14345]              assume DType[msgsender_MSG] != SafeMath;
[L14346]              assume DType[msgsender_MSG] != IERC20;
[L14347]              assume DType[msgsender_MSG] != ERC20;
[L14348]              assume DType[msgsender_MSG] != ERC20Capped;
[L14349]              assume DType[msgsender_MSG] != ITAMToken;
[L14350]              Alloc[msgsender_MSG] := true;
[L14351]  COND TRUE   choice == 45
[L14352]              gas := gas - 21000;
[L14353]  COND FALSE  !(gas >= 0)
[L14673]  RET         call CorralChoice_ITAMToken(this);

[2020-11-25 18:41:33,947 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 18:41:33,947 INFO  L82        PathProgramCache]: Analyzing trace with hash -1452148443, now seen corresponding path program 1 times
[2020-11-25 18:41:33,947 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 18:41:33,973 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 18:41:34,131 INFO  L134       CoverageAnalysis]: Checked inductivity of 151 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 151 trivial. 0 not checked.
[2020-11-25 18:41:34,131 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 18:41:34,131 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 18:41:34,131 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 18:41:34,131 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 18:41:34,131 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=26, Invalid=106, Unknown=0, NotChecked=0, Total=132
[2020-11-25 18:41:34,132 INFO  L87              Difference]: Start difference. First operand 14252 states and 15859 transitions. cyclomatic complexity: 1620 Second operand 12 states.
[2020-11-25 18:41:36,700 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 18:41:36,701 INFO  L93              Difference]: Finished difference Result 7506 states and 8348 transitions.
[2020-11-25 18:41:36,701 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 18:41:36,701 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 7506 states and 8348 transitions.
[2020-11-25 18:41:36,713 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 18:41:36,713 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 7506 states to 0 states and 0 transitions.
[2020-11-25 18:41:36,713 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 18:41:36,713 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 18:41:36,713 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 18:41:36,713 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 18:41:36,713 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:41:36,713 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:41:36,713 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 18:41:36,713 INFO  L445         BuchiCegarLoop]: ======== Iteration 9============
[2020-11-25 18:41:36,713 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 18:41:36,713 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 18:41:36,713 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 18:41:36,716 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 06:41:36 BasicIcfg
[2020-11-25 18:41:36,716 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 18:41:36,717 INFO  L168              Benchmark]: Toolchain (without parser) took 28951.42 ms. Allocated memory was 1.0 GB in the beginning and 3.0 GB in the end (delta: 2.0 GB). Free memory was 913.7 MB in the beginning and 1.9 GB in the end (delta: -957.2 MB). Peak memory consumption was 1.0 GB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,718 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,718 INFO  L168              Benchmark]: Boogie Preprocessor took 174.28 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 892.3 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,718 INFO  L168              Benchmark]: UtopiaSpecLang took 107.43 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 876.0 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,718 INFO  L168              Benchmark]: Boogie Printer took 33.56 ms. Allocated memory is still 1.0 GB. Free memory was 876.0 MB in the beginning and 870.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,719 INFO  L168              Benchmark]: RCFGBuilder took 1187.51 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.3 MB). Free memory was 870.6 MB in the beginning and 862.8 MB in the end (delta: 7.9 MB). Peak memory consumption was 165.7 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,719 INFO  L168              Benchmark]: UtopiaLTL2Aut took 37.29 ms. Allocated memory is still 1.1 GB. Free memory was 862.8 MB in the beginning and 859.3 MB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,719 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2422.03 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 190.8 MB). Free memory was 859.3 MB in the beginning and 646.3 MB in the end (delta: 213.1 MB). Peak memory consumption was 478.4 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,720 INFO  L168              Benchmark]: BlockEncodingV2 took 394.99 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 279.4 MB). Free memory was 646.3 MB in the beginning and 1.2 GB in the end (delta: -600.0 MB). Peak memory consumption was 125.1 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,720 INFO  L168              Benchmark]: BuchiAutomizer took 24591.25 ms. Allocated memory was 1.6 GB in the beginning and 3.0 GB in the end (delta: 1.4 GB). Free memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: -624.7 MB). Peak memory consumption was 811.3 MB. Max. memory is 15.3 GB.
[2020-11-25 18:41:36,723 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    14822 locations, 24987 edges
  - StatisticsResult: Encoded RCFG
    14634 locations, 24511 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.18 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 174.28 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 892.3 MB in the end (delta: 21.5 MB). Peak memory consumption was 21.5 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 107.43 ms. Allocated memory is still 1.0 GB. Free memory was 892.3 MB in the beginning and 876.0 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 33.56 ms. Allocated memory is still 1.0 GB. Free memory was 876.0 MB in the beginning and 870.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1187.51 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.3 MB). Free memory was 870.6 MB in the beginning and 862.8 MB in the end (delta: 7.9 MB). Peak memory consumption was 165.7 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 37.29 ms. Allocated memory is still 1.1 GB. Free memory was 862.8 MB in the beginning and 859.3 MB in the end (delta: 3.5 MB). Peak memory consumption was 3.5 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2422.03 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 190.8 MB). Free memory was 859.3 MB in the beginning and 646.3 MB in the end (delta: 213.1 MB). Peak memory consumption was 478.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 394.99 ms. Allocated memory was 1.3 GB in the beginning and 1.6 GB in the end (delta: 279.4 MB). Free memory was 646.3 MB in the beginning and 1.2 GB in the end (delta: -600.0 MB). Peak memory consumption was 125.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 24591.25 ms. Allocated memory was 1.6 GB in the beginning and 3.0 GB in the end (delta: 1.4 GB). Free memory was 1.2 GB in the beginning and 1.9 GB in the end (delta: -624.7 MB). Peak memory consumption was 811.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    6542 locations, 8020 edges
  - StatisticsResult: BuchiProgram size
    14822 locations, 24987 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 8 terminating modules (8 trivial, 0 deterministic, 0 nondeterministic). 8 modules have a trivial ranking function, the largest among these consists of 21 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 24.5s and 9 iterations.  TraceHistogramMax:2. Analysis of lassos took 1.7s. Construction of modules took 15.1s. BÃ¼chi inclusion checks took 5.6s. Highest rank in rank-based complementation 0. Minimization of det autom 8. Minimization of nondet autom 0. Automata minimization 0.9s AutomataMinimizationTime, 7 MinimizatonAttempts, 3234 StatesRemovedByMinimization, 5 NontrivialMinimizations. Non-live state removal took 0.5s Buchi closure took 0.0s. Biggest automaton had 14689 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 110368 SDtfs, 98493 SDslu, 209255 SDs, 0 SdLazy, 359145 SolverSat, 13253 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 15.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU8 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transferFrom_ITAMToken0) ==> ( <>(fail_transferFrom_ITAMToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
