This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 11:40:18,153 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 11:40:18,155 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 11:40:18,165 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 11:40:18,165 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 11:40:18,165 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 11:40:18,166 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 11:40:18,168 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 11:40:18,169 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 11:40:18,170 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 11:40:18,170 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 11:40:18,171 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 11:40:18,171 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 11:40:18,172 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 11:40:18,173 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 11:40:18,173 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 11:40:18,174 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 11:40:18,175 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 11:40:18,176 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 11:40:18,177 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 11:40:18,178 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 11:40:18,179 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 11:40:18,180 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 11:40:18,181 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 11:40:18,181 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 11:40:18,181 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 11:40:18,182 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 11:40:18,182 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 11:40:18,182 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 11:40:18,182 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 11:40:18,183 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 11:40:18,183 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 11:40:18,184 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 11:40:18,184 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 11:40:18,185 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 11:40:18,185 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 11:40:18,186 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 11:40:18,186 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 11:40:18,186 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 11:40:18,187 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 11:40:18,187 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 11:40:18,187 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 11:40:18,195 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 11:40:18,195 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 11:40:18,196 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 11:40:18,196 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 11:40:18,196 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 11:40:18,196 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 11:40:18,196 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 11:40:18,197 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 11:40:18,197 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 11:40:18,197 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 11:40:18,198 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 11:40:18,198 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 11:40:18,219 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 11:40:18,238 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 11:40:18,242 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 11:40:18,243 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 11:40:18,243 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 11:40:18,244 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl
[2020-11-25 11:40:18,244 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl'
[2020-11-25 11:40:18,332 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 11:40:18,334 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 11:40:18,334 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 11:40:18,334 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 11:40:18,334 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 11:40:18,350 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,352 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,384 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,384 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,406 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,417 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,426 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,438 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 11:40:18,438 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 11:40:18,438 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 11:40:18,441 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 11:40:18,445 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/1) ...
[2020-11-25 11:40:18,465 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:40:18,470 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:40:18,478 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:40:18,485 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s210 ) && msg.sender!=recipient_s210 ) && amount_s210<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s210] + amount_s210 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s210>=0 ) && amount_s210<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s210]>=0 ) && _balances_ERC20[this][recipient_s210]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 11:40:18,488 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s210 ) ) && _balances_ERC20[this][recipient_s210]==( ( old(_balances_ERC20[this][recipient_s210]) ) + amount_s210 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && governance_ZZZ[this]==( old(governance_ZZZ[this]) ) ) && minters_ZZZ[this]==( old(minters_ZZZ[this]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) && exceptions_ERC20[this]==( old(exceptions_ERC20[this]) ) ) && uniswap_ERC20[this]==( old(uniswap_ERC20[this]) ) ) && _owner_ERC20[this]==( old(_owner_ERC20[this]) ) ) && allow_ERC20[this]==( old(allow_ERC20[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s210,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[minters_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[minters_ZZZ,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[exceptions_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[uniswap_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allow_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allow_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-25 11:40:18,496 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && governance_ZZZ[this] == old(governance_ZZZ[this]) && minters_ZZZ[this] == old(minters_ZZZ[this]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]) && exceptions_ERC20[this] == old(exceptions_ERC20[this]) && uniswap_ERC20[this] == old(uniswap_ERC20[this]) && _owner_ERC20[this] == old(_owner_ERC20[this]) && allow_ERC20[this] == old(allow_ERC20[this]))))
[2020-11-25 11:40:18,496 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 11:40:18,506 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:40:18 PropertyContainer
[2020-11-25 11:40:18,506 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 11:40:18,507 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 11:40:18,507 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 11:40:18,507 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 11:40:18,508 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/2) ...
[2020-11-25 11:40:18,508 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 11:40:18,508 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 11:40:18,525 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:40:18" (2/2) ...
[2020-11-25 11:40:18,525 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 11:40:18,525 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 11:40:18,525 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 11:40:18,525 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 11:40:18,526 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/2) ...
[2020-11-25 11:40:18,582 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 11:40:18,582 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:40:18,582 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-25 11:40:18,582 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-25 11:40:18,582 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-25 11:40:18,582 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-25 11:40:18,582 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-25 11:40:18,583 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 11:40:18,583 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 11:40:18,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 11:40:18,584 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20
[2020-11-25 11:40:18,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20
[2020-11-25 11:40:18,584 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20
[2020-11-25 11:40:18,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20
[2020-11-25 11:40:18,584 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20
[2020-11-25 11:40:18,584 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20
[2020-11-25 11:40:18,585 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 11:40:18,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-25 11:40:18,585 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 11:40:18,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-25 11:40:18,585 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-25 11:40:18,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-25 11:40:18,585 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 11:40:18,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-25 11:40:18,585 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 11:40:18,585 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 11:40:18,586 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 11:40:18,587 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-25 11:40:18,587 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:40:18,587 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 11:40:18,587 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ_NoBaseCtor__success
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ
[2020-11-25 11:40:18,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ZZZ
[2020-11-25 11:40:18,588 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ZZZ
[2020-11-25 11:40:18,588 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ZZZ
[2020-11-25 11:40:18,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ZZZ
[2020-11-25 11:40:18,589 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ZZZ
[2020-11-25 11:40:18,589 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ZZZ
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-25 11:40:18,590 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ZZZ
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 11:40:18,591 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__success
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllow_ERC20__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__success
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure setExceptions~address_ERC20__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__success
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure burnOwner_ERC20__fail
[2020-11-25 11:40:18,592 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:40:18,593 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-25 11:40:18,594 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ_NoBaseCtor__fail
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ__success
[2020-11-25 11:40:18,595 INFO  L130     BoogieDeclarations]: Found specification of procedure ZZZ_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ZZZ__success
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure mint~address~uint256_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ZZZ__success
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ZZZ__success
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure addMinter~address_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ZZZ__success
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure removeMinter~address_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ZZZ__success
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ZZZ__success
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure minters~address_ZZZ__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 11:40:18,596 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 11:40:18,597 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-25 11:40:18,597 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__fail
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllow_ERC20__success
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__fail
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure setExceptions~address_ERC20__success
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__fail
[2020-11-25 11:40:18,598 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnOwner_ERC20__success
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-25 11:40:18,599 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-25 11:40:18,600 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 11:40:18,601 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ_NoBaseCtor__fail
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ_NoBaseCtor__success
[2020-11-25 11:40:18,602 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ__fail
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure ZZZ_ZZZ__success
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ZZZ__fail
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint~address~uint256_ZZZ__success
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ZZZ__fail
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_ZZZ__success
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ZZZ__fail
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure addMinter~address_ZZZ__success
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ZZZ__fail
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure removeMinter~address_ZZZ__success
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ZZZ__fail
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_ZZZ__success
[2020-11-25 11:40:18,603 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ZZZ__fail
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure minters~address_ZZZ__success
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-25 11:40:18,604 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ZZZ
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 11:40:18,605 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 11:40:18,605 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 11:40:18,829 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:40:18,829 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:40:18,829 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:40:19,089 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 11:40:19,334 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 11:40:19,335 INFO  L286             CfgBuilder]: Removed 6 assue(true) statements.
[2020-11-25 11:40:19,337 INFO  L202        PluginConnector]: Adding new model ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:19 BoogieIcfgContainer
[2020-11-25 11:40:19,337 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:40:18" (2/2) ...
[2020-11-25 11:40:19,337 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 11:40:19,337 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@41e1c3a5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:19, skipping insertion in model container
[2020-11-25 11:40:19,337 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 11:40:19,338 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 11:40:19,338 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 11:40:19,339 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 11:40:19,340 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/3) ...
[2020-11-25 11:40:19,340 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@755f9db1 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:19, skipping insertion in model container
[2020-11-25 11:40:19,340 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:40:18" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 11:40:19,376 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:19 NWAContainer
[2020-11-25 11:40:19,377 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 11:40:19,377 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 11:40:19,377 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 11:40:19,378 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 11:40:19,379 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:19" (3/4) ...
[2020-11-25 11:40:19,379 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@41e2f8fe and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:19, skipping insertion in model container
[2020-11-25 11:40:19,380 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:19" (4/4) ...
[2020-11-25 11:40:19,382 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 11:40:19,387 INFO  L110   BuchiProductObserver]: Initial RCFG 2173 locations, 2940 edges
[2020-11-25 11:40:19,387 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 11:40:19,398 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 11:40:21,020 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 11:40:21,031 INFO  L110   BuchiProductObserver]: BuchiProgram size 5332 locations, 9520 edges
[2020-11-25 11:40:21,031 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:21 BoogieIcfgContainer
[2020-11-25 11:40:21,031 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 11:40:21,032 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 11:40:21,032 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 11:40:21,034 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 11:40:21,034 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:21" (1/1) ...
[2020-11-25 11:40:21,163 INFO  L313           BlockEncoder]: Initial Icfg 5332 locations, 9520 edges
[2020-11-25 11:40:21,163 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 11:40:21,163 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 11:40:21,164 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 11:40:21,164 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 11:40:21,179 INFO  L70    emoveInfeasibleEdges]: Removed 159 edges and 15 locations because of local infeasibility
[2020-11-25 11:40:21,192 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-25 11:40:21,205 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 11:40:21,209 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 11:40:21,213 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 11:40:21,213 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 11:40:21,217 INFO  L313           BlockEncoder]: Encoded RCFG 5226 locations, 9225 edges
[2020-11-25 11:40:21,217 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:40:21 BasicIcfg
[2020-11-25 11:40:21,217 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 11:40:21,218 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 11:40:21,218 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 11:40:21,219 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 11:40:21,220 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:21,220 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 11:40:18" (1/6) ...
[2020-11-25 11:40:21,221 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@30218ced and model type ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:40:21, skipping insertion in model container
[2020-11-25 11:40:21,221 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:21,221 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 11:40:18" (2/6) ...
[2020-11-25 11:40:21,222 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@30218ced and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:40:21, skipping insertion in model container
[2020-11-25 11:40:21,222 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:21,222 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 11:40:19" (3/6) ...
[2020-11-25 11:40:21,222 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@30218ced and model type ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:40:21, skipping insertion in model container
[2020-11-25 11:40:21,222 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:21,222 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 11:40:19" (4/6) ...
[2020-11-25 11:40:21,222 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@30218ced and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 11:40:21, skipping insertion in model container
[2020-11-25 11:40:21,222 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:21,222 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 11:40:21" (5/6) ...
[2020-11-25 11:40:21,223 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@30218ced and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 11:40:21, skipping insertion in model container
[2020-11-25 11:40:21,223 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 11:40:21,223 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 11:40:21" (6/6) ...
[2020-11-25 11:40:21,226 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ZZZ_0xc75F15AdA581219c95485c578E124df3985e4CE0_transfer-normal.bpl_BEv2
[2020-11-25 11:40:21,263 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 11:40:21,263 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 11:40:21,264 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 11:40:21,264 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 11:40:21,264 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 11:40:21,264 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 11:40:21,264 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 11:40:21,264 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 11:40:21,264 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 11:40:21,330 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5226 states.
[2020-11-25 11:40:21,381 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:21,381 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:21,381 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:21,388 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:21,389 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:21,389 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 11:40:21,389 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5226 states.
[2020-11-25 11:40:21,413 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:21,413 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:21,413 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:21,414 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:21,415 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND TRUE   revert
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND TRUE   choice == 20
[L5648]              gas := gas - 21000;
[L5649]  COND FALSE  !(gas >= 0)
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:21,431 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:21,431 INFO  L82        PathProgramCache]: Analyzing trace with hash 769323294, now seen corresponding path program 1 times
[2020-11-25 11:40:21,437 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:21,462 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:21,500 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:40:21,502 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:21,502 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 11:40:21,790 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:21,799 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 11:40:21,799 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 11:40:21,801 INFO  L87              Difference]: Start difference. First operand 5226 states. Second operand 3 states.
[2020-11-25 11:40:22,083 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:22,083 INFO  L93              Difference]: Finished difference Result 3587 states and 4180 transitions.
[2020-11-25 11:40:22,083 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 11:40:22,084 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3587 states and 4180 transitions.
[2020-11-25 11:40:22,102 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:22,129 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3587 states to 3587 states and 4180 transitions.
[2020-11-25 11:40:22,130 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 11:40:22,132 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 929
[2020-11-25 11:40:22,133 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3587 states and 4180 transitions.
[2020-11-25 11:40:22,141 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:22,142 INFO  L728         BuchiCegarLoop]: Abstraction has 3587 states and 4180 transitions.
[2020-11-25 11:40:22,160 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3587 states and 4180 transitions.
[2020-11-25 11:40:22,216 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3587 to 3587.
[2020-11-25 11:40:22,217 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3587 states.
[2020-11-25 11:40:22,224 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3587 states to 3587 states and 4180 transitions.
[2020-11-25 11:40:22,225 INFO  L751         BuchiCegarLoop]: Abstraction has 3587 states and 4180 transitions.
[2020-11-25 11:40:22,225 INFO  L631         BuchiCegarLoop]: Abstraction has 3587 states and 4180 transitions.
[2020-11-25 11:40:22,225 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 11:40:22,225 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3587 states and 4180 transitions.
[2020-11-25 11:40:22,233 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:22,233 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:22,234 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:22,235 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:22,235 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND TRUE   revert
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND TRUE   revert
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND TRUE   choice == 18
[L5660]              gas := gas - 21000;
[L5661]  COND TRUE   gas >= 0
[L5662]              assume amount_s210 >= 0 && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5663]              assume msgvalue_MSG == 0;
[L5664]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L700]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2939]  COND TRUE   DType[this] == ZZZ
[L2940]  CALL        call __var_4 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2699]              __ret_0_ := msgsender_MSG;
[L2940]  RET         call __var_4 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2941]  COND TRUE   revert
[L700]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L701]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s210) && _balances_ERC20[this][recipient_s210] == old(_balances_ERC20[this][recipient_s210]) + amount_s210) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && governance_ZZZ[this] == old(governance_ZZZ[this])) && minters_ZZZ[this] == old(minters_ZZZ[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this])) && allow_ERC20[this] == old(allow_ERC20[this]));
[L3]                 revert := revert_hold;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND TRUE   choice == 18
[L5660]              gas := gas - 21000;
[L5661]  COND TRUE   gas >= 0
[L5662]              assume amount_s210 >= 0 && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5663]              assume msgvalue_MSG == 0;
[L5664]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND FALSE  !(__exception)
[L700]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2939]  COND TRUE   DType[this] == ZZZ
[L2940]  CALL        call __var_4 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2699]              __ret_0_ := msgsender_MSG;
[L2940]  RET         call __var_4 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2941]  COND TRUE   revert
[L700]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L701]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s210) && _balances_ERC20[this][recipient_s210] == old(_balances_ERC20[this][recipient_s210]) + amount_s210) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && governance_ZZZ[this] == old(governance_ZZZ[this])) && minters_ZZZ[this] == old(minters_ZZZ[this])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this])) && exceptions_ERC20[this] == old(exceptions_ERC20[this])) && uniswap_ERC20[this] == old(uniswap_ERC20[this])) && _owner_ERC20[this] == old(_owner_ERC20[this])) && allow_ERC20[this] == old(allow_ERC20[this]));
[L3]                 revert := revert_hold;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:22,239 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:22,239 INFO  L82        PathProgramCache]: Analyzing trace with hash 1727088, now seen corresponding path program 1 times
[2020-11-25 11:40:22,240 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:22,249 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:22,269 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 11:40:22,270 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:22,270 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 11:40:22,271 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:22,271 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 11:40:22,271 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 11:40:22,271 INFO  L87              Difference]: Start difference. First operand 3587 states and 4180 transitions. cyclomatic complexity: 595 Second operand 4 states.
[2020-11-25 11:40:22,926 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:22,926 INFO  L93              Difference]: Finished difference Result 4955 states and 5718 transitions.
[2020-11-25 11:40:22,926 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 11:40:22,927 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4955 states and 5718 transitions.
[2020-11-25 11:40:22,943 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 11:40:22,960 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4955 states to 4731 states and 5454 transitions.
[2020-11-25 11:40:22,960 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1232
[2020-11-25 11:40:22,961 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1257
[2020-11-25 11:40:22,961 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4731 states and 5454 transitions.
[2020-11-25 11:40:22,969 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:22,969 INFO  L728         BuchiCegarLoop]: Abstraction has 4731 states and 5454 transitions.
[2020-11-25 11:40:22,973 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4731 states and 5454 transitions.
[2020-11-25 11:40:23,009 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4731 to 3667.
[2020-11-25 11:40:23,009 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3667 states.
[2020-11-25 11:40:23,013 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3667 states to 3667 states and 4074 transitions.
[2020-11-25 11:40:23,013 INFO  L751         BuchiCegarLoop]: Abstraction has 3667 states and 4074 transitions.
[2020-11-25 11:40:23,013 INFO  L631         BuchiCegarLoop]: Abstraction has 3667 states and 4074 transitions.
[2020-11-25 11:40:23,013 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 11:40:23,013 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3667 states and 4074 transitions.
[2020-11-25 11:40:23,019 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:23,019 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:23,019 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:23,022 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:23,022 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND TRUE   choice == 18
[L5660]              gas := gas - 21000;
[L5661]  COND TRUE   gas >= 0
[L5662]              assume amount_s210 >= 0 && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5663]              assume msgvalue_MSG == 0;
[L5664]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND TRUE   __exception
[L671]               __tmp__Balance := Balance;
[L672]               __tmp__DType := DType;
[L673]               __tmp__Alloc := Alloc;
[L674]               __tmp__balance_ADDR := balance_ADDR;
[L675]               __tmp__M_Ref_int := M_Ref_int;
[L676]               __tmp__sum__balances0 := sum__balances0;
[L677]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L678]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L679]               __tmp__sum__allowances1 := sum__allowances1;
[L680]               __tmp__M_Ref_bool := M_Ref_bool;
[L681]               __tmp__sum_exceptions2 := sum_exceptions2;
[L682]               __tmp__sum_minters3 := sum_minters3;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp___balances_ERC20 := _balances_ERC20;
[L686]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L687]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L688]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L689]               __tmp___owner_ERC20 := _owner_ERC20;
[L690]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L691]               __tmp__allow_ERC20 := allow_ERC20;
[L692]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L693]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L694]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L695]               __tmp__governance_ZZZ := governance_ZZZ;
[L696]               __tmp__minters_ZZZ := minters_ZZZ;
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2906]  COND TRUE   __tmp__DType[this] == ZZZ
[L2907]  CALL        call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2907]  RET         call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L2919]  COND TRUE   __tmp__DType[this] == ZZZ
[L2920]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L3393]              __var_15 := null;
[L3394]  COND TRUE   !(sender_s439 != null)
[L3395]              revert := true;
[L2920]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L2921]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L698]               assume revert || gas < 0;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND TRUE   choice == 18
[L5660]              gas := gas - 21000;
[L5661]  COND TRUE   gas >= 0
[L5662]              assume amount_s210 >= 0 && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5663]              assume msgvalue_MSG == 0;
[L5664]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND TRUE   __exception
[L671]               __tmp__Balance := Balance;
[L672]               __tmp__DType := DType;
[L673]               __tmp__Alloc := Alloc;
[L674]               __tmp__balance_ADDR := balance_ADDR;
[L675]               __tmp__M_Ref_int := M_Ref_int;
[L676]               __tmp__sum__balances0 := sum__balances0;
[L677]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L678]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L679]               __tmp__sum__allowances1 := sum__allowances1;
[L680]               __tmp__M_Ref_bool := M_Ref_bool;
[L681]               __tmp__sum_exceptions2 := sum_exceptions2;
[L682]               __tmp__sum_minters3 := sum_minters3;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp___balances_ERC20 := _balances_ERC20;
[L686]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L687]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L688]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L689]               __tmp___owner_ERC20 := _owner_ERC20;
[L690]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L691]               __tmp__allow_ERC20 := allow_ERC20;
[L692]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L693]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L694]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L695]               __tmp__governance_ZZZ := governance_ZZZ;
[L696]               __tmp__minters_ZZZ := minters_ZZZ;
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2906]  COND TRUE   __tmp__DType[this] == ZZZ
[L2907]  CALL        call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2907]  RET         call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L2919]  COND TRUE   __tmp__DType[this] == ZZZ
[L2920]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L3393]              __var_15 := null;
[L3394]  COND TRUE   !(sender_s439 != null)
[L3395]              revert := true;
[L2920]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L2921]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L698]               assume revert || gas < 0;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:23,026 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:23,026 INFO  L82        PathProgramCache]: Analyzing trace with hash 1368195833, now seen corresponding path program 1 times
[2020-11-25 11:40:23,027 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:23,041 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 11:40:23,125 INFO  L134       CoverageAnalysis]: Checked inductivity of 40 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 40 trivial. 0 not checked.
[2020-11-25 11:40:23,125 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 11:40:23,125 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-25 11:40:23,126 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 11:40:23,126 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-25 11:40:23,126 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-25 11:40:23,127 INFO  L87              Difference]: Start difference. First operand 3667 states and 4074 transitions. cyclomatic complexity: 409 Second operand 8 states.
[2020-11-25 11:40:23,265 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 11:40:23,265 INFO  L93              Difference]: Finished difference Result 3691 states and 4102 transitions.
[2020-11-25 11:40:23,265 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 11:40:23,265 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3691 states and 4102 transitions.
[2020-11-25 11:40:23,275 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:23,288 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3691 states to 3671 states and 4080 transitions.
[2020-11-25 11:40:23,288 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 981
[2020-11-25 11:40:23,289 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 981
[2020-11-25 11:40:23,289 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3671 states and 4080 transitions.
[2020-11-25 11:40:23,294 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 11:40:23,294 INFO  L728         BuchiCegarLoop]: Abstraction has 3671 states and 4080 transitions.
[2020-11-25 11:40:23,298 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3671 states and 4080 transitions.
[2020-11-25 11:40:23,330 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3671 to 3671.
[2020-11-25 11:40:23,331 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3671 states.
[2020-11-25 11:40:23,335 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3671 states to 3671 states and 4080 transitions.
[2020-11-25 11:40:23,336 INFO  L751         BuchiCegarLoop]: Abstraction has 3671 states and 4080 transitions.
[2020-11-25 11:40:23,336 INFO  L631         BuchiCegarLoop]: Abstraction has 3671 states and 4080 transitions.
[2020-11-25 11:40:23,336 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 11:40:23,336 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3671 states and 4080 transitions.
[2020-11-25 11:40:23,342 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 11:40:23,342 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 11:40:23,342 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 11:40:23,344 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 11:40:23,344 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L5781]              assume null == 0;
[L5782]  CALL        call this := FreshRefGenerator__success();
[L2621]              havoc newRef;
[L2622]              assume Alloc[newRef] == false;
[L2623]              Alloc[newRef] := true;
[L2624]              assume newRef != null;
[L5782]  RET         call this := FreshRefGenerator__success();
[L5783]              assume now >= 0;
[L5784]              assume DType[this] == ZZZ;
[L5785]              assume msgvalue_MSG == 0;
[L5786]              gas := gas - 53000;
[L5787]  CALL        call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
[L5788]              assume !revert && gas >= 0;
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND TRUE   choice == 18
[L5660]              gas := gas - 21000;
[L5661]  COND TRUE   gas >= 0
[L5662]              assume amount_s210 >= 0 && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5663]              assume msgvalue_MSG == 0;
[L5664]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND TRUE   __exception
[L671]               __tmp__Balance := Balance;
[L672]               __tmp__DType := DType;
[L673]               __tmp__Alloc := Alloc;
[L674]               __tmp__balance_ADDR := balance_ADDR;
[L675]               __tmp__M_Ref_int := M_Ref_int;
[L676]               __tmp__sum__balances0 := sum__balances0;
[L677]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L678]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L679]               __tmp__sum__allowances1 := sum__allowances1;
[L680]               __tmp__M_Ref_bool := M_Ref_bool;
[L681]               __tmp__sum_exceptions2 := sum_exceptions2;
[L682]               __tmp__sum_minters3 := sum_minters3;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp___balances_ERC20 := _balances_ERC20;
[L686]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L687]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L688]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L689]               __tmp___owner_ERC20 := _owner_ERC20;
[L690]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L691]               __tmp__allow_ERC20 := allow_ERC20;
[L692]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L693]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L694]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L695]               __tmp__governance_ZZZ := governance_ZZZ;
[L696]               __tmp__minters_ZZZ := minters_ZZZ;
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2906]  COND TRUE   __tmp__DType[this] == ZZZ
[L2907]  CALL        call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2907]  RET         call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L2919]  COND TRUE   __tmp__DType[this] == ZZZ
[L2920]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L3393]              __var_15 := null;
[L3394]  COND FALSE  !(!(sender_s439 != null))
[L3398]              __var_16 := null;
[L3399]  COND TRUE   !(recipient_s439 != null)
[L3400]              revert := true;
[L2920]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L2921]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L698]               assume revert || gas < 0;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L5791]  RET         call CorralChoice_ZZZ(this);

Loop:
[L5791]  CALL        call CorralChoice_ZZZ(this);
[L5592]              havoc msgsender_MSG;
[L5593]              havoc msgvalue_MSG;
[L5594]              havoc choice;
[L5595]              havoc __ret_0_totalSupply;
[L5596]              havoc account_s191;
[L5597]              havoc __ret_0_balanceOf;
[L5598]              havoc recipient_s210;
[L5599]              havoc amount_s210;
[L5600]              havoc __ret_0_transfer;
[L5601]              havoc owner_s226;
[L5602]              havoc spender_s226;
[L5603]              havoc __ret_0_allowance;
[L5604]              havoc spender_s245;
[L5605]              havoc amount_s245;
[L5606]              havoc __ret_0_approve;
[L5607]              havoc sender_s281;
[L5608]              havoc recipient_s281;
[L5609]              havoc amount_s281;
[L5610]              havoc __ret_0_transferFrom;
[L5611]              havoc owner_s125;
[L5612]              havoc someAddress_s153;
[L5613]              havoc spender_s308;
[L5614]              havoc addedValue_s308;
[L5615]              havoc __ret_0_increaseAllowance;
[L5616]              havoc spender_s336;
[L5617]              havoc subtractedValue_s336;
[L5618]              havoc __ret_0_decreaseAllowance;
[L5619]              havoc name_s600;
[L5620]              havoc symbol_s600;
[L5621]              havoc decimals_s600;
[L5622]              havoc __ret_0_name;
[L5623]              havoc __ret_0_symbol;
[L5624]              havoc __ret_0_decimals;
[L5625]              havoc __ret_0_governance;
[L5626]              havoc arg852_s0;
[L5627]              havoc __ret_0_minters;
[L5628]              havoc account_s791;
[L5629]              havoc amount_s791;
[L5630]              havoc _governance_s809;
[L5631]              havoc _minter_s829;
[L5632]              havoc _minter_s849;
[L5633]              havoc tmpNow;
[L5634]              havoc gas;
[L5635]              assume gas > 4000000 && gas <= 8000000;
[L5636]              tmpNow := now;
[L5637]              havoc now;
[L5638]              assume now > tmpNow;
[L5639]              assume msgsender_MSG != null;
[L5640]              assume DType[msgsender_MSG] != IERC20;
[L5641]              assume DType[msgsender_MSG] != Context;
[L5642]              assume DType[msgsender_MSG] != ERC20;
[L5643]              assume DType[msgsender_MSG] != ERC20Detailed;
[L5644]              assume DType[msgsender_MSG] != SafeMath;
[L5645]              assume DType[msgsender_MSG] != ZZZ;
[L5646]              Alloc[msgsender_MSG] := true;
[L5647]  COND FALSE  !(choice == 20)
[L5653]  COND FALSE  !(choice == 19)
[L5659]  COND TRUE   choice == 18
[L5660]              gas := gas - 21000;
[L5661]  COND TRUE   gas >= 0
[L5662]              assume amount_s210 >= 0 && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5663]              assume msgvalue_MSG == 0;
[L5664]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND TRUE   __exception
[L671]               __tmp__Balance := Balance;
[L672]               __tmp__DType := DType;
[L673]               __tmp__Alloc := Alloc;
[L674]               __tmp__balance_ADDR := balance_ADDR;
[L675]               __tmp__M_Ref_int := M_Ref_int;
[L676]               __tmp__sum__balances0 := sum__balances0;
[L677]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L678]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L679]               __tmp__sum__allowances1 := sum__allowances1;
[L680]               __tmp__M_Ref_bool := M_Ref_bool;
[L681]               __tmp__sum_exceptions2 := sum_exceptions2;
[L682]               __tmp__sum_minters3 := sum_minters3;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp___balances_ERC20 := _balances_ERC20;
[L686]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L687]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L688]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L689]               __tmp___owner_ERC20 := _owner_ERC20;
[L690]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L691]               __tmp__allow_ERC20 := allow_ERC20;
[L692]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L693]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L694]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L695]               __tmp__governance_ZZZ := governance_ZZZ;
[L696]               __tmp__minters_ZZZ := minters_ZZZ;
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2906]  COND TRUE   __tmp__DType[this] == ZZZ
[L2907]  CALL        call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2907]  RET         call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L2919]  COND TRUE   __tmp__DType[this] == ZZZ
[L2920]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L3393]              __var_15 := null;
[L3394]  COND FALSE  !(!(sender_s439 != null))
[L3398]              __var_16 := null;
[L3399]  COND TRUE   !(recipient_s439 != null)
[L3400]              revert := true;
[L2920]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L2921]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L698]               assume revert || gas < 0;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L5791]  RET         call CorralChoice_ZZZ(this);

[2020-11-25 11:40:23,349 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:23,349 INFO  L82        PathProgramCache]: Analyzing trace with hash 1711627409, now seen corresponding path program 1 times
[2020-11-25 11:40:23,350 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:23,363 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:23,378 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:23,444 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:23,444 INFO  L82        PathProgramCache]: Analyzing trace with hash -666331496, now seen corresponding path program 1 times
[2020-11-25 11:40:23,445 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:23,450 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:23,455 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:23,469 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 11:40:23,470 INFO  L82        PathProgramCache]: Analyzing trace with hash -407923704, now seen corresponding path program 1 times
[2020-11-25 11:40:23,470 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 11:40:23,486 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:23,506 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
[2020-11-25 11:40:23,693 WARN  L188               SmtUtils]: Spent 102.00 ms on a formula simplification. DAG size of input: 168 DAG size of output: 159
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
[2020-11-25 11:40:23,969 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification that was a NOOP. DAG size: 293
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-25 11:40:24,187 WARN  L188               SmtUtils]: Spent 206.00 ms on a formula simplification that was a NOOP. DAG size: 233
[2020-11-25 11:40:24,678 WARN  L188               SmtUtils]: Spent 487.00 ms on a formula simplification. DAG size of input: 285 DAG size of output: 273
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 12541 to 25073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4027 to 8053
[2020-11-25 11:40:24,956 WARN  L188               SmtUtils]: Spent 156.00 ms on a formula simplification that was a NOOP. DAG size: 363
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 9181 to 18353
[2020-11-25 11:40:25,126 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification that was a NOOP. DAG size: 292
[2020-11-25 11:40:25,281 WARN  L188               SmtUtils]: Spent 152.00 ms on a formula simplification that was a NOOP. DAG size: 292
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7027 to 14051
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-25 11:40:25,352 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #7: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3967 to 7933
[2020-11-25 11:40:26,109 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification that was a NOOP. DAG size: 233
[2020-11-25 11:40:26,514 WARN  L188               SmtUtils]: Spent 403.00 ms on a formula simplification. DAG size of input: 284 DAG size of output: 273
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
[2020-11-25 11:40:26,628 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification. DAG size of input: 163 DAG size of output: 159
[2020-11-25 11:40:26,771 WARN  L188               SmtUtils]: Spent 141.00 ms on a formula simplification that was a NOOP. DAG size: 363
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
[2020-11-25 11:40:26,935 WARN  L188               SmtUtils]: Spent 159.00 ms on a formula simplification that was a NOOP. DAG size: 292
[2020-11-25 11:40:27,631 WARN  L188               SmtUtils]: Spent 693.00 ms on a formula simplification. DAG size of input: 517 DAG size of output: 506
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #1: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-25 11:40:28,032 WARN  L188               SmtUtils]: Spent 162.00 ms on a formula simplification. DAG size of input: 330 DAG size of output: 329
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
[2020-11-25 11:40:28,139 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:28,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 11:40:28,171 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 11:40:28 BasicIcfg
[2020-11-25 11:40:28,171 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 11:40:28,172 INFO  L168              Benchmark]: Toolchain (without parser) took 9838.50 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 929.6 MB). Free memory was 935.2 MB in the beginning and 1.2 GB in the end (delta: -267.2 MB). Peak memory consumption was 970.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,174 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,174 INFO  L168              Benchmark]: Boogie Preprocessor took 103.98 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.0 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,174 INFO  L168              Benchmark]: UtopiaSpecLang took 68.17 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,175 INFO  L168              Benchmark]: Boogie Printer took 18.43 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 908.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,176 INFO  L168              Benchmark]: RCFGBuilder took 812.27 ms. Allocated memory is still 1.0 GB. Free memory was 908.2 MB in the beginning and 757.9 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,176 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.98 ms. Allocated memory is still 1.0 GB. Free memory was 757.9 MB in the beginning and 754.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,177 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1654.63 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.3 MB). Free memory was 754.3 MB in the beginning and 761.1 MB in the end (delta: -6.8 MB). Peak memory consumption was 182.5 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,178 INFO  L168              Benchmark]: BlockEncodingV2 took 185.58 ms. Allocated memory is still 1.2 GB. Free memory was 761.1 MB in the beginning and 689.3 MB in the end (delta: 71.9 MB). Peak memory consumption was 71.9 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,178 INFO  L168              Benchmark]: BuchiAutomizer took 6953.39 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 740.3 MB). Free memory was 689.3 MB in the beginning and 1.2 GB in the end (delta: -513.1 MB). Peak memory consumption was 535.3 MB. Max. memory is 15.3 GB.
[2020-11-25 11:40:28,183 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5332 locations, 9520 edges
  - StatisticsResult: Encoded RCFG
    5226 locations, 9225 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 103.98 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 919.0 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 68.17 ms. Allocated memory is still 1.0 GB. Free memory was 919.0 MB in the beginning and 913.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 18.43 ms. Allocated memory is still 1.0 GB. Free memory was 913.6 MB in the beginning and 908.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 812.27 ms. Allocated memory is still 1.0 GB. Free memory was 908.2 MB in the beginning and 757.9 MB in the end (delta: 150.3 MB). Peak memory consumption was 150.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.98 ms. Allocated memory is still 1.0 GB. Free memory was 757.9 MB in the beginning and 754.3 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1654.63 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 189.3 MB). Free memory was 754.3 MB in the beginning and 761.1 MB in the end (delta: -6.8 MB). Peak memory consumption was 182.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 185.58 ms. Allocated memory is still 1.2 GB. Free memory was 761.1 MB in the beginning and 689.3 MB in the end (delta: 71.9 MB). Peak memory consumption was 71.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 6953.39 ms. Allocated memory was 1.2 GB in the beginning and 2.0 GB in the end (delta: 740.3 MB). Free memory was 689.3 MB in the beginning and 1.2 GB in the end (delta: -513.1 MB). Peak memory consumption was 535.3 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2173 locations, 2940 edges
  - StatisticsResult: BuchiProgram size
    5332 locations, 9520 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 3 terminating modules (3 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.3 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 3671 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 6.8s and 4 iterations.  TraceHistogramMax:3. Analysis of lassos took 5.3s. Construction of modules took 0.7s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 3. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 1064 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3671 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 12878 SDtfs, 9507 SDslu, 26966 SDs, 0 SdLazy, 2417 SolverSat, 2185 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.7s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU3 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(3979019) = (new ZZZ)({from : 3979012});
[L1488]              havoc __exception;
[L1489]              revert := false;
[L1490]  COND FALSE  !(__exception)
[L1520]  CALL        call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L3918]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L3918]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3919]  COND FALSE  !(revert)
[L3922]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3922]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3923]  COND FALSE  !(revert)
[L3927]              havoc __var_30;
[L3928]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L2759]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2685]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2670]              assume msgsender_MSG != null;
[L2671]              Balance[this] := 0;
[L2685]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2686]  COND FALSE  !(revert)
[L2759]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2760]  COND FALSE  !(revert)
[L2763]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L2763]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2764]  COND FALSE  !(revert)
[L2767]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2725]              assume msgsender_MSG != null;
[L2726]              Balance[this] := 0;
[L2727]              _balances_ERC20[this] := zeroRefintArr();
[L2728]              sum__balances0[this] := 0;
[L2729]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2730]              sum__allowances1[this] := 0;
[L2731]              exceptions_ERC20[this] := zeroRefboolArr();
[L2732]              uniswap_ERC20[this] := null;
[L2733]              _owner_ERC20[this] := null;
[L2734]              _totalSupply_ERC20[this] := 0;
[L2735]              allow_ERC20[this] := false;
[L2737]              _owner_ERC20[this] := owner_s125;
[L2738]              allow_ERC20[this] := false;
[L2767]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, owner_s125);
[L2768]  COND FALSE  !(revert)
[L3928]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_30);
[L3929]  COND FALSE  !(revert)
[L3932]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3674]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2653]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2638]              assume msgsender_MSG != null;
[L2639]              Balance[this] := 0;
[L2653]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2654]  COND FALSE  !(revert)
[L3674]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3675]  COND FALSE  !(revert)
[L3678]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3649]              assume msgsender_MSG != null;
[L3650]              Balance[this] := 0;
[L3651]              _name_ERC20Detailed[this] := -1905873549;
[L3652]              _symbol_ERC20Detailed[this] := -1905873549;
[L3653]              _decimals_ERC20Detailed[this] := 0;
[L3655]              _name_ERC20Detailed[this] := name_s600;
[L3656]              _symbol_ERC20Detailed[this] := symbol_s600;
[L3657]              _decimals_ERC20Detailed[this] := decimals_s600;
[L3678]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s600, symbol_s600, decimals_s600);
[L3679]  COND FALSE  !(revert)
[L3932]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, -1005117433, -558820371, 18);
[L3933]  COND FALSE  !(revert)
[L3936]  CALL        call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3876]              assume msgsender_MSG != null;
[L3877]              Balance[this] := 0;
[L3878]              governance_ZZZ[this] := null;
[L3879]              minters_ZZZ[this] := zeroRefboolArr();
[L3882]              havoc __var_29;
[L3883]              governance_ZZZ[this] := __var_29;
[L3936]  RET         call ZZZ_ZZZ_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3937]  COND FALSE  !(revert)
[L1520]  RET         call ZZZ_ZZZ__success(this, msgsender_MSG, msgvalue_MSG);
[L1521]              assume !revert && gas >= 0;
[L5787]  RET         call ZZZ_ZZZ(this, msgsender_MSG, msgvalue_MSG);
ERC20(3979019).transfer~address~uint256.gas(3979002)({from : 3979007, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND TRUE   __exception
[L671]               __tmp__Balance := Balance;
[L672]               __tmp__DType := DType;
[L673]               __tmp__Alloc := Alloc;
[L674]               __tmp__balance_ADDR := balance_ADDR;
[L675]               __tmp__M_Ref_int := M_Ref_int;
[L676]               __tmp__sum__balances0 := sum__balances0;
[L677]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L678]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L679]               __tmp__sum__allowances1 := sum__allowances1;
[L680]               __tmp__M_Ref_bool := M_Ref_bool;
[L681]               __tmp__sum_exceptions2 := sum_exceptions2;
[L682]               __tmp__sum_minters3 := sum_minters3;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp___balances_ERC20 := _balances_ERC20;
[L686]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L687]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L688]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L689]               __tmp___owner_ERC20 := _owner_ERC20;
[L690]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L691]               __tmp__allow_ERC20 := allow_ERC20;
[L692]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L693]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L694]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L695]               __tmp__governance_ZZZ := governance_ZZZ;
[L696]               __tmp__minters_ZZZ := minters_ZZZ;
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2906]  COND TRUE   __tmp__DType[this] == ZZZ
[L2907]  CALL        call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2907]  RET         call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L2919]  COND TRUE   __tmp__DType[this] == ZZZ
[L2920]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L3393]              __var_15 := null;
[L3394]  COND FALSE  !(!(sender_s439 != null))
[L3398]              __var_16 := null;
[L3399]  COND TRUE   !(recipient_s439 != null)
[L3400]              revert := true;
[L2920]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L2921]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L698]               assume revert || gas < 0;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);

Loop:
ERC20(3979019).transfer~address~uint256.gas(3979001)({from : 3979005, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s210) && msgsender_MSG != recipient_s210) && amount_s210 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s210] + amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s210 >= 0) && amount_s210 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s210] >= 0) && _balances_ERC20[this][recipient_s210] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L668]               havoc __exception;
[L669]               revert := false;
[L670]   COND TRUE   __exception
[L671]               __tmp__Balance := Balance;
[L672]               __tmp__DType := DType;
[L673]               __tmp__Alloc := Alloc;
[L674]               __tmp__balance_ADDR := balance_ADDR;
[L675]               __tmp__M_Ref_int := M_Ref_int;
[L676]               __tmp__sum__balances0 := sum__balances0;
[L677]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L678]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L679]               __tmp__sum__allowances1 := sum__allowances1;
[L680]               __tmp__M_Ref_bool := M_Ref_bool;
[L681]               __tmp__sum_exceptions2 := sum_exceptions2;
[L682]               __tmp__sum_minters3 := sum_minters3;
[L683]               __tmp__Length := Length;
[L684]               __tmp__now := now;
[L685]               __tmp___balances_ERC20 := _balances_ERC20;
[L686]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L687]               __tmp__exceptions_ERC20 := exceptions_ERC20;
[L688]               __tmp__uniswap_ERC20 := uniswap_ERC20;
[L689]               __tmp___owner_ERC20 := _owner_ERC20;
[L690]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L691]               __tmp__allow_ERC20 := allow_ERC20;
[L692]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L693]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L694]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L695]               __tmp__governance_ZZZ := governance_ZZZ;
[L696]               __tmp__minters_ZZZ := minters_ZZZ;
[L697]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L2906]  COND TRUE   __tmp__DType[this] == ZZZ
[L2907]  CALL        call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2693]              __ret_0_ := msgsender_MSG;
[L2907]  RET         call __var_4 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2908]  COND FALSE  !(revert)
[L2919]  COND TRUE   __tmp__DType[this] == ZZZ
[L2920]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L3393]              __var_15 := null;
[L3394]  COND FALSE  !(!(sender_s439 != null))
[L3398]              __var_16 := null;
[L3399]  COND TRUE   !(recipient_s439 != null)
[L3400]              revert := true;
[L2920]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_4, recipient_s210, amount_s210);
[L2921]  COND TRUE   revert
[L697]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);
[L698]               assume revert || gas < 0;
[L5664]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s210, amount_s210);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
