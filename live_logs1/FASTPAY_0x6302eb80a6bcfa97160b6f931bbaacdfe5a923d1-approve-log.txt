This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 16:12:28,330 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 16:12:28,331 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 16:12:28,339 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 16:12:28,339 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 16:12:28,340 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 16:12:28,340 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 16:12:28,341 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 16:12:28,342 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 16:12:28,343 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 16:12:28,343 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 16:12:28,343 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 16:12:28,344 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 16:12:28,344 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 16:12:28,345 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 16:12:28,346 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 16:12:28,347 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 16:12:28,348 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 16:12:28,349 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 16:12:28,350 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 16:12:28,351 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 16:12:28,352 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 16:12:28,353 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 16:12:28,354 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 16:12:28,354 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 16:12:28,354 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 16:12:28,354 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 16:12:28,355 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 16:12:28,355 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 16:12:28,355 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 16:12:28,356 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 16:12:28,356 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 16:12:28,356 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 16:12:28,357 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 16:12:28,357 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 16:12:28,357 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 16:12:28,358 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 16:12:28,358 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 16:12:28,358 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 16:12:28,358 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 16:12:28,359 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 16:12:28,359 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 16:12:28,364 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 16:12:28,365 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 16:12:28,365 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 16:12:28,365 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 16:12:28,365 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 16:12:28,365 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 16:12:28,365 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 16:12:28,366 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 16:12:28,366 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 16:12:28,366 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 16:12:28,367 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 16:12:28,367 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 16:12:28,367 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 16:12:28,367 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 16:12:28,367 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 16:12:28,367 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 16:12:28,367 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 16:12:28,383 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 16:12:28,393 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 16:12:28,396 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 16:12:28,398 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 16:12:28,398 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 16:12:28,399 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl
[2020-11-25 16:12:28,399 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl'
[2020-11-25 16:12:28,460 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 16:12:28,461 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 16:12:28,461 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 16:12:28,461 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 16:12:28,461 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 16:12:28,472 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,473 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,498 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,499 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,516 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,523 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,529 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,538 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 16:12:28,538 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 16:12:28,538 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 16:12:28,540 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 16:12:28,544 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/1) ...
[2020-11-25 16:12:28,560 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(FASTPAY.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(FASTPAY.approve(spender, value), return == true && allowed_FASTPAY[this][msg.sender][spender] == value &&  _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this]) && balances_FASTPAY[this] == old(balances_FASTPAY[this]) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2]) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this]) && name_FASTPAY[this] == old(name_FASTPAY[this]) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:12:28,565 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(FASTPAY.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(FASTPAY.approve(spender, value), return == true && allowed_FASTPAY[this][msg.sender][spender] == value &&  _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this]) && balances_FASTPAY[this] == old(balances_FASTPAY[this]) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2]) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this]) && name_FASTPAY[this] == old(name_FASTPAY[this]) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:12:28,572 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(FASTPAY.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(FASTPAY.approve(spender, value), return == true && allowed_FASTPAY[this][msg.sender][spender] == value &&  _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this]) && balances_FASTPAY[this] == old(balances_FASTPAY[this]) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2]) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this]) && name_FASTPAY[this] == old(name_FASTPAY[this]) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:12:28,579 INFO  L636   opiaSpecLangObserver]: Parsed ( p1!=msg.sender || p2!=spender_s399 ) to BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[spender_s399,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]
[2020-11-25 16:12:28,581 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( success_s399==true && allowed_FASTPAY[this][msg.sender][spender_s399]==tokens_s399 ) && _totalSupply_FASTPAY[this]==( old(_totalSupply_FASTPAY[this]) ) ) && balances_FASTPAY[this]==( old(balances_FASTPAY[this]) ) ) && allowed_FASTPAY[this][p1][p2]==( old(allowed_FASTPAY[this][p1][p2]) ) ) && symbol_FASTPAY[this]==( old(symbol_FASTPAY[this]) ) ) && name_FASTPAY[this]==( old(name_FASTPAY[this]) ) ) && decimals_FASTPAY[this]==( old(decimals_FASTPAY[this]) ) ) && owner_Owned[this]==( old(owner_Owned[this]) ) ) && newOwner_Owned[this]==( old(newOwner_Owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s399,<IMPLEMENTATION_OUTPARAM,approve~address~uint256_FASTPAY>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],[IdentifierExpression[spender_s399,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],IdentifierExpression[tokens_s399,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_FASTPAY,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[newOwner_Owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,approve~address~uint256_FASTPAY>]]]]]]
[2020-11-25 16:12:28,585 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(FASTPAY.approve(spender, value), p1 != msg.sender || p2 != spender) ==> <>(finished(FASTPAY.approve(spender, value), return == true && allowed_FASTPAY[this][msg.sender][spender] == value &&  _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this]) && balances_FASTPAY[this] == old(balances_FASTPAY[this]) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2]) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this]) && name_FASTPAY[this] == old(name_FASTPAY[this]) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this]) && owner_Owned[this] == old(owner_Owned[this]) && newOwner_Owned[this] == old(newOwner_Owned[this]))))
[2020-11-25 16:12:28,585 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_approve_FASTPAY0) ==> ( <>AP(success_approve_FASTPAY0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 16:12:28,591 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:12:28 PropertyContainer
[2020-11-25 16:12:28,591 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 16:12:28,592 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 16:12:28,592 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 16:12:28,592 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 16:12:28,593 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/2) ...
[2020-11-25 16:12:28,593 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 16:12:28,593 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 16:12:28,605 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:12:28" (2/2) ...
[2020-11-25 16:12:28,605 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 16:12:28,606 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 16:12:28,606 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 16:12:28,606 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 16:12:28,607 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/2) ...
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 16:12:28,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 16:12:28,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 16:12:28,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 16:12:28,645 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath
[2020-11-25 16:12:28,645 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 16:12:28,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20Interface
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 16:12:28,646 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack
[2020-11-25 16:12:28,646 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_ApproveAndCallFallBack
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure FASTPAY_FASTPAY_NoBaseCtor__success
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure FASTPAY_FASTPAY
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure FASTPAY_FASTPAY
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FASTPAY
[2020-11-25 16:12:28,647 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FASTPAY
[2020-11-25 16:12:28,647 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_FASTPAY__success
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FASTPAY
[2020-11-25 16:12:28,648 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FASTPAY
[2020-11-25 16:12:28,648 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FASTPAY
[2020-11-25 16:12:28,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FASTPAY
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FASTPAY
[2020-11-25 16:12:28,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FASTPAY
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_FASTPAY
[2020-11-25 16:12:28,649 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_FASTPAY
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Interface
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Interface
[2020-11-25 16:12:28,649 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Owned
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Owned
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_FASTPAY
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,650 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__success
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure Owned_Owned__fail
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__success
[2020-11-25 16:12:28,651 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Owned__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__success
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure acceptOwnership_Owned__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__success
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Owned__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__success
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure newOwner_Owned__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure FASTPAY_FASTPAY_NoBaseCtor__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure FASTPAY_FASTPAY__success
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure FASTPAY_FASTPAY__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FASTPAY__success
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_FASTPAY__fail
[2020-11-25 16:12:28,652 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackMethod_FASTPAY__fail
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,653 INFO  L130     BoogieDeclarations]: Found specification of procedure transferAnyERC20Token~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FASTPAY__success
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_FASTPAY__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FASTPAY__success
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure name_FASTPAY__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FASTPAY__success
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_FASTPAY__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_FASTPAY__success
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalSupply_FASTPAY__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 16:12:28,654 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 16:12:28,654 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeAdd~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeSub~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeMul~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,655 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure safeDiv~uint256~uint256_SafeMath__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface_NoBaseCtor__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Interface_ERC20Interface__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack_NoBaseCtor__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure ApproveAndCallFallBack_ApproveAndCallFallBack__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned_NoBaseCtor__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure Owned_Owned__success
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__fail
[2020-11-25 16:12:28,656 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Owned__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure acceptOwnership_Owned__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Owned__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure newOwner_Owned__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure FASTPAY_FASTPAY_NoBaseCtor__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure FASTPAY_FASTPAY_NoBaseCtor__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure FASTPAY_FASTPAY__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure FASTPAY_FASTPAY__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FASTPAY__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_FASTPAY__success
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FASTPAY__fail
[2020-11-25 16:12:28,657 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackMethod_FASTPAY__success
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_FASTPAY__fail
[2020-11-25 16:12:28,658 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferAnyERC20Token~address~uint256_FASTPAY__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FASTPAY__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_FASTPAY__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FASTPAY__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_FASTPAY__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FASTPAY__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_FASTPAY__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_FASTPAY__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalSupply_FASTPAY__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 16:12:28,659 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Interface
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Interface
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ApproveAndCallFallBack
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ApproveAndCallFallBack
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Owned
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Owned
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_FASTPAY
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 16:12:28,660 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 16:12:28,660 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 16:12:28,997 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:12:29,085 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:12:29,085 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:12:29,085 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 16:12:29,237 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 16:12:29,237 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 16:12:29,239 INFO  L202        PluginConnector]: Adding new model FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:12:29 BoogieIcfgContainer
[2020-11-25 16:12:29,239 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:12:28" (2/2) ...
[2020-11-25 16:12:29,239 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 16:12:29,239 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@575314d and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:12:29, skipping insertion in model container
[2020-11-25 16:12:29,239 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 16:12:29,239 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 16:12:29,239 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 16:12:29,240 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 16:12:29,241 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/3) ...
[2020-11-25 16:12:29,241 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@27b15414 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:12:29, skipping insertion in model container
[2020-11-25 16:12:29,241 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:12:28" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 16:12:29,272 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:12:29 NWAContainer
[2020-11-25 16:12:29,272 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 16:12:29,272 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 16:12:29,272 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 16:12:29,273 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 16:12:29,273 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:12:29" (3/4) ...
[2020-11-25 16:12:29,274 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@7b72575f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:12:29, skipping insertion in model container
[2020-11-25 16:12:29,274 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:12:29" (4/4) ...
[2020-11-25 16:12:29,276 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 16:12:29,279 INFO  L110   BuchiProductObserver]: Initial RCFG 1565 locations, 1977 edges
[2020-11-25 16:12:29,279 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 16:12:29,287 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 16:12:30,727 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 16:12:30,734 INFO  L110   BuchiProductObserver]: BuchiProgram size 3722 locations, 6405 edges
[2020-11-25 16:12:30,734 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:12:30 BoogieIcfgContainer
[2020-11-25 16:12:30,734 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 16:12:30,735 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 16:12:30,735 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 16:12:30,737 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 16:12:30,737 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:12:30" (1/1) ...
[2020-11-25 16:12:30,840 INFO  L313           BlockEncoder]: Initial Icfg 3722 locations, 6405 edges
[2020-11-25 16:12:30,840 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 16:12:30,840 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 16:12:30,841 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 16:12:30,841 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 16:12:30,854 INFO  L70    emoveInfeasibleEdges]: Removed 90 edges and 13 locations because of local infeasibility
[2020-11-25 16:12:30,861 INFO  L70        RemoveSinkStates]: Removed 38 edges and 25 locations by removing sink states
[2020-11-25 16:12:30,869 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 16:12:30,873 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 16:12:30,875 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 16:12:30,876 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 16:12:30,879 INFO  L313           BlockEncoder]: Encoded RCFG 3662 locations, 6245 edges
[2020-11-25 16:12:30,880 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:12:30 BasicIcfg
[2020-11-25 16:12:30,880 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 16:12:30,880 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 16:12:30,880 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 16:12:30,883 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 16:12:30,883 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:12:30,883 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 04:12:28" (1/6) ...
[2020-11-25 16:12:30,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d340d37 and model type FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:12:30, skipping insertion in model container
[2020-11-25 16:12:30,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:12:30,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 04:12:28" (2/6) ...
[2020-11-25 16:12:30,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d340d37 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:12:30, skipping insertion in model container
[2020-11-25 16:12:30,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:12:30,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 04:12:29" (3/6) ...
[2020-11-25 16:12:30,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d340d37 and model type FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:12:30, skipping insertion in model container
[2020-11-25 16:12:30,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:12:30,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 04:12:29" (4/6) ...
[2020-11-25 16:12:30,885 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d340d37 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 04:12:30, skipping insertion in model container
[2020-11-25 16:12:30,885 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:12:30,885 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 04:12:30" (5/6) ...
[2020-11-25 16:12:30,886 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7d340d37 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 04:12:30, skipping insertion in model container
[2020-11-25 16:12:30,886 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 16:12:30,886 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 04:12:30" (6/6) ...
[2020-11-25 16:12:30,887 INFO  L404   chiAutomizerObserver]: Analyzing ICFG FASTPAY_0x6302eb80a6bcfa97160b6f931bbaacdfe5a923d1_approve.bpl_BEv2
[2020-11-25 16:12:30,913 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 16:12:30,913 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 16:12:30,913 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 16:12:30,913 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 16:12:30,913 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 16:12:30,914 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 16:12:30,914 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 16:12:30,914 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 16:12:30,914 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 16:12:30,944 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3662 states.
[2020-11-25 16:12:31,000 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:12:31,000 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:12:31,000 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:12:31,011 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:31,011 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:31,011 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 16:12:31,011 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3662 states.
[2020-11-25 16:12:31,033 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:12:31,033 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:12:31,033 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:12:31,036 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:31,036 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_FASTPAY0 := false;
[L3]                 call_approve_FASTPAY0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == FASTPAY;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;

Loop:
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_FASTPAY(this);

[2020-11-25 16:12:31,053 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:12:31,054 INFO  L82        PathProgramCache]: Analyzing trace with hash 1215501096, now seen corresponding path program 1 times
[2020-11-25 16:12:31,058 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:12:31,081 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:12:31,121 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:12:31,123 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:12:31,123 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:12:31,126 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:12:31,316 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:12:31,316 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:12:31,318 INFO  L87              Difference]: Start difference. First operand 3662 states. Second operand 4 states.
[2020-11-25 16:12:31,637 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:12:31,637 INFO  L93              Difference]: Finished difference Result 2516 states and 2745 transitions.
[2020-11-25 16:12:31,638 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:12:31,639 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2516 states and 2745 transitions.
[2020-11-25 16:12:31,653 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:12:31,671 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2516 states to 2516 states and 2745 transitions.
[2020-11-25 16:12:31,672 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 16:12:31,674 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 852
[2020-11-25 16:12:31,675 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2516 states and 2745 transitions.
[2020-11-25 16:12:31,681 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:12:31,681 INFO  L728         BuchiCegarLoop]: Abstraction has 2516 states and 2745 transitions.
[2020-11-25 16:12:31,695 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2516 states and 2745 transitions.
[2020-11-25 16:12:31,734 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2516 to 2516.
[2020-11-25 16:12:31,735 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2516 states.
[2020-11-25 16:12:31,740 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2516 states to 2516 states and 2745 transitions.
[2020-11-25 16:12:31,741 INFO  L751         BuchiCegarLoop]: Abstraction has 2516 states and 2745 transitions.
[2020-11-25 16:12:31,741 INFO  L631         BuchiCegarLoop]: Abstraction has 2516 states and 2745 transitions.
[2020-11-25 16:12:31,741 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 16:12:31,741 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2516 states and 2745 transitions.
[2020-11-25 16:12:31,748 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:12:31,748 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:12:31,748 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:12:31,750 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:31,750 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_FASTPAY0 := false;
[L3]                 call_approve_FASTPAY0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == FASTPAY;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND TRUE   revert
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND TRUE   revert
[L794]   RET         call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2395]              allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_FASTPAY" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_FASTPAY[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this])) && balances_FASTPAY[this] == old(balances_FASTPAY[this])) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2])) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this])) && name_FASTPAY[this] == old(name_FASTPAY[this])) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

Loop:
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2395]              allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_FASTPAY" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_FASTPAY[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this])) && balances_FASTPAY[this] == old(balances_FASTPAY[this])) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2])) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this])) && name_FASTPAY[this] == old(name_FASTPAY[this])) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

[2020-11-25 16:12:31,755 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:12:31,755 INFO  L82        PathProgramCache]: Analyzing trace with hash 1472661458, now seen corresponding path program 1 times
[2020-11-25 16:12:31,756 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:12:31,766 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:12:31,785 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:12:31,785 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:12:31,785 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 16:12:31,786 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:12:31,786 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 16:12:31,786 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 16:12:31,787 INFO  L87              Difference]: Start difference. First operand 2516 states and 2745 transitions. cyclomatic complexity: 231 Second operand 4 states.
[2020-11-25 16:12:32,200 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:12:32,201 INFO  L93              Difference]: Finished difference Result 3736 states and 4231 transitions.
[2020-11-25 16:12:32,201 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 16:12:32,201 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3736 states and 4231 transitions.
[2020-11-25 16:12:32,216 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 16:12:32,233 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3736 states to 3616 states and 4103 transitions.
[2020-11-25 16:12:32,233 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1158
[2020-11-25 16:12:32,234 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1168
[2020-11-25 16:12:32,234 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3616 states and 4103 transitions.
[2020-11-25 16:12:32,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:12:32,240 INFO  L728         BuchiCegarLoop]: Abstraction has 3616 states and 4103 transitions.
[2020-11-25 16:12:32,243 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3616 states and 4103 transitions.
[2020-11-25 16:12:32,273 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3616 to 2732.
[2020-11-25 16:12:32,273 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2732 states.
[2020-11-25 16:12:32,277 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2732 states to 2732 states and 2959 transitions.
[2020-11-25 16:12:32,277 INFO  L751         BuchiCegarLoop]: Abstraction has 2732 states and 2959 transitions.
[2020-11-25 16:12:32,277 INFO  L631         BuchiCegarLoop]: Abstraction has 2732 states and 2959 transitions.
[2020-11-25 16:12:32,277 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 16:12:32,277 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2732 states and 2959 transitions.
[2020-11-25 16:12:32,282 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 16:12:32,283 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:12:32,283 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:12:32,284 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:32,284 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_FASTPAY0 := false;
[L3]                 call_approve_FASTPAY0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == FASTPAY;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call FASTPAY_FASTPAY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_FASTPAY[this] := -1992107711;
[L2236]              name_FASTPAY[this] := -1992107711;
[L2237]              decimals_FASTPAY[this] := 0;
[L2238]              _totalSupply_FASTPAY[this] := 0;
[L2239]              balances_FASTPAY[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_FASTPAY[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_FASTPAY[this] := -427338649;
[L2245]              name_FASTPAY[this] := -427338649;
[L2246]              decimals_FASTPAY[this] := 18;
[L2247]              _totalSupply_FASTPAY[this] := 1000000000000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_FASTPAY[this][275816698117181950596981224632760865204700791384];
[L2249]              balances_FASTPAY[this][275816698117181950596981224632760865204700791384] := _totalSupply_FASTPAY[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_FASTPAY[this][275816698117181950596981224632760865204700791384];
[L2251]              assert { :EventEmitted "Transfer_FASTPAY" } true;
[L2288]  RET         call FASTPAY_FASTPAY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2395]              allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_FASTPAY" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_FASTPAY[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this])) && balances_FASTPAY[this] == old(balances_FASTPAY[this])) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2])) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this])) && name_FASTPAY[this] == old(name_FASTPAY[this])) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

Loop:
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2395]              allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_FASTPAY" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_FASTPAY[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this])) && balances_FASTPAY[this] == old(balances_FASTPAY[this])) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2])) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this])) && name_FASTPAY[this] == old(name_FASTPAY[this])) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

[2020-11-25 16:12:32,288 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:12:32,288 INFO  L82        PathProgramCache]: Analyzing trace with hash 1005500855, now seen corresponding path program 1 times
[2020-11-25 16:12:32,288 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:12:32,312 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:12:32,468 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:12:32,468 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:12:32,468 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 16:12:32,469 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:12:32,469 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 13 interpolants.
[2020-11-25 16:12:32,469 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=131, Unknown=0, NotChecked=0, Total=156
[2020-11-25 16:12:32,469 INFO  L87              Difference]: Start difference. First operand 2732 states and 2959 transitions. cyclomatic complexity: 229 Second operand 13 states.
[2020-11-25 16:12:33,980 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:12:33,980 INFO  L93              Difference]: Finished difference Result 2853 states and 3113 transitions.
[2020-11-25 16:12:33,980 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 13 states. 
[2020-11-25 16:12:33,981 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2853 states and 3113 transitions.
[2020-11-25 16:12:33,988 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-25 16:12:33,995 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2853 states to 2853 states and 3113 transitions.
[2020-11-25 16:12:33,995 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1024
[2020-11-25 16:12:33,996 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1024
[2020-11-25 16:12:33,997 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2853 states and 3113 transitions.
[2020-11-25 16:12:33,999 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:12:33,999 INFO  L728         BuchiCegarLoop]: Abstraction has 2853 states and 3113 transitions.
[2020-11-25 16:12:34,001 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2853 states and 3113 transitions.
[2020-11-25 16:12:34,021 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2853 to 2820.
[2020-11-25 16:12:34,021 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2820 states.
[2020-11-25 16:12:34,024 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2820 states to 2820 states and 3066 transitions.
[2020-11-25 16:12:34,024 INFO  L751         BuchiCegarLoop]: Abstraction has 2820 states and 3066 transitions.
[2020-11-25 16:12:34,024 INFO  L631         BuchiCegarLoop]: Abstraction has 2820 states and 3066 transitions.
[2020-11-25 16:12:34,024 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 16:12:34,024 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2820 states and 3066 transitions.
[2020-11-25 16:12:34,029 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-25 16:12:34,029 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:12:34,029 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:12:34,030 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:34,030 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_FASTPAY0 := false;
[L3]                 call_approve_FASTPAY0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == FASTPAY;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call FASTPAY_FASTPAY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_FASTPAY[this] := -1992107711;
[L2236]              name_FASTPAY[this] := -1992107711;
[L2237]              decimals_FASTPAY[this] := 0;
[L2238]              _totalSupply_FASTPAY[this] := 0;
[L2239]              balances_FASTPAY[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_FASTPAY[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_FASTPAY[this] := -427338649;
[L2245]              name_FASTPAY[this] := -427338649;
[L2246]              decimals_FASTPAY[this] := 18;
[L2247]              _totalSupply_FASTPAY[this] := 1000000000000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_FASTPAY[this][275816698117181950596981224632760865204700791384];
[L2249]              balances_FASTPAY[this][275816698117181950596981224632760865204700791384] := _totalSupply_FASTPAY[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_FASTPAY[this][275816698117181950596981224632760865204700791384];
[L2251]              assert { :EventEmitted "Transfer_FASTPAY" } true;
[L2288]  RET         call FASTPAY_FASTPAY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND TRUE   __exception
[L992]               __tmp__Balance := Balance;
[L993]               __tmp__DType := DType;
[L994]               __tmp__Alloc := Alloc;
[L995]               __tmp__balance_ADDR := balance_ADDR;
[L996]               __tmp__M_Ref_int := M_Ref_int;
[L997]               __tmp__sum_balances0 := sum_balances0;
[L998]               __tmp__alloc_allowed_FASTPAY_lvl0 := alloc_allowed_FASTPAY_lvl0;
[L999]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L1000]              __tmp__sum_allowed1 := sum_allowed1;
[L1001]              __tmp__Length := Length;
[L1002]              __tmp__now := now;
[L1003]              __tmp__owner_Owned := owner_Owned;
[L1004]              __tmp__newOwner_Owned := newOwner_Owned;
[L1005]              __tmp__symbol_FASTPAY := symbol_FASTPAY;
[L1006]              __tmp__name_FASTPAY := name_FASTPAY;
[L1007]              __tmp__decimals_FASTPAY := decimals_FASTPAY;
[L1008]              __tmp___totalSupply_FASTPAY := _totalSupply_FASTPAY;
[L1009]              __tmp__balances_FASTPAY := balances_FASTPAY;
[L1010]              __tmp__allowed_FASTPAY := allowed_FASTPAY;
[L1011]  CALL        call success_s399 := approve~address~uint256_FASTPAY__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2385]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2386]              __tmp__allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2387]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2388]              success_s399 := true;
[L1011]  RET         call success_s399 := approve~address~uint256_FASTPAY__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1012]              assume revert || gas < 0;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

Loop:
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND TRUE   __exception
[L992]               __tmp__Balance := Balance;
[L993]               __tmp__DType := DType;
[L994]               __tmp__Alloc := Alloc;
[L995]               __tmp__balance_ADDR := balance_ADDR;
[L996]               __tmp__M_Ref_int := M_Ref_int;
[L997]               __tmp__sum_balances0 := sum_balances0;
[L998]               __tmp__alloc_allowed_FASTPAY_lvl0 := alloc_allowed_FASTPAY_lvl0;
[L999]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L1000]              __tmp__sum_allowed1 := sum_allowed1;
[L1001]              __tmp__Length := Length;
[L1002]              __tmp__now := now;
[L1003]              __tmp__owner_Owned := owner_Owned;
[L1004]              __tmp__newOwner_Owned := newOwner_Owned;
[L1005]              __tmp__symbol_FASTPAY := symbol_FASTPAY;
[L1006]              __tmp__name_FASTPAY := name_FASTPAY;
[L1007]              __tmp__decimals_FASTPAY := decimals_FASTPAY;
[L1008]              __tmp___totalSupply_FASTPAY := _totalSupply_FASTPAY;
[L1009]              __tmp__balances_FASTPAY := balances_FASTPAY;
[L1010]              __tmp__allowed_FASTPAY := allowed_FASTPAY;
[L1011]  CALL        call success_s399 := approve~address~uint256_FASTPAY__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2385]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] - __tmp__allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2386]              __tmp__allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2387]              __tmp__sum_allowed1[msgsender_MSG] := __tmp__sum_allowed1[msgsender_MSG] + __tmp__allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2388]              success_s399 := true;
[L1011]  RET         call success_s399 := approve~address~uint256_FASTPAY__fail(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1012]              assume revert || gas < 0;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

[2020-11-25 16:12:34,033 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:12:34,034 INFO  L82        PathProgramCache]: Analyzing trace with hash 1258567989, now seen corresponding path program 1 times
[2020-11-25 16:12:34,035 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:12:34,041 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:12:34,067 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 16:12:34,067 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:12:34,068 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 16:12:34,068 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:12:34,068 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 16:12:34,068 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 16:12:34,068 INFO  L87              Difference]: Start difference. First operand 2820 states and 3066 transitions. cyclomatic complexity: 250 Second operand 5 states.
[2020-11-25 16:12:34,374 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:12:34,374 INFO  L93              Difference]: Finished difference Result 3595 states and 3994 transitions.
[2020-11-25 16:12:34,374 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:12:34,374 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3595 states and 3994 transitions.
[2020-11-25 16:12:34,383 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 12
[2020-11-25 16:12:34,392 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3595 states to 2766 states and 3161 transitions.
[2020-11-25 16:12:34,392 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 759
[2020-11-25 16:12:34,393 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 759
[2020-11-25 16:12:34,393 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2766 states and 3161 transitions.
[2020-11-25 16:12:34,396 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:12:34,396 INFO  L728         BuchiCegarLoop]: Abstraction has 2766 states and 3161 transitions.
[2020-11-25 16:12:34,398 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2766 states and 3161 transitions.
[2020-11-25 16:12:34,418 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2766 to 1848.
[2020-11-25 16:12:34,418 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1848 states.
[2020-11-25 16:12:34,421 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1848 states to 1848 states and 1995 transitions.
[2020-11-25 16:12:34,421 INFO  L751         BuchiCegarLoop]: Abstraction has 1848 states and 1995 transitions.
[2020-11-25 16:12:34,421 INFO  L631         BuchiCegarLoop]: Abstraction has 1848 states and 1995 transitions.
[2020-11-25 16:12:34,421 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 16:12:34,421 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1848 states and 1995 transitions.
[2020-11-25 16:12:34,424 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 16:12:34,424 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 16:12:34,424 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 16:12:34,426 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 16:12:34,426 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_approve_FASTPAY0 := false;
[L3]                 call_approve_FASTPAY0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L4251]              assume null == 0;
[L4252]  CALL        call this := FreshRefGenerator__success();
[L1928]              havoc newRef;
[L1929]              assume Alloc[newRef] == false;
[L1930]              Alloc[newRef] := true;
[L1931]              assume newRef != null;
[L4252]  RET         call this := FreshRefGenerator__success();
[L4253]              assume now >= 0;
[L4254]              assume DType[this] == FASTPAY;
[L4255]              assume msgvalue_MSG == 0;
[L4256]              gas := gas - 53000;
[L4257]  CALL        call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L769]               havoc __exception;
[L770]               revert := false;
[L771]   COND FALSE  !(__exception)
[L794]   CALL        call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L2276]  CALL        call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2064]  CALL        call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2049]              assume msgsender_MSG != null;
[L2050]              Balance[this] := 0;
[L2064]  RET         call ERC20Interface_ERC20Interface_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2065]  COND FALSE  !(revert)
[L2276]  RET         call ERC20Interface_ERC20Interface__success(this, msgsender_MSG, msgvalue_MSG);
[L2277]  COND FALSE  !(revert)
[L2280]  CALL        call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2134]  CALL        call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]              assume msgsender_MSG != null;
[L2117]              Balance[this] := 0;
[L2118]              owner_Owned[this] := null;
[L2119]              newOwner_Owned[this] := null;
[L2121]              owner_Owned[this] := msgsender_MSG;
[L2134]  RET         call Owned_Owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2135]  COND FALSE  !(revert)
[L2280]  RET         call Owned_Owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2281]  COND FALSE  !(revert)
[L2284]  CALL        call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1960]  CALL        call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1945]              assume msgsender_MSG != null;
[L1946]              Balance[this] := 0;
[L1960]  RET         call SafeMath_SafeMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1961]  COND FALSE  !(revert)
[L2284]  RET         call SafeMath_SafeMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2285]  COND FALSE  !(revert)
[L2288]  CALL        call FASTPAY_FASTPAY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2233]              assume msgsender_MSG != null;
[L2234]              Balance[this] := 0;
[L2235]              symbol_FASTPAY[this] := -1992107711;
[L2236]              name_FASTPAY[this] := -1992107711;
[L2237]              decimals_FASTPAY[this] := 0;
[L2238]              _totalSupply_FASTPAY[this] := 0;
[L2239]              balances_FASTPAY[this] := zeroRefintArr();
[L2240]              sum_balances0[this] := 0;
[L2241]              allowed_FASTPAY[this] := zeroRefRefintArr();
[L2242]              sum_allowed1[this] := 0;
[L2244]              symbol_FASTPAY[this] := -427338649;
[L2245]              name_FASTPAY[this] := -427338649;
[L2246]              decimals_FASTPAY[this] := 18;
[L2247]              _totalSupply_FASTPAY[this] := 1000000000000000000000000;
[L2248]              sum_balances0[this] := sum_balances0[this] - balances_FASTPAY[this][275816698117181950596981224632760865204700791384];
[L2249]              balances_FASTPAY[this][275816698117181950596981224632760865204700791384] := _totalSupply_FASTPAY[this];
[L2250]              sum_balances0[this] := sum_balances0[this] + balances_FASTPAY[this][275816698117181950596981224632760865204700791384];
[L2251]              assert { :EventEmitted "Transfer_FASTPAY" } true;
[L2288]  RET         call FASTPAY_FASTPAY_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2289]  COND FALSE  !(revert)
[L794]   RET         call FASTPAY_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG);
[L795]               assume !revert && gas >= 0;
[L4257]  RET         call FASTPAY_FASTPAY(this, msgsender_MSG, msgvalue_MSG);
[L4258]              assume !revert && gas >= 0;
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(p1 != msgsender_MSG || p2 != spender_s399);
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2395]              allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_FASTPAY" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_FASTPAY[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this])) && balances_FASTPAY[this] == old(balances_FASTPAY[this])) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2])) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this])) && name_FASTPAY[this] == old(name_FASTPAY[this])) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND FALSE  !(choice == 20)
[L4118]  COND FALSE  !(choice == 19)
[L4126]  COND FALSE  !(choice == 18)
[L4134]  COND FALSE  !(choice == 17)
[L4142]  COND FALSE  !(choice == 16)
[L4148]  COND FALSE  !(choice == 15)
[L4154]  COND FALSE  !(choice == 14)
[L4160]  COND FALSE  !(choice == 13)
[L4167]  COND TRUE   choice == 12
[L4168]              gas := gas - 21000;
[L4169]  COND TRUE   gas >= 0
[L4170]              assume tokens_s399 >= 0 && tokens_s399 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4171]              assume msgvalue_MSG == 0;
[L4172]  CALL        call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume p1 != msgsender_MSG || p2 != spender_s399;
[L3]                 call_approve_FASTPAY0 := true;
[L3]                 call_approve_FASTPAY0 := false;
[L3]                 revert := revert_hold;
[L989]               havoc __exception;
[L990]               revert := false;
[L991]   COND FALSE  !(__exception)
[L1014]  CALL        call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L2394]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] - allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2395]              allowed_FASTPAY[this][msgsender_MSG][spender_s399] := tokens_s399;
[L2396]              sum_allowed1[msgsender_MSG] := sum_allowed1[msgsender_MSG] + allowed_FASTPAY[this][msgsender_MSG][spender_s399];
[L2397]              assert { :EventEmitted "Approval_FASTPAY" } true;
[L2398]              success_s399 := true;
[L1014]  RET         call success_s399 := approve~address~uint256_FASTPAY__success(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L1015]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !(((((((((success_s399 == true && allowed_FASTPAY[this][msgsender_MSG][spender_s399] == tokens_s399) && _totalSupply_FASTPAY[this] == old(_totalSupply_FASTPAY[this])) && balances_FASTPAY[this] == old(balances_FASTPAY[this])) && allowed_FASTPAY[this][p1][p2] == old(allowed_FASTPAY[this][p1][p2])) && symbol_FASTPAY[this] == old(symbol_FASTPAY[this])) && name_FASTPAY[this] == old(name_FASTPAY[this])) && decimals_FASTPAY[this] == old(decimals_FASTPAY[this])) && owner_Owned[this] == old(owner_Owned[this])) && newOwner_Owned[this] == old(newOwner_Owned[this]));
[L3]                 revert := revert_hold;
[L4172]  RET         call success_s399 := approve~address~uint256_FASTPAY(this, msgsender_MSG, msgvalue_MSG, spender_s399, tokens_s399);
[L4261]  RET         call CorralChoice_FASTPAY(this);

Loop:
[L4261]  CALL        call CorralChoice_FASTPAY(this);
[L4052]              havoc msgsender_MSG;
[L4053]              havoc msgvalue_MSG;
[L4054]              havoc choice;
[L4055]              havoc a_s23;
[L4056]              havoc b_s23;
[L4057]              havoc c_s23;
[L4058]              havoc a_s45;
[L4059]              havoc b_s45;
[L4060]              havoc c_s45;
[L4061]              havoc a_s73;
[L4062]              havoc b_s73;
[L4063]              havoc c_s73;
[L4064]              havoc a_s95;
[L4065]              havoc b_s95;
[L4066]              havoc c_s95;
[L4067]              havoc __ret_0_totalSupply;
[L4068]              havoc tokenOwner_s328;
[L4069]              havoc balance_s328;
[L4070]              havoc tokenOwner_s474;
[L4071]              havoc spender_s474;
[L4072]              havoc remaining_s474;
[L4073]              havoc to_s371;
[L4074]              havoc tokens_s371;
[L4075]              havoc success_s371;
[L4076]              havoc spender_s399;
[L4077]              havoc tokens_s399;
[L4078]              havoc success_s399;
[L4079]              havoc from_s458;
[L4080]              havoc to_s458;
[L4081]              havoc tokens_s458;
[L4082]              havoc success_s458;
[L4083]              havoc __ret_0_owner;
[L4084]              havoc __ret_0_newOwner;
[L4085]              havoc _newOwner_s217;
[L4086]              havoc __ret_0_symbol;
[L4087]              havoc __ret_0_name;
[L4088]              havoc __ret_0_decimals;
[L4089]              havoc __ret_0__totalSupply;
[L4090]              havoc spender_s517;
[L4091]              havoc tokens_s517;
[L4092]              havoc data_s517;
[L4093]              havoc success_s517;
[L4094]              havoc tokenAddress_s544;
[L4095]              havoc tokens_s544;
[L4096]              havoc success_s544;
[L4097]              havoc tmpNow;
[L4098]              havoc gas;
[L4099]              assume gas > 4000000 && gas <= 8000000;
[L4100]              tmpNow := now;
[L4101]              havoc now;
[L4102]              assume now > tmpNow;
[L4103]              assume msgsender_MSG != null;
[L4104]              assume DType[msgsender_MSG] != SafeMath;
[L4105]              assume DType[msgsender_MSG] != ERC20Interface;
[L4106]              assume DType[msgsender_MSG] != ApproveAndCallFallBack;
[L4107]              assume DType[msgsender_MSG] != Owned;
[L4108]              assume DType[msgsender_MSG] != FASTPAY;
[L4109]              Alloc[msgsender_MSG] := true;
[L4110]  COND TRUE   choice == 20
[L4111]              gas := gas - 21000;
[L4112]  COND FALSE  !(gas >= 0)
[L4261]  RET         call CorralChoice_FASTPAY(this);

[2020-11-25 16:12:34,430 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 16:12:34,431 INFO  L82        PathProgramCache]: Analyzing trace with hash 1098289115, now seen corresponding path program 1 times
[2020-11-25 16:12:34,431 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 16:12:34,458 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 16:12:34,549 INFO  L134       CoverageAnalysis]: Checked inductivity of 78 backedges. 4 proven. 0 refuted. 0 times theorem prover too weak. 74 trivial. 0 not checked.
[2020-11-25 16:12:34,549 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 16:12:34,550 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 16:12:34,550 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 16:12:34,550 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 16:12:34,550 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=29, Unknown=0, NotChecked=0, Total=42
[2020-11-25 16:12:34,550 INFO  L87              Difference]: Start difference. First operand 1848 states and 1995 transitions. cyclomatic complexity: 150 Second operand 7 states.
[2020-11-25 16:12:34,850 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 16:12:34,850 INFO  L93              Difference]: Finished difference Result 996 states and 1069 transitions.
[2020-11-25 16:12:34,850 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 16:12:34,850 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 996 states and 1069 transitions.
[2020-11-25 16:12:34,853 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:12:34,853 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 996 states to 0 states and 0 transitions.
[2020-11-25 16:12:34,853 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 16:12:34,853 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 16:12:34,853 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 16:12:34,853 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 16:12:34,853 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:12:34,853 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:12:34,853 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 16:12:34,853 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 16:12:34,853 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 16:12:34,853 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 16:12:34,853 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 16:12:34,856 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 04:12:34 BasicIcfg
[2020-11-25 16:12:34,856 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 16:12:34,857 INFO  L168              Benchmark]: Toolchain (without parser) took 6396.43 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 575.7 MB). Free memory was 935.2 MB in the beginning and 923.8 MB in the end (delta: 11.4 MB). Peak memory consumption was 587.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,857 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,858 INFO  L168              Benchmark]: Boogie Preprocessor took 77.21 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,858 INFO  L168              Benchmark]: UtopiaSpecLang took 53.28 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,858 INFO  L168              Benchmark]: Boogie Printer took 13.57 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,858 INFO  L168              Benchmark]: RCFGBuilder took 633.68 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 795.6 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,859 INFO  L168              Benchmark]: UtopiaLTL2Aut took 32.68 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 792.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,859 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1462.26 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 188.2 MB). Free memory was 792.0 MB in the beginning and 991.3 MB in the end (delta: -199.2 MB). Peak memory consumption was 169.2 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,859 INFO  L168              Benchmark]: BlockEncodingV2 took 145.11 ms. Allocated memory is still 1.2 GB. Free memory was 991.3 MB in the beginning and 919.4 MB in the end (delta: 71.8 MB). Peak memory consumption was 71.8 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,860 INFO  L168              Benchmark]: BuchiAutomizer took 3976.12 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 387.4 MB). Free memory was 919.4 MB in the beginning and 923.8 MB in the end (delta: -4.3 MB). Peak memory consumption was 383.1 MB. Max. memory is 15.3 GB.
[2020-11-25 16:12:34,862 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3722 locations, 6405 edges
  - StatisticsResult: Encoded RCFG
    3662 locations, 6245 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 77.21 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.28 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 13.57 ms. Allocated memory is still 1.0 GB. Free memory is still 919.1 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 633.68 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 795.6 MB in the end (delta: 123.5 MB). Peak memory consumption was 123.5 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 32.68 ms. Allocated memory is still 1.0 GB. Free memory was 795.6 MB in the beginning and 792.0 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1462.26 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 188.2 MB). Free memory was 792.0 MB in the beginning and 991.3 MB in the end (delta: -199.2 MB). Peak memory consumption was 169.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 145.11 ms. Allocated memory is still 1.2 GB. Free memory was 991.3 MB in the beginning and 919.4 MB in the end (delta: 71.8 MB). Peak memory consumption was 71.8 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3976.12 ms. Allocated memory was 1.2 GB in the beginning and 1.6 GB in the end (delta: 387.4 MB). Free memory was 919.4 MB in the beginning and 923.8 MB in the end (delta: -4.3 MB). Peak memory consumption was 383.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1565 locations, 1977 edges
  - StatisticsResult: BuchiProgram size
    3722 locations, 6405 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 13 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.9s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 2.1s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 1835 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 2820 states and ocurred in iteration 3.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 13013 SDtfs, 14196 SDslu, 17566 SDs, 0 SdLazy, 22776 SolverSat, 2556 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 2.1s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_approve_FASTPAY0) ==> ( <>(success_approve_FASTPAY0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
