This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 05:06:09,128 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 05:06:09,129 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 05:06:09,137 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 05:06:09,137 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 05:06:09,138 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 05:06:09,139 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 05:06:09,141 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 05:06:09,142 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 05:06:09,142 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 05:06:09,143 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 05:06:09,143 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 05:06:09,144 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 05:06:09,145 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 05:06:09,146 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 05:06:09,147 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 05:06:09,147 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 05:06:09,149 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 05:06:09,150 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 05:06:09,151 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 05:06:09,152 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 05:06:09,153 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 05:06:09,154 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 05:06:09,154 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 05:06:09,154 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 05:06:09,155 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 05:06:09,155 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 05:06:09,156 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 05:06:09,156 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 05:06:09,156 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 05:06:09,156 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 05:06:09,157 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 05:06:09,157 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 05:06:09,157 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 05:06:09,158 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 05:06:09,158 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 05:06:09,158 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 05:06:09,159 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 05:06:09,159 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 05:06:09,159 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 05:06:09,160 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 05:06:09,160 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 05:06:09,168 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 05:06:09,168 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 05:06:09,168 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 05:06:09,169 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 05:06:09,169 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 05:06:09,169 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 05:06:09,170 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 05:06:09,170 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 05:06:09,171 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 05:06:09,171 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 05:06:09,171 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 05:06:09,188 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 05:06:09,197 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 05:06:09,199 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 05:06:09,200 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 05:06:09,201 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 05:06:09,201 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl
[2020-11-25 05:06:09,201 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl'
[2020-11-25 05:06:09,278 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 05:06:09,279 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 05:06:09,279 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 05:06:09,279 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 05:06:09,280 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 05:06:09,296 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,297 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,322 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,323 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,340 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,348 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,354 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,362 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 05:06:09,362 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 05:06:09,362 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 05:06:09,364 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 05:06:09,368 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/1) ...
[2020-11-25 05:06:09,387 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(SpaghettiTokenV2.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:06:09,392 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(SpaghettiTokenV2.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:06:09,399 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(SpaghettiTokenV2.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:06:09,405 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender==dst_s253 && wad_s253<=balanceOf_SpaghettiTokenV2[this][msg.sender] ) && wad_s253>=0 ) && wad_s253<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiTokenV2[this][dst_s253]>=0 ) && balanceOf_SpaghettiTokenV2[this][dst_s253]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_SpaghettiTokenV2[this][msg.sender]>=0 ) && balanceOf_SpaghettiTokenV2[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]],BinaryExpression[COMPLEQ,IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[wad_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[dst_s253,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 05:06:09,408 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( __ret_0_==true && totalSupply_SpaghettiTokenV2[this]==( old(totalSupply_SpaghettiTokenV2[this]) ) ) && balanceOf_SpaghettiTokenV2[this]==( old(balanceOf_SpaghettiTokenV2[this]) ) ) && allowance_SpaghettiTokenV2[this]==( old(allowance_SpaghettiTokenV2[this]) ) ) && symbol_SpaghettiTokenV2[this]==( old(symbol_SpaghettiTokenV2[this]) ) ) && decimals_SpaghettiTokenV2[this]==( old(decimals_SpaghettiTokenV2[this]) ) ) && name_SpaghettiTokenV2[this]==( old(name_SpaghettiTokenV2[this]) ) ) && pastav1_SpaghettiTokenV2[this]==( old(pastav1_SpaghettiTokenV2[this]) ) ) && foodbank_SpaghettiTokenV2[this]==( old(foodbank_SpaghettiTokenV2[this]) ) ) && governance_SpaghettiTokenV2[this]==( old(governance_SpaghettiTokenV2[this]) ) ) && food_SpaghettiTokenV2[this]==( old(food_SpaghettiTokenV2[this]) ) ) && oven_SpaghettiTokenV2[this]==( old(oven_SpaghettiTokenV2[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_SpaghettiTokenV2>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balanceOf_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[pastav1_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[foodbank_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[governance_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[food_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[oven_SpaghettiTokenV2,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_SpaghettiTokenV2>]]]]]]
[2020-11-25 05:06:09,413 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(SpaghettiTokenV2.transfer(to, value), msg.sender == to && value <= balanceOf_SpaghettiTokenV2[this][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][to] >= 0 && balanceOf_SpaghettiTokenV2[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_SpaghettiTokenV2[this][msg.sender] >= 0 &&  balanceOf_SpaghettiTokenV2[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(SpaghettiTokenV2.transfer(to, value), return == true && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this]) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this]) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this]) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this]) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this]) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this]) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this]) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this]) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this]) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this]) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]))))
[2020-11-25 05:06:09,413 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_SpaghettiTokenV20) ==> ( <>AP(success_transfer_SpaghettiTokenV20) ) ) )
Executed UtopiaSpecLang
[2020-11-25 05:06:09,421 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:06:09 PropertyContainer
[2020-11-25 05:06:09,421 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 05:06:09,421 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 05:06:09,421 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 05:06:09,421 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 05:06:09,422 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/2) ...
[2020-11-25 05:06:09,422 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 05:06:09,422 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 05:06:09,434 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:06:09" (2/2) ...
[2020-11-25 05:06:09,434 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 05:06:09,434 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 05:06:09,435 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 05:06:09,435 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 05:06:09,435 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/2) ...
[2020-11-25 05:06:09,486 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 05:06:09,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_ERC20
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:06:09,487 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath
[2020-11-25 05:06:09,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:06:09,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:06:09,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2
[2020-11-25 05:06:09,488 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2
[2020-11-25 05:06:09,489 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:06:09,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2
[2020-11-25 05:06:09,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2
[2020-11-25 05:06:09,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_DSMath
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_DSMath
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 05:06:09,492 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__success
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure DSMath_DSMath__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:06:09,493 INFO  L130     BoogieDeclarations]: Found specification of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:06:09,494 INFO  L130     BoogieDeclarations]: Found specification of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,495 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,496 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 05:06:09,497 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__fail
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath_NoBaseCtor__success
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__fail
[2020-11-25 05:06:09,498 INFO  L138     BoogieDeclarations]: Found implementation of procedure DSMath_DSMath__success
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__fail
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_DSMath__success
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__fail
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_DSMath__success
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__fail
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_DSMath__success
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__fail
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success
[2020-11-25 05:06:09,499 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure SpaghettiTokenV2_SpaghettiTokenV2__success
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,500 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_SpaghettiTokenV2__success
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure mint_SpaghettiTokenV2__success
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure give_SpaghettiTokenV2__success
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn_SpaghettiTokenV2__success
[2020-11-25 05:06:09,501 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure setFoodbank~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure setGovernance~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_SpaghettiTokenV2__success
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_SpaghettiTokenV2__success
[2020-11-25 05:06:09,502 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_SpaghettiTokenV2__success
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_SpaghettiTokenV2__success
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_SpaghettiTokenV2__success
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure pastav1_SpaghettiTokenV2__success
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure foodbank_SpaghettiTokenV2__success
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,503 INFO  L138     BoogieDeclarations]: Found implementation of procedure governance_SpaghettiTokenV2__success
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure food_SpaghettiTokenV2__success
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__fail
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure oven_SpaghettiTokenV2__success
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 05:06:09,504 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 05:06:09,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 05:06:09,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_DSMath
[2020-11-25 05:06:09,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_DSMath
[2020-11-25 05:06:09,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SpaghettiTokenV2
[2020-11-25 05:06:09,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 05:06:09,505 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 05:06:09,505 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 05:06:09,973 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:06:09,973 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:06:09,973 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 05:06:10,058 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 05:06:10,059 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 05:06:10,061 INFO  L202        PluginConnector]: Adding new model SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:06:10 BoogieIcfgContainer
[2020-11-25 05:06:10,061 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:06:09" (2/2) ...
[2020-11-25 05:06:10,061 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 05:06:10,061 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@d6e7002 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:06:10, skipping insertion in model container
[2020-11-25 05:06:10,061 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 05:06:10,062 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 05:06:10,062 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 05:06:10,063 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 05:06:10,063 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/3) ...
[2020-11-25 05:06:10,064 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@66465a8b and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:06:10, skipping insertion in model container
[2020-11-25 05:06:10,064 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:06:09" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 05:06:10,096 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:06:10 NWAContainer
[2020-11-25 05:06:10,096 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 05:06:10,096 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 05:06:10,096 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 05:06:10,097 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 05:06:10,097 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:06:10" (3/4) ...
[2020-11-25 05:06:10,098 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@470fc3bf and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:06:10, skipping insertion in model container
[2020-11-25 05:06:10,098 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:06:10" (4/4) ...
[2020-11-25 05:06:10,101 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 05:06:10,105 INFO  L110   BuchiProductObserver]: Initial RCFG 1441 locations, 1806 edges
[2020-11-25 05:06:10,105 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 05:06:10,114 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 05:06:11,577 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 05:06:11,581 INFO  L110   BuchiProductObserver]: BuchiProgram size 3394 locations, 5797 edges
[2020-11-25 05:06:11,582 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:06:11 BoogieIcfgContainer
[2020-11-25 05:06:11,582 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 05:06:11,582 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 05:06:11,582 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 05:06:11,584 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 05:06:11,585 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:06:11" (1/1) ...
[2020-11-25 05:06:11,654 INFO  L313           BlockEncoder]: Initial Icfg 3394 locations, 5797 edges
[2020-11-25 05:06:11,654 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 05:06:11,655 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 05:06:11,655 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 05:06:11,655 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 05:06:11,666 INFO  L70    emoveInfeasibleEdges]: Removed 114 edges and 9 locations because of local infeasibility
[2020-11-25 05:06:11,673 INFO  L70        RemoveSinkStates]: Removed 80 edges and 53 locations by removing sink states
[2020-11-25 05:06:11,684 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 05:06:11,687 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 05:06:11,690 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 05:06:11,690 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 05:06:11,694 INFO  L313           BlockEncoder]: Encoded RCFG 3318 locations, 5583 edges
[2020-11-25 05:06:11,694 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:06:11 BasicIcfg
[2020-11-25 05:06:11,694 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 05:06:11,695 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 05:06:11,695 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 05:06:11,697 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 05:06:11,697 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:06:11,697 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 05:06:09" (1/6) ...
[2020-11-25 05:06:11,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55c35eec and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:06:11, skipping insertion in model container
[2020-11-25 05:06:11,699 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:06:11,699 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 05:06:09" (2/6) ...
[2020-11-25 05:06:11,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55c35eec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:06:11, skipping insertion in model container
[2020-11-25 05:06:11,699 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:06:11,699 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 05:06:10" (3/6) ...
[2020-11-25 05:06:11,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55c35eec and model type SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:06:11, skipping insertion in model container
[2020-11-25 05:06:11,699 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:06:11,699 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 05:06:10" (4/6) ...
[2020-11-25 05:06:11,699 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55c35eec and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 05:06:11, skipping insertion in model container
[2020-11-25 05:06:11,700 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:06:11,700 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 05:06:11" (5/6) ...
[2020-11-25 05:06:11,700 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@55c35eec and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 05:06:11, skipping insertion in model container
[2020-11-25 05:06:11,700 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 05:06:11,700 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 05:06:11" (6/6) ...
[2020-11-25 05:06:11,701 INFO  L404   chiAutomizerObserver]: Analyzing ICFG SpaghettiTokenV2_0xe54f9e6ab80ebc28515af8b8233c1aee6506a15e_transfer-self.bpl_BEv2
[2020-11-25 05:06:11,735 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 05:06:11,735 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 05:06:11,735 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 05:06:11,735 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 05:06:11,735 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 05:06:11,735 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 05:06:11,735 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 05:06:11,735 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 05:06:11,735 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 05:06:11,763 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3318 states.
[2020-11-25 05:06:11,813 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:11,813 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:11,813 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:11,821 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:11,821 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:11,821 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 05:06:11,822 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3318 states.
[2020-11-25 05:06:11,842 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:11,842 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:11,842 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:11,843 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:11,844 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_SpaghettiTokenV20 := false;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]     CALL        call main();
[L3710]              assume null == 0;
[L3711]  CALL        call this := FreshRefGenerator__success();
[L1917]              havoc newRef;
[L1918]              assume Alloc[newRef] == false;
[L1919]              Alloc[newRef] := true;
[L1920]              assume newRef != null;
[L3711]  RET         call this := FreshRefGenerator__success();
[L3712]              assume now >= 0;
[L3713]              assume DType[this] == SpaghettiTokenV2;
[L3714]              assume msgvalue_MSG == 0;
[L3715]              gas := gas - 53000;
[L3716]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND TRUE   revert
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3717]              assume !revert && gas >= 0;

Loop:
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND TRUE   choice == 20
[L3580]              gas := gas - 21000;
[L3581]  COND FALSE  !(gas >= 0)
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:06:11,858 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:11,858 INFO  L82        PathProgramCache]: Analyzing trace with hash -672174221, now seen corresponding path program 1 times
[2020-11-25 05:06:11,862 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:11,883 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:06:11,924 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:06:11,926 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:06:11,926 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:06:12,084 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:06:12,096 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:06:12,097 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:06:12,098 INFO  L87              Difference]: Start difference. First operand 3318 states. Second operand 3 states.
[2020-11-25 05:06:12,337 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:06:12,337 INFO  L93              Difference]: Finished difference Result 2766 states and 3055 transitions.
[2020-11-25 05:06:12,338 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:06:12,341 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2766 states and 3055 transitions.
[2020-11-25 05:06:12,365 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:12,404 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2766 states to 2766 states and 3055 transitions.
[2020-11-25 05:06:12,406 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 05:06:12,410 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 806
[2020-11-25 05:06:12,411 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2766 states and 3055 transitions.
[2020-11-25 05:06:12,425 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:06:12,425 INFO  L728         BuchiCegarLoop]: Abstraction has 2766 states and 3055 transitions.
[2020-11-25 05:06:12,461 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2766 states and 3055 transitions.
[2020-11-25 05:06:12,531 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2766 to 2766.
[2020-11-25 05:06:12,532 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2766 states.
[2020-11-25 05:06:12,538 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2766 states to 2766 states and 3055 transitions.
[2020-11-25 05:06:12,539 INFO  L751         BuchiCegarLoop]: Abstraction has 2766 states and 3055 transitions.
[2020-11-25 05:06:12,540 INFO  L631         BuchiCegarLoop]: Abstraction has 2766 states and 3055 transitions.
[2020-11-25 05:06:12,540 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 05:06:12,540 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2766 states and 3055 transitions.
[2020-11-25 05:06:12,548 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:12,549 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:12,549 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:12,552 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:12,552 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_SpaghettiTokenV20 := false;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]     CALL        call main();
[L3710]              assume null == 0;
[L3711]  CALL        call this := FreshRefGenerator__success();
[L1917]              havoc newRef;
[L1918]              assume Alloc[newRef] == false;
[L1919]              Alloc[newRef] := true;
[L1920]              assume newRef != null;
[L3711]  RET         call this := FreshRefGenerator__success();
[L3712]              assume now >= 0;
[L3713]              assume DType[this] == SpaghettiTokenV2;
[L3714]              assume msgvalue_MSG == 0;
[L3715]              gas := gas - 53000;
[L3716]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND TRUE   revert
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3717]              assume !revert && gas >= 0;
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND FALSE  !(__exception)
[L458]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2184]  COND TRUE   DType[this] == SpaghettiTokenV2
[L2185]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2329]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2330]  COND TRUE   src_s399 != msgsender_MSG && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2331]  COND TRUE   !(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2332]              revert := true;
[L2185]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2186]  COND TRUE   revert
[L458]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L459]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == true && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L2]                 revert := revert_hold;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND FALSE  !(__exception)
[L458]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2184]  COND TRUE   DType[this] == SpaghettiTokenV2
[L2185]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2329]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2330]  COND TRUE   src_s399 != msgsender_MSG && allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2331]  COND TRUE   !(allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2332]              revert := true;
[L2185]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2186]  COND TRUE   revert
[L458]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L459]               assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((((__ret_0_ == true && totalSupply_SpaghettiTokenV2[this] == old(totalSupply_SpaghettiTokenV2[this])) && balanceOf_SpaghettiTokenV2[this] == old(balanceOf_SpaghettiTokenV2[this])) && allowance_SpaghettiTokenV2[this] == old(allowance_SpaghettiTokenV2[this])) && symbol_SpaghettiTokenV2[this] == old(symbol_SpaghettiTokenV2[this])) && decimals_SpaghettiTokenV2[this] == old(decimals_SpaghettiTokenV2[this])) && name_SpaghettiTokenV2[this] == old(name_SpaghettiTokenV2[this])) && pastav1_SpaghettiTokenV2[this] == old(pastav1_SpaghettiTokenV2[this])) && foodbank_SpaghettiTokenV2[this] == old(foodbank_SpaghettiTokenV2[this])) && governance_SpaghettiTokenV2[this] == old(governance_SpaghettiTokenV2[this])) && food_SpaghettiTokenV2[this] == old(food_SpaghettiTokenV2[this])) && oven_SpaghettiTokenV2[this] == old(oven_SpaghettiTokenV2[this]));
[L2]                 revert := revert_hold;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:06:12,558 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:12,558 INFO  L82        PathProgramCache]: Analyzing trace with hash -1394847924, now seen corresponding path program 1 times
[2020-11-25 05:06:12,559 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:12,576 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:06:12,615 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:06:12,615 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:06:12,615 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 05:06:12,617 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:06:12,617 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 05:06:12,617 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 05:06:12,618 INFO  L87              Difference]: Start difference. First operand 2766 states and 3055 transitions. cyclomatic complexity: 291 Second operand 4 states.
[2020-11-25 05:06:13,258 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:06:13,259 INFO  L93              Difference]: Finished difference Result 3886 states and 4435 transitions.
[2020-11-25 05:06:13,259 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 05:06:13,259 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3886 states and 4435 transitions.
[2020-11-25 05:06:13,280 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 05:06:13,308 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3886 states to 3748 states and 4271 transitions.
[2020-11-25 05:06:13,308 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1084
[2020-11-25 05:06:13,310 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1113
[2020-11-25 05:06:13,310 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3748 states and 4271 transitions.
[2020-11-25 05:06:13,319 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:06:13,319 INFO  L728         BuchiCegarLoop]: Abstraction has 3748 states and 4271 transitions.
[2020-11-25 05:06:13,324 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3748 states and 4271 transitions.
[2020-11-25 05:06:13,367 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3748 to 2808.
[2020-11-25 05:06:13,367 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2808 states.
[2020-11-25 05:06:13,371 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2808 states to 2808 states and 3031 transitions.
[2020-11-25 05:06:13,371 INFO  L751         BuchiCegarLoop]: Abstraction has 2808 states and 3031 transitions.
[2020-11-25 05:06:13,372 INFO  L631         BuchiCegarLoop]: Abstraction has 2808 states and 3031 transitions.
[2020-11-25 05:06:13,372 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 05:06:13,372 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2808 states and 3031 transitions.
[2020-11-25 05:06:13,380 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:13,380 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:13,380 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:13,383 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:13,383 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_SpaghettiTokenV20 := false;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]     CALL        call main();
[L3710]              assume null == 0;
[L3711]  CALL        call this := FreshRefGenerator__success();
[L1917]              havoc newRef;
[L1918]              assume Alloc[newRef] == false;
[L1919]              Alloc[newRef] := true;
[L1920]              assume newRef != null;
[L3711]  RET         call this := FreshRefGenerator__success();
[L3712]              assume now >= 0;
[L3713]              assume DType[this] == SpaghettiTokenV2;
[L3714]              assume msgvalue_MSG == 0;
[L3715]              gas := gas - 53000;
[L3716]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND FALSE  !(revert)
[L2115]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2072]              assume msgsender_MSG != null;
[L2073]              Balance[this] := 0;
[L2074]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2075]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2076]              sum_balanceOf0[this] := 0;
[L2077]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2078]              sum_allowance1[this] := 0;
[L2079]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2080]              decimals_SpaghettiTokenV2[this] := 18;
[L2081]              name_SpaghettiTokenV2[this] := -432993173;
[L2082]              __var_1 := null;
[L2083]              foodbank_SpaghettiTokenV2[this] := null;
[L2084]              governance_SpaghettiTokenV2[this] := null;
[L2085]              food_SpaghettiTokenV2[this] := 0;
[L2086]              oven_SpaghettiTokenV2[this] := 0;
[L2088]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2089]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2090]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2091]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2092]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2115]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3717]              assume !revert && gas >= 0;
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2218]  COND TRUE   !(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2219]              revert := true;
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND TRUE   src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936
[L2218]  COND TRUE   !(__tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] >= wad_s399)
[L2219]              revert := true;
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:06:13,388 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:13,388 INFO  L82        PathProgramCache]: Analyzing trace with hash 314057011, now seen corresponding path program 1 times
[2020-11-25 05:06:13,388 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:13,405 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:06:13,457 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:06:13,457 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:06:13,457 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-25 05:06:13,458 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:06:13,458 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 05:06:13,458 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 05:06:13,458 INFO  L87              Difference]: Start difference. First operand 2808 states and 3031 transitions. cyclomatic complexity: 225 Second operand 3 states.
[2020-11-25 05:06:13,513 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:06:13,513 INFO  L93              Difference]: Finished difference Result 2932 states and 3185 transitions.
[2020-11-25 05:06:13,513 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 05:06:13,513 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2932 states and 3185 transitions.
[2020-11-25 05:06:13,527 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:13,541 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2932 states to 2932 states and 3185 transitions.
[2020-11-25 05:06:13,542 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 852
[2020-11-25 05:06:13,543 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 852
[2020-11-25 05:06:13,543 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2932 states and 3185 transitions.
[2020-11-25 05:06:13,547 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:06:13,547 INFO  L728         BuchiCegarLoop]: Abstraction has 2932 states and 3185 transitions.
[2020-11-25 05:06:13,550 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2932 states and 3185 transitions.
[2020-11-25 05:06:13,582 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2932 to 2932.
[2020-11-25 05:06:13,582 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 2932 states.
[2020-11-25 05:06:13,588 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 2932 states to 2932 states and 3185 transitions.
[2020-11-25 05:06:13,588 INFO  L751         BuchiCegarLoop]: Abstraction has 2932 states and 3185 transitions.
[2020-11-25 05:06:13,588 INFO  L631         BuchiCegarLoop]: Abstraction has 2932 states and 3185 transitions.
[2020-11-25 05:06:13,588 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 05:06:13,588 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2932 states and 3185 transitions.
[2020-11-25 05:06:13,596 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:13,596 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:13,596 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:13,598 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:13,598 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_SpaghettiTokenV20 := false;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]     CALL        call main();
[L3710]              assume null == 0;
[L3711]  CALL        call this := FreshRefGenerator__success();
[L1917]              havoc newRef;
[L1918]              assume Alloc[newRef] == false;
[L1919]              Alloc[newRef] := true;
[L1920]              assume newRef != null;
[L3711]  RET         call this := FreshRefGenerator__success();
[L3712]              assume now >= 0;
[L3713]              assume DType[this] == SpaghettiTokenV2;
[L3714]              assume msgvalue_MSG == 0;
[L3715]              gas := gas - 53000;
[L3716]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND FALSE  !(revert)
[L2115]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2072]              assume msgsender_MSG != null;
[L2073]              Balance[this] := 0;
[L2074]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2075]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2076]              sum_balanceOf0[this] := 0;
[L2077]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2078]              sum_allowance1[this] := 0;
[L2079]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2080]              decimals_SpaghettiTokenV2[this] := 18;
[L2081]              name_SpaghettiTokenV2[this] := -432993173;
[L2082]              __var_1 := null;
[L2083]              foodbank_SpaghettiTokenV2[this] := null;
[L2084]              governance_SpaghettiTokenV2[this] := null;
[L2085]              food_SpaghettiTokenV2[this] := 0;
[L2086]              oven_SpaghettiTokenV2[this] := 0;
[L2088]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2089]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2090]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2091]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2092]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2115]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3717]              assume !revert && gas >= 0;
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND TRUE   !(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399)
[L2235]              revert := true;
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND TRUE   !(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399)
[L2235]              revert := true;
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:06:13,602 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:13,603 INFO  L82        PathProgramCache]: Analyzing trace with hash -875366397, now seen corresponding path program 1 times
[2020-11-25 05:06:13,603 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:13,620 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:06:13,703 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:06:13,703 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:06:13,703 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 05:06:13,704 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:06:13,704 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:06:13,704 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:06:13,704 INFO  L87              Difference]: Start difference. First operand 2932 states and 3185 transitions. cyclomatic complexity: 255 Second operand 7 states.
[2020-11-25 05:06:14,758 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:06:14,758 INFO  L93              Difference]: Finished difference Result 3188 states and 3472 transitions.
[2020-11-25 05:06:14,758 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-25 05:06:14,759 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3188 states and 3472 transitions.
[2020-11-25 05:06:14,769 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 05:06:14,785 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3188 states to 3188 states and 3472 transitions.
[2020-11-25 05:06:14,785 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 948
[2020-11-25 05:06:14,786 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 948
[2020-11-25 05:06:14,786 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3188 states and 3472 transitions.
[2020-11-25 05:06:14,790 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:06:14,790 INFO  L728         BuchiCegarLoop]: Abstraction has 3188 states and 3472 transitions.
[2020-11-25 05:06:14,794 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3188 states and 3472 transitions.
[2020-11-25 05:06:14,822 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3188 to 3002.
[2020-11-25 05:06:14,823 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3002 states.
[2020-11-25 05:06:14,827 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3002 states to 3002 states and 3263 transitions.
[2020-11-25 05:06:14,827 INFO  L751         BuchiCegarLoop]: Abstraction has 3002 states and 3263 transitions.
[2020-11-25 05:06:14,827 INFO  L631         BuchiCegarLoop]: Abstraction has 3002 states and 3263 transitions.
[2020-11-25 05:06:14,827 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 05:06:14,827 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3002 states and 3263 transitions.
[2020-11-25 05:06:14,833 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:14,833 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:14,833 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:14,836 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:14,836 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_SpaghettiTokenV20 := false;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]     CALL        call main();
[L3710]              assume null == 0;
[L3711]  CALL        call this := FreshRefGenerator__success();
[L1917]              havoc newRef;
[L1918]              assume Alloc[newRef] == false;
[L1919]              Alloc[newRef] := true;
[L1920]              assume newRef != null;
[L3711]  RET         call this := FreshRefGenerator__success();
[L3712]              assume now >= 0;
[L3713]              assume DType[this] == SpaghettiTokenV2;
[L3714]              assume msgvalue_MSG == 0;
[L3715]              gas := gas - 53000;
[L3716]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND FALSE  !(revert)
[L2115]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2072]              assume msgsender_MSG != null;
[L2073]              Balance[this] := 0;
[L2074]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2075]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2076]              sum_balanceOf0[this] := 0;
[L2077]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2078]              sum_allowance1[this] := 0;
[L2079]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2080]              decimals_SpaghettiTokenV2[this] := 18;
[L2081]              name_SpaghettiTokenV2[this] := -432993173;
[L2082]              __var_1 := null;
[L2083]              foodbank_SpaghettiTokenV2[this] := null;
[L2084]              governance_SpaghettiTokenV2[this] := null;
[L2085]              food_SpaghettiTokenV2[this] := 0;
[L2086]              oven_SpaghettiTokenV2[this] := 0;
[L2088]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2089]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2090]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2091]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2092]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2115]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3717]              assume !revert && gas >= 0;
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2238]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2239]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2007]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2009]              revert := true;
[L2239]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2240]  COND TRUE   revert
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2238]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2239]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2007]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]  COND TRUE   !((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76)
[L2009]              revert := true;
[L2239]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2240]  COND TRUE   revert
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:06:14,840 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:14,840 INFO  L82        PathProgramCache]: Analyzing trace with hash 1070541377, now seen corresponding path program 1 times
[2020-11-25 05:06:14,841 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:14,859 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 05:06:14,921 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 05:06:14,921 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 05:06:14,922 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [7] imperfect sequences [] total 7
[2020-11-25 05:06:14,922 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 05:06:14,922 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-25 05:06:14,922 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-25 05:06:14,922 INFO  L87              Difference]: Start difference. First operand 3002 states and 3263 transitions. cyclomatic complexity: 263 Second operand 7 states.
[2020-11-25 05:06:15,059 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 05:06:15,059 INFO  L93              Difference]: Finished difference Result 3040 states and 3310 transitions.
[2020-11-25 05:06:15,059 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 05:06:15,060 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3040 states and 3310 transitions.
[2020-11-25 05:06:15,069 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:15,081 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3040 states to 3040 states and 3310 transitions.
[2020-11-25 05:06:15,081 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 879
[2020-11-25 05:06:15,082 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 879
[2020-11-25 05:06:15,082 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3040 states and 3310 transitions.
[2020-11-25 05:06:15,085 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 05:06:15,085 INFO  L728         BuchiCegarLoop]: Abstraction has 3040 states and 3310 transitions.
[2020-11-25 05:06:15,088 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3040 states and 3310 transitions.
[2020-11-25 05:06:15,114 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3040 to 3009.
[2020-11-25 05:06:15,114 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3009 states.
[2020-11-25 05:06:15,119 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3009 states to 3009 states and 3271 transitions.
[2020-11-25 05:06:15,119 INFO  L751         BuchiCegarLoop]: Abstraction has 3009 states and 3271 transitions.
[2020-11-25 05:06:15,119 INFO  L631         BuchiCegarLoop]: Abstraction has 3009 states and 3271 transitions.
[2020-11-25 05:06:15,119 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 05:06:15,119 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3009 states and 3271 transitions.
[2020-11-25 05:06:15,125 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 05:06:15,125 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 05:06:15,125 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 05:06:15,127 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 05:06:15,127 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_transfer_SpaghettiTokenV20 := false;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]     CALL        call main();
[L3710]              assume null == 0;
[L3711]  CALL        call this := FreshRefGenerator__success();
[L1917]              havoc newRef;
[L1918]              assume Alloc[newRef] == false;
[L1919]              Alloc[newRef] := true;
[L1920]              assume newRef != null;
[L3711]  RET         call this := FreshRefGenerator__success();
[L3712]              assume now >= 0;
[L3713]              assume DType[this] == SpaghettiTokenV2;
[L3714]              assume msgvalue_MSG == 0;
[L3715]              gas := gas - 53000;
[L3716]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND FALSE  !(revert)
[L2115]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2072]              assume msgsender_MSG != null;
[L2073]              Balance[this] := 0;
[L2074]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2075]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2076]              sum_balanceOf0[this] := 0;
[L2077]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2078]              sum_allowance1[this] := 0;
[L2079]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2080]              decimals_SpaghettiTokenV2[this] := 18;
[L2081]              name_SpaghettiTokenV2[this] := -432993173;
[L2082]              __var_1 := null;
[L2083]              foodbank_SpaghettiTokenV2[this] := null;
[L2084]              governance_SpaghettiTokenV2[this] := null;
[L2085]              food_SpaghettiTokenV2[this] := 0;
[L2086]              oven_SpaghettiTokenV2[this] := 0;
[L2088]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2089]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2090]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2091]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2092]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2115]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
[L3717]              assume !revert && gas >= 0;
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2238]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2239]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2007]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2239]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2240]  COND FALSE  !(revert)
[L2246]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2247]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2248]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2249]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2250]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2252]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2025]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2026]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2027]              revert := true;
[L2252]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2253]  COND TRUE   revert
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

Loop:
[L3720]  CALL        call CorralChoice_SpaghettiTokenV2(this);
[L3537]              havoc msgsender_MSG;
[L3538]              havoc msgvalue_MSG;
[L3539]              havoc choice;
[L3540]              havoc __ret_0_totalSupply;
[L3541]              havoc arg551_s0;
[L3542]              havoc __ret_0_balanceOf;
[L3543]              havoc src_s399;
[L3544]              havoc dst_s399;
[L3545]              havoc wad_s399;
[L3546]              havoc __ret_0_transferFrom;
[L3547]              havoc guy_s208;
[L3548]              havoc __ret_0_approve;
[L3549]              havoc arg552_s0;
[L3550]              havoc arg553_s0;
[L3551]              havoc __ret_0_allowance;
[L3552]              havoc __ret_0_symbol;
[L3553]              havoc __ret_0_decimals;
[L3554]              havoc __ret_0_name;
[L3555]              havoc __ret_0_pastav1;
[L3556]              havoc __ret_0_foodbank;
[L3557]              havoc __ret_0_governance;
[L3558]              havoc __ret_0_food;
[L3559]              havoc __ret_0_oven;
[L3560]              havoc guy_s236;
[L3561]              havoc wad_s236;
[L3562]              havoc dst_s253;
[L3563]              havoc wad_s253;
[L3564]              havoc __ret_0_transfer;
[L3565]              havoc __ret_0_mint;
[L3566]              havoc _foodbank_s530;
[L3567]              havoc _governance_s548;
[L3568]              havoc tmpNow;
[L3569]              havoc gas;
[L3570]              assume gas > 4000000 && gas <= 8000000;
[L3571]              tmpNow := now;
[L3572]              havoc now;
[L3573]              assume now > tmpNow;
[L3574]              assume msgsender_MSG != null;
[L3575]              assume DType[msgsender_MSG] != ERC20;
[L3576]              assume DType[msgsender_MSG] != DSMath;
[L3577]              assume DType[msgsender_MSG] != SpaghettiTokenV2;
[L3578]              Alloc[msgsender_MSG] := true;
[L3579]  COND FALSE  !(choice == 20)
[L3585]  COND FALSE  !(choice == 19)
[L3591]  COND FALSE  !(choice == 18)
[L3598]  COND FALSE  !(choice == 17)
[L3604]  COND FALSE  !(choice == 16)
[L3610]  COND FALSE  !(choice == 15)
[L3616]  COND FALSE  !(choice == 14)
[L3622]  COND FALSE  !(choice == 13)
[L3628]  COND FALSE  !(choice == 12)
[L3634]  COND FALSE  !(choice == 11)
[L3640]  COND FALSE  !(choice == 10)
[L3646]  COND FALSE  !(choice == 9)
[L3652]  COND FALSE  !(choice == 8)
[L3658]  COND FALSE  !(choice == 7)
[L3665]  COND TRUE   choice == 6
[L3666]              gas := gas - 21000;
[L3667]  COND TRUE   gas >= 0
[L3668]              assume wad_s253 >= 0 && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3669]              assume msgvalue_MSG == 0;
[L3670]  CALL        call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2238]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2239]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2007]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2239]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2240]  COND FALSE  !(revert)
[L2246]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2247]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2248]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2249]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2250]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2252]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2025]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2026]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2027]              revert := true;
[L2252]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2253]  COND TRUE   revert
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L3720]  RET         call CorralChoice_SpaghettiTokenV2(this);

[2020-11-25 05:06:15,132 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:15,132 INFO  L82        PathProgramCache]: Analyzing trace with hash 1491042639, now seen corresponding path program 1 times
[2020-11-25 05:06:15,133 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:15,151 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:15,171 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:15,229 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:15,230 INFO  L82        PathProgramCache]: Analyzing trace with hash -1998835429, now seen corresponding path program 1 times
[2020-11-25 05:06:15,230 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:15,241 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:15,252 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:15,271 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 05:06:15,271 INFO  L82        PathProgramCache]: Analyzing trace with hash 1116041705, now seen corresponding path program 1 times
[2020-11-25 05:06:15,272 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 05:06:15,299 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:15,335 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
[2020-11-25 05:06:15,793 WARN  L188               SmtUtils]: Spent 251.00 ms on a formula simplification. DAG size of input: 67 DAG size of output: 66
[2020-11-25 05:06:16,006 WARN  L188               SmtUtils]: Spent 210.00 ms on a formula simplification. DAG size of input: 118 DAG size of output: 111
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
[2020-11-25 05:06:16,132 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification that was a NOOP. DAG size: 103
[2020-11-25 05:06:16,409 WARN  L188               SmtUtils]: Spent 276.00 ms on a formula simplification. DAG size of input: 106 DAG size of output: 104
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #5: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 37 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 547 to 1093
[2020-11-25 05:06:16,710 WARN  L188               SmtUtils]: Spent 125.00 ms on a formula simplification that was a NOOP. DAG size: 91
[2020-11-25 05:06:17,243 WARN  L188               SmtUtils]: Spent 530.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 174
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
[2020-11-25 05:06:17,555 WARN  L188               SmtUtils]: Spent 293.00 ms on a formula simplification. DAG size of input: 122 DAG size of output: 118
[2020-11-25 05:06:17,940 WARN  L188               SmtUtils]: Spent 383.00 ms on a formula simplification that was a NOOP. DAG size: 289
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.002s / 0.002s total
Resizing node table from 3331 to 6661
[2020-11-25 05:06:18,551 WARN  L188               SmtUtils]: Spent 595.00 ms on a formula simplification that was a NOOP. DAG size: 237
[2020-11-25 05:06:19,997 WARN  L188               SmtUtils]: Spent 1.44 s on a formula simplification. DAG size of input: 317 DAG size of output: 271
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:06:20,476 WARN  L188               SmtUtils]: Spent 448.00 ms on a formula simplification. DAG size of input: 165 DAG size of output: 161
[2020-11-25 05:06:20,989 WARN  L188               SmtUtils]: Spent 510.00 ms on a formula simplification that was a NOOP. DAG size: 341
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-25 05:06:21,485 WARN  L188               SmtUtils]: Spent 485.00 ms on a formula simplification that was a NOOP. DAG size: 270
[2020-11-25 05:06:22,045 WARN  L188               SmtUtils]: Spent 558.00 ms on a formula simplification that was a NOOP. DAG size: 270
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #6: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
[2020-11-25 05:06:22,243 WARN  L188               SmtUtils]: Spent 187.00 ms on a formula simplification that was a NOOP. DAG size: 157
[2020-11-25 05:06:22,261 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 05:06:22,609 WARN  L188               SmtUtils]: Spent 109.00 ms on a formula simplification that was a NOOP. DAG size: 252
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3019 to 6037
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 05:06:22,906 WARN  L188               SmtUtils]: Spent 131.00 ms on a formula simplification. DAG size of input: 67 DAG size of output: 66
[2020-11-25 05:06:23,057 WARN  L188               SmtUtils]: Spent 150.00 ms on a formula simplification. DAG size of input: 118 DAG size of output: 111
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
[2020-11-25 05:06:23,423 WARN  L188               SmtUtils]: Spent 266.00 ms on a formula simplification. DAG size of input: 106 DAG size of output: 103
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #6: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 05:06:24,110 WARN  L188               SmtUtils]: Spent 483.00 ms on a formula simplification. DAG size of input: 185 DAG size of output: 174
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #6: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #7: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
[2020-11-25 05:06:24,355 WARN  L188               SmtUtils]: Spent 236.00 ms on a formula simplification. DAG size of input: 121 DAG size of output: 117
[2020-11-25 05:06:24,642 WARN  L188               SmtUtils]: Spent 285.00 ms on a formula simplification that was a NOOP. DAG size: 288
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
[2020-11-25 05:06:25,233 WARN  L188               SmtUtils]: Spent 580.00 ms on a formula simplification that was a NOOP. DAG size: 236
[2020-11-25 05:06:26,613 WARN  L188               SmtUtils]: Spent 1.38 s on a formula simplification. DAG size of input: 315 DAG size of output: 270
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
[2020-11-25 05:06:27,029 WARN  L188               SmtUtils]: Spent 400.00 ms on a formula simplification. DAG size of input: 164 DAG size of output: 160
[2020-11-25 05:06:27,498 WARN  L188               SmtUtils]: Spent 466.00 ms on a formula simplification that was a NOOP. DAG size: 340
Garbage collection #1: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #2: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #3: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #4: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #5: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #6: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #7: 8053 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 8053 to 16103
[2020-11-25 05:06:27,931 WARN  L188               SmtUtils]: Spent 424.00 ms on a formula simplification that was a NOOP. DAG size: 269
[2020-11-25 05:06:29,578 WARN  L188               SmtUtils]: Spent 1.64 s on a formula simplification. DAG size of input: 472 DAG size of output: 466
Garbage collection #1: 181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 181 to 359
Garbage collection #2: 359 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 359 to 709
Garbage collection #3: 709 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 709 to 1409
Garbage collection #4: 1409 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1409 to 2803
Garbage collection #5: 2803 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2803 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 5591 to 11177
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-25 05:06:29,796 WARN  L188               SmtUtils]: Spent 197.00 ms on a formula simplification that was a NOOP. DAG size: 198
[2020-11-25 05:06:30,137 WARN  L188               SmtUtils]: Spent 312.00 ms on a formula simplification that was a NOOP. DAG size: 307
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3137 to 6271
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-25 05:06:30,294 WARN  L188               SmtUtils]: Spent 151.00 ms on a formula simplification that was a NOOP. DAG size: 198
[2020-11-25 05:06:30,883 WARN  L188               SmtUtils]: Spent 587.00 ms on a formula simplification. DAG size of input: 309 DAG size of output: 308
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3137 to 6271
[2020-11-25 05:06:31,176 WARN  L188               SmtUtils]: Spent 288.00 ms on a formula simplification that was a NOOP. DAG size: 304
[2020-11-25 05:06:31,217 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:31,253 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 05:06:31,265 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 05:06:31 BasicIcfg
[2020-11-25 05:06:31,265 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 05:06:31,266 INFO  L168              Benchmark]: Toolchain (without parser) took 21987.32 ms. Allocated memory was 1.0 GB in the beginning and 2.4 GB in the end (delta: 1.3 GB). Free memory was 940.6 MB in the beginning and 1.3 GB in the end (delta: -370.9 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,266 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,266 INFO  L168              Benchmark]: Boogie Preprocessor took 82.71 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,267 INFO  L168              Benchmark]: UtopiaSpecLang took 58.80 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,267 INFO  L168              Benchmark]: Boogie Printer took 12.99 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,267 INFO  L168              Benchmark]: RCFGBuilder took 626.90 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.5 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,268 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.32 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,268 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1485.88 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 252.7 MB). Free memory was 818.9 MB in the beginning and 1.2 GB in the end (delta: -365.7 MB). Peak memory consumption was 201.2 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,269 INFO  L168              Benchmark]: BlockEncodingV2 took 112.30 ms. Allocated memory is still 1.3 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 49.6 MB). Peak memory consumption was 49.6 MB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,269 INFO  L168              Benchmark]: BuchiAutomizer took 19570.40 ms. Allocated memory was 1.3 GB in the beginning and 2.4 GB in the end (delta: 1.1 GB). Free memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: -176.6 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
[2020-11-25 05:06:31,272 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    3394 locations, 5797 edges
  - StatisticsResult: Encoded RCFG
    3318 locations, 5583 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 82.71 ms. Allocated memory is still 1.0 GB. Free memory was 940.6 MB in the beginning and 929.8 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 58.80 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 924.5 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.99 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 919.1 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 626.90 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 822.5 MB in the end (delta: 96.6 MB). Peak memory consumption was 96.6 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.32 ms. Allocated memory is still 1.0 GB. Free memory was 822.5 MB in the beginning and 818.9 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1485.88 ms. Allocated memory was 1.0 GB in the beginning and 1.3 GB in the end (delta: 252.7 MB). Free memory was 818.9 MB in the beginning and 1.2 GB in the end (delta: -365.7 MB). Peak memory consumption was 201.2 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 112.30 ms. Allocated memory is still 1.3 GB. Free memory was 1.2 GB in the beginning and 1.1 GB in the end (delta: 49.6 MB). Peak memory consumption was 49.6 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 19570.40 ms. Allocated memory was 1.3 GB in the beginning and 2.4 GB in the end (delta: 1.1 GB). Free memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: -176.6 MB). Peak memory consumption was 1.5 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1441 locations, 1806 edges
  - StatisticsResult: BuchiProgram size
    3394 locations, 5797 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 7 locations. The remainder module has 3009 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 19.5s and 6 iterations.  TraceHistogramMax:1. Analysis of lassos took 16.6s. Construction of modules took 1.4s. BÃ¼chi inclusion checks took 0.6s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1157 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 3009 states and ocurred in iteration 5.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 15733 SDtfs, 9048 SDslu, 29780 SDs, 0 SdLazy, 5721 SolverSat, 1853 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.4s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(115792089237316195423570985008687907853269984665640564039457584007913129639936) = (new SpaghettiTokenV2)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639943});
[L240]               havoc __exception;
[L241]               revert := false;
[L242]   COND FALSE  !(__exception)
[L268]   CALL        call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L2111]  CALL        call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L1981]  CALL        call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1966]              assume msgsender_MSG != null;
[L1967]              Balance[this] := 0;
[L1981]  RET         call DSMath_DSMath_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1982]  COND FALSE  !(revert)
[L2111]  RET         call DSMath_DSMath__success(this, msgsender_MSG, msgvalue_MSG);
[L2112]  COND FALSE  !(revert)
[L2115]  CALL        call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2072]              assume msgsender_MSG != null;
[L2073]              Balance[this] := 0;
[L2074]              totalSupply_SpaghettiTokenV2[this] := 0;
[L2075]              balanceOf_SpaghettiTokenV2[this] := zeroRefintArr();
[L2076]              sum_balanceOf0[this] := 0;
[L2077]              allowance_SpaghettiTokenV2[this] := zeroRefRefintArr();
[L2078]              sum_allowance1[this] := 0;
[L2079]              symbol_SpaghettiTokenV2[this] := 1065626718;
[L2080]              decimals_SpaghettiTokenV2[this] := 18;
[L2081]              name_SpaghettiTokenV2[this] := -432993173;
[L2082]              __var_1 := null;
[L2083]              foodbank_SpaghettiTokenV2[this] := null;
[L2084]              governance_SpaghettiTokenV2[this] := null;
[L2085]              food_SpaghettiTokenV2[this] := 0;
[L2086]              oven_SpaghettiTokenV2[this] := 0;
[L2088]              governance_SpaghettiTokenV2[this] := msgsender_MSG;
[L2089]              totalSupply_SpaghettiTokenV2[this] := 5000000000000000000000000;
[L2090]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2091]              balanceOf_SpaghettiTokenV2[this][msgsender_MSG] := 5000000000000000000000000;
[L2092]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_SpaghettiTokenV2[this][msgsender_MSG];
[L2115]  RET         call SpaghettiTokenV2_SpaghettiTokenV2_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2116]  COND FALSE  !(revert)
[L268]   RET         call SpaghettiTokenV2_SpaghettiTokenV2__success(this, msgsender_MSG, msgvalue_MSG);
[L269]               assume !revert && gas >= 0;
[L3716]  RET         call SpaghettiTokenV2_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG);
SpaghettiTokenV2(115792089237316195423570985008687907853269984665640564039457584007913129639936).transfer~address~uint256.gas(3979002)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639939, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639939, wad : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2238]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2239]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2007]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2239]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2240]  COND FALSE  !(revert)
[L2246]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2247]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2248]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2249]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2250]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2252]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2025]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2026]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2027]              revert := true;
[L2252]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2253]  COND TRUE   revert
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);

Loop:
SpaghettiTokenV2(115792089237316195423570985008687907853269984665640564039457584007913129639936).transfer~address~uint256.gas(3979001)({from : 115792089237316195423570985008687907853269984665640564039457584007913129639945, dst : 115792089237316195423570985008687907853269984665640564039457584007913129639945, wad : 0});
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG == dst_s253 && wad_s253 <= balanceOf_SpaghettiTokenV2[this][msgsender_MSG]) && wad_s253 >= 0) && wad_s253 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][dst_s253] >= 0) && balanceOf_SpaghettiTokenV2[this][dst_s253] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] >= 0) && balanceOf_SpaghettiTokenV2[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_SpaghettiTokenV20 := true;
[L2]                 call_transfer_SpaghettiTokenV20 := false;
[L2]                 revert := revert_hold;
[L430]               havoc __exception;
[L431]               revert := false;
[L432]   COND TRUE   __exception
[L433]               __tmp__Balance := Balance;
[L434]               __tmp__DType := DType;
[L435]               __tmp__Alloc := Alloc;
[L436]               __tmp__balance_ADDR := balance_ADDR;
[L437]               __tmp__M_Ref_int := M_Ref_int;
[L438]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L439]               __tmp__alloc_allowance_SpaghettiTokenV2_lvl0 := alloc_allowance_SpaghettiTokenV2_lvl0;
[L440]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L441]               __tmp__sum_allowance1 := sum_allowance1;
[L442]               __tmp__Length := Length;
[L443]               __tmp__now := now;
[L444]               __tmp__totalSupply_SpaghettiTokenV2 := totalSupply_SpaghettiTokenV2;
[L445]               __tmp__balanceOf_SpaghettiTokenV2 := balanceOf_SpaghettiTokenV2;
[L446]               __tmp__allowance_SpaghettiTokenV2 := allowance_SpaghettiTokenV2;
[L447]               __tmp__symbol_SpaghettiTokenV2 := symbol_SpaghettiTokenV2;
[L448]               __tmp__decimals_SpaghettiTokenV2 := decimals_SpaghettiTokenV2;
[L449]               __tmp__name_SpaghettiTokenV2 := name_SpaghettiTokenV2;
[L450]               __tmp__pastav1_SpaghettiTokenV2 := pastav1_SpaghettiTokenV2;
[L451]               __tmp__foodbank_SpaghettiTokenV2 := foodbank_SpaghettiTokenV2;
[L452]               __tmp__governance_SpaghettiTokenV2 := governance_SpaghettiTokenV2;
[L453]               __tmp__food_SpaghettiTokenV2 := food_SpaghettiTokenV2;
[L454]               __tmp__oven_SpaghettiTokenV2 := oven_SpaghettiTokenV2;
[L455]   CALL        call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L2169]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2170]  CALL        call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2216]              __var_5 := -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2217]  COND FALSE  !(src_s399 != msgsender_MSG && __tmp__allowance_SpaghettiTokenV2[this][src_s399][msgsender_MSG] != -1 % 115792089237316195423570985008687907853269984665640564039457584007913129639936)
[L2234]  COND FALSE  !(!(__tmp__balanceOf_SpaghettiTokenV2[this][src_s399] >= wad_s399))
[L2238]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2239]  CALL        call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2007]              z_s76 := (x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2008]  COND FALSE  !(!((x_s76 - y_s76) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 <= x_s76))
[L2239]  RET         call __var_7 := sub~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, __tmp__balanceOf_SpaghettiTokenV2[this][src_s399], wad_s399);
[L2240]  COND FALSE  !(revert)
[L2246]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2247]              __tmp__balanceOf_SpaghettiTokenV2[this][src_s399] := __var_7;
[L2248]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_SpaghettiTokenV2[this][src_s399];
[L2249]              one_s399 := wad_s399 / 100 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2250]              __var_9 := 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2251]  COND TRUE   __tmp__DType[this] == SpaghettiTokenV2
[L2252]  CALL        call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2025]              z_s104 := nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2026]  COND TRUE   !(y_s104 == 0 || nonlinearDiv(nonlinearMul(x_s104, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936, y_s104) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 == x_s104)
[L2027]              revert := true;
[L2252]  RET         call __var_8 := mul~uint256~uint256_DSMath__fail(this, msgsender_MSG, msgvalue_MSG, one_s399, 2 % 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2253]  COND TRUE   revert
[L2170]  RET         call __var_4 := transferFrom~address~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, dst_s253, wad_s253);
[L2171]  COND TRUE   revert
[L455]   RET         call __ret_0_ := transfer~address~uint256_SpaghettiTokenV2__fail(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);
[L456]               assume revert || gas < 0;
[L3670]  RET         call __ret_0_transfer := transfer~address~uint256_SpaghettiTokenV2(this, msgsender_MSG, msgvalue_MSG, dst_s253, wad_s253);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
