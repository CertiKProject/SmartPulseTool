This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:08:11,022 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:08:11,023 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:08:11,034 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:08:11,034 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:08:11,035 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:08:11,036 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:08:11,037 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:08:11,038 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:08:11,039 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:08:11,040 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:08:11,040 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:08:11,041 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:08:11,041 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:08:11,042 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:08:11,043 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:08:11,043 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:08:11,044 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:08:11,045 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:08:11,047 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:08:11,048 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:08:11,048 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:08:11,050 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:08:11,050 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:08:11,050 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:08:11,051 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:08:11,051 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:08:11,052 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:08:11,052 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:08:11,052 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:08:11,052 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:08:11,053 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:08:11,053 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:08:11,054 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:08:11,054 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:08:11,055 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:08:11,055 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:08:11,055 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:08:11,055 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:08:11,056 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:08:11,056 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:08:11,057 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:08:11,064 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:08:11,064 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:08:11,065 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:08:11,065 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:08:11,065 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:08:11,065 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:08:11,065 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:08:11,065 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:08:11,066 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:08:11,066 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:08:11,066 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:08:11,067 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:08:11,067 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:08:11,087 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:08:11,103 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:08:11,108 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:08:11,111 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:08:11,112 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:08:11,112 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl
[2020-11-24 20:08:11,113 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl'
[2020-11-24 20:08:11,212 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:08:11,213 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:08:11,213 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:08:11,213 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:08:11,214 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:08:11,229 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,231 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,262 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,263 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,284 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,296 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,305 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,316 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:08:11,317 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:08:11,317 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:08:11,319 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:08:11,322 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/1) ...
[2020-11-24 20:08:11,346 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:08:11,352 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:08:11,360 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:08:11,366 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( p1!=msg.sender && p1!=recipient_s277 ) && msg.sender!=recipient_s277 ) && amount_s277<=_balances_ERC20[this][msg.sender] ) && ( _balances_ERC20[this][recipient_s277] + amount_s277 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && amount_s277>=0 ) && amount_s277<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][recipient_s277]>=0 ) && _balances_ERC20[this][recipient_s277]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_ERC20[this][msg.sender]>=0 ) && _balances_ERC20[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:08:11,369 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( __ret_0_==true && _balances_ERC20[this][msg.sender]==( ( old(_balances_ERC20[this][msg.sender]) ) - amount_s277 ) ) && _balances_ERC20[this][recipient_s277]==( ( old(_balances_ERC20[this][recipient_s277]) ) + amount_s277 ) ) && _totalSupply_ERC20[this]==( old(_totalSupply_ERC20[this]) ) ) && _allowances_ERC20[this]==( old(_allowances_ERC20[this]) ) ) && _balances_ERC20[this][p1]==( old(_balances_ERC20[this][p1]) ) ) && _name_ERC20Detailed[this]==( old(_name_ERC20Detailed[this]) ) ) && _symbol_ERC20Detailed[this]==( old(_symbol_ERC20Detailed[this]) ) ) && _decimals_ERC20Detailed[this]==( old(_decimals_ERC20Detailed[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transfer~address~uint256_ERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[recipient_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],IdentifierExpression[amount_s277,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_allowances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_ERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_name_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_symbol_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_decimals_ERC20Detailed,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_ERC20>]]]]]]
[2020-11-24 20:08:11,376 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(ERC20.transfer(to, value), p1 != msg.sender && p1 != to && msg.sender != to && value <= _balances_ERC20[this][msg.sender] && _balances_ERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][to] >= 0 && _balances_ERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_ERC20[this][msg.sender] >= 0 &&  _balances_ERC20[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(ERC20.transfer(to, value), return == true && _balances_ERC20[this][msg.sender] == old(_balances_ERC20[this][msg.sender]) - value && _balances_ERC20[this][to] == old(_balances_ERC20[this][to]) + value && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this]) && _allowances_ERC20[this] == old(_allowances_ERC20[this]) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1]) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this]) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this]) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]))))
[2020-11-24 20:08:11,376 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_ERC200) ==> ( <>AP(success_transfer_ERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:08:11,391 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:08:11 PropertyContainer
[2020-11-24 20:08:11,391 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:08:11,392 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:08:11,392 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:08:11,392 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:08:11,393 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/2) ...
[2020-11-24 20:08:11,394 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:08:11,394 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:08:11,413 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:08:11" (2/2) ...
[2020-11-24 20:08:11,413 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:08:11,413 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:08:11,413 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:08:11,413 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:08:11,414 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/2) ...
[2020-11-24 20:08:11,468 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:08:11,468 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:08:11,468 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:08:11,468 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:08:11,468 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context
[2020-11-24 20:08:11,469 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__success
[2020-11-24 20:08:11,469 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:08:11,470 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:08:11,470 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:08:11,471 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-24 20:08:11,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-24 20:08:11,471 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20
[2020-11-24 20:08:11,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20
[2020-11-24 20:08:11,471 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20
[2020-11-24 20:08:11,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20
[2020-11-24 20:08:11,471 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20
[2020-11-24 20:08:11,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20
[2020-11-24 20:08:11,471 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-24 20:08:11,471 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20
[2020-11-24 20:08:11,472 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20
[2020-11-24 20:08:11,472 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:08:11,472 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:08:11,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed
[2020-11-24 20:08:11,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed
[2020-11-24 20:08:11,473 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed
[2020-11-24 20:08:11,473 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed
[2020-11-24 20:08:11,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:08:11,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:08:11,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:08:11,474 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:08:11,474 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:08:11,475 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-24 20:08:11,475 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-24 20:08:11,475 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:08:11,475 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken
[2020-11-24 20:08:11,475 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken
[2020-11-24 20:08:11,475 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:08:11,475 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken
[2020-11-24 20:08:11,475 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken
[2020-11-24 20:08:11,476 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken
[2020-11-24 20:08:11,476 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken
[2020-11-24 20:08:11,476 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:08:11,476 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:08:11,476 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Context
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Context
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_KeepToken
[2020-11-24 20:08:11,477 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__success
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure Context_Context__fail
[2020-11-24 20:08:11,478 INFO  L130     BoogieDeclarations]: Found specification of procedure _msgSender_Context__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__success
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__success
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:08:11,479 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__success
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:08:11,480 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:08:11,481 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__success
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure name_ERC20Detailed__fail
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__success
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__success
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:08:11,482 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__success
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure KeepToken_KeepToken__fail
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:08:11,483 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__success
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure NAME_KeepToken__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__success
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__success
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:08:11,484 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256~string_SafeMath__success
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:08:11,485 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256~string_SafeMath__success
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__fail
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256~string_SafeMath__success
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__fail
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context_NoBaseCtor__success
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__fail
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure Context_Context__success
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__fail
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure _msgSender_Context__success
[2020-11-24 20:08:11,486 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__fail
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_ERC20__success
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__fail
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_ERC20__success
[2020-11-24 20:08:11,487 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__fail
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_ERC20__success
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__fail
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_ERC20__success
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__fail
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_ERC20__success
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__fail
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_ERC20__success
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__fail
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_ERC20__success
[2020-11-24 20:08:11,488 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__fail
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20__success
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__fail
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_ERC20__success
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__fail
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_ERC20__success
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__fail
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_ERC20__success
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__fail
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_ERC20__success
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__fail
[2020-11-24 20:08:11,489 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed_NoBaseCtor__success
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__fail
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Detailed_ERC20Detailed__success
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__fail
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_ERC20Detailed__success
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__fail
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_ERC20Detailed__success
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__fail
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_ERC20Detailed__success
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__fail
[2020-11-24 20:08:11,490 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable_NoBaseCtor__success
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__fail
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Burnable_ERC20Burnable__success
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__fail
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_ERC20Burnable__success
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__fail
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_ERC20Burnable__success
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__fail
[2020-11-24 20:08:11,491 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken_NoBaseCtor__success
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__fail
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure KeepToken_KeepToken__success
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__fail
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_KeepToken__success
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__fail
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure NAME_KeepToken__success
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__fail
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure SYMBOL_KeepToken__success
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__fail
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure DECIMALS_KeepToken__success
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__fail
[2020-11-24 20:08:11,492 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_KeepToken__success
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Context
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Context
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:08:11,493 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Detailed
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Detailed
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Burnable
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Burnable
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_KeepToken
[2020-11-24 20:08:11,494 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:08:11,495 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:08:11,495 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:08:11,817 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:08:11,817 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:08:11,817 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:08:12,067 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:08:12,421 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:08:12,421 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:08:12,423 INFO  L202        PluginConnector]: Adding new model KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:08:12 BoogieIcfgContainer
[2020-11-24 20:08:12,423 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:08:11" (2/2) ...
[2020-11-24 20:08:12,423 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:08:12,424 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@7c5104a6 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:08:12, skipping insertion in model container
[2020-11-24 20:08:12,424 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:08:12,424 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:08:12,424 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:08:12,426 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:08:12,426 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/3) ...
[2020-11-24 20:08:12,426 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@8cb612c and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:08:12, skipping insertion in model container
[2020-11-24 20:08:12,426 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:08:11" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:08:12,465 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:08:12 NWAContainer
[2020-11-24 20:08:12,465 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:08:12,465 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:08:12,465 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:08:12,466 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:08:12,467 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:08:12" (3/4) ...
[2020-11-24 20:08:12,468 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@5a4178f5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:08:12, skipping insertion in model container
[2020-11-24 20:08:12,468 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:08:12" (4/4) ...
[2020-11-24 20:08:12,471 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:08:12,476 INFO  L110   BuchiProductObserver]: Initial RCFG 2279 locations, 3329 edges
[2020-11-24 20:08:12,476 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:08:12,489 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:08:14,305 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:08:14,315 INFO  L110   BuchiProductObserver]: BuchiProgram size 5862 locations, 10882 edges
[2020-11-24 20:08:14,315 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:08:14 BoogieIcfgContainer
[2020-11-24 20:08:14,315 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:08:14,316 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:08:14,316 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:08:14,318 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:08:14,318 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:08:14" (1/1) ...
[2020-11-24 20:08:14,444 INFO  L313           BlockEncoder]: Initial Icfg 5862 locations, 10882 edges
[2020-11-24 20:08:14,444 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:08:14,445 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:08:14,445 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:08:14,445 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:08:14,458 INFO  L70    emoveInfeasibleEdges]: Removed 204 edges and 19 locations because of local infeasibility
[2020-11-24 20:08:14,467 INFO  L70        RemoveSinkStates]: Removed 140 edges and 93 locations by removing sink states
[2020-11-24 20:08:14,479 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:08:14,483 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:08:14,486 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:08:14,486 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:08:14,489 INFO  L313           BlockEncoder]: Encoded RCFG 5726 locations, 10503 edges
[2020-11-24 20:08:14,490 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:08:14 BasicIcfg
[2020-11-24 20:08:14,490 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:08:14,490 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:08:14,490 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:08:14,492 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:08:14,492 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:08:14,492 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:08:11" (1/6) ...
[2020-11-24 20:08:14,494 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7c3059fb and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:08:14, skipping insertion in model container
[2020-11-24 20:08:14,494 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:08:14,494 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:08:11" (2/6) ...
[2020-11-24 20:08:14,494 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7c3059fb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:08:14, skipping insertion in model container
[2020-11-24 20:08:14,494 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:08:14,494 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:08:12" (3/6) ...
[2020-11-24 20:08:14,494 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7c3059fb and model type KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:08:14, skipping insertion in model container
[2020-11-24 20:08:14,494 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:08:14,494 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:08:12" (4/6) ...
[2020-11-24 20:08:14,495 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7c3059fb and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:08:14, skipping insertion in model container
[2020-11-24 20:08:14,495 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:08:14,495 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:08:14" (5/6) ...
[2020-11-24 20:08:14,495 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7c3059fb and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:08:14, skipping insertion in model container
[2020-11-24 20:08:14,495 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:08:14,495 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:08:14" (6/6) ...
[2020-11-24 20:08:14,496 INFO  L404   chiAutomizerObserver]: Analyzing ICFG KeepToken_0x85Eee30c52B0b379b046Fb0F85F4f3Dc3009aFEC_transfer-normal.bpl_BEv2
[2020-11-24 20:08:14,522 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:08:14,522 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:08:14,522 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:08:14,522 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:08:14,522 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:08:14,522 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:08:14,522 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:08:14,522 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:08:14,522 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:08:14,565 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5726 states.
[2020-11-24 20:08:14,625 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:14,625 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:14,626 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:14,632 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:14,633 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:14,633 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:08:14,633 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5726 states.
[2020-11-24 20:08:14,655 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:14,656 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:14,656 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:14,657 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:14,657 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND TRUE   revert
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND TRUE   choice == 18
[L6046]              gas := gas - 21000;
[L6047]  COND FALSE  !(gas >= 0)
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:08:14,670 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:14,670 INFO  L82        PathProgramCache]: Analyzing trace with hash 407099636, now seen corresponding path program 1 times
[2020-11-24 20:08:14,674 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:14,689 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:08:14,725 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:08:14,727 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:08:14,727 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:08:15,077 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:08:15,086 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:08:15,086 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:08:15,088 INFO  L87              Difference]: Start difference. First operand 5726 states. Second operand 3 states.
[2020-11-24 20:08:15,390 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:08:15,391 INFO  L93              Difference]: Finished difference Result 3765 states and 4650 transitions.
[2020-11-24 20:08:15,391 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:08:15,392 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3765 states and 4650 transitions.
[2020-11-24 20:08:15,412 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:15,444 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3765 states to 3765 states and 4650 transitions.
[2020-11-24 20:08:15,444 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:08:15,447 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 823
[2020-11-24 20:08:15,447 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3765 states and 4650 transitions.
[2020-11-24 20:08:15,456 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:08:15,457 INFO  L728         BuchiCegarLoop]: Abstraction has 3765 states and 4650 transitions.
[2020-11-24 20:08:15,472 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3765 states and 4650 transitions.
[2020-11-24 20:08:15,532 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3765 to 3765.
[2020-11-24 20:08:15,533 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3765 states.
[2020-11-24 20:08:15,540 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3765 states to 3765 states and 4650 transitions.
[2020-11-24 20:08:15,541 INFO  L751         BuchiCegarLoop]: Abstraction has 3765 states and 4650 transitions.
[2020-11-24 20:08:15,541 INFO  L631         BuchiCegarLoop]: Abstraction has 3765 states and 4650 transitions.
[2020-11-24 20:08:15,541 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:08:15,541 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3765 states and 4650 transitions.
[2020-11-24 20:08:15,550 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:15,550 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:15,550 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:15,552 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:15,552 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND TRUE   revert
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2739]  COND TRUE   DType[this] == KeepToken
[L2740]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2575]              __ret_0_ := msgsender_MSG;
[L2740]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2741]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L491]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s277) && _balances_ERC20[this][recipient_s277] == old(_balances_ERC20[this][recipient_s277]) + amount_s277) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2739]  COND TRUE   DType[this] == KeepToken
[L2740]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2575]              __ret_0_ := msgsender_MSG;
[L2740]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2741]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L491]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s277) && _balances_ERC20[this][recipient_s277] == old(_balances_ERC20[this][recipient_s277]) + amount_s277) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:08:15,555 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:15,555 INFO  L82        PathProgramCache]: Analyzing trace with hash 1294651408, now seen corresponding path program 1 times
[2020-11-24 20:08:15,556 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:15,565 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:08:15,585 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:08:15,585 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:08:15,585 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:08:15,586 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:08:15,587 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:08:15,587 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:08:15,587 INFO  L87              Difference]: Start difference. First operand 3765 states and 4650 transitions. cyclomatic complexity: 887 Second operand 3 states.
[2020-11-24 20:08:15,697 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:08:15,698 INFO  L93              Difference]: Finished difference Result 4751 states and 5738 transitions.
[2020-11-24 20:08:15,698 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:08:15,698 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4751 states and 5738 transitions.
[2020-11-24 20:08:15,716 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:08:15,737 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4751 states to 4751 states and 5738 transitions.
[2020-11-24 20:08:15,737 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1109
[2020-11-24 20:08:15,739 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1109
[2020-11-24 20:08:15,739 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4751 states and 5738 transitions.
[2020-11-24 20:08:15,748 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:08:15,748 INFO  L728         BuchiCegarLoop]: Abstraction has 4751 states and 5738 transitions.
[2020-11-24 20:08:15,753 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4751 states and 5738 transitions.
[2020-11-24 20:08:15,796 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4751 to 4141.
[2020-11-24 20:08:15,796 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4141 states.
[2020-11-24 20:08:15,803 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4141 states to 4141 states and 4994 transitions.
[2020-11-24 20:08:15,803 INFO  L751         BuchiCegarLoop]: Abstraction has 4141 states and 4994 transitions.
[2020-11-24 20:08:15,803 INFO  L631         BuchiCegarLoop]: Abstraction has 4141 states and 4994 transitions.
[2020-11-24 20:08:15,803 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:08:15,803 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4141 states and 4994 transitions.
[2020-11-24 20:08:15,809 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:15,809 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:15,809 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:15,812 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:15,812 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND TRUE   !(account_s503 != null)
[L3411]              revert := true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND TRUE   revert
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2739]  COND TRUE   DType[this] == KeepToken
[L2740]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2575]              __ret_0_ := msgsender_MSG;
[L2740]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2741]  COND FALSE  !(revert)
[L2757]  COND TRUE   DType[this] == KeepToken
[L2758]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2758]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2759]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L491]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s277) && _balances_ERC20[this][recipient_s277] == old(_balances_ERC20[this][recipient_s277]) + amount_s277) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2739]  COND TRUE   DType[this] == KeepToken
[L2740]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2575]              __ret_0_ := msgsender_MSG;
[L2740]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2741]  COND FALSE  !(revert)
[L2757]  COND TRUE   DType[this] == KeepToken
[L2758]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2758]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2759]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L491]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s277) && _balances_ERC20[this][recipient_s277] == old(_balances_ERC20[this][recipient_s277]) + amount_s277) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:08:15,817 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:15,817 INFO  L82        PathProgramCache]: Analyzing trace with hash -1830084051, now seen corresponding path program 1 times
[2020-11-24 20:08:15,818 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:15,833 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:08:15,908 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 21 refuted. 0 times theorem prover too weak. 162 trivial. 0 not checked.
[2020-11-24 20:08:15,908 INFO  L312   seRefinementStrategy]: Constructing automaton from 0 perfect and 1 imperfect interpolant sequences.
[2020-11-24 20:08:15,908 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [] imperfect sequences [7] total 7
[2020-11-24 20:08:15,909 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:08:15,909 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 7 interpolants.
[2020-11-24 20:08:15,909 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=11, Invalid=31, Unknown=0, NotChecked=0, Total=42
[2020-11-24 20:08:15,909 INFO  L87              Difference]: Start difference. First operand 4141 states and 4994 transitions. cyclomatic complexity: 855 Second operand 7 states.
[2020-11-24 20:08:15,971 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:08:15,971 INFO  L93              Difference]: Finished difference Result 4149 states and 5001 transitions.
[2020-11-24 20:08:15,971 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-24 20:08:15,972 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4149 states and 5001 transitions.
[2020-11-24 20:08:15,985 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:16,002 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4149 states to 4140 states and 4992 transitions.
[2020-11-24 20:08:16,002 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 943
[2020-11-24 20:08:16,003 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 943
[2020-11-24 20:08:16,003 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4140 states and 4992 transitions.
[2020-11-24 20:08:16,007 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:08:16,007 INFO  L728         BuchiCegarLoop]: Abstraction has 4140 states and 4992 transitions.
[2020-11-24 20:08:16,011 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4140 states and 4992 transitions.
[2020-11-24 20:08:16,053 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4140 to 4140.
[2020-11-24 20:08:16,053 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4140 states.
[2020-11-24 20:08:16,060 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4140 states to 4140 states and 4992 transitions.
[2020-11-24 20:08:16,060 INFO  L751         BuchiCegarLoop]: Abstraction has 4140 states and 4992 transitions.
[2020-11-24 20:08:16,060 INFO  L631         BuchiCegarLoop]: Abstraction has 4140 states and 4992 transitions.
[2020-11-24 20:08:16,060 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:08:16,061 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4140 states and 4992 transitions.
[2020-11-24 20:08:16,066 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:16,066 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:16,066 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:16,068 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:16,068 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND TRUE   !(c_s26 >= a_s26)
[L2428]              revert := true;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND TRUE   revert
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND TRUE   revert
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2739]  COND TRUE   DType[this] == KeepToken
[L2740]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2575]              __ret_0_ := msgsender_MSG;
[L2740]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2741]  COND FALSE  !(revert)
[L2757]  COND TRUE   DType[this] == KeepToken
[L2758]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2758]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2759]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L491]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s277) && _balances_ERC20[this][recipient_s277] == old(_balances_ERC20[this][recipient_s277]) + amount_s277) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND FALSE  !(__exception)
[L490]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2739]  COND TRUE   DType[this] == KeepToken
[L2740]  CALL        call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2575]              __ret_0_ := msgsender_MSG;
[L2740]  RET         call __var_1 := _msgSender_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2741]  COND FALSE  !(revert)
[L2757]  COND TRUE   DType[this] == KeepToken
[L2758]  CALL        call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3353]              __var_12 := null;
[L3354]  COND TRUE   !(sender_s460 != null)
[L3355]              revert := true;
[L2758]  RET         call _transfer~address~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2759]  COND TRUE   revert
[L490]   RET         call __ret_0_ := transfer~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L491]               assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((((__ret_0_ == true && _balances_ERC20[this][msgsender_MSG] == old(_balances_ERC20[this][msgsender_MSG]) - amount_s277) && _balances_ERC20[this][recipient_s277] == old(_balances_ERC20[this][recipient_s277]) + amount_s277) && _totalSupply_ERC20[this] == old(_totalSupply_ERC20[this])) && _allowances_ERC20[this] == old(_allowances_ERC20[this])) && _balances_ERC20[this][p1] == old(_balances_ERC20[this][p1])) && _name_ERC20Detailed[this] == old(_name_ERC20Detailed[this])) && _symbol_ERC20Detailed[this] == old(_symbol_ERC20Detailed[this])) && _decimals_ERC20Detailed[this] == old(_decimals_ERC20Detailed[this]));
[L3]                 revert := revert_hold;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:08:16,072 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:16,072 INFO  L82        PathProgramCache]: Analyzing trace with hash -1665213906, now seen corresponding path program 1 times
[2020-11-24 20:08:16,073 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:16,084 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:08:16,135 INFO  L134       CoverageAnalysis]: Checked inductivity of 183 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 183 trivial. 0 not checked.
[2020-11-24 20:08:16,135 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:08:16,135 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [3] imperfect sequences [] total 3
[2020-11-24 20:08:16,135 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:08:16,135 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-24 20:08:16,136 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-24 20:08:16,136 INFO  L87              Difference]: Start difference. First operand 4140 states and 4992 transitions. cyclomatic complexity: 854 Second operand 3 states.
[2020-11-24 20:08:16,205 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:08:16,205 INFO  L93              Difference]: Finished difference Result 4750 states and 5562 transitions.
[2020-11-24 20:08:16,205 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-24 20:08:16,205 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4750 states and 5562 transitions.
[2020-11-24 20:08:16,218 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-24 20:08:16,234 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4750 states to 4463 states and 5212 transitions.
[2020-11-24 20:08:16,234 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1017
[2020-11-24 20:08:16,235 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1050
[2020-11-24 20:08:16,235 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4463 states and 5212 transitions.
[2020-11-24 20:08:16,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:08:16,240 INFO  L728         BuchiCegarLoop]: Abstraction has 4463 states and 5212 transitions.
[2020-11-24 20:08:16,244 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4463 states and 5212 transitions.
[2020-11-24 20:08:16,277 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4463 to 3925.
[2020-11-24 20:08:16,277 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3925 states.
[2020-11-24 20:08:16,283 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3925 states to 3925 states and 4540 transitions.
[2020-11-24 20:08:16,283 INFO  L751         BuchiCegarLoop]: Abstraction has 3925 states and 4540 transitions.
[2020-11-24 20:08:16,283 INFO  L631         BuchiCegarLoop]: Abstraction has 3925 states and 4540 transitions.
[2020-11-24 20:08:16,283 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:08:16,283 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3925 states and 4540 transitions.
[2020-11-24 20:08:16,288 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:16,288 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:16,288 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:16,291 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:16,291 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND FALSE  !(revert)
[L3418]              _totalSupply_ERC20[this] := __var_17;
[L3419]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3419]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3420]  COND FALSE  !(revert)
[L3423]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3424]              _balances_ERC20[this][account_s503] := __var_18;
[L3425]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3426]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND FALSE  !(revert)
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L484]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L485]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L486]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2696]  COND TRUE   __tmp__DType[this] == KeepToken
[L2697]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2569]              __ret_0_ := msgsender_MSG;
[L2697]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2698]  COND FALSE  !(revert)
[L2714]  COND TRUE   __tmp__DType[this] == KeepToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3321]              __var_12 := null;
[L3322]  COND TRUE   !(sender_s460 != null)
[L3323]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2716]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L488]               assume revert || gas < 0;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L484]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L485]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L486]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2696]  COND TRUE   __tmp__DType[this] == KeepToken
[L2697]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2569]              __ret_0_ := msgsender_MSG;
[L2697]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2698]  COND FALSE  !(revert)
[L2714]  COND TRUE   __tmp__DType[this] == KeepToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3321]              __var_12 := null;
[L3322]  COND TRUE   !(sender_s460 != null)
[L3323]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2716]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L488]               assume revert || gas < 0;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:08:16,302 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:16,303 INFO  L82        PathProgramCache]: Analyzing trace with hash 1991889214, now seen corresponding path program 1 times
[2020-11-24 20:08:16,304 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:16,316 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:08:16,409 INFO  L134       CoverageAnalysis]: Checked inductivity of 188 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 188 trivial. 0 not checked.
[2020-11-24 20:08:16,409 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:08:16,409 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [8] imperfect sequences [] total 8
[2020-11-24 20:08:16,410 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:08:16,410 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 8 interpolants.
[2020-11-24 20:08:16,410 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=13, Invalid=43, Unknown=0, NotChecked=0, Total=56
[2020-11-24 20:08:16,410 INFO  L87              Difference]: Start difference. First operand 3925 states and 4540 transitions. cyclomatic complexity: 617 Second operand 8 states.
[2020-11-24 20:08:16,547 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:08:16,547 INFO  L93              Difference]: Finished difference Result 3953 states and 4576 transitions.
[2020-11-24 20:08:16,547 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 8 states. 
[2020-11-24 20:08:16,547 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3953 states and 4576 transitions.
[2020-11-24 20:08:16,559 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:16,571 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3953 states to 3929 states and 4548 transitions.
[2020-11-24 20:08:16,571 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 916
[2020-11-24 20:08:16,572 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 916
[2020-11-24 20:08:16,572 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3929 states and 4548 transitions.
[2020-11-24 20:08:16,575 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:08:16,575 INFO  L728         BuchiCegarLoop]: Abstraction has 3929 states and 4548 transitions.
[2020-11-24 20:08:16,579 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3929 states and 4548 transitions.
[2020-11-24 20:08:16,608 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3929 to 3929.
[2020-11-24 20:08:16,608 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3929 states.
[2020-11-24 20:08:16,612 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3929 states to 3929 states and 4548 transitions.
[2020-11-24 20:08:16,612 INFO  L751         BuchiCegarLoop]: Abstraction has 3929 states and 4548 transitions.
[2020-11-24 20:08:16,613 INFO  L631         BuchiCegarLoop]: Abstraction has 3929 states and 4548 transitions.
[2020-11-24 20:08:16,613 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-24 20:08:16,613 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3929 states and 4548 transitions.
[2020-11-24 20:08:16,619 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:08:16,619 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:08:16,619 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:08:16,621 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [5, 5, 5, 5, 5, 5, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:08:16,621 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transfer_ERC200 := false;
[L3]                 call_transfer_ERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p1;
[L6169]              assume null == 0;
[L6170]  CALL        call this := FreshRefGenerator__success();
[L2373]              havoc newRef;
[L2374]              assume Alloc[newRef] == false;
[L2375]              Alloc[newRef] := true;
[L2376]              assume newRef != null;
[L6170]  RET         call this := FreshRefGenerator__success();
[L6171]              assume now >= 0;
[L6172]              assume DType[this] == KeepToken;
[L6173]              assume msgvalue_MSG == 0;
[L6174]              gas := gas - 53000;
[L6175]  CALL        call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND FALSE  !(revert)
[L3418]              _totalSupply_ERC20[this] := __var_17;
[L3419]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3419]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3420]  COND FALSE  !(revert)
[L3423]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3424]              _balances_ERC20[this][account_s503] := __var_18;
[L3425]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3426]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND FALSE  !(revert)
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
[L6176]              assume !revert && gas >= 0;
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L484]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L485]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L486]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2696]  COND TRUE   __tmp__DType[this] == KeepToken
[L2697]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2569]              __ret_0_ := msgsender_MSG;
[L2697]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2698]  COND FALSE  !(revert)
[L2714]  COND TRUE   __tmp__DType[this] == KeepToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3321]              __var_12 := null;
[L3322]  COND FALSE  !(!(sender_s460 != null))
[L3326]              __var_13 := null;
[L3327]  COND TRUE   !(recipient_s460 != null)
[L3328]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2716]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L488]               assume revert || gas < 0;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

Loop:
[L6179]  CALL        call CorralChoice_KeepToken(this);
[L5987]              havoc msgsender_MSG;
[L5988]              havoc msgvalue_MSG;
[L5989]              havoc choice;
[L5990]              havoc __ret_0_totalSupply;
[L5991]              havoc account_s258;
[L5992]              havoc __ret_0_balanceOf;
[L5993]              havoc recipient_s277;
[L5994]              havoc amount_s277;
[L5995]              havoc __ret_0_transfer;
[L5996]              havoc owner_s293;
[L5997]              havoc spender_s293;
[L5998]              havoc __ret_0_allowance;
[L5999]              havoc spender_s312;
[L6000]              havoc amount_s312;
[L6001]              havoc __ret_0_approve;
[L6002]              havoc sender_s348;
[L6003]              havoc recipient_s348;
[L6004]              havoc amount_s348;
[L6005]              havoc __ret_0_transferFrom;
[L6006]              havoc spender_s375;
[L6007]              havoc addedValue_s375;
[L6008]              havoc __ret_0_increaseAllowance;
[L6009]              havoc spender_s403;
[L6010]              havoc subtractedValue_s403;
[L6011]              havoc __ret_0_decreaseAllowance;
[L6012]              havoc name_s650;
[L6013]              havoc symbol_s650;
[L6014]              havoc decimals_s650;
[L6015]              havoc __ret_0_name;
[L6016]              havoc __ret_0_symbol;
[L6017]              havoc __ret_0_decimals;
[L6018]              havoc amount_s691;
[L6019]              havoc account_s704;
[L6020]              havoc amount_s704;
[L6021]              havoc __ret_0_NAME;
[L6022]              havoc __ret_0_SYMBOL;
[L6023]              havoc __ret_0_DECIMALS;
[L6024]              havoc __ret_0_INITIAL_SUPPLY;
[L6025]              havoc _spender_s788;
[L6026]              havoc _value_s788;
[L6027]              havoc _extraData_s788;
[L6028]              havoc success_s788;
[L6029]              havoc tmpNow;
[L6030]              havoc gas;
[L6031]              assume gas > 4000000 && gas <= 8000000;
[L6032]              tmpNow := now;
[L6033]              havoc now;
[L6034]              assume now > tmpNow;
[L6035]              assume msgsender_MSG != null;
[L6036]              assume DType[msgsender_MSG] != SafeMath;
[L6037]              assume DType[msgsender_MSG] != Context;
[L6038]              assume DType[msgsender_MSG] != IERC20;
[L6039]              assume DType[msgsender_MSG] != ERC20;
[L6040]              assume DType[msgsender_MSG] != ERC20Detailed;
[L6041]              assume DType[msgsender_MSG] != ERC20Burnable;
[L6042]              assume DType[msgsender_MSG] != tokenRecipient;
[L6043]              assume DType[msgsender_MSG] != KeepToken;
[L6044]              Alloc[msgsender_MSG] := true;
[L6045]  COND FALSE  !(choice == 18)
[L6051]  COND FALSE  !(choice == 17)
[L6057]  COND TRUE   choice == 16
[L6058]              gas := gas - 21000;
[L6059]  COND TRUE   gas >= 0
[L6060]              assume amount_s277 >= 0 && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L6061]              assume msgvalue_MSG == 0;
[L6062]  CALL        call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L484]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L485]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L486]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2696]  COND TRUE   __tmp__DType[this] == KeepToken
[L2697]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2569]              __ret_0_ := msgsender_MSG;
[L2697]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2698]  COND FALSE  !(revert)
[L2714]  COND TRUE   __tmp__DType[this] == KeepToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3321]              __var_12 := null;
[L3322]  COND FALSE  !(!(sender_s460 != null))
[L3326]              __var_13 := null;
[L3327]  COND TRUE   !(recipient_s460 != null)
[L3328]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2716]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L488]               assume revert || gas < 0;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L6179]  RET         call CorralChoice_KeepToken(this);

[2020-11-24 20:08:16,626 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:16,626 INFO  L82        PathProgramCache]: Analyzing trace with hash 445349503, now seen corresponding path program 1 times
[2020-11-24 20:08:16,627 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:16,649 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:16,670 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:16,772 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:16,773 INFO  L82        PathProgramCache]: Analyzing trace with hash -1154433525, now seen corresponding path program 1 times
[2020-11-24 20:08:16,773 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:16,778 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:16,783 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:16,792 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:08:16,792 INFO  L82        PathProgramCache]: Analyzing trace with hash 142059213, now seen corresponding path program 1 times
[2020-11-24 20:08:16,793 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:08:16,812 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:16,834 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.002s / 0.005s total
Resizing node table from 6271 to 12541
[2020-11-24 20:08:17,409 WARN  L188               SmtUtils]: Spent 168.00 ms on a formula simplification that was a NOOP. DAG size: 203
[2020-11-24 20:08:17,902 WARN  L188               SmtUtils]: Spent 490.00 ms on a formula simplification. DAG size of input: 261 DAG size of output: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 3517 to 7027
[2020-11-24 20:08:18,132 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 309
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
[2020-11-24 20:08:18,244 WARN  L188               SmtUtils]: Spent 107.00 ms on a formula simplification that was a NOOP. DAG size: 248
[2020-11-24 20:08:18,351 WARN  L188               SmtUtils]: Spent 104.00 ms on a formula simplification that was a NOOP. DAG size: 248
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
[2020-11-24 20:08:18,403 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-24 20:08:19,095 WARN  L188               SmtUtils]: Spent 237.00 ms on a formula simplification. DAG size of input: 241 DAG size of output: 228
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
[2020-11-24 20:08:19,724 WARN  L188               SmtUtils]: Spent 106.00 ms on a formula simplification that was a NOOP. DAG size: 203
[2020-11-24 20:08:20,038 WARN  L188               SmtUtils]: Spent 311.00 ms on a formula simplification. DAG size of input: 260 DAG size of output: 249
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
[2020-11-24 20:08:21,084 WARN  L188               SmtUtils]: Spent 759.00 ms on a formula simplification. DAG size of input: 457 DAG size of output: 445
Garbage collection #1: 179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 179 to 353
Garbage collection #2: 353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 353 to 701
Garbage collection #3: 701 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 701 to 1399
Garbage collection #4: 1399 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1399 to 2797
Garbage collection #5: 2797 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2797 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
[2020-11-24 20:08:21,215 WARN  L188               SmtUtils]: Spent 122.00 ms on a formula simplification. DAG size of input: 199 DAG size of output: 197
[2020-11-24 20:08:21,372 WARN  L188               SmtUtils]: Spent 132.00 ms on a formula simplification that was a NOOP. DAG size: 306
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
[2020-11-24 20:08:21,688 WARN  L188               SmtUtils]: Spent 249.00 ms on a formula simplification. DAG size of input: 308 DAG size of output: 307
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3331 to 6661
[2020-11-24 20:08:21,810 WARN  L188               SmtUtils]: Spent 116.00 ms on a formula simplification that was a NOOP. DAG size: 303
[2020-11-24 20:08:21,827 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:21,851 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:08:21,860 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:08:21 BasicIcfg
[2020-11-24 20:08:21,861 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:08:21,861 INFO  L168              Benchmark]: Toolchain (without parser) took 10648.53 ms. Allocated memory was 1.0 GB in the beginning and 2.1 GB in the end (delta: 1.0 GB). Free memory was 929.8 MB in the beginning and 1.8 GB in the end (delta: -824.0 MB). Peak memory consumption was 978.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,861 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,862 INFO  L168              Benchmark]: Boogie Preprocessor took 103.11 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,862 INFO  L168              Benchmark]: UtopiaSpecLang took 74.63 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,862 INFO  L168              Benchmark]: Boogie Printer took 21.30 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,862 INFO  L168              Benchmark]: RCFGBuilder took 1010.62 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -106.8 MB). Peak memory consumption was 195.0 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,863 INFO  L168              Benchmark]: UtopiaLTL2Aut took 41.07 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,863 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1850.24 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 163.6 MB). Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: -32.9 MB). Peak memory consumption was 510.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,863 INFO  L168              Benchmark]: BlockEncodingV2 took 174.16 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 950.0 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,864 INFO  L168              Benchmark]: BuchiAutomizer took 7370.41 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 798.0 MB). Free memory was 950.0 MB in the beginning and 1.8 GB in the end (delta: -803.9 MB). Peak memory consumption was 773.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:08:21,867 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    5862 locations, 10882 edges
  - StatisticsResult: Encoded RCFG
    5726 locations, 10503 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.19 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 103.11 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 919.1 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 74.63 ms. Allocated memory is still 1.0 GB. Free memory was 919.1 MB in the beginning and 908.4 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.30 ms. Allocated memory is still 1.0 GB. Free memory is still 908.4 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 1010.62 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 60.8 MB). Free memory was 908.4 MB in the beginning and 1.0 GB in the end (delta: -106.8 MB). Peak memory consumption was 195.0 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 41.07 ms. Allocated memory is still 1.1 GB. Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: 6.9 MB). Peak memory consumption was 6.9 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1850.24 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 163.6 MB). Free memory was 1.0 GB in the beginning and 1.0 GB in the end (delta: -32.9 MB). Peak memory consumption was 510.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 174.16 ms. Allocated memory is still 1.3 GB. Free memory was 1.0 GB in the beginning and 950.0 MB in the end (delta: 91.3 MB). Peak memory consumption was 91.3 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 7370.41 ms. Allocated memory was 1.3 GB in the beginning and 2.1 GB in the end (delta: 798.0 MB). Free memory was 950.0 MB in the beginning and 1.8 GB in the end (delta: -803.9 MB). Peak memory consumption was 773.7 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2279 locations, 3329 edges
  - StatisticsResult: BuchiProgram size
    5862 locations, 10882 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.5 modules have a trivial ranking function, the largest among these consists of 8 locations. The remainder module has 3929 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 7.3s and 6 iterations.  TraceHistogramMax:5. Analysis of lassos took 5.9s. Construction of modules took 0.3s. BÃ¼chi inclusion checks took 0.3s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 5 MinimizatonAttempts, 1148 StatesRemovedByMinimization, 2 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4141 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 23081 SDtfs, 10232 SDslu, 52508 SDs, 0 SdLazy, 2026 SolverSat, 2572 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 0.3s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(1000000000000000013287555087) = (new KeepToken).gas(1)({from : 1000000000000000013287555075});
[L1369]              havoc __exception;
[L1370]              revert := false;
[L1371]  COND FALSE  !(__exception)
[L1396]  CALL        call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4025]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L4025]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L4026]  COND FALSE  !(revert)
[L4029]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L4029]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4030]  COND FALSE  !(revert)
[L4033]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L4033]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4034]  COND FALSE  !(revert)
[L4037]  CALL        call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L3809]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L3809]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  COND FALSE  !(revert)
[L3813]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3813]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3814]  COND FALSE  !(revert)
[L3817]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2655]  CALL        call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2561]  CALL        call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2546]              assume msgsender_MSG != null;
[L2547]              Balance[this] := 0;
[L2561]  RET         call Context_Context_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2562]  COND FALSE  !(revert)
[L2655]  RET         call Context_Context__success(this, msgsender_MSG, msgvalue_MSG);
[L2656]  COND FALSE  !(revert)
[L2659]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L2659]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2660]  COND FALSE  !(revert)
[L2663]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2627]              assume msgsender_MSG != null;
[L2628]              Balance[this] := 0;
[L2629]              _balances_ERC20[this] := zeroRefintArr();
[L2630]              sum__balances0[this] := 0;
[L2631]              _allowances_ERC20[this] := zeroRefRefintArr();
[L2632]              sum__allowances1[this] := 0;
[L2633]              _totalSupply_ERC20[this] := 0;
[L2663]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2664]  COND FALSE  !(revert)
[L3817]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3818]  COND FALSE  !(revert)
[L3821]  CALL        call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3782]              assume msgsender_MSG != null;
[L3783]              Balance[this] := 0;
[L3821]  RET         call ERC20Burnable_ERC20Burnable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3822]  COND FALSE  !(revert)
[L4037]  RET         call ERC20Burnable_ERC20Burnable__success(this, msgsender_MSG, msgvalue_MSG);
[L4038]  COND FALSE  !(revert)
[L4041]  CALL        call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L3725]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L2605]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2590]              assume msgsender_MSG != null;
[L2591]              Balance[this] := 0;
[L2605]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2606]  COND FALSE  !(revert)
[L3725]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3726]  COND FALSE  !(revert)
[L3729]  CALL        call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3700]              assume msgsender_MSG != null;
[L3701]              Balance[this] := 0;
[L3702]              _name_ERC20Detailed[this] := -708534286;
[L3703]              _symbol_ERC20Detailed[this] := -708534286;
[L3704]              _decimals_ERC20Detailed[this] := 0;
[L3706]              _name_ERC20Detailed[this] := name_s650;
[L3707]              _symbol_ERC20Detailed[this] := symbol_s650;
[L3708]              _decimals_ERC20Detailed[this] := decimals_s650;
[L3729]  RET         call ERC20Detailed_ERC20Detailed_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, name_s650, symbol_s650, decimals_s650);
[L3730]  COND FALSE  !(revert)
[L4041]  RET         call ERC20Detailed_ERC20Detailed__success(this, msgsender_MSG, msgvalue_MSG, NAME_KeepToken[this], SYMBOL_KeepToken[this], DECIMALS_KeepToken[this]);
[L4042]  COND FALSE  !(revert)
[L4045]  CALL        call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]              assume msgsender_MSG != null;
[L3979]              Balance[this] := 0;
[L3980]              NAME_KeepToken[this] := 153019343;
[L3981]              SYMBOL_KeepToken[this] := 577946439;
[L3982]              DECIMALS_KeepToken[this] := 18;
[L3983]              INITIAL_SUPPLY_KeepToken[this] := 1000000000000000013287555072 % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3985]  COND TRUE   DType[this] == KeepToken
[L3986]  CALL        call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3409]              __var_16 := null;
[L3410]  COND FALSE  !(!(account_s503 != null))
[L3414]  CALL        call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3414]  RET         call __var_17 := add~uint256~uint256_SafeMath__success(this, this, 0, _totalSupply_ERC20[this], amount_s503);
[L3415]  COND FALSE  !(revert)
[L3418]              _totalSupply_ERC20[this] := __var_17;
[L3419]  CALL        call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L2426]              c_s26 := (a_s26 + b_s26) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2427]  COND FALSE  !(!(c_s26 >= a_s26))
[L2431]              __ret_0_ := c_s26;
[L3419]  RET         call __var_18 := add~uint256~uint256_SafeMath__success(this, this, 0, _balances_ERC20[this][account_s503], amount_s503);
[L3420]  COND FALSE  !(revert)
[L3423]              sum__balances0[this] := sum__balances0[this] - _balances_ERC20[this][account_s503];
[L3424]              _balances_ERC20[this][account_s503] := __var_18;
[L3425]              sum__balances0[this] := sum__balances0[this] + _balances_ERC20[this][account_s503];
[L3426]              assert { :EventEmitted "Transfer_ERC20" } true;
[L3986]  RET         call _mint~address~uint256_ERC20__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, INITIAL_SUPPLY_KeepToken[this]);
[L3987]  COND FALSE  !(revert)
[L4045]  RET         call KeepToken_KeepToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4046]  COND FALSE  !(revert)
[L1396]  RET         call KeepToken_KeepToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1397]              assume !revert && gas >= 0;
[L6175]  RET         call KeepToken_KeepToken(this, msgsender_MSG, msgvalue_MSG);
ERC20(1000000000000000013287555087).transfer~address~uint256.gas(3979002)({from : 1000000000000000013287555092, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L484]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L485]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L486]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2696]  COND TRUE   __tmp__DType[this] == KeepToken
[L2697]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2569]              __ret_0_ := msgsender_MSG;
[L2697]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2698]  COND FALSE  !(revert)
[L2714]  COND TRUE   __tmp__DType[this] == KeepToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3321]              __var_12 := null;
[L3322]  COND FALSE  !(!(sender_s460 != null))
[L3326]              __var_13 := null;
[L3327]  COND TRUE   !(recipient_s460 != null)
[L3328]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2716]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L488]               assume revert || gas < 0;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);

Loop:
ERC20(1000000000000000013287555087).transfer~address~uint256.gas(3979001)({from : 1000000000000000013287555092, recipient : 0, amount : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((p1 != msgsender_MSG && p1 != recipient_s277) && msgsender_MSG != recipient_s277) && amount_s277 <= _balances_ERC20[this][msgsender_MSG]) && _balances_ERC20[this][recipient_s277] + amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && amount_s277 >= 0) && amount_s277 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][recipient_s277] >= 0) && _balances_ERC20[this][recipient_s277] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_ERC20[this][msgsender_MSG] >= 0) && _balances_ERC20[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transfer_ERC200 := true;
[L3]                 call_transfer_ERC200 := false;
[L3]                 revert := revert_hold;
[L463]               havoc __exception;
[L464]               revert := false;
[L465]   COND TRUE   __exception
[L466]               __tmp__Balance := Balance;
[L467]               __tmp__DType := DType;
[L468]               __tmp__Alloc := Alloc;
[L469]               __tmp__balance_ADDR := balance_ADDR;
[L470]               __tmp__M_Ref_int := M_Ref_int;
[L471]               __tmp__sum__balances0 := sum__balances0;
[L472]               __tmp__alloc__allowances_ERC20_lvl0 := alloc__allowances_ERC20_lvl0;
[L473]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L474]               __tmp__sum__allowances1 := sum__allowances1;
[L475]               __tmp__Length := Length;
[L476]               __tmp__now := now;
[L477]               __tmp___balances_ERC20 := _balances_ERC20;
[L478]               __tmp___allowances_ERC20 := _allowances_ERC20;
[L479]               __tmp___totalSupply_ERC20 := _totalSupply_ERC20;
[L480]               __tmp___name_ERC20Detailed := _name_ERC20Detailed;
[L481]               __tmp___symbol_ERC20Detailed := _symbol_ERC20Detailed;
[L482]               __tmp___decimals_ERC20Detailed := _decimals_ERC20Detailed;
[L483]               __tmp__NAME_KeepToken := NAME_KeepToken;
[L484]               __tmp__SYMBOL_KeepToken := SYMBOL_KeepToken;
[L485]               __tmp__DECIMALS_KeepToken := DECIMALS_KeepToken;
[L486]               __tmp__INITIAL_SUPPLY_KeepToken := INITIAL_SUPPLY_KeepToken;
[L487]   CALL        call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L2696]  COND TRUE   __tmp__DType[this] == KeepToken
[L2697]  CALL        call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2569]              __ret_0_ := msgsender_MSG;
[L2697]  RET         call __var_1 := _msgSender_Context__fail(this, msgsender_MSG, msgvalue_MSG);
[L2698]  COND FALSE  !(revert)
[L2714]  COND TRUE   __tmp__DType[this] == KeepToken
[L2715]  CALL        call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L3321]              __var_12 := null;
[L3322]  COND FALSE  !(!(sender_s460 != null))
[L3326]              __var_13 := null;
[L3327]  COND TRUE   !(recipient_s460 != null)
[L3328]              revert := true;
[L2715]  RET         call _transfer~address~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, __var_1, recipient_s277, amount_s277);
[L2716]  COND TRUE   revert
[L487]   RET         call __ret_0_ := transfer~address~uint256_ERC20__fail(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);
[L488]               assume revert || gas < 0;
[L6062]  RET         call __ret_0_transfer := transfer~address~uint256_ERC20(this, msgsender_MSG, msgvalue_MSG, recipient_s277, amount_s277);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
