This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 08:09:16,735 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 08:09:16,736 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 08:09:16,746 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 08:09:16,746 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 08:09:16,747 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 08:09:16,748 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 08:09:16,749 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 08:09:16,751 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 08:09:16,751 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 08:09:16,752 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 08:09:16,752 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 08:09:16,753 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 08:09:16,753 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 08:09:16,754 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 08:09:16,755 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 08:09:16,755 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 08:09:16,756 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 08:09:16,758 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 08:09:16,759 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 08:09:16,760 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 08:09:16,760 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 08:09:16,762 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 08:09:16,762 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 08:09:16,762 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 08:09:16,763 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 08:09:16,763 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 08:09:16,764 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 08:09:16,764 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 08:09:16,764 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 08:09:16,764 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 08:09:16,765 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 08:09:16,765 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 08:09:16,766 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 08:09:16,767 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 08:09:16,767 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 08:09:16,767 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 08:09:16,767 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 08:09:16,767 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 08:09:16,768 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 08:09:16,768 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 08:09:16,769 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 08:09:16,776 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 08:09:16,776 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 08:09:16,777 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 08:09:16,777 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 08:09:16,777 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 08:09:16,777 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 08:09:16,778 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 08:09:16,778 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 08:09:16,778 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 08:09:16,779 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 08:09:16,779 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 08:09:16,799 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 08:09:16,808 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 08:09:16,811 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 08:09:16,812 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 08:09:16,812 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 08:09:16,813 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl
[2020-11-25 08:09:16,813 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl'
[2020-11-25 08:09:16,923 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 08:09:16,924 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 08:09:16,924 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 08:09:16,925 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 08:09:16,925 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 08:09:16,941 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:16,942 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:16,980 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:16,981 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:17,008 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:17,023 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:17,037 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:17,054 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 08:09:17,055 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 08:09:17,055 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 08:09:17,057 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 08:09:17,061 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/1) ...
[2020-11-25 08:09:17,084 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_USDollarHKex[this] == old(name_USDollarHKex[this]) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this]) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this]) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:09:17,090 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_USDollarHKex[this] == old(name_USDollarHKex[this]) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this]) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this]) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:09:17,098 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_USDollarHKex[this] == old(name_USDollarHKex[this]) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this]) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this]) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:09:17,105 INFO  L636   opiaSpecLangObserver]: Parsed ( allowed_StandardToken[this][_owner_s459][_spender_s459]>=0 && allowed_StandardToken[this][_owner_s459][_spender_s459]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s459,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s459,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],IntegerLiteral[0]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s459,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s459,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 08:09:17,109 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( __ret_0_==allowed_StandardToken[this][_owner_s459][_spender_s459] && totalSupply__BasicToken[this]==( old(totalSupply__BasicToken[this]) ) ) && balances_BasicToken[this]==( old(balances_BasicToken[this]) ) ) && allowed_StandardToken[this]==( old(allowed_StandardToken[this]) ) ) && name_USDollarHKex[this]==( old(name_USDollarHKex[this]) ) ) && symbol_USDollarHKex[this]==( old(symbol_USDollarHKex[this]) ) ) && standard_USDollarHKex[this]==( old(standard_USDollarHKex[this]) ) ) && M_Ref_Ref[allocations_USDollarHKex[this]]==( old(M_Ref_Ref[allocations_USDollarHKex[this]]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && owner_Ownable[this]==( old(owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,allowance~address~address_StandardToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_owner_s459,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],[IdentifierExpression[_spender_s459,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply__BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[balances_BasicToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[standard_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[standard_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[M_Ref_Ref,GLOBAL],[ArrayAccessExpression[IdentifierExpression[allocations_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[M_Ref_Ref,GLOBAL],[ArrayAccessExpression[IdentifierExpression[allocations_USDollarHKex,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,allowance~address~address_StandardToken>]]]]]]
[2020-11-25 08:09:17,116 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(StandardToken.allowance(owner, spender), allowed_StandardToken[this][owner][spender] >= 0 && allowed_StandardToken[this][owner][spender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(StandardToken.allowance(owner, spender), return == allowed_StandardToken[this][owner][spender] &&  totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this]) && balances_BasicToken[this] == old(balances_BasicToken[this]) && allowed_StandardToken[this] == old(allowed_StandardToken[this]) && name_USDollarHKex[this] == old(name_USDollarHKex[this]) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this]) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this]) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]]) && paused_Pausable[this] == old(paused_Pausable[this]) && owner_Ownable[this] == old(owner_Ownable[this]))))
[2020-11-25 08:09:17,117 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_allowance_StandardToken0) ==> ( <>AP(success_allowance_StandardToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 08:09:17,132 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:09:17 PropertyContainer
[2020-11-25 08:09:17,132 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 08:09:17,132 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 08:09:17,133 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 08:09:17,133 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 08:09:17,134 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/2) ...
[2020-11-25 08:09:17,134 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 08:09:17,134 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 08:09:17,156 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:09:17" (2/2) ...
[2020-11-25 08:09:17,157 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 08:09:17,157 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 08:09:17,157 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 08:09:17,157 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 08:09:17,158 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/2) ...
[2020-11-25 08:09:17,214 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 08:09:17,214 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex.TimeLock_ctor__success
[2020-11-25 08:09:17,214 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 08:09:17,214 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 08:09:17,214 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 08:09:17,214 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,214 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,215 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,215 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,215 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 08:09:17,215 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-25 08:09:17,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-25 08:09:17,215 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-25 08:09:17,215 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-25 08:09:17,215 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-25 08:09:17,216 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-25 08:09:17,216 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-25 08:09:17,216 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 08:09:17,216 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic
[2020-11-25 08:09:17,216 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_ERC20Basic
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_ERC20Basic
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_ERC20Basic
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken
[2020-11-25 08:09:17,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken
[2020-11-25 08:09:17,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken
[2020-11-25 08:09:17,217 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken
[2020-11-25 08:09:17,217 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken
[2020-11-25 08:09:17,218 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20
[2020-11-25 08:09:17,218 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_ERC20
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_ERC20
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_ERC20
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 08:09:17,218 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-25 08:09:17,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-25 08:09:17,219 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 08:09:17,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-25 08:09:17,219 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-25 08:09:17,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-25 08:09:17,219 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-25 08:09:17,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-25 08:09:17,219 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 08:09:17,219 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken
[2020-11-25 08:09:17,220 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 08:09:17,220 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken
[2020-11-25 08:09:17,220 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 08:09:17,220 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-25 08:09:17,220 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-25 08:09:17,220 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-25 08:09:17,220 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-25 08:09:17,220 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-25 08:09:17,220 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-25 08:09:17,220 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-25 08:09:17,220 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-25 08:09:17,221 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken_NoBaseCtor__success
[2020-11-25 08:09:17,221 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken
[2020-11-25 08:09:17,221 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken
[2020-11-25 08:09:17,221 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken
[2020-11-25 08:09:17,221 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken
[2020-11-25 08:09:17,221 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-25 08:09:17,221 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-25 08:09:17,221 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken
[2020-11-25 08:09:17,221 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken
[2020-11-25 08:09:17,221 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_PausableToken
[2020-11-25 08:09:17,222 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_PausableToken
[2020-11-25 08:09:17,222 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_PausableToken
[2020-11-25 08:09:17,222 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_PausableToken
[2020-11-25 08:09:17,222 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex_USDollarHKex_NoBaseCtor__success
[2020-11-25 08:09:17,222 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex_USDollarHKex
[2020-11-25 08:09:17,222 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex_USDollarHKex
[2020-11-25 08:09:17,222 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USDollarHKex
[2020-11-25 08:09:17,222 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USDollarHKex
[2020-11-25 08:09:17,222 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USDollarHKex
[2020-11-25 08:09:17,222 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L130     BoogieDeclarations]: Found specification of procedure canSubAllocation~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,223 INFO  L130     BoogieDeclarations]: Found specification of procedure subAllocation~address_USDollarHKex__success
[2020-11-25 08:09:17,223 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllocation~address~uint256~arr~arr_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllocation~address~uint256~arr~arr_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L130     BoogieDeclarations]: Found specification of procedure standard_USDollarHKex
[2020-11-25 08:09:17,223 INFO  L138     BoogieDeclarations]: Found implementation of procedure standard_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure allocations~address~uint256_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L138     BoogieDeclarations]: Found implementation of procedure allocations~address~uint256_USDollarHKex
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 08:09:17,224 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20Basic
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20Basic
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BasicToken
[2020-11-25 08:09:17,225 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BasicToken
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_ERC20
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PausableToken
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PausableToken
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_USDollarHKex
[2020-11-25 08:09:17,226 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex.TimeLock_ctor__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 08:09:17,227 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 08:09:17,228 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__success
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure BasicToken_BasicToken__fail
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__success
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BasicToken__fail
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__success
[2020-11-25 08:09:17,229 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BasicToken__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__success
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20_ERC20__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,230 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-25 08:09:17,231 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken_NoBaseCtor__fail
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken__success
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken__fail
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__success
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,232 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__success
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_PausableToken__success
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseApproval~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_PausableToken__success
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseApproval~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex_USDollarHKex_NoBaseCtor__fail
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex_USDollarHKex__success
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure USDollarHKex_USDollarHKex__fail
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,233 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure canSubAllocation~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure subAllocation~address_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllocation~address~uint256~arr~arr_USDollarHKex__success
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure setAllocation~address~uint256~arr~arr_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USDollarHKex__success
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure name_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USDollarHKex__success
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure standard_USDollarHKex__success
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure standard_USDollarHKex__fail
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USDollarHKex__success
[2020-11-25 08:09:17,234 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_USDollarHKex__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_USDollarHKex__success
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure INITIAL_SUPPLY_USDollarHKex__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure allocations~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure allocations~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-25 08:09:17,235 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-25 08:09:17,235 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 08:09:17,235 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex.TimeLock_ctor__fail
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex.TimeLock_ctor__success
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,236 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-25 08:09:17,237 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__fail
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic_NoBaseCtor__success
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__fail
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20Basic_ERC20Basic__success
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__fail
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken_NoBaseCtor__success
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__fail
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure BasicToken_BasicToken__success
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__fail
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BasicToken__success
[2020-11-25 08:09:17,238 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__fail
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BasicToken__success
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__fail
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BasicToken__success
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__fail
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20_NoBaseCtor__success
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__fail
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20_ERC20__success
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-25 08:09:17,239 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__fail
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_StandardToken__success
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-25 08:09:17,240 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken_NoBaseCtor__fail
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken_NoBaseCtor__success
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken__fail
[2020-11-25 08:09:17,241 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken__success
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__success
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__success
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseApproval~address~uint256_PausableToken__success
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_PausableToken__fail
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseApproval~address~uint256_PausableToken__success
[2020-11-25 08:09:17,242 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex_USDollarHKex_NoBaseCtor__fail
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex_USDollarHKex_NoBaseCtor__success
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex_USDollarHKex__fail
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure USDollarHKex_USDollarHKex__success
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure canSubAllocation~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure canSubAllocation~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure subAllocation~address_USDollarHKex__fail
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure subAllocation~address_USDollarHKex__success
[2020-11-25 08:09:17,243 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllocation~address~uint256~arr~arr_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure setAllocation~address~uint256~arr~arr_USDollarHKex__success
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_USDollarHKex__success
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_USDollarHKex__success
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure standard_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure standard_USDollarHKex__success
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_USDollarHKex__success
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure INITIAL_SUPPLY_USDollarHKex__success
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure allocations~address~uint256_USDollarHKex__fail
[2020-11-25 08:09:17,244 INFO  L138     BoogieDeclarations]: Found implementation of procedure allocations~address~uint256_USDollarHKex__success
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-25 08:09:17,245 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20Basic
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20Basic
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BasicToken
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BasicToken
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_ERC20
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-25 08:09:17,246 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-25 08:09:17,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-25 08:09:17,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PausableToken
[2020-11-25 08:09:17,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PausableToken
[2020-11-25 08:09:17,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_USDollarHKex
[2020-11-25 08:09:17,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 08:09:17,247 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 08:09:17,247 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 08:09:17,674 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:09:17,675 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:09:17,675 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 08:09:18,305 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 08:09:18,305 INFO  L286             CfgBuilder]: Removed 9 assue(true) statements.
[2020-11-25 08:09:18,307 INFO  L202        PluginConnector]: Adding new model USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:09:18 BoogieIcfgContainer
[2020-11-25 08:09:18,307 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:09:17" (2/2) ...
[2020-11-25 08:09:18,307 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 08:09:18,307 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@3e8f36f0 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:09:18, skipping insertion in model container
[2020-11-25 08:09:18,308 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 08:09:18,308 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 08:09:18,308 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 08:09:18,309 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 08:09:18,309 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/3) ...
[2020-11-25 08:09:18,309 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@55c66afc and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:09:18, skipping insertion in model container
[2020-11-25 08:09:18,309 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:09:17" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 08:09:18,342 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:09:18 NWAContainer
[2020-11-25 08:09:18,342 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 08:09:18,342 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 08:09:18,342 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 08:09:18,343 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 08:09:18,343 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:09:18" (3/4) ...
[2020-11-25 08:09:18,344 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@75caf3c5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:09:18, skipping insertion in model container
[2020-11-25 08:09:18,344 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:09:18" (4/4) ...
[2020-11-25 08:09:18,346 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 08:09:18,351 INFO  L110   BuchiProductObserver]: Initial RCFG 3262 locations, 4461 edges
[2020-11-25 08:09:18,351 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 08:09:18,361 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 08:09:20,625 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 08:09:20,635 INFO  L110   BuchiProductObserver]: BuchiProgram size 8060 locations, 14490 edges
[2020-11-25 08:09:20,635 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:09:20 BoogieIcfgContainer
[2020-11-25 08:09:20,635 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 08:09:20,635 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 08:09:20,635 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 08:09:20,637 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 08:09:20,637 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:09:20" (1/1) ...
[2020-11-25 08:09:20,778 INFO  L313           BlockEncoder]: Initial Icfg 8060 locations, 14490 edges
[2020-11-25 08:09:20,778 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 08:09:20,779 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 08:09:20,779 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 08:09:20,779 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 08:09:20,795 INFO  L70    emoveInfeasibleEdges]: Removed 147 edges and 21 locations because of local infeasibility
[2020-11-25 08:09:20,808 INFO  L70        RemoveSinkStates]: Removed 56 edges and 37 locations by removing sink states
[2020-11-25 08:09:20,825 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 08:09:20,830 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 08:09:20,835 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 08:09:20,836 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 08:09:20,840 INFO  L313           BlockEncoder]: Encoded RCFG 7962 locations, 14228 edges
[2020-11-25 08:09:20,840 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:09:20 BasicIcfg
[2020-11-25 08:09:20,840 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 08:09:20,841 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 08:09:20,841 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 08:09:20,842 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 08:09:20,843 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:09:20,843 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 08:09:16" (1/6) ...
[2020-11-25 08:09:20,844 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26435d1 and model type USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:09:20, skipping insertion in model container
[2020-11-25 08:09:20,844 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:09:20,844 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 08:09:17" (2/6) ...
[2020-11-25 08:09:20,844 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26435d1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:09:20, skipping insertion in model container
[2020-11-25 08:09:20,844 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:09:20,845 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 08:09:18" (3/6) ...
[2020-11-25 08:09:20,845 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26435d1 and model type USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:09:20, skipping insertion in model container
[2020-11-25 08:09:20,845 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:09:20,845 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 08:09:18" (4/6) ...
[2020-11-25 08:09:20,845 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26435d1 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 08:09:20, skipping insertion in model container
[2020-11-25 08:09:20,845 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:09:20,845 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 08:09:20" (5/6) ...
[2020-11-25 08:09:20,845 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26435d1 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 08:09:20, skipping insertion in model container
[2020-11-25 08:09:20,845 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 08:09:20,845 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 08:09:20" (6/6) ...
[2020-11-25 08:09:20,846 INFO  L404   chiAutomizerObserver]: Analyzing ICFG USDollarHKex_0x164f0C960c164F8988a556B4EB86d3a696b8E7f0_allowance.bpl_BEv2
[2020-11-25 08:09:20,873 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 08:09:20,873 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 08:09:20,873 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 08:09:20,873 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 08:09:20,873 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 08:09:20,873 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 08:09:20,873 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 08:09:20,873 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 08:09:20,873 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 08:09:20,922 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7962 states.
[2020-11-25 08:09:20,982 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:09:20,983 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:09:20,983 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:09:20,990 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:09:20,990 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:09:20,990 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 08:09:20,990 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 7962 states.
[2020-11-25 08:09:21,019 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:09:21,019 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:09:21,019 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:09:21,021 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:09:21,021 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L8678]              assume null == 0;
[L8679]  CALL        call this := FreshRefGenerator__success();
[L3835]              havoc newRef;
[L3836]              assume Alloc[newRef] == false;
[L3837]              Alloc[newRef] := true;
[L3838]              assume newRef != null;
[L8679]  RET         call this := FreshRefGenerator__success();
[L8680]              assume now >= 0;
[L8681]              assume DType[this] == USDollarHKex;
[L8682]              assume msgvalue_MSG == 0;
[L8683]              gas := gas - 53000;
[L8684]  CALL        call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L2092]              havoc __exception;
[L2093]              revert := false;
[L2094]  COND FALSE  !(__exception)
[L2126]  CALL        call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L5079]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L5079]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L5080]  COND TRUE   revert
[L2126]  RET         call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L2127]              assume !revert && gas >= 0;
[L8684]  RET         call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L8685]              assume !revert && gas >= 0;

Loop:
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND TRUE   choice == 20
[L8542]              gas := gas - 21000;
[L8543]  COND FALSE  !(gas >= 0)
[L8688]  RET         call CorralChoice_USDollarHKex(this);

[2020-11-25 08:09:21,034 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:09:21,034 INFO  L82        PathProgramCache]: Analyzing trace with hash -1804187144, now seen corresponding path program 1 times
[2020-11-25 08:09:21,038 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:09:21,055 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:09:21,086 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:09:21,088 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:09:21,088 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:09:21,479 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:09:21,488 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:09:21,488 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:09:21,489 INFO  L87              Difference]: Start difference. First operand 7962 states. Second operand 4 states.
[2020-11-25 08:09:22,202 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:09:22,202 INFO  L93              Difference]: Finished difference Result 4975 states and 5889 transitions.
[2020-11-25 08:09:22,202 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:09:22,203 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4975 states and 5889 transitions.
[2020-11-25 08:09:22,234 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:09:22,267 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4975 states to 4971 states and 5881 transitions.
[2020-11-25 08:09:22,268 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-25 08:09:22,271 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 958
[2020-11-25 08:09:22,271 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4971 states and 5881 transitions.
[2020-11-25 08:09:22,282 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:09:22,282 INFO  L728         BuchiCegarLoop]: Abstraction has 4971 states and 5881 transitions.
[2020-11-25 08:09:22,300 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4971 states and 5881 transitions.
[2020-11-25 08:09:22,377 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4971 to 4971.
[2020-11-25 08:09:22,377 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4971 states.
[2020-11-25 08:09:22,384 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4971 states to 4971 states and 5881 transitions.
[2020-11-25 08:09:22,385 INFO  L751         BuchiCegarLoop]: Abstraction has 4971 states and 5881 transitions.
[2020-11-25 08:09:22,385 INFO  L631         BuchiCegarLoop]: Abstraction has 4971 states and 5881 transitions.
[2020-11-25 08:09:22,385 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 08:09:22,385 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4971 states and 5881 transitions.
[2020-11-25 08:09:22,396 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 08:09:22,396 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:09:22,396 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:09:22,398 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:09:22,398 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L8678]              assume null == 0;
[L8679]  CALL        call this := FreshRefGenerator__success();
[L3835]              havoc newRef;
[L3836]              assume Alloc[newRef] == false;
[L3837]              Alloc[newRef] := true;
[L3838]              assume newRef != null;
[L8679]  RET         call this := FreshRefGenerator__success();
[L8680]              assume now >= 0;
[L8681]              assume DType[this] == USDollarHKex;
[L8682]              assume msgvalue_MSG == 0;
[L8683]              gas := gas - 53000;
[L8684]  CALL        call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L2092]              havoc __exception;
[L2093]              revert := false;
[L2094]  COND FALSE  !(__exception)
[L2126]  CALL        call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L5079]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L5079]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L5080]  COND TRUE   revert
[L2126]  RET         call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L2127]              assume !revert && gas >= 0;
[L8684]  RET         call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L8685]              assume !revert && gas >= 0;
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND FALSE  !(choice == 20)
[L8547]  COND FALSE  !(choice == 19)
[L8553]  COND FALSE  !(choice == 18)
[L8559]  COND FALSE  !(choice == 17)
[L8565]  COND FALSE  !(choice == 16)
[L8572]  COND TRUE   choice == 15
[L8573]              gas := gas - 21000;
[L8574]  COND TRUE   gas >= 0
[L8575]              assume msgvalue_MSG == 0;
[L8576]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s459][_spender_s459] >= 0 && allowed_StandardToken[this][_owner_s459][_spender_s459] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1117]  CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L4464]              __ret_0_ := allowed_StandardToken[this][_owner_s459][_spender_s459];
[L1117]  RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L1118]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == allowed_StandardToken[this][_owner_s459][_spender_s459] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_USDollarHKex[this] == old(name_USDollarHKex[this])) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this])) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this])) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8576]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L8688]  RET         call CorralChoice_USDollarHKex(this);

Loop:
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND FALSE  !(choice == 20)
[L8547]  COND FALSE  !(choice == 19)
[L8553]  COND FALSE  !(choice == 18)
[L8559]  COND FALSE  !(choice == 17)
[L8565]  COND FALSE  !(choice == 16)
[L8572]  COND TRUE   choice == 15
[L8573]              gas := gas - 21000;
[L8574]  COND TRUE   gas >= 0
[L8575]              assume msgvalue_MSG == 0;
[L8576]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s459][_spender_s459] >= 0 && allowed_StandardToken[this][_owner_s459][_spender_s459] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1117]  CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L4464]              __ret_0_ := allowed_StandardToken[this][_owner_s459][_spender_s459];
[L1117]  RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L1118]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == allowed_StandardToken[this][_owner_s459][_spender_s459] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_USDollarHKex[this] == old(name_USDollarHKex[this])) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this])) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this])) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8576]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L8688]  RET         call CorralChoice_USDollarHKex(this);

[2020-11-25 08:09:22,402 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:09:22,402 INFO  L82        PathProgramCache]: Analyzing trace with hash -894521321, now seen corresponding path program 1 times
[2020-11-25 08:09:22,403 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:09:22,412 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:09:22,435 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 08:09:22,435 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:09:22,436 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:09:22,437 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:09:22,437 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:09:22,437 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:09:22,437 INFO  L87              Difference]: Start difference. First operand 4971 states and 5881 transitions. cyclomatic complexity: 928 Second operand 4 states.
[2020-11-25 08:09:23,593 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:09:23,593 INFO  L93              Difference]: Finished difference Result 6383 states and 7321 transitions.
[2020-11-25 08:09:23,593 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:09:23,594 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6383 states and 7321 transitions.
[2020-11-25 08:09:23,610 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 08:09:23,629 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6383 states to 6161 states and 7059 transitions.
[2020-11-25 08:09:23,629 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1203
[2020-11-25 08:09:23,630 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1221
[2020-11-25 08:09:23,630 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6161 states and 7059 transitions.
[2020-11-25 08:09:23,636 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:09:23,636 INFO  L728         BuchiCegarLoop]: Abstraction has 6161 states and 7059 transitions.
[2020-11-25 08:09:23,641 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6161 states and 7059 transitions.
[2020-11-25 08:09:23,694 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6161 to 5721.
[2020-11-25 08:09:23,694 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5721 states.
[2020-11-25 08:09:23,702 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5721 states to 5721 states and 6494 transitions.
[2020-11-25 08:09:23,702 INFO  L751         BuchiCegarLoop]: Abstraction has 5721 states and 6494 transitions.
[2020-11-25 08:09:23,702 INFO  L631         BuchiCegarLoop]: Abstraction has 5721 states and 6494 transitions.
[2020-11-25 08:09:23,702 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 08:09:23,702 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5721 states and 6494 transitions.
[2020-11-25 08:09:23,711 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 08:09:23,711 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:09:23,711 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:09:23,715 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:09:23,715 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L8678]              assume null == 0;
[L8679]  CALL        call this := FreshRefGenerator__success();
[L3835]              havoc newRef;
[L3836]              assume Alloc[newRef] == false;
[L3837]              Alloc[newRef] := true;
[L3838]              assume newRef != null;
[L8679]  RET         call this := FreshRefGenerator__success();
[L8680]              assume now >= 0;
[L8681]              assume DType[this] == USDollarHKex;
[L8682]              assume msgvalue_MSG == 0;
[L8683]              gas := gas - 53000;
[L8684]  CALL        call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L2092]              havoc __exception;
[L2093]              revert := false;
[L2094]  COND FALSE  !(__exception)
[L2126]  CALL        call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L5079]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L5079]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L5080]  COND FALSE  !(revert)
[L5083]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L5083]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5084]  COND FALSE  !(revert)
[L5087]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L5087]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5088]  COND FALSE  !(revert)
[L5091]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4330]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4330]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L4334]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L4338]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4339]  COND FALSE  !(revert)
[L4342]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]              assume msgsender_MSG != null;
[L4302]              Balance[this] := 0;
[L4303]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4304]              sum_allowed1[this] := 0;
[L4342]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4343]  COND FALSE  !(revert)
[L5091]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5092]  COND FALSE  !(revert)
[L5095]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L5095]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L5096]  COND FALSE  !(revert)
[L5099]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4574]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L4574]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4575]  COND FALSE  !(revert)
[L4578]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4554]              assume msgsender_MSG != null;
[L4555]              Balance[this] := 0;
[L4556]              paused_Pausable[this] := false;
[L4578]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4579]  COND FALSE  !(revert)
[L5099]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L5100]  COND FALSE  !(revert)
[L5103]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4700]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4700]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L4704]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L4708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4709]  COND FALSE  !(revert)
[L4712]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4330]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4330]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L4334]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L4338]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4339]  COND FALSE  !(revert)
[L4342]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]              assume msgsender_MSG != null;
[L4302]              Balance[this] := 0;
[L4303]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4304]              sum_allowed1[this] := 0;
[L4342]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4343]  COND FALSE  !(revert)
[L4712]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L4716]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4574]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L4574]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4575]  COND FALSE  !(revert)
[L4578]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4554]              assume msgsender_MSG != null;
[L4555]              Balance[this] := 0;
[L4556]              paused_Pausable[this] := false;
[L4578]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4579]  COND FALSE  !(revert)
[L4720]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4661]              assume msgsender_MSG != null;
[L4662]              Balance[this] := 0;
[L4724]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L5103]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5104]  COND FALSE  !(revert)
[L5107]  CALL        call USDollarHKex_USDollarHKex_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5013]              assume msgsender_MSG != null;
[L5014]              Balance[this] := 0;
[L5015]              name_USDollarHKex[this] := 749918206;
[L5016]              symbol_USDollarHKex[this] := 2047713833;
[L5017]              standard_USDollarHKex[this] := -1333876585;
[L5018]              decimals_USDollarHKex[this] := 18;
[L5019]              __var_22 := decimals_USDollarHKex[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5020]              INITIAL_SUPPLY_USDollarHKex[this] := nonlinearMul(25 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_USDollarHKex[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5022]  CALL        call __var_23 := FreshRefGenerator__success();
[L3835]              havoc newRef;
[L3836]              assume Alloc[newRef] == false;
[L3837]              Alloc[newRef] := true;
[L3838]              assume newRef != null;
[L5022]  RET         call __var_23 := FreshRefGenerator__success();
[L5023]  COND FALSE  !(revert)
[L5026]              allocations_USDollarHKex[this] := __var_23;
[L5028]              alloc_allocations_USDollarHKex_lvl0[allocations_USDollarHKex[this]] := zeroRefboolArr();
[L5030]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_USDollarHKex[this];
[L5031]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L5032]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_USDollarHKex[this];
[L5033]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L5034]              assert { :EventEmitted "Transfer_USDollarHKex" } true;
[L5107]  RET         call USDollarHKex_USDollarHKex_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5108]  COND FALSE  !(revert)
[L2126]  RET         call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L2127]              assume !revert && gas >= 0;
[L8684]  RET         call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L8685]              assume !revert && gas >= 0;
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND FALSE  !(choice == 20)
[L8547]  COND FALSE  !(choice == 19)
[L8553]  COND FALSE  !(choice == 18)
[L8559]  COND FALSE  !(choice == 17)
[L8565]  COND FALSE  !(choice == 16)
[L8572]  COND TRUE   choice == 15
[L8573]              gas := gas - 21000;
[L8574]  COND TRUE   gas >= 0
[L8575]              assume msgvalue_MSG == 0;
[L8576]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s459][_spender_s459] >= 0 && allowed_StandardToken[this][_owner_s459][_spender_s459] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1117]  CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L4464]              __ret_0_ := allowed_StandardToken[this][_owner_s459][_spender_s459];
[L1117]  RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L1118]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == allowed_StandardToken[this][_owner_s459][_spender_s459] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_USDollarHKex[this] == old(name_USDollarHKex[this])) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this])) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this])) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8576]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L8688]  RET         call CorralChoice_USDollarHKex(this);

Loop:
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND FALSE  !(choice == 20)
[L8547]  COND FALSE  !(choice == 19)
[L8553]  COND FALSE  !(choice == 18)
[L8559]  COND FALSE  !(choice == 17)
[L8565]  COND FALSE  !(choice == 16)
[L8572]  COND TRUE   choice == 15
[L8573]              gas := gas - 21000;
[L8574]  COND TRUE   gas >= 0
[L8575]              assume msgvalue_MSG == 0;
[L8576]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s459][_spender_s459] >= 0 && allowed_StandardToken[this][_owner_s459][_spender_s459] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND FALSE  !(__exception)
[L1117]  CALL        call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L4464]              __ret_0_ := allowed_StandardToken[this][_owner_s459][_spender_s459];
[L1117]  RET         call __ret_0_ := allowance~address~address_StandardToken__success(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L1118]              assume !revert && gas >= 0;
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((((__ret_0_ == allowed_StandardToken[this][_owner_s459][_spender_s459] && totalSupply__BasicToken[this] == old(totalSupply__BasicToken[this])) && balances_BasicToken[this] == old(balances_BasicToken[this])) && allowed_StandardToken[this] == old(allowed_StandardToken[this])) && name_USDollarHKex[this] == old(name_USDollarHKex[this])) && symbol_USDollarHKex[this] == old(symbol_USDollarHKex[this])) && standard_USDollarHKex[this] == old(standard_USDollarHKex[this])) && M_Ref_Ref[allocations_USDollarHKex[this]] == old(M_Ref_Ref[allocations_USDollarHKex[this]])) && paused_Pausable[this] == old(paused_Pausable[this])) && owner_Ownable[this] == old(owner_Ownable[this]));
[L2]                 revert := revert_hold;
[L8576]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L8688]  RET         call CorralChoice_USDollarHKex(this);

[2020-11-25 08:09:23,721 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:09:23,721 INFO  L82        PathProgramCache]: Analyzing trace with hash -794086619, now seen corresponding path program 1 times
[2020-11-25 08:09:23,722 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:09:23,744 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:09:23,923 INFO  L134       CoverageAnalysis]: Checked inductivity of 963 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 963 trivial. 0 not checked.
[2020-11-25 08:09:23,924 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:09:23,924 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 08:09:23,924 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:09:23,924 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 08:09:23,925 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 08:09:23,925 INFO  L87              Difference]: Start difference. First operand 5721 states and 6494 transitions. cyclomatic complexity: 791 Second operand 4 states.
[2020-11-25 08:09:24,025 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:09:24,025 INFO  L93              Difference]: Finished difference Result 5594 states and 6317 transitions.
[2020-11-25 08:09:24,025 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 08:09:24,026 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5594 states and 6317 transitions.
[2020-11-25 08:09:24,037 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:09:24,051 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5594 states to 5584 states and 6307 transitions.
[2020-11-25 08:09:24,051 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1083
[2020-11-25 08:09:24,051 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1083
[2020-11-25 08:09:24,052 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5584 states and 6307 transitions.
[2020-11-25 08:09:24,055 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:09:24,055 INFO  L728         BuchiCegarLoop]: Abstraction has 5584 states and 6307 transitions.
[2020-11-25 08:09:24,060 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5584 states and 6307 transitions.
[2020-11-25 08:09:24,090 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5584 to 5584.
[2020-11-25 08:09:24,090 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 5584 states.
[2020-11-25 08:09:24,095 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 5584 states to 5584 states and 6307 transitions.
[2020-11-25 08:09:24,095 INFO  L751         BuchiCegarLoop]: Abstraction has 5584 states and 6307 transitions.
[2020-11-25 08:09:24,095 INFO  L631         BuchiCegarLoop]: Abstraction has 5584 states and 6307 transitions.
[2020-11-25 08:09:24,095 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 08:09:24,095 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 5584 states and 6307 transitions.
[2020-11-25 08:09:24,101 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 08:09:24,101 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 08:09:24,101 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 08:09:24,104 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [12, 12, 12, 12, 12, 12, 12, 12, 12, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 08:09:24,104 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 success_allowance_StandardToken0 := false;
[L2]                 call_allowance_StandardToken0 := false;
[L2]     CALL        call main();
[L8678]              assume null == 0;
[L8679]  CALL        call this := FreshRefGenerator__success();
[L3835]              havoc newRef;
[L3836]              assume Alloc[newRef] == false;
[L3837]              Alloc[newRef] := true;
[L3838]              assume newRef != null;
[L8679]  RET         call this := FreshRefGenerator__success();
[L8680]              assume now >= 0;
[L8681]              assume DType[this] == USDollarHKex;
[L8682]              assume msgvalue_MSG == 0;
[L8683]              gas := gas - 53000;
[L8684]  CALL        call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L2092]              havoc __exception;
[L2093]              revert := false;
[L2094]  COND FALSE  !(__exception)
[L2126]  CALL        call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L5079]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L5079]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L5080]  COND FALSE  !(revert)
[L5083]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L5083]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L5084]  COND FALSE  !(revert)
[L5087]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L5087]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5088]  COND FALSE  !(revert)
[L5091]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4330]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4330]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L4334]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L4338]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4339]  COND FALSE  !(revert)
[L4342]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]              assume msgsender_MSG != null;
[L4302]              Balance[this] := 0;
[L4303]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4304]              sum_allowed1[this] := 0;
[L4342]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4343]  COND FALSE  !(revert)
[L5091]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5092]  COND FALSE  !(revert)
[L5095]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L5095]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L5096]  COND FALSE  !(revert)
[L5099]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4574]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L4574]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4575]  COND FALSE  !(revert)
[L4578]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4554]              assume msgsender_MSG != null;
[L4555]              Balance[this] := 0;
[L4556]              paused_Pausable[this] := false;
[L4578]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4579]  COND FALSE  !(revert)
[L5099]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L5100]  COND FALSE  !(revert)
[L5103]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4700]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4700]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4701]  COND FALSE  !(revert)
[L4704]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L4704]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4705]  COND FALSE  !(revert)
[L4708]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L4708]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4709]  COND FALSE  !(revert)
[L4712]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4330]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4330]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4331]  COND FALSE  !(revert)
[L4334]  CALL        call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4278]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4278]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4279]  COND FALSE  !(revert)
[L4282]  CALL        call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4259]              assume msgsender_MSG != null;
[L4260]              Balance[this] := 0;
[L4282]  RET         call ERC20_ERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4283]  COND FALSE  !(revert)
[L4334]  RET         call ERC20_ERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4335]  COND FALSE  !(revert)
[L4338]  CALL        call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4149]  CALL        call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4107]  CALL        call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4092]              assume msgsender_MSG != null;
[L4093]              Balance[this] := 0;
[L4107]  RET         call ERC20Basic_ERC20Basic_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4108]  COND FALSE  !(revert)
[L4149]  RET         call ERC20Basic_ERC20Basic__success(this, msgsender_MSG, msgvalue_MSG);
[L4150]  COND FALSE  !(revert)
[L4153]  CALL        call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4127]              assume msgsender_MSG != null;
[L4128]              Balance[this] := 0;
[L4129]              balances_BasicToken[this] := zeroRefintArr();
[L4130]              sum_balances0[this] := 0;
[L4131]              totalSupply__BasicToken[this] := 0;
[L4153]  RET         call BasicToken_BasicToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4154]  COND FALSE  !(revert)
[L4338]  RET         call BasicToken_BasicToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4339]  COND FALSE  !(revert)
[L4342]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4301]              assume msgsender_MSG != null;
[L4302]              Balance[this] := 0;
[L4303]              allowed_StandardToken[this] := zeroRefRefintArr();
[L4304]              sum_allowed1[this] := 0;
[L4342]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4343]  COND FALSE  !(revert)
[L4712]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4713]  COND FALSE  !(revert)
[L4716]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L4716]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4717]  COND FALSE  !(revert)
[L4720]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4574]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3978]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3961]              assume msgsender_MSG != null;
[L3962]              Balance[this] := 0;
[L3963]              owner_Ownable[this] := null;
[L3965]              owner_Ownable[this] := msgsender_MSG;
[L3978]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3979]  COND FALSE  !(revert)
[L4574]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4575]  COND FALSE  !(revert)
[L4578]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4554]              assume msgsender_MSG != null;
[L4555]              Balance[this] := 0;
[L4556]              paused_Pausable[this] := false;
[L4578]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4579]  COND FALSE  !(revert)
[L4720]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4721]  COND FALSE  !(revert)
[L4724]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4661]              assume msgsender_MSG != null;
[L4662]              Balance[this] := 0;
[L4724]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4725]  COND FALSE  !(revert)
[L5103]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L5104]  COND FALSE  !(revert)
[L5107]  CALL        call USDollarHKex_USDollarHKex_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5013]              assume msgsender_MSG != null;
[L5014]              Balance[this] := 0;
[L5015]              name_USDollarHKex[this] := 749918206;
[L5016]              symbol_USDollarHKex[this] := 2047713833;
[L5017]              standard_USDollarHKex[this] := -1333876585;
[L5018]              decimals_USDollarHKex[this] := 18;
[L5019]              __var_22 := decimals_USDollarHKex[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5020]              INITIAL_SUPPLY_USDollarHKex[this] := nonlinearMul(25 * (100000000 % 115792089237316195423570985008687907853269984665640564039457584007913129639936), nonlinearPow(10, decimals_USDollarHKex[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5022]  CALL        call __var_23 := FreshRefGenerator__success();
[L3835]              havoc newRef;
[L3836]              assume Alloc[newRef] == false;
[L3837]              Alloc[newRef] := true;
[L3838]              assume newRef != null;
[L5022]  RET         call __var_23 := FreshRefGenerator__success();
[L5023]  COND FALSE  !(revert)
[L5026]              allocations_USDollarHKex[this] := __var_23;
[L5028]              alloc_allocations_USDollarHKex_lvl0[allocations_USDollarHKex[this]] := zeroRefboolArr();
[L5030]              totalSupply__BasicToken[this] := INITIAL_SUPPLY_USDollarHKex[this];
[L5031]              sum_balances0[this] := sum_balances0[this] - balances_BasicToken[this][msgsender_MSG];
[L5032]              balances_BasicToken[this][msgsender_MSG] := INITIAL_SUPPLY_USDollarHKex[this];
[L5033]              sum_balances0[this] := sum_balances0[this] + balances_BasicToken[this][msgsender_MSG];
[L5034]              assert { :EventEmitted "Transfer_USDollarHKex" } true;
[L5107]  RET         call USDollarHKex_USDollarHKex_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L5108]  COND FALSE  !(revert)
[L2126]  RET         call USDollarHKex_USDollarHKex__success(this, msgsender_MSG, msgvalue_MSG);
[L2127]              assume !revert && gas >= 0;
[L8684]  RET         call USDollarHKex_USDollarHKex(this, msgsender_MSG, msgvalue_MSG);
[L8685]              assume !revert && gas >= 0;
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND FALSE  !(choice == 20)
[L8547]  COND FALSE  !(choice == 19)
[L8553]  COND FALSE  !(choice == 18)
[L8559]  COND FALSE  !(choice == 17)
[L8565]  COND FALSE  !(choice == 16)
[L8572]  COND TRUE   choice == 15
[L8573]              gas := gas - 21000;
[L8574]  COND TRUE   gas >= 0
[L8575]              assume msgvalue_MSG == 0;
[L8576]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s459][_spender_s459] >= 0 && allowed_StandardToken[this][_owner_s459][_spender_s459] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND TRUE   __exception
[L1086]              __tmp__Balance := Balance;
[L1087]              __tmp__DType := DType;
[L1088]              __tmp__Alloc := Alloc;
[L1089]              __tmp__balance_ADDR := balance_ADDR;
[L1090]              __tmp__M_Ref_int := M_Ref_int;
[L1091]              __tmp__sum_balances0 := sum_balances0;
[L1092]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1093]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1094]              __tmp__sum_allowed1 := sum_allowed1;
[L1095]              __tmp__M_int_Ref := M_int_Ref;
[L1096]              __tmp__alloc_allocations_USDollarHKex_lvl0 := alloc_allocations_USDollarHKex_lvl0;
[L1097]              __tmp__sum := sum;
[L1098]              __tmp__M_int_int := M_int_int;
[L1099]              __tmp__Length := Length;
[L1100]              __tmp__now := now;
[L1101]              __tmp__owner_Ownable := owner_Ownable;
[L1102]              __tmp__balances_BasicToken := balances_BasicToken;
[L1103]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1104]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1105]              __tmp__paused_Pausable := paused_Pausable;
[L1106]              __tmp__name_USDollarHKex := name_USDollarHKex;
[L1107]              __tmp__symbol_USDollarHKex := symbol_USDollarHKex;
[L1108]              __tmp__standard_USDollarHKex := standard_USDollarHKex;
[L1109]              __tmp__decimals_USDollarHKex := decimals_USDollarHKex;
[L1110]              __tmp__INITIAL_SUPPLY_USDollarHKex := INITIAL_SUPPLY_USDollarHKex;
[L1111]              __tmp__allocations_USDollarHKex := allocations_USDollarHKex;
[L1112]              __tmp__releaseTime_USDollarHKex.TimeLock := releaseTime_USDollarHKex.TimeLock;
[L1113]              __tmp__balance_USDollarHKex.TimeLock := balance_USDollarHKex.TimeLock;
[L1114]  CALL        call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L4458]              __ret_0_ := __tmp__allowed_StandardToken[this][_owner_s459][_spender_s459];
[L1114]  RET         call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L1115]              assume revert || gas < 0;
[L8576]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L8688]  RET         call CorralChoice_USDollarHKex(this);

Loop:
[L8688]  CALL        call CorralChoice_USDollarHKex(this);
[L8483]              havoc msgsender_MSG;
[L8484]              havoc msgvalue_MSG;
[L8485]              havoc choice;
[L8486]              havoc __ret_0_owner;
[L8487]              havoc _newOwner_s133;
[L8488]              havoc __ret_0_totalSupply;
[L8489]              havoc _owner_s278;
[L8490]              havoc __ret_0_balanceOf;
[L8491]              havoc _to_s828;
[L8492]              havoc _value_s828;
[L8493]              havoc __ret_0_transfer;
[L8494]              havoc _owner_s459;
[L8495]              havoc _spender_s459;
[L8496]              havoc __ret_0_allowance;
[L8497]              havoc _from_s858;
[L8498]              havoc _to_s858;
[L8499]              havoc _value_s858;
[L8500]              havoc __ret_0_transferFrom;
[L8501]              havoc _spender_s680;
[L8502]              havoc _value_s680;
[L8503]              havoc __ret_0_approve;
[L8504]              havoc _spender_s698;
[L8505]              havoc _addedValue_s698;
[L8506]              havoc success_s698;
[L8507]              havoc _spender_s716;
[L8508]              havoc _subtractedValue_s716;
[L8509]              havoc success_s716;
[L8510]              havoc __ret_0_paused;
[L8511]              havoc __ret_0_name;
[L8512]              havoc __ret_0_symbol;
[L8513]              havoc __ret_0_standard;
[L8514]              havoc __ret_0_decimals;
[L8515]              havoc __ret_0_INITIAL_SUPPLY;
[L8516]              havoc arg1229_s0;
[L8517]              havoc arg1230_s0;
[L8518]              havoc __ret_0_allocations;
[L8519]              havoc _address_s1226;
[L8520]              havoc total_value_s1226;
[L8521]              havoc times_s1226;
[L8522]              havoc balanceRequires_s1226;
[L8523]              havoc __ret_0_setAllocation;
[L8524]              havoc tmpNow;
[L8525]              havoc gas;
[L8526]              assume gas > 4000000 && gas <= 8000000;
[L8527]              tmpNow := now;
[L8528]              havoc now;
[L8529]              assume now > tmpNow;
[L8530]              assume msgsender_MSG != null;
[L8531]              assume DType[msgsender_MSG] != SafeMath;
[L8532]              assume DType[msgsender_MSG] != Ownable;
[L8533]              assume DType[msgsender_MSG] != ERC20Basic;
[L8534]              assume DType[msgsender_MSG] != BasicToken;
[L8535]              assume DType[msgsender_MSG] != ERC20;
[L8536]              assume DType[msgsender_MSG] != StandardToken;
[L8537]              assume DType[msgsender_MSG] != Pausable;
[L8538]              assume DType[msgsender_MSG] != PausableToken;
[L8539]              assume DType[msgsender_MSG] != USDollarHKex;
[L8540]              Alloc[msgsender_MSG] := true;
[L8541]  COND FALSE  !(choice == 20)
[L8547]  COND FALSE  !(choice == 19)
[L8553]  COND FALSE  !(choice == 18)
[L8559]  COND FALSE  !(choice == 17)
[L8565]  COND FALSE  !(choice == 16)
[L8572]  COND TRUE   choice == 15
[L8573]              gas := gas - 21000;
[L8574]  COND TRUE   gas >= 0
[L8575]              assume msgvalue_MSG == 0;
[L8576]  CALL        call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume allowed_StandardToken[this][_owner_s459][_spender_s459] >= 0 && allowed_StandardToken[this][_owner_s459][_spender_s459] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_allowance_StandardToken0 := true;
[L2]                 call_allowance_StandardToken0 := false;
[L2]                 revert := revert_hold;
[L1083]              havoc __exception;
[L1084]              revert := false;
[L1085]  COND TRUE   __exception
[L1086]              __tmp__Balance := Balance;
[L1087]              __tmp__DType := DType;
[L1088]              __tmp__Alloc := Alloc;
[L1089]              __tmp__balance_ADDR := balance_ADDR;
[L1090]              __tmp__M_Ref_int := M_Ref_int;
[L1091]              __tmp__sum_balances0 := sum_balances0;
[L1092]              __tmp__alloc_allowed_StandardToken_lvl0 := alloc_allowed_StandardToken_lvl0;
[L1093]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1094]              __tmp__sum_allowed1 := sum_allowed1;
[L1095]              __tmp__M_int_Ref := M_int_Ref;
[L1096]              __tmp__alloc_allocations_USDollarHKex_lvl0 := alloc_allocations_USDollarHKex_lvl0;
[L1097]              __tmp__sum := sum;
[L1098]              __tmp__M_int_int := M_int_int;
[L1099]              __tmp__Length := Length;
[L1100]              __tmp__now := now;
[L1101]              __tmp__owner_Ownable := owner_Ownable;
[L1102]              __tmp__balances_BasicToken := balances_BasicToken;
[L1103]              __tmp__totalSupply__BasicToken := totalSupply__BasicToken;
[L1104]              __tmp__allowed_StandardToken := allowed_StandardToken;
[L1105]              __tmp__paused_Pausable := paused_Pausable;
[L1106]              __tmp__name_USDollarHKex := name_USDollarHKex;
[L1107]              __tmp__symbol_USDollarHKex := symbol_USDollarHKex;
[L1108]              __tmp__standard_USDollarHKex := standard_USDollarHKex;
[L1109]              __tmp__decimals_USDollarHKex := decimals_USDollarHKex;
[L1110]              __tmp__INITIAL_SUPPLY_USDollarHKex := INITIAL_SUPPLY_USDollarHKex;
[L1111]              __tmp__allocations_USDollarHKex := allocations_USDollarHKex;
[L1112]              __tmp__releaseTime_USDollarHKex.TimeLock := releaseTime_USDollarHKex.TimeLock;
[L1113]              __tmp__balance_USDollarHKex.TimeLock := balance_USDollarHKex.TimeLock;
[L1114]  CALL        call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L4458]              __ret_0_ := __tmp__allowed_StandardToken[this][_owner_s459][_spender_s459];
[L1114]  RET         call __ret_0_ := allowance~address~address_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L1115]              assume revert || gas < 0;
[L8576]  RET         call __ret_0_allowance := allowance~address~address_StandardToken(this, msgsender_MSG, msgvalue_MSG, _owner_s459, _spender_s459);
[L8688]  RET         call CorralChoice_USDollarHKex(this);

[2020-11-25 08:09:24,109 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 08:09:24,109 INFO  L82        PathProgramCache]: Analyzing trace with hash -1129364582, now seen corresponding path program 1 times
[2020-11-25 08:09:24,110 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 08:09:24,125 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 08:09:24,240 INFO  L134       CoverageAnalysis]: Checked inductivity of 963 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 963 trivial. 0 not checked.
[2020-11-25 08:09:24,240 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 08:09:24,240 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [5] imperfect sequences [] total 5
[2020-11-25 08:09:24,241 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 08:09:24,241 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 5 interpolants.
[2020-11-25 08:09:24,241 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=7, Invalid=13, Unknown=0, NotChecked=0, Total=20
[2020-11-25 08:09:24,241 INFO  L87              Difference]: Start difference. First operand 5584 states and 6307 transitions. cyclomatic complexity: 741 Second operand 5 states.
[2020-11-25 08:09:24,513 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 08:09:24,514 INFO  L93              Difference]: Finished difference Result 3386 states and 3789 transitions.
[2020-11-25 08:09:24,514 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 08:09:24,514 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3386 states and 3789 transitions.
[2020-11-25 08:09:24,520 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 08:09:24,520 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3386 states to 0 states and 0 transitions.
[2020-11-25 08:09:24,520 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 08:09:24,520 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 08:09:24,520 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 08:09:24,520 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 08:09:24,520 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:09:24,520 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:09:24,520 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 08:09:24,520 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 08:09:24,520 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 08:09:24,520 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 08:09:24,521 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 08:09:24,524 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 08:09:24 BasicIcfg
[2020-11-25 08:09:24,524 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 08:09:24,525 INFO  L168              Benchmark]: Toolchain (without parser) took 7601.15 ms. Allocated memory was 1.0 GB in the beginning and 2.0 GB in the end (delta: 971.0 MB). Free memory was 924.5 MB in the beginning and 1.5 GB in the end (delta: -563.4 MB). Peak memory consumption was 407.5 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,525 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,525 INFO  L168              Benchmark]: Boogie Preprocessor took 130.00 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,526 INFO  L168              Benchmark]: UtopiaSpecLang took 77.53 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,526 INFO  L168              Benchmark]: Boogie Printer took 24.45 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,526 INFO  L168              Benchmark]: RCFGBuilder took 1150.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 892.2 MB in the beginning and 903.2 MB in the end (delta: -11.0 MB). Peak memory consumption was 181.2 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,527 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.60 ms. Allocated memory is still 1.1 GB. Free memory was 903.2 MB in the beginning and 896.4 MB in the end (delta: 6.8 MB). Peak memory consumption was 6.8 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,527 INFO  L168              Benchmark]: BÃ¼chi Program Product took 2292.69 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 195.0 MB). Free memory was 896.4 MB in the beginning and 915.2 MB in the end (delta: -18.8 MB). Peak memory consumption was 471.7 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,527 INFO  L168              Benchmark]: BlockEncodingV2 took 204.96 ms. Allocated memory is still 1.3 GB. Free memory was 915.2 MB in the beginning and 803.8 MB in the end (delta: 111.5 MB). Peak memory consumption was 111.5 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,528 INFO  L168              Benchmark]: BuchiAutomizer took 3683.72 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 716.2 MB). Free memory was 803.8 MB in the beginning and 1.5 GB in the end (delta: -684.1 MB). Peak memory consumption was 32.1 MB. Max. memory is 15.3 GB.
[2020-11-25 08:09:24,530 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    8060 locations, 14490 edges
  - StatisticsResult: Encoded RCFG
    7962 locations, 14228 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 130.00 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 908.4 MB in the end (delta: 16.1 MB). Peak memory consumption was 16.1 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 77.53 ms. Allocated memory is still 1.0 GB. Free memory was 908.4 MB in the beginning and 897.6 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 24.45 ms. Allocated memory is still 1.0 GB. Free memory was 897.6 MB in the beginning and 892.2 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1150.35 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 59.8 MB). Free memory was 892.2 MB in the beginning and 903.2 MB in the end (delta: -11.0 MB). Peak memory consumption was 181.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.60 ms. Allocated memory is still 1.1 GB. Free memory was 903.2 MB in the beginning and 896.4 MB in the end (delta: 6.8 MB). Peak memory consumption was 6.8 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 2292.69 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 195.0 MB). Free memory was 896.4 MB in the beginning and 915.2 MB in the end (delta: -18.8 MB). Peak memory consumption was 471.7 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 204.96 ms. Allocated memory is still 1.3 GB. Free memory was 915.2 MB in the beginning and 803.8 MB in the end (delta: 111.5 MB). Peak memory consumption was 111.5 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3683.72 ms. Allocated memory was 1.3 GB in the beginning and 2.0 GB in the end (delta: 716.2 MB). Free memory was 803.8 MB in the beginning and 1.5 GB in the end (delta: -684.1 MB). Peak memory consumption was 32.1 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    3262 locations, 4461 edges
  - StatisticsResult: BuchiProgram size
    8060 locations, 14490 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic). 4 modules have a trivial ranking function, the largest among these consists of 5 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.6s and 5 iterations.  TraceHistogramMax:12. Analysis of lassos took 0.8s. Construction of modules took 1.7s. BÃ¼chi inclusion checks took 0.5s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 3 MinimizatonAttempts, 440 StatesRemovedByMinimization, 1 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 5721 states and ocurred in iteration 2.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 20860 SDtfs, 17505 SDslu, 24813 SDs, 0 SdLazy, 4690 SolverSat, 3943 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.7s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_allowance_StandardToken0) ==> ( <>(success_allowance_StandardToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
