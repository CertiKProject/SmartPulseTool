This is Ultimate 0.1.24-f1553f5-m
[2020-11-24 20:42:20,190 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-24 20:42:20,191 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-24 20:42:20,203 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-24 20:42:20,204 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-24 20:42:20,204 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-24 20:42:20,205 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-24 20:42:20,207 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-24 20:42:20,209 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-24 20:42:20,210 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-24 20:42:20,210 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-24 20:42:20,211 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-24 20:42:20,211 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-24 20:42:20,212 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-24 20:42:20,213 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-24 20:42:20,214 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-24 20:42:20,214 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-24 20:42:20,215 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-24 20:42:20,217 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-24 20:42:20,218 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-24 20:42:20,219 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-24 20:42:20,219 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-24 20:42:20,221 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-24 20:42:20,221 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-24 20:42:20,221 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-24 20:42:20,222 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-24 20:42:20,222 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-24 20:42:20,223 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-24 20:42:20,223 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-24 20:42:20,223 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-24 20:42:20,224 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-24 20:42:20,224 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-24 20:42:20,225 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-24 20:42:20,225 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-24 20:42:20,226 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-24 20:42:20,226 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-24 20:42:20,227 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-24 20:42:20,227 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-24 20:42:20,227 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-24 20:42:20,228 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-24 20:42:20,228 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-24 20:42:20,229 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-24 20:42:20,236 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-24 20:42:20,237 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-24 20:42:20,237 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-24 20:42:20,237 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-24 20:42:20,238 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-24 20:42:20,238 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-24 20:42:20,238 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-24 20:42:20,239 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-24 20:42:20,239 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-24 20:42:20,240 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-24 20:42:20,240 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-24 20:42:20,240 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-24 20:42:20,261 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-24 20:42:20,273 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-24 20:42:20,276 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-24 20:42:20,277 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-24 20:42:20,277 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-24 20:42:20,278 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl
[2020-11-24 20:42:20,278 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl'
[2020-11-24 20:42:20,396 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-24 20:42:20,397 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-24 20:42:20,397 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-24 20:42:20,398 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-24 20:42:20,398 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-24 20:42:20,415 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,416 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,461 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,461 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,487 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,501 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,512 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,526 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-24 20:42:20,527 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-24 20:42:20,527 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-24 20:42:20,529 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-24 20:42:20,533 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/1) ...
[2020-11-24 20:42:20,551 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(PausableToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_StandardToken[this][from] && value <= _allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][from] >= 0 &&  _balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_StandardToken[this][from][msg.sender] >= 0 && _allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transferFrom(from, to, value), return == true && _allowed_StandardToken[this][from][msg.sender] == old(_allowed_StandardToken[this][from][msg.sender]) - value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _balances_StandardToken[this] == old(_balances_StandardToken[this]) && _allowed_StandardToken[this][p1][p2] == old(_allowed_StandardToken[this][p1][p2]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:42:20,557 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(PausableToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_StandardToken[this][from] && value <= _allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][from] >= 0 &&  _balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_StandardToken[this][from][msg.sender] >= 0 && _allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transferFrom(from, to, value), return == true && _allowed_StandardToken[this][from][msg.sender] == old(_allowed_StandardToken[this][from][msg.sender]) - value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _balances_StandardToken[this] == old(_balances_StandardToken[this]) && _allowed_StandardToken[this][p1][p2] == old(_allowed_StandardToken[this][p1][p2]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:42:20,565 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(PausableToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_StandardToken[this][from] && value <= _allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][from] >= 0 &&  _balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_StandardToken[this][from][msg.sender] >= 0 && _allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transferFrom(from, to, value), return == true && _allowed_StandardToken[this][from][msg.sender] == old(_allowed_StandardToken[this][from][msg.sender]) - value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _balances_StandardToken[this] == old(_balances_StandardToken[this]) && _allowed_StandardToken[this][p1][p2] == old(_allowed_StandardToken[this][p1][p2]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:42:20,575 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s691 || p2!=msg.sender ) && _from_s691==_to_s691 ) && _value_s691<=_balances_StandardToken[this][_from_s691] ) && _value_s691<=_allowed_StandardToken[this][_from_s691][msg.sender] ) && _value_s691>=0 ) && _value_s691<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_StandardToken[this][_to_s691]>=0 ) && _balances_StandardToken[this][_to_s691]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _balances_StandardToken[this][_from_s691]>=0 ) && _balances_StandardToken[this][_from_s691]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _allowed_StandardToken[this][_from_s691][msg.sender]>=0 ) && _allowed_StandardToken[this][_from_s691][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]],BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],BinaryExpression[COMPEQ,IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>],IdentifierExpression[_to_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_to_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-24 20:42:20,577 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( __ret_0_==true && _allowed_StandardToken[this][_from_s691][msg.sender]==( ( old(_allowed_StandardToken[this][_from_s691][msg.sender]) ) - _value_s691 ) ) && _totalSupply_StandardToken[this]==( old(_totalSupply_StandardToken[this]) ) ) && _balances_StandardToken[this]==( old(_balances_StandardToken[this]) ) ) && _allowed_StandardToken[this][p1][p2]==( old(_allowed_StandardToken[this][p1][p2]) ) ) && paused_Pausable[this]==( old(paused_Pausable[this]) ) ) && _owner_Ownable[this]==( old(_owner_Ownable[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[__ret_0_,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_PausableToken>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[_from_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]],IdentifierExpression[_value_s691,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_totalSupply_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_totalSupply_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_balances_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[_allowed_StandardToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],[IdentifierExpression[p1,GLOBAL]]],[IdentifierExpression[p2,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[paused_Pausable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[_owner_Ownable,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_PausableToken>]]]]]]
[2020-11-24 20:42:20,584 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(PausableToken.transferFrom(from, to, value), (p1 != from || p2 != msg.sender) && from == to && value <= _balances_StandardToken[this][from] && value <= _allowed_StandardToken[this][from][msg.sender] && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][to] >= 0 && _balances_StandardToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _balances_StandardToken[this][from] >= 0 &&  _balances_StandardToken[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && _allowed_StandardToken[this][from][msg.sender] >= 0 && _allowed_StandardToken[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(PausableToken.transferFrom(from, to, value), return == true && _allowed_StandardToken[this][from][msg.sender] == old(_allowed_StandardToken[this][from][msg.sender]) - value && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this]) && _balances_StandardToken[this] == old(_balances_StandardToken[this]) && _allowed_StandardToken[this][p1][p2] == old(_allowed_StandardToken[this][p1][p2]) && paused_Pausable[this] == old(paused_Pausable[this]) && _owner_Ownable[this] == old(_owner_Ownable[this]))))
[2020-11-24 20:42:20,584 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_PausableToken0) ==> ( <>AP(success_transferFrom_PausableToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-24 20:42:20,597 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:42:20 PropertyContainer
[2020-11-24 20:42:20,598 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-24 20:42:20,598 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-24 20:42:20,598 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-24 20:42:20,598 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-24 20:42:20,599 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/2) ...
[2020-11-24 20:42:20,599 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-24 20:42:20,600 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-24 20:42:20,619 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:42:20" (2/2) ...
[2020-11-24 20:42:20,620 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-24 20:42:20,620 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-24 20:42:20,620 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-24 20:42:20,620 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-24 20:42:20,621 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/2) ...
[2020-11-24 20:42:20,675 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-24 20:42:20,675 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:42:20,675 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-24 20:42:20,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20
[2020-11-24 20:42:20,676 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20
[2020-11-24 20:42:20,676 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_IERC20
[2020-11-24 20:42:20,677 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_IERC20
[2020-11-24 20:42:20,677 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_IERC20
[2020-11-24 20:42:20,677 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_IERC20
[2020-11-24 20:42:20,677 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_IERC20
[2020-11-24 20:42:20,678 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_IERC20
[2020-11-24 20:42:20,678 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 20:42:20,678 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken
[2020-11-24 20:42:20,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken
[2020-11-24 20:42:20,678 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StandardToken
[2020-11-24 20:42:20,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StandardToken
[2020-11-24 20:42:20,678 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken
[2020-11-24 20:42:20,678 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken
[2020-11-24 20:42:20,678 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken
[2020-11-24 20:42:20,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken
[2020-11-24 20:42:20,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_StandardToken
[2020-11-24 20:42:20,679 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_StandardToken
[2020-11-24 20:42:20,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_StandardToken
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_StandardToken__success
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_StandardToken__success
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_StandardToken__success
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_StandardToken__success
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable
[2020-11-24 20:42:20,680 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable
[2020-11-24 20:42:20,680 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable
[2020-11-24 20:42:20,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable
[2020-11-24 20:42:20,681 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable
[2020-11-24 20:42:20,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable
[2020-11-24 20:42:20,681 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable
[2020-11-24 20:42:20,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable
[2020-11-24 20:42:20,681 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__success
[2020-11-24 20:42:20,681 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 20:42:20,681 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable
[2020-11-24 20:42:20,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable
[2020-11-24 20:42:20,681 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable
[2020-11-24 20:42:20,681 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable
[2020-11-24 20:42:20,682 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable
[2020-11-24 20:42:20,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable
[2020-11-24 20:42:20,682 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable
[2020-11-24 20:42:20,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable
[2020-11-24 20:42:20,682 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken_NoBaseCtor__success
[2020-11-24 20:42:20,682 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken
[2020-11-24 20:42:20,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken
[2020-11-24 20:42:20,682 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken
[2020-11-24 20:42:20,682 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_PausableToken
[2020-11-24 20:42:20,683 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 20:42:20,683 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken
[2020-11-24 20:42:20,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken
[2020-11-24 20:42:20,684 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken
[2020-11-24 20:42:20,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken
[2020-11-24 20:42:20,684 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BurnableToken
[2020-11-24 20:42:20,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BurnableToken
[2020-11-24 20:42:20,684 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken_NoBaseCtor__success
[2020-11-24 20:42:20,684 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken
[2020-11-24 20:42:20,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken
[2020-11-24 20:42:20,684 INFO  L130     BoogieDeclarations]: Found specification of procedure name_LUCKYToken
[2020-11-24 20:42:20,684 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_LUCKYToken
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_LUCKYToken
[2020-11-24 20:42:20,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_LUCKYToken
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_LUCKYToken
[2020-11-24 20:42:20,685 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_LUCKYToken
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__success
[2020-11-24 20:42:20,685 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__success
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_IERC20
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_IERC20
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_StandardToken
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_StandardToken
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Ownable
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Ownable
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_Pausable
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_Pausable
[2020-11-24 20:42:20,686 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_PausableToken
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_PausableToken
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BurnableToken
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BurnableToken
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_LUCKYToken
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:42:20,687 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__success
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure IERC20_IERC20__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 20:42:20,688 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__success
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure StandardToken_StandardToken__fail
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StandardToken__success
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_StandardToken__fail
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__success
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_StandardToken__fail
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__success
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_StandardToken__fail
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,689 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__success
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure _approve~address~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,690 INFO  L130     BoogieDeclarations]: Found specification of procedure _burn~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure _burnFrom~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__success
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure Ownable_Ownable__fail
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__success
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_Ownable__fail
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__success
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure isOwner_Ownable__fail
[2020-11-24 20:42:20,691 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__success
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_Ownable__fail
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure _transferOwnership~address_Ownable__fail
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__success
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure Pausable_Pausable__fail
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__success
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure pause_Pausable__fail
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__success
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure unpause_Pausable__fail
[2020-11-24 20:42:20,692 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__success
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure paused_Pausable__fail
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken_NoBaseCtor__fail
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken__success
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure PausableToken_PausableToken__fail
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__success
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__success
[2020-11-24 20:42:20,693 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__success
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure BurnableToken_BurnableToken__fail
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__success
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_BurnableToken__fail
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BurnableToken__success
[2020-11-24 20:42:20,694 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_BurnableToken__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken_NoBaseCtor__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken__success
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure LUCKYToken_LUCKYToken__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure name_LUCKYToken__success
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure name_LUCKYToken__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_LUCKYToken__success
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_LUCKYToken__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_LUCKYToken__success
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_LUCKYToken__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-24 20:42:20,695 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-24 20:42:20,696 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-24 20:42:20,696 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-24 20:42:20,696 INFO  L130     BoogieDeclarations]: Found specification of procedure whenNotPaused_pre__fail
[2020-11-24 20:42:20,696 INFO  L130     BoogieDeclarations]: Found specification of procedure whenPaused_pre__fail
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,696 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__fail
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20_NoBaseCtor__success
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__fail
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure IERC20_IERC20__success
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__fail
[2020-11-24 20:42:20,697 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken_NoBaseCtor__success
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__fail
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure StandardToken_StandardToken__success
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StandardToken__fail
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_StandardToken__success
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__fail
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_StandardToken__success
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__fail
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_StandardToken__success
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_StandardToken__success
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,698 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_StandardToken__success
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_StandardToken__success
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_StandardToken__success
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_StandardToken__success
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure _approve~address~address~uint256_StandardToken__success
[2020-11-24 20:42:20,699 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burn~address~uint256_StandardToken__success
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_StandardToken__fail
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure _burnFrom~address~uint256_StandardToken__success
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__fail
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable_NoBaseCtor__success
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__fail
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure Ownable_Ownable__success
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__fail
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_Ownable__success
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__fail
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure isOwner_Ownable__success
[2020-11-24 20:42:20,700 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__fail
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_Ownable__success
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__fail
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transferOwnership~address_Ownable__success
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__fail
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable_NoBaseCtor__success
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__fail
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure Pausable_Pausable__success
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__fail
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure pause_Pausable__success
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__fail
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure unpause_Pausable__success
[2020-11-24 20:42:20,701 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__fail
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure paused_Pausable__success
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken_NoBaseCtor__fail
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken_NoBaseCtor__success
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken__fail
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure PausableToken_PausableToken__success
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_PausableToken__success
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_PausableToken__success
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,702 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_PausableToken__success
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_PausableToken__fail
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_PausableToken__success
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__fail
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken_NoBaseCtor__success
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__fail
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure BurnableToken_BurnableToken__success
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__fail
[2020-11-24 20:42:20,703 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_BurnableToken__success
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BurnableToken__fail
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_BurnableToken__success
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken_NoBaseCtor__fail
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken_NoBaseCtor__success
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken__fail
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure LUCKYToken_LUCKYToken__success
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_LUCKYToken__fail
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_LUCKYToken__success
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_LUCKYToken__fail
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_LUCKYToken__success
[2020-11-24 20:42:20,704 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_LUCKYToken__fail
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_LUCKYToken__success
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__fail
[2020-11-24 20:42:20,705 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenNotPaused_pre__success
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__fail
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure whenPaused_pre__success
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_IERC20
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_IERC20
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_StandardToken
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_StandardToken
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Ownable
[2020-11-24 20:42:20,706 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Ownable
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_Pausable
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_Pausable
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_PausableToken
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_PausableToken
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BurnableToken
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BurnableToken
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_LUCKYToken
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-24 20:42:20,707 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-24 20:42:20,707 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-24 20:42:21,147 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:42:21,147 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:42:21,147 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:42:21,306 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-24 20:42:21,675 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-24 20:42:21,676 INFO  L286             CfgBuilder]: Removed 8 assue(true) statements.
[2020-11-24 20:42:21,678 INFO  L202        PluginConnector]: Adding new model LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:42:21 BoogieIcfgContainer
[2020-11-24 20:42:21,678 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:42:20" (2/2) ...
[2020-11-24 20:42:21,678 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-24 20:42:21,678 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@2e626da7 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:42:21, skipping insertion in model container
[2020-11-24 20:42:21,678 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-24 20:42:21,679 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-24 20:42:21,679 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-24 20:42:21,680 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-24 20:42:21,680 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/3) ...
[2020-11-24 20:42:21,681 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@731da43e and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:42:21, skipping insertion in model container
[2020-11-24 20:42:21,681 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:42:20" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-24 20:42:21,713 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:42:21 NWAContainer
[2020-11-24 20:42:21,714 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-24 20:42:21,714 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-24 20:42:21,714 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-24 20:42:21,714 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-24 20:42:21,715 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:42:21" (3/4) ...
[2020-11-24 20:42:21,715 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@3a9da937 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:42:21, skipping insertion in model container
[2020-11-24 20:42:21,715 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:42:21" (4/4) ...
[2020-11-24 20:42:21,718 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-24 20:42:21,722 INFO  L110   BuchiProductObserver]: Initial RCFG 2617 locations, 3889 edges
[2020-11-24 20:42:21,722 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-24 20:42:21,736 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-24 20:42:23,577 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-24 20:42:23,586 INFO  L110   BuchiProductObserver]: BuchiProgram size 6840 locations, 12837 edges
[2020-11-24 20:42:23,586 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:42:23 BoogieIcfgContainer
[2020-11-24 20:42:23,586 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-24 20:42:23,586 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-24 20:42:23,586 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-24 20:42:23,588 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-24 20:42:23,588 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:42:23" (1/1) ...
[2020-11-24 20:42:23,713 INFO  L313           BlockEncoder]: Initial Icfg 6840 locations, 12837 edges
[2020-11-24 20:42:23,714 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-24 20:42:23,714 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-24 20:42:23,714 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-24 20:42:23,715 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-24 20:42:23,728 INFO  L70    emoveInfeasibleEdges]: Removed 180 edges and 19 locations because of local infeasibility
[2020-11-24 20:42:23,743 INFO  L70        RemoveSinkStates]: Removed 104 edges and 69 locations by removing sink states
[2020-11-24 20:42:23,757 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-24 20:42:23,763 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-24 20:42:23,769 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-24 20:42:23,769 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-24 20:42:23,773 INFO  L313           BlockEncoder]: Encoded RCFG 6720 locations, 12506 edges
[2020-11-24 20:42:23,773 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:42:23 BasicIcfg
[2020-11-24 20:42:23,773 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-24 20:42:23,774 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-24 20:42:23,774 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-24 20:42:23,775 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-24 20:42:23,775 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:42:23,776 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 24.11 08:42:20" (1/6) ...
[2020-11-24 20:42:23,777 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26ffb67f and model type LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:42:23, skipping insertion in model container
[2020-11-24 20:42:23,777 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:42:23,777 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 24.11 08:42:20" (2/6) ...
[2020-11-24 20:42:23,777 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26ffb67f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:42:23, skipping insertion in model container
[2020-11-24 20:42:23,777 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:42:23,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 24.11 08:42:21" (3/6) ...
[2020-11-24 20:42:23,778 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26ffb67f and model type LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:42:23, skipping insertion in model container
[2020-11-24 20:42:23,778 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:42:23,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 24.11 08:42:21" (4/6) ...
[2020-11-24 20:42:23,778 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26ffb67f and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 24.11 08:42:23, skipping insertion in model container
[2020-11-24 20:42:23,778 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:42:23,778 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 24.11 08:42:23" (5/6) ...
[2020-11-24 20:42:23,778 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@26ffb67f and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 24.11 08:42:23, skipping insertion in model container
[2020-11-24 20:42:23,779 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-24 20:42:23,779 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 24.11 08:42:23" (6/6) ...
[2020-11-24 20:42:23,780 INFO  L404   chiAutomizerObserver]: Analyzing ICFG LUCKYToken_0xE478d4F4a87D4D641AF97ca0b5Cc3dB61e266357_transferfrom-self.bpl_BEv2
[2020-11-24 20:42:23,812 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-24 20:42:23,812 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-24 20:42:23,812 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-24 20:42:23,812 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-24 20:42:23,812 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-24 20:42:23,812 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-24 20:42:23,812 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-24 20:42:23,812 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-24 20:42:23,812 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-24 20:42:23,870 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6720 states.
[2020-11-24 20:42:23,942 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:42:23,942 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:42:23,942 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:42:23,952 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:23,952 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:23,952 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-24 20:42:23,952 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 6720 states.
[2020-11-24 20:42:23,984 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:42:23,984 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:42:23,984 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:42:23,987 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:23,987 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_PausableToken0 := false;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND TRUE   revert
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND TRUE   choice == 19
[L7131]              gas := gas - 21000;
[L7132]  COND FALSE  !(gas >= 0)
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:42:24,002 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:24,002 INFO  L82        PathProgramCache]: Analyzing trace with hash -1705055161, now seen corresponding path program 1 times
[2020-11-24 20:42:24,007 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:24,025 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:42:24,067 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:42:24,069 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:42:24,070 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:42:24,446 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:42:24,455 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:42:24,455 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:42:24,457 INFO  L87              Difference]: Start difference. First operand 6720 states. Second operand 4 states.
[2020-11-24 20:42:25,172 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:42:25,172 INFO  L93              Difference]: Finished difference Result 4043 states and 4970 transitions.
[2020-11-24 20:42:25,172 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:42:25,173 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4043 states and 4970 transitions.
[2020-11-24 20:42:25,196 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:42:25,225 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4043 states to 4043 states and 4970 transitions.
[2020-11-24 20:42:25,226 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 4
[2020-11-24 20:42:25,229 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 976
[2020-11-24 20:42:25,229 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4043 states and 4970 transitions.
[2020-11-24 20:42:25,240 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:42:25,240 INFO  L728         BuchiCegarLoop]: Abstraction has 4043 states and 4970 transitions.
[2020-11-24 20:42:25,256 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4043 states and 4970 transitions.
[2020-11-24 20:42:25,309 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4043 to 4043.
[2020-11-24 20:42:25,310 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4043 states.
[2020-11-24 20:42:25,318 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4043 states to 4043 states and 4970 transitions.
[2020-11-24 20:42:25,318 INFO  L751         BuchiCegarLoop]: Abstraction has 4043 states and 4970 transitions.
[2020-11-24 20:42:25,318 INFO  L631         BuchiCegarLoop]: Abstraction has 4043 states and 4970 transitions.
[2020-11-24 20:42:25,319 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-24 20:42:25,319 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4043 states and 4970 transitions.
[2020-11-24 20:42:25,328 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:42:25,328 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:42:25,328 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:42:25,329 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:25,330 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_PausableToken0 := false;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND TRUE   revert
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND FALSE  !(__exception)
[L1419]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4186]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6245]  COND FALSE  !(!!paused_Pausable[this])
[L4186]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND TRUE   revert
[L1419]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1420]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((__ret_0_ == true && _allowed_StandardToken[this][_from_s691][msgsender_MSG] == old(_allowed_StandardToken[this][_from_s691][msgsender_MSG]) - _value_s691) && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this])) && _balances_StandardToken[this] == old(_balances_StandardToken[this])) && _allowed_StandardToken[this][p1][p2] == old(_allowed_StandardToken[this][p1][p2])) && paused_Pausable[this] == old(paused_Pausable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND FALSE  !(__exception)
[L1419]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4186]  CALL        call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L6245]  COND FALSE  !(!!paused_Pausable[this])
[L4186]  RET         call whenNotPaused_pre__success(this, msgsender_MSG, msgvalue_MSG);
[L4187]  COND TRUE   revert
[L1419]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__success(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1420]              assume !revert && gas >= 0;
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume !((((((__ret_0_ == true && _allowed_StandardToken[this][_from_s691][msgsender_MSG] == old(_allowed_StandardToken[this][_from_s691][msgsender_MSG]) - _value_s691) && _totalSupply_StandardToken[this] == old(_totalSupply_StandardToken[this])) && _balances_StandardToken[this] == old(_balances_StandardToken[this])) && _allowed_StandardToken[this][p1][p2] == old(_allowed_StandardToken[this][p1][p2])) && paused_Pausable[this] == old(paused_Pausable[this])) && _owner_Ownable[this] == old(_owner_Ownable[this]));
[L3]                 revert := revert_hold;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:42:25,333 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:25,333 INFO  L82        PathProgramCache]: Analyzing trace with hash 272731056, now seen corresponding path program 1 times
[2020-11-24 20:42:25,334 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:25,342 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:42:25,360 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-24 20:42:25,360 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:42:25,361 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:42:25,362 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:42:25,362 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:42:25,362 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:42:25,362 INFO  L87              Difference]: Start difference. First operand 4043 states and 4970 transitions. cyclomatic complexity: 929 Second operand 4 states.
[2020-11-24 20:42:26,987 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:42:26,987 INFO  L93              Difference]: Finished difference Result 5817 states and 6900 transitions.
[2020-11-24 20:42:26,987 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:42:26,987 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5817 states and 6900 transitions.
[2020-11-24 20:42:27,004 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-24 20:42:27,024 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5817 states to 5373 states and 6344 transitions.
[2020-11-24 20:42:27,024 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1309
[2020-11-24 20:42:27,025 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1365
[2020-11-24 20:42:27,025 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5373 states and 6344 transitions.
[2020-11-24 20:42:27,030 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:42:27,030 INFO  L728         BuchiCegarLoop]: Abstraction has 5373 states and 6344 transitions.
[2020-11-24 20:42:27,033 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5373 states and 6344 transitions.
[2020-11-24 20:42:27,075 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5373 to 4367.
[2020-11-24 20:42:27,075 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4367 states.
[2020-11-24 20:42:27,081 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4367 states to 4367 states and 5038 transitions.
[2020-11-24 20:42:27,082 INFO  L751         BuchiCegarLoop]: Abstraction has 4367 states and 5038 transitions.
[2020-11-24 20:42:27,082 INFO  L631         BuchiCegarLoop]: Abstraction has 4367 states and 5038 transitions.
[2020-11-24 20:42:27,082 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-24 20:42:27,082 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4367 states and 5038 transitions.
[2020-11-24 20:42:27,089 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-24 20:42:27,090 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:42:27,090 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:42:27,093 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:27,093 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_PausableToken0 := false;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND TRUE   !!__tmp__paused_Pausable[this]
[L6238]              revert := true;
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND TRUE   !!__tmp__paused_Pausable[this]
[L6238]              revert := true;
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:42:27,100 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:27,100 INFO  L82        PathProgramCache]: Analyzing trace with hash 2040279875, now seen corresponding path program 1 times
[2020-11-24 20:42:27,101 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:27,126 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:42:27,266 INFO  L134       CoverageAnalysis]: Checked inductivity of 332 backedges. 6 proven. 0 refuted. 0 times theorem prover too weak. 326 trivial. 0 not checked.
[2020-11-24 20:42:27,267 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:42:27,267 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [13] imperfect sequences [] total 13
[2020-11-24 20:42:27,267 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:42:27,268 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 14 interpolants.
[2020-11-24 20:42:27,268 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=157, Unknown=0, NotChecked=0, Total=182
[2020-11-24 20:42:27,268 INFO  L87              Difference]: Start difference. First operand 4367 states and 5038 transitions. cyclomatic complexity: 673 Second operand 14 states.
[2020-11-24 20:42:31,176 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:42:31,177 INFO  L93              Difference]: Finished difference Result 6820 states and 7913 transitions.
[2020-11-24 20:42:31,177 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-24 20:42:31,177 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 6820 states and 7913 transitions.
[2020-11-24 20:42:31,191 INFO  L131   ngComponentsAnalysis]: Automaton has 3 accepting balls. 12
[2020-11-24 20:42:31,212 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 6820 states to 6820 states and 7913 transitions.
[2020-11-24 20:42:31,212 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1775
[2020-11-24 20:42:31,213 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1775
[2020-11-24 20:42:31,213 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 6820 states and 7913 transitions.
[2020-11-24 20:42:31,220 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:42:31,220 INFO  L728         BuchiCegarLoop]: Abstraction has 6820 states and 7913 transitions.
[2020-11-24 20:42:31,224 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 6820 states and 7913 transitions.
[2020-11-24 20:42:31,268 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 6820 to 4465.
[2020-11-24 20:42:31,268 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4465 states.
[2020-11-24 20:42:31,273 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4465 states to 4465 states and 5142 transitions.
[2020-11-24 20:42:31,274 INFO  L751         BuchiCegarLoop]: Abstraction has 4465 states and 5142 transitions.
[2020-11-24 20:42:31,274 INFO  L631         BuchiCegarLoop]: Abstraction has 4465 states and 5142 transitions.
[2020-11-24 20:42:31,274 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-24 20:42:31,274 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4465 states and 5142 transitions.
[2020-11-24 20:42:31,279 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-24 20:42:31,279 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:42:31,280 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:42:31,283 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:31,283 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_PausableToken0 := false;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND TRUE   __exception
[L1853]              __tmp__Balance := Balance;
[L1854]              __tmp__DType := DType;
[L1855]              __tmp__Alloc := Alloc;
[L1856]              __tmp__balance_ADDR := balance_ADDR;
[L1857]              __tmp__M_Ref_int := M_Ref_int;
[L1858]              __tmp__sum__balances0 := sum__balances0;
[L1859]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1860]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1861]              __tmp__sum__allowed1 := sum__allowed1;
[L1862]              __tmp__Length := Length;
[L1863]              __tmp__now := now;
[L1864]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1865]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1866]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1867]              __tmp___owner_Ownable := _owner_Ownable;
[L1868]              __tmp__paused_Pausable := paused_Pausable;
[L1869]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1870]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1871]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1872]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1873]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1874]  CALL        call LUCKYToken_LUCKYToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4547]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L4547]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4548]  COND FALSE  !(revert)
[L4551]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3107]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L3107]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3108]  COND FALSE  !(revert)
[L3111]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3082]              assume msgsender_MSG != null;
[L3083]              __tmp__Balance[this] := 0;
[L3084]              __tmp___balances_StandardToken[this] := zeroRefintArr();
[L3085]              __tmp__sum__balances0[this] := 0;
[L3086]              __tmp___allowed_StandardToken[this] := zeroRefRefintArr();
[L3087]              __tmp__sum__allowed1[this] := 0;
[L3088]              __tmp___totalSupply_StandardToken[this] := 0;
[L3111]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3112]  COND FALSE  !(revert)
[L4551]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4552]  COND FALSE  !(revert)
[L4555]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L4555]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4556]  COND FALSE  !(revert)
[L4559]  CALL        call BurnableToken_BurnableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4375]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L4375]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4376]  COND FALSE  !(revert)
[L4379]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3107]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L3107]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3108]  COND FALSE  !(revert)
[L3111]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3082]              assume msgsender_MSG != null;
[L3083]              __tmp__Balance[this] := 0;
[L3084]              __tmp___balances_StandardToken[this] := zeroRefintArr();
[L3085]              __tmp__sum__balances0[this] := 0;
[L3086]              __tmp___allowed_StandardToken[this] := zeroRefRefintArr();
[L3087]              __tmp__sum__allowed1[this] := 0;
[L3088]              __tmp___totalSupply_StandardToken[this] := 0;
[L3111]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3112]  COND FALSE  !(revert)
[L4379]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4380]  COND FALSE  !(revert)
[L4383]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L4383]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4384]  COND FALSE  !(revert)
[L4387]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4360]              assume msgsender_MSG != null;
[L4361]              __tmp__Balance[this] := 0;
[L4387]  RET         call BurnableToken_BurnableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4388]  COND FALSE  !(revert)
[L4559]  RET         call BurnableToken_BurnableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4560]  COND FALSE  !(revert)
[L4563]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3955]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L3955]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3956]  COND FALSE  !(revert)
[L3959]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]              assume msgsender_MSG != null;
[L3939]              __tmp__Balance[this] := 0;
[L3940]              __tmp__paused_Pausable[this] := false;
[L3959]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3960]  COND FALSE  !(revert)
[L4563]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4564]  COND FALSE  !(revert)
[L4567]  CALL        call PausableToken_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4061]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L4061]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L4062]  COND FALSE  !(revert)
[L4065]  CALL        call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L3107]  CALL        call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3065]  CALL        call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3050]              assume msgsender_MSG != null;
[L3051]              __tmp__Balance[this] := 0;
[L3065]  RET         call IERC20_IERC20_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3066]  COND FALSE  !(revert)
[L3107]  RET         call IERC20_IERC20__fail(this, msgsender_MSG, msgvalue_MSG);
[L3108]  COND FALSE  !(revert)
[L3111]  CALL        call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3082]              assume msgsender_MSG != null;
[L3083]              __tmp__Balance[this] := 0;
[L3084]              __tmp___balances_StandardToken[this] := zeroRefintArr();
[L3085]              __tmp__sum__balances0[this] := 0;
[L3086]              __tmp___allowed_StandardToken[this] := zeroRefRefintArr();
[L3087]              __tmp__sum__allowed1[this] := 0;
[L3088]              __tmp___totalSupply_StandardToken[this] := 0;
[L3111]  RET         call StandardToken_StandardToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3112]  COND FALSE  !(revert)
[L4065]  RET         call StandardToken_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4066]  COND FALSE  !(revert)
[L4069]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L4069]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4070]  COND FALSE  !(revert)
[L4073]  CALL        call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3955]  CALL        call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3802]  CALL        call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3785]              assume msgsender_MSG != null;
[L3786]              __tmp__Balance[this] := 0;
[L3787]              __tmp___owner_Ownable[this] := null;
[L3802]  RET         call Ownable_Ownable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3803]  COND FALSE  !(revert)
[L3955]  RET         call Ownable_Ownable__fail(this, msgsender_MSG, msgvalue_MSG);
[L3956]  COND FALSE  !(revert)
[L3959]  CALL        call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3938]              assume msgsender_MSG != null;
[L3939]              __tmp__Balance[this] := 0;
[L3940]              __tmp__paused_Pausable[this] := false;
[L3959]  RET         call Pausable_Pausable_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L3960]  COND FALSE  !(revert)
[L4073]  RET         call Pausable_Pausable__fail(this, msgsender_MSG, msgvalue_MSG);
[L4074]  COND FALSE  !(revert)
[L4077]  CALL        call PausableToken_PausableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4046]              assume msgsender_MSG != null;
[L4047]              __tmp__Balance[this] := 0;
[L4077]  RET         call PausableToken_PausableToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4078]  COND FALSE  !(revert)
[L4567]  RET         call PausableToken_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L4568]  COND FALSE  !(revert)
[L4571]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4502]              assume msgsender_MSG != null;
[L4503]              __tmp__Balance[this] := 0;
[L4504]              __tmp__name_LUCKYToken[this] := -927166810;
[L4505]              __tmp__symbol_LUCKYToken[this] := -927166810;
[L4506]              __tmp__decimals_LUCKYToken[this] := 18;
[L4507]              __tmp__INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4508]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4509]              __tmp___tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4511]              __var_25 := __tmp__decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4512]              __tmp___totalSupply_StandardToken[this] := nonlinearMul(__tmp__INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, __tmp__decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4513]              __tmp___owner_Ownable[this] := __tmp___tokenOwner_LUCKYToken[this];
[L4514]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] - __tmp___balances_StandardToken[this][__tmp___owner_Ownable[this]];
[L4515]              __tmp___balances_StandardToken[this][__tmp___owner_Ownable[this]] := __tmp___totalSupply_StandardToken[this];
[L4516]              __tmp__sum__balances0[this] := __tmp__sum__balances0[this] + __tmp___balances_StandardToken[this][__tmp___owner_Ownable[this]];
[L4571]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L4572]  COND FALSE  !(revert)
[L1874]  RET         call LUCKYToken_LUCKYToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1875]              assume revert || gas < 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND TRUE   !!__tmp__paused_Pausable[this]
[L6238]              revert := true;
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4165]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4166]  CALL        call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3284]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3285]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3285]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3286]  COND TRUE   revert
[L4166]  RET         call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4167]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:42:31,287 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:31,287 INFO  L82        PathProgramCache]: Analyzing trace with hash -1446850277, now seen corresponding path program 1 times
[2020-11-24 20:42:31,288 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:31,300 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-24 20:42:31,391 INFO  L134       CoverageAnalysis]: Checked inductivity of 332 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 332 trivial. 0 not checked.
[2020-11-24 20:42:31,391 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-24 20:42:31,391 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-24 20:42:31,392 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-24 20:42:31,392 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-24 20:42:31,392 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-24 20:42:31,392 INFO  L87              Difference]: Start difference. First operand 4465 states and 5142 transitions. cyclomatic complexity: 681 Second operand 4 states.
[2020-11-24 20:42:31,891 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-24 20:42:31,891 INFO  L93              Difference]: Finished difference Result 5223 states and 6127 transitions.
[2020-11-24 20:42:31,891 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-24 20:42:31,891 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 5223 states and 6127 transitions.
[2020-11-24 20:42:31,904 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 12
[2020-11-24 20:42:31,920 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 5223 states to 5003 states and 5899 transitions.
[2020-11-24 20:42:31,920 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1366
[2020-11-24 20:42:31,921 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1366
[2020-11-24 20:42:31,921 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 5003 states and 5899 transitions.
[2020-11-24 20:42:31,926 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-24 20:42:31,926 INFO  L728         BuchiCegarLoop]: Abstraction has 5003 states and 5899 transitions.
[2020-11-24 20:42:31,930 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 5003 states and 5899 transitions.
[2020-11-24 20:42:31,970 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 5003 to 4480.
[2020-11-24 20:42:31,970 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 4480 states.
[2020-11-24 20:42:31,976 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 4480 states to 4480 states and 5200 transitions.
[2020-11-24 20:42:31,976 INFO  L751         BuchiCegarLoop]: Abstraction has 4480 states and 5200 transitions.
[2020-11-24 20:42:31,976 INFO  L631         BuchiCegarLoop]: Abstraction has 4480 states and 5200 transitions.
[2020-11-24 20:42:31,976 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-24 20:42:31,976 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4480 states and 5200 transitions.
[2020-11-24 20:42:31,981 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 8
[2020-11-24 20:42:31,981 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-24 20:42:31,981 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-24 20:42:31,984 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-24 20:42:31,984 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_PausableToken0 := false;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]     CALL        call main();
[L3]                 havoc p2;
[L3]                 havoc p1;
[L7259]              assume null == 0;
[L7260]  CALL        call this := FreshRefGenerator__success();
[L2905]              havoc newRef;
[L2906]              assume Alloc[newRef] == false;
[L2907]              Alloc[newRef] := true;
[L2908]              assume newRef != null;
[L7260]  RET         call this := FreshRefGenerator__success();
[L7261]              assume now >= 0;
[L7262]              assume DType[this] == LUCKYToken;
[L7263]              assume msgvalue_MSG == 0;
[L7264]              gas := gas - 53000;
[L7265]  CALL        call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
[L7266]              assume !revert && gas >= 0;
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4165]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4166]  CALL        call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3284]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3285]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3285]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3286]  COND TRUE   revert
[L4166]  RET         call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4167]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

Loop:
[L7269]  CALL        call CorralChoice_LUCKYToken(this);
[L7079]              havoc msgsender_MSG;
[L7080]              havoc msgvalue_MSG;
[L7081]              havoc choice;
[L7082]              havoc _to_s670;
[L7083]              havoc _value_s670;
[L7084]              havoc __ret_0_transfer;
[L7085]              havoc _spender_s709;
[L7086]              havoc _value_s709;
[L7087]              havoc __ret_0_approve;
[L7088]              havoc _from_s691;
[L7089]              havoc _to_s691;
[L7090]              havoc _value_s691;
[L7091]              havoc __ret_0_transferFrom;
[L7092]              havoc __ret_0_totalSupply;
[L7093]              havoc owner_s211;
[L7094]              havoc __ret_0_balanceOf;
[L7095]              havoc owner_s227;
[L7096]              havoc spender_s227;
[L7097]              havoc __ret_0_allowance;
[L7098]              havoc _spender_s727;
[L7099]              havoc _addedValue_s727;
[L7100]              havoc success_s727;
[L7101]              havoc _spender_s745;
[L7102]              havoc _subtractedValue_s745;
[L7103]              havoc success_s745;
[L7104]              havoc __ret_0_owner;
[L7105]              havoc __ret_0_isOwner;
[L7106]              havoc newOwner_s564;
[L7107]              havoc __ret_0_paused;
[L7108]              havoc amount_s764;
[L7109]              havoc account_s779;
[L7110]              havoc amount_s779;
[L7111]              havoc __ret_0_name;
[L7112]              havoc __ret_0_symbol;
[L7113]              havoc __ret_0_decimals;
[L7114]              havoc tmpNow;
[L7115]              havoc gas;
[L7116]              assume gas > 4000000 && gas <= 8000000;
[L7117]              tmpNow := now;
[L7118]              havoc now;
[L7119]              assume now > tmpNow;
[L7120]              assume msgsender_MSG != null;
[L7121]              assume DType[msgsender_MSG] != SafeMath;
[L7122]              assume DType[msgsender_MSG] != IERC20;
[L7123]              assume DType[msgsender_MSG] != StandardToken;
[L7124]              assume DType[msgsender_MSG] != Ownable;
[L7125]              assume DType[msgsender_MSG] != Pausable;
[L7126]              assume DType[msgsender_MSG] != PausableToken;
[L7127]              assume DType[msgsender_MSG] != BurnableToken;
[L7128]              assume DType[msgsender_MSG] != LUCKYToken;
[L7129]              Alloc[msgsender_MSG] := true;
[L7130]  COND FALSE  !(choice == 19)
[L7137]  COND FALSE  !(choice == 18)
[L7144]  COND TRUE   choice == 17
[L7145]              gas := gas - 21000;
[L7146]  COND TRUE   gas >= 0
[L7147]              assume _value_s691 >= 0 && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L7148]              assume msgvalue_MSG == 0;
[L7149]  CALL        call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4165]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4166]  CALL        call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3284]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3285]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3285]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3286]  COND TRUE   revert
[L4166]  RET         call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4167]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L7269]  RET         call CorralChoice_LUCKYToken(this);

[2020-11-24 20:42:31,989 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:31,989 INFO  L82        PathProgramCache]: Analyzing trace with hash 1547590367, now seen corresponding path program 1 times
[2020-11-24 20:42:31,990 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:32,013 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:32,037 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:32,119 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:32,119 INFO  L82        PathProgramCache]: Analyzing trace with hash -1583311130, now seen corresponding path program 1 times
[2020-11-24 20:42:32,120 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:32,124 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:32,128 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:32,138 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-24 20:42:32,138 INFO  L82        PathProgramCache]: Analyzing trace with hash -1110240828, now seen corresponding path program 1 times
[2020-11-24 20:42:32,139 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-24 20:42:32,158 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:32,182 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2647 to 5281
Garbage collection #8: 5281 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 5281 to 10559
[2020-11-24 20:42:32,602 WARN  L188               SmtUtils]: Spent 126.00 ms on a formula simplification. DAG size of input: 115 DAG size of output: 109
[2020-11-24 20:42:32,770 WARN  L188               SmtUtils]: Spent 165.00 ms on a formula simplification that was a NOOP. DAG size: 269
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.002s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 6661 to 13313
[2020-11-24 20:42:33,367 WARN  L188               SmtUtils]: Spent 580.00 ms on a formula simplification. DAG size of input: 221 DAG size of output: 221
[2020-11-24 20:42:34,054 WARN  L188               SmtUtils]: Spent 683.00 ms on a formula simplification. DAG size of input: 279 DAG size of output: 269
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8713 to 17419
[2020-11-24 20:42:34,630 WARN  L188               SmtUtils]: Spent 545.00 ms on a formula simplification. DAG size of input: 182 DAG size of output: 171
[2020-11-24 20:42:34,857 WARN  L188               SmtUtils]: Spent 226.00 ms on a formula simplification that was a NOOP. DAG size: 338
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8543 to 17077
[2020-11-24 20:42:35,407 WARN  L188               SmtUtils]: Spent 509.00 ms on a formula simplification. DAG size of input: 282 DAG size of output: 271
[2020-11-24 20:42:35,644 WARN  L188               SmtUtils]: Spent 235.00 ms on a formula simplification that was a NOOP. DAG size: 271
Garbage collection #1: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-24 20:42:37,548 WARN  L188               SmtUtils]: Spent 1.83 s on a formula simplification. DAG size of input: 495 DAG size of output: 190
[2020-11-24 20:42:37,557 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #4: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #1: 41 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 41 to 79
Garbage collection #2: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #3: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #4: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #5: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
[2020-11-24 20:42:38,430 WARN  L188               SmtUtils]: Spent 518.00 ms on a formula simplification. DAG size of input: 294 DAG size of output: 282
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #1: 17 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17 to 31
Garbage collection #2: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #3: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #1: 31 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 31 to 61
Garbage collection #2: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #3: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #4: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #5: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #1: 61 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 61 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 47 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 47 to 89
Garbage collection #2: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #3: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #4: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #5: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #6: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #7: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-24 20:42:39,024 WARN  L188               SmtUtils]: Spent 121.00 ms on a formula simplification that was a NOOP. DAG size: 270
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
[2020-11-24 20:42:39,641 WARN  L188               SmtUtils]: Spent 609.00 ms on a formula simplification. DAG size of input: 222 DAG size of output: 222
[2020-11-24 20:42:40,366 WARN  L188               SmtUtils]: Spent 723.00 ms on a formula simplification. DAG size of input: 279 DAG size of output: 270
Garbage collection #1: 101 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 101 to 199
Garbage collection #2: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #3: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #4: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #5: 1571 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1571 to 3137
Garbage collection #6: 3137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3137 to 6271
Garbage collection #7: 6271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6271 to 12541
Garbage collection #8: 12541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 12541 to 25073
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
Garbage collection #7: 4027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4027 to 8053
Garbage collection #8: 8053 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8053 to 16103
[2020-11-24 20:42:40,612 WARN  L188               SmtUtils]: Spent 230.00 ms on a formula simplification. DAG size of input: 176 DAG size of output: 165
[2020-11-24 20:42:40,799 WARN  L188               SmtUtils]: Spent 185.00 ms on a formula simplification that was a NOOP. DAG size: 332
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8543 to 17077
[2020-11-24 20:42:41,275 WARN  L188               SmtUtils]: Spent 463.00 ms on a formula simplification. DAG size of input: 273 DAG size of output: 267
[2020-11-24 20:42:42,355 WARN  L188               SmtUtils]: Spent 1.08 s on a formula simplification. DAG size of input: 479 DAG size of output: 464
Garbage collection #1: 181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 181 to 359
Garbage collection #2: 359 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 359 to 709
Garbage collection #3: 709 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 709 to 1409
Garbage collection #4: 1409 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1409 to 2803
Garbage collection #5: 2803 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2803 to 5591
Garbage collection #6: 5591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5591 to 11177
Garbage collection #7: 11177 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11177 to 22349
Garbage collection #8: 22349 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 22349 to 44687
Garbage collection #1: 67 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 67 to 131
Garbage collection #2: 131 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 131 to 257
Garbage collection #3: 257 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 257 to 509
Garbage collection #4: 509 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 509 to 1013
Garbage collection #5: 1013 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1013 to 2017
Garbage collection #6: 2017 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2017 to 4027
[2020-11-24 20:42:42,656 WARN  L188               SmtUtils]: Spent 279.00 ms on a formula simplification. DAG size of input: 204 DAG size of output: 201
[2020-11-24 20:42:42,898 WARN  L188               SmtUtils]: Spent 224.00 ms on a formula simplification that was a NOOP. DAG size: 314
Garbage collection #1: 107 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 107 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 79 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 79 to 157
Garbage collection #2: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #3: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #4: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #5: 1237 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1237 to 2473
Garbage collection #6: 2473 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2473 to 4943
[2020-11-24 20:42:43,302 WARN  L188               SmtUtils]: Spent 396.00 ms on a formula simplification. DAG size of input: 233 DAG size of output: 222
[2020-11-24 20:42:43,858 WARN  L188               SmtUtils]: Spent 554.00 ms on a formula simplification. DAG size of input: 337 DAG size of output: 336
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 15859 to 31699
Garbage collection #9: 31699 nodes / 0 free / 0.001s / 0.003s total
Resizing node table from 31699 to 63397
[2020-11-24 20:42:45,327 WARN  L188               SmtUtils]: Spent 1.45 s on a formula simplification. DAG size of input: 353 DAG size of output: 331
[2020-11-24 20:42:45,345 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:45,367 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-24 20:42:45,376 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 24.11 08:42:45 BasicIcfg
[2020-11-24 20:42:45,377 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-24 20:42:45,377 INFO  L168              Benchmark]: Toolchain (without parser) took 24980.55 ms. Allocated memory was 1.0 GB in the beginning and 2.5 GB in the end (delta: 1.5 GB). Free memory was 929.8 MB in the beginning and 1.1 GB in the end (delta: -195.3 MB). Peak memory consumption was 1.6 GB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,377 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,377 INFO  L168              Benchmark]: Boogie Preprocessor took 128.96 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,378 INFO  L168              Benchmark]: UtopiaSpecLang took 71.14 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 902.9 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,378 INFO  L168              Benchmark]: Boogie Printer took 21.68 ms. Allocated memory is still 1.0 GB. Free memory was 902.9 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,378 INFO  L168              Benchmark]: RCFGBuilder took 1058.47 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.3 MB). Free memory was 897.6 MB in the beginning and 978.2 MB in the end (delta: -80.6 MB). Peak memory consumption was 185.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,379 INFO  L168              Benchmark]: UtopiaLTL2Aut took 34.96 ms. Allocated memory is still 1.1 GB. Free memory was 978.2 MB in the beginning and 964.9 MB in the end (delta: 13.3 MB). Peak memory consumption was 13.3 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,379 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1872.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 154.1 MB). Free memory was 964.9 MB in the beginning and 846.7 MB in the end (delta: 118.2 MB). Peak memory consumption was 488.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,379 INFO  L168              Benchmark]: BlockEncodingV2 took 186.99 ms. Allocated memory is still 1.3 GB. Free memory was 846.7 MB in the beginning and 746.8 MB in the end (delta: 99.9 MB). Peak memory consumption was 99.9 MB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,380 INFO  L168              Benchmark]: BuchiAutomizer took 21602.99 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.3 GB). Free memory was 746.8 MB in the beginning and 1.1 GB in the end (delta: -378.3 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
[2020-11-24 20:42:45,382 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    6840 locations, 12837 edges
  - StatisticsResult: Encoded RCFG
    6720 locations, 12506 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.16 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 128.96 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 913.7 MB in the end (delta: 16.2 MB). Peak memory consumption was 16.2 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 71.14 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 902.9 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 21.68 ms. Allocated memory is still 1.0 GB. Free memory was 902.9 MB in the beginning and 897.6 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 1058.47 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 70.3 MB). Free memory was 897.6 MB in the beginning and 978.2 MB in the end (delta: -80.6 MB). Peak memory consumption was 185.3 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 34.96 ms. Allocated memory is still 1.1 GB. Free memory was 978.2 MB in the beginning and 964.9 MB in the end (delta: 13.3 MB). Peak memory consumption was 13.3 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1872.37 ms. Allocated memory was 1.1 GB in the beginning and 1.3 GB in the end (delta: 154.1 MB). Free memory was 964.9 MB in the beginning and 846.7 MB in the end (delta: 118.2 MB). Peak memory consumption was 488.9 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 186.99 ms. Allocated memory is still 1.3 GB. Free memory was 846.7 MB in the beginning and 746.8 MB in the end (delta: 99.9 MB). Peak memory consumption was 99.9 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 21602.99 ms. Allocated memory was 1.3 GB in the beginning and 2.5 GB in the end (delta: 1.3 GB). Free memory was 746.8 MB in the beginning and 1.1 GB in the end (delta: -378.3 MB). Peak memory consumption was 1.2 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    2617 locations, 3889 edges
  - StatisticsResult: BuchiProgram size
    6840 locations, 12837 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 4 terminating modules (4 trivial, 0 deterministic, 0 nondeterministic) and one nonterminating remainder module.4 modules have a trivial ranking function, the largest among these consists of 14 locations. The remainder module has 4480 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 21.5s and 5 iterations.  TraceHistogramMax:6. Analysis of lassos took 14.1s. Construction of modules took 5.2s. BÃ¼chi inclusion checks took 1.4s. Highest rank in rank-based complementation 0. Minimization of det autom 4. Minimization of nondet autom 0. Automata minimization 0.2s AutomataMinimizationTime, 4 MinimizatonAttempts, 3884 StatesRemovedByMinimization, 3 NontrivialMinimizations. Non-live state removal took 0.1s Buchi closure took 0.0s. Biggest automaton had 4480 states and ocurred in iteration 4.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 21322 SDtfs, 24222 SDslu, 21891 SDs, 0 SdLazy, 64106 SolverSat, 4964 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 5.2s Time	LassoAnalysisResults: nont1 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU4 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - TransactionCounterexample: Violation of LTL property LTL
    Found an infinite, lasso-shaped execution that violates the LTL property LTL.
Stem:
address(625314775344980695514831456764478199936221022064) = (new LUCKYToken)({from : 625314775344980695514831456764478199936221022066});
[L1850]              havoc __exception;
[L1851]              revert := false;
[L1852]  COND FALSE  !(__exception)
[L1877]  CALL        call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4581]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4581]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4582]  COND FALSE  !(revert)
[L4585]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4585]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4586]  COND FALSE  !(revert)
[L4589]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4589]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4590]  COND FALSE  !(revert)
[L4593]  CALL        call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4395]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4395]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4396]  COND FALSE  !(revert)
[L4399]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4399]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4400]  COND FALSE  !(revert)
[L4403]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4403]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4404]  COND FALSE  !(revert)
[L4407]  CALL        call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4368]              assume msgsender_MSG != null;
[L4369]              Balance[this] := 0;
[L4407]  RET         call BurnableToken_BurnableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4408]  COND FALSE  !(revert)
[L4593]  RET         call BurnableToken_BurnableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4594]  COND FALSE  !(revert)
[L4597]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4597]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4598]  COND FALSE  !(revert)
[L4601]  CALL        call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4085]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L4085]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L4086]  COND FALSE  !(revert)
[L4089]  CALL        call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L3119]  CALL        call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3073]  CALL        call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3058]              assume msgsender_MSG != null;
[L3059]              Balance[this] := 0;
[L3073]  RET         call IERC20_IERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3074]  COND FALSE  !(revert)
[L3119]  RET         call IERC20_IERC20__success(this, msgsender_MSG, msgvalue_MSG);
[L3120]  COND FALSE  !(revert)
[L3123]  CALL        call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3095]              assume msgsender_MSG != null;
[L3096]              Balance[this] := 0;
[L3097]              _balances_StandardToken[this] := zeroRefintArr();
[L3098]              sum__balances0[this] := 0;
[L3099]              _allowed_StandardToken[this] := zeroRefRefintArr();
[L3100]              sum__allowed1[this] := 0;
[L3101]              _totalSupply_StandardToken[this] := 0;
[L3123]  RET         call StandardToken_StandardToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3124]  COND FALSE  !(revert)
[L4089]  RET         call StandardToken_StandardToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4090]  COND FALSE  !(revert)
[L4093]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L4093]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L4094]  COND FALSE  !(revert)
[L4097]  CALL        call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L3967]  CALL        call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3810]  CALL        call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3794]              assume msgsender_MSG != null;
[L3795]              Balance[this] := 0;
[L3796]              _owner_Ownable[this] := null;
[L3810]  RET         call Ownable_Ownable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3811]  COND FALSE  !(revert)
[L3967]  RET         call Ownable_Ownable__success(this, msgsender_MSG, msgvalue_MSG);
[L3968]  COND FALSE  !(revert)
[L3971]  CALL        call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3947]              assume msgsender_MSG != null;
[L3948]              Balance[this] := 0;
[L3949]              paused_Pausable[this] := false;
[L3971]  RET         call Pausable_Pausable_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L3972]  COND FALSE  !(revert)
[L4097]  RET         call Pausable_Pausable__success(this, msgsender_MSG, msgvalue_MSG);
[L4098]  COND FALSE  !(revert)
[L4101]  CALL        call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4054]              assume msgsender_MSG != null;
[L4055]              Balance[this] := 0;
[L4101]  RET         call PausableToken_PausableToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4102]  COND FALSE  !(revert)
[L4601]  RET         call PausableToken_PausableToken__success(this, msgsender_MSG, msgvalue_MSG);
[L4602]  COND FALSE  !(revert)
[L4605]  CALL        call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4524]              assume msgsender_MSG != null;
[L4525]              Balance[this] := 0;
[L4526]              name_LUCKYToken[this] := -927166810;
[L4527]              symbol_LUCKYToken[this] := -927166810;
[L4528]              decimals_LUCKYToken[this] := 18;
[L4529]              INIT_TOTALSUPPLY_LUCKYToken[this] := 10000000000;
[L4530]              __var_26 := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4531]              _tokenOwner_LUCKYToken[this] := ConstantToRef(625314775344980695514831456764478199936221022047);
[L4533]              __var_25 := decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4534]              _totalSupply_StandardToken[this] := nonlinearMul(INIT_TOTALSUPPLY_LUCKYToken[this], nonlinearPow(10, decimals_LUCKYToken[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L4535]              _owner_Ownable[this] := _tokenOwner_LUCKYToken[this];
[L4536]              assert { :EventEmitted "OwnershipTransferred_LUCKYToken" } true;
[L4537]              sum__balances0[this] := sum__balances0[this] - _balances_StandardToken[this][_owner_Ownable[this]];
[L4538]              _balances_StandardToken[this][_owner_Ownable[this]] := _totalSupply_StandardToken[this];
[L4539]              sum__balances0[this] := sum__balances0[this] + _balances_StandardToken[this][_owner_Ownable[this]];
[L4540]              assert { :EventEmitted "Transfer_LUCKYToken" } true;
[L4605]  RET         call LUCKYToken_LUCKYToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L4606]  COND FALSE  !(revert)
[L1877]  RET         call LUCKYToken_LUCKYToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1878]              assume !revert && gas >= 0;
[L7265]  RET         call LUCKYToken_LUCKYToken(this, msgsender_MSG, msgvalue_MSG);
PausableToken(625314775344980695514831456764478199936221022064).transferFrom~address~address~uint256.gas(3979002)({from : 625314775344980695514831456764478199936221022059, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4165]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4166]  CALL        call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3284]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3285]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3285]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3286]  COND TRUE   revert
[L4166]  RET         call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4167]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);

Loop:
PausableToken(625314775344980695514831456764478199936221022064).transferFrom~address~address~uint256.gas(3979001)({from : 625314775344980695514831456764478199936221022068, _from : 0, _to : 0, _value : 0});
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((p1 != _from_s691 || p2 != msgsender_MSG) && _from_s691 == _to_s691) && _value_s691 <= _balances_StandardToken[this][_from_s691]) && _value_s691 <= _allowed_StandardToken[this][_from_s691][msgsender_MSG]) && _value_s691 >= 0) && _value_s691 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_to_s691] >= 0) && _balances_StandardToken[this][_to_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _balances_StandardToken[this][_from_s691] >= 0) && _balances_StandardToken[this][_from_s691] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] >= 0) && _allowed_StandardToken[this][_from_s691][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_PausableToken0 := true;
[L3]                 call_transferFrom_PausableToken0 := false;
[L3]                 revert := revert_hold;
[L1392]              havoc __exception;
[L1393]              revert := false;
[L1394]  COND TRUE   __exception
[L1395]              __tmp__Balance := Balance;
[L1396]              __tmp__DType := DType;
[L1397]              __tmp__Alloc := Alloc;
[L1398]              __tmp__balance_ADDR := balance_ADDR;
[L1399]              __tmp__M_Ref_int := M_Ref_int;
[L1400]              __tmp__sum__balances0 := sum__balances0;
[L1401]              __tmp__alloc__allowed_StandardToken_lvl0 := alloc__allowed_StandardToken_lvl0;
[L1402]              __tmp__M_Ref_Ref := M_Ref_Ref;
[L1403]              __tmp__sum__allowed1 := sum__allowed1;
[L1404]              __tmp__Length := Length;
[L1405]              __tmp__now := now;
[L1406]              __tmp___balances_StandardToken := _balances_StandardToken;
[L1407]              __tmp___allowed_StandardToken := _allowed_StandardToken;
[L1408]              __tmp___totalSupply_StandardToken := _totalSupply_StandardToken;
[L1409]              __tmp___owner_Ownable := _owner_Ownable;
[L1410]              __tmp__paused_Pausable := paused_Pausable;
[L1411]              __tmp__name_LUCKYToken := name_LUCKYToken;
[L1412]              __tmp__symbol_LUCKYToken := symbol_LUCKYToken;
[L1413]              __tmp__decimals_LUCKYToken := decimals_LUCKYToken;
[L1414]              __tmp__INIT_TOTALSUPPLY_LUCKYToken := INIT_TOTALSUPPLY_LUCKYToken;
[L1415]              __tmp___tokenOwner_LUCKYToken := _tokenOwner_LUCKYToken;
[L1416]  CALL        call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4161]  CALL        call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L6237]  COND FALSE  !(!!__tmp__paused_Pausable[this])
[L4161]  RET         call whenNotPaused_pre__fail(this, msgsender_MSG, msgvalue_MSG);
[L4162]  COND FALSE  !(revert)
[L4165]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L4166]  CALL        call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L3284]  COND TRUE   __tmp__DType[this] == LUCKYToken
[L3285]  CALL        call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3536]              __var_4 := null;
[L3537]  COND TRUE   !(to_s401 != null)
[L3538]              revert := true;
[L3285]  RET         call _transfer~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, from_s300, to_s300, value_s300);
[L3286]  COND TRUE   revert
[L4166]  RET         call __var_17 := transferFrom~address~address~uint256_StandardToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L4167]  COND TRUE   revert
[L1416]  RET         call __ret_0_ := transferFrom~address~address~uint256_PausableToken__fail(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);
[L1417]              assume revert || gas < 0;
[L7149]  RET         call __ret_0_transferFrom := transferFrom~address~address~uint256_PausableToken(this, msgsender_MSG, msgvalue_MSG, _from_s691, _to_s691, _value_s691);

End of lasso representation.
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
