This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 15:07:23,996 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 15:07:23,997 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 15:07:24,005 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 15:07:24,005 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 15:07:24,006 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 15:07:24,006 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 15:07:24,007 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 15:07:24,009 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 15:07:24,009 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 15:07:24,009 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 15:07:24,010 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 15:07:24,010 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 15:07:24,011 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 15:07:24,011 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 15:07:24,012 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 15:07:24,012 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 15:07:24,014 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 15:07:24,015 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 15:07:24,016 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 15:07:24,017 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 15:07:24,018 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 15:07:24,019 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 15:07:24,020 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 15:07:24,020 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 15:07:24,020 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 15:07:24,021 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 15:07:24,021 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 15:07:24,021 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 15:07:24,022 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 15:07:24,022 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 15:07:24,023 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 15:07:24,023 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 15:07:24,024 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 15:07:24,024 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 15:07:24,024 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 15:07:24,025 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 15:07:24,025 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 15:07:24,025 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 15:07:24,025 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 15:07:24,026 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 15:07:24,026 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 15:07:24,032 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 15:07:24,032 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 15:07:24,033 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 15:07:24,033 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 15:07:24,033 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 15:07:24,033 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 15:07:24,033 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 15:07:24,033 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 15:07:24,033 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 15:07:24,033 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 15:07:24,034 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 15:07:24,034 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 15:07:24,035 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 15:07:24,035 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 15:07:24,035 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 15:07:24,054 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 15:07:24,065 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 15:07:24,068 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 15:07:24,069 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 15:07:24,069 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 15:07:24,070 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl
[2020-11-25 15:07:24,070 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl'
[2020-11-25 15:07:24,154 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 15:07:24,155 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 15:07:24,156 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 15:07:24,156 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 15:07:24,156 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 15:07:24,172 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,174 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,205 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,206 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,227 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,237 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,246 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,256 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 15:07:24,256 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 15:07:24,257 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 15:07:24,259 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 15:07:24,262 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/1) ...
[2020-11-25 15:07:24,280 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:07:24,285 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:07:24,294 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:07:24,301 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( ( p1!=_from_s413 && p1!=_to_s413 ) && ( p2!=_from_s413 || p3!=msg.sender ) ) && _from_s413!=_to_s413 ) && _value_s413<=balanceOf_TokenERC20[this][_from_s413] ) && _value_s413<=allowance_TokenERC20[this][_from_s413][msg.sender] ) && ( balanceOf_TokenERC20[this][_to_s413] + _value_s413 )<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && _value_s413>=0 ) && _value_s413<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_to_s413]>=0 ) && balanceOf_TokenERC20[this][_to_s413]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_TokenERC20[this][_from_s413]>=0 ) && balanceOf_TokenERC20[this][_from_s413]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && allowance_TokenERC20[this][_from_s413][msg.sender]>=0 ) && allowance_TokenERC20[this][_from_s413][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p1,GLOBAL],IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[LOGICOR,BinaryExpression[COMPNEQ,IdentifierExpression[p2,GLOBAL],IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],BinaryExpression[COMPNEQ,IdentifierExpression[p3,GLOBAL],IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPNEQ,IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLEQ,IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]],BinaryExpression[COMPLT,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 15:07:24,305 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( ( ( ( ( ( ( success_s413==true && balanceOf_TokenERC20[this][_from_s413]==( ( old(balanceOf_TokenERC20[this][_from_s413]) ) - _value_s413 ) ) && balanceOf_TokenERC20[this][_to_s413]==( ( old(balanceOf_TokenERC20[this][_to_s413]) ) + _value_s413 ) ) && allowance_TokenERC20[this][_from_s413][msg.sender]==( ( old(allowance_TokenERC20[this][_from_s413][msg.sender]) ) - _value_s413 ) ) && totalSupply_TokenERC20[this]==( old(totalSupply_TokenERC20[this]) ) ) && balanceOf_TokenERC20[this][p1]==( old(balanceOf_TokenERC20[this][p1]) ) ) && allowance_TokenERC20[this][p2][p3]==( old(allowance_TokenERC20[this][p2][p3]) ) ) && frozenAccount_ERC20ext[this]==( old(frozenAccount_ERC20ext[this]) ) ) && lockedAccount_ERC20ext[this]==( old(lockedAccount_ERC20ext[this]) ) ) && lockedAmount_ERC20ext[this]==( old(lockedAmount_ERC20ext[this]) ) ) && name_TokenERC20[this]==( old(name_TokenERC20[this]) ) ) && symbol_TokenERC20[this]==( old(symbol_TokenERC20[this]) ) ) && decimals_TokenERC20[this]==( old(decimals_TokenERC20[this]) ) ) && owner_owned[this]==( old(owner_owned[this]) ) ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPEQ,IdentifierExpression[success_s413,<IMPLEMENTATION_OUTPARAM,transferFrom~address~address~uint256_TokenERC20>],BooleanLiteral[true]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHPLUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_to_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],BinaryExpression[ARITHMINUS,UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[_from_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],IdentifierExpression[_value_s413,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[totalSupply_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p1,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]],UnaryExpression[OLD,ArrayAccessExpression[ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[allowance_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],[IdentifierExpression[p2,GLOBAL]]],[IdentifierExpression[p3,GLOBAL]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[frozenAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[frozenAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAccount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[lockedAmount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[lockedAmount_ERC20ext,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[name_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[symbol_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[decimals_TokenERC20,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]],BinaryExpression[COMPEQ,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]],UnaryExpression[OLD,ArrayAccessExpression[IdentifierExpression[owner_owned,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transferFrom~address~address~uint256_TokenERC20>]]]]]]
[2020-11-25 15:07:24,311 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(TokenERC20.transferFrom(from, to, value), p1 != from && p1 != to && (p2 != from || p3 != msg.sender) && from != to && value <= balanceOf_TokenERC20[this][from] && value <= allowance_TokenERC20[this][from][msg.sender] && balanceOf_TokenERC20[this][to] + value < 0x10000000000000000000000000000000000000000000000000000000000000000 && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][to] >= 0 && balanceOf_TokenERC20[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_TokenERC20[this][from] >= 0 &&  balanceOf_TokenERC20[this][from] < 0x10000000000000000000000000000000000000000000000000000000000000000 && allowance_TokenERC20[this][from][msg.sender] >= 0 && allowance_TokenERC20[this][from][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(finished(TokenERC20.transferFrom(from, to, value), return == true && balanceOf_TokenERC20[this][from] == old(balanceOf_TokenERC20[this][from]) - value && balanceOf_TokenERC20[this][to] == old(balanceOf_TokenERC20[this][to]) + value && allowance_TokenERC20[this][from][msg.sender] == old(allowance_TokenERC20[this][from][msg.sender]) - value && totalSupply_TokenERC20[this] == old(totalSupply_TokenERC20[this]) && balanceOf_TokenERC20[this][p1] == old(balanceOf_TokenERC20[this][p1]) && allowance_TokenERC20[this][p2][p3] == old(allowance_TokenERC20[this][p2][p3]) && frozenAccount_ERC20ext[this] == old(frozenAccount_ERC20ext[this]) && lockedAccount_ERC20ext[this] == old(lockedAccount_ERC20ext[this]) && lockedAmount_ERC20ext[this] == old(lockedAmount_ERC20ext[this]) && name_TokenERC20[this] == old(name_TokenERC20[this]) && symbol_TokenERC20[this] == old(symbol_TokenERC20[this]) && decimals_TokenERC20[this] == old(decimals_TokenERC20[this]) && owner_owned[this] == old(owner_owned[this]))))
[2020-11-25 15:07:24,311 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transferFrom_TokenERC200) ==> ( <>AP(success_transferFrom_TokenERC200) ) ) )
Executed UtopiaSpecLang
[2020-11-25 15:07:24,321 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:24 PropertyContainer
[2020-11-25 15:07:24,321 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 15:07:24,321 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 15:07:24,322 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 15:07:24,322 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 15:07:24,322 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/2) ...
[2020-11-25 15:07:24,323 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 15:07:24,323 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 15:07:24,338 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:24" (2/2) ...
[2020-11-25 15:07:24,338 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 15:07:24,338 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 15:07:24,338 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 15:07:24,338 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 15:07:24,339 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/2) ...
[2020-11-25 15:07:24,393 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 15:07:24,394 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,394 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,395 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__success
[2020-11-25 15:07:24,395 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned
[2020-11-25 15:07:24,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned
[2020-11-25 15:07:24,395 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned
[2020-11-25 15:07:24,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned
[2020-11-25 15:07:24,395 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned
[2020-11-25 15:07:24,395 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned
[2020-11-25 15:07:24,395 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 15:07:24,395 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient
[2020-11-25 15:07:24,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient
[2020-11-25 15:07:24,396 INFO  L130     BoogieDeclarations]: Found specification of procedure receiveApproval~address~uint256~address~bytes_tokenRecipient
[2020-11-25 15:07:24,396 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 15:07:24,396 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20
[2020-11-25 15:07:24,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20
[2020-11-25 15:07:24,396 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,396 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20
[2020-11-25 15:07:24,396 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 15:07:24,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20
[2020-11-25 15:07:24,397 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20
[2020-11-25 15:07:24,397 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20
[2020-11-25 15:07:24,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20
[2020-11-25 15:07:24,398 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20
[2020-11-25 15:07:24,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20
[2020-11-25 15:07:24,398 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20
[2020-11-25 15:07:24,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20
[2020-11-25 15:07:24,398 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20
[2020-11-25 15:07:24,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20
[2020-11-25 15:07:24,398 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20
[2020-11-25 15:07:24,398 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20
[2020-11-25 15:07:24,398 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20
[2020-11-25 15:07:24,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20
[2020-11-25 15:07:24,399 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext_NoBaseCtor__success
[2020-11-25 15:07:24,399 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext
[2020-11-25 15:07:24,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext
[2020-11-25 15:07:24,399 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20ext__success
[2020-11-25 15:07:24,399 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext
[2020-11-25 15:07:24,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext
[2020-11-25 15:07:24,399 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext
[2020-11-25 15:07:24,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext
[2020-11-25 15:07:24,399 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext
[2020-11-25 15:07:24,399 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext
[2020-11-25 15:07:24,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext
[2020-11-25 15:07:24,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext
[2020-11-25 15:07:24,400 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 15:07:24,400 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__success
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_owned
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_owned
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_tokenRecipient
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_tokenRecipient
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_TokenERC20
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_TokenERC20
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_ERC20ext
[2020-11-25 15:07:24,401 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,402 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__success
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure owned_owned__fail
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__success
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure transferOwnership~address_owned__fail
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__success
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure owner_owned__fail
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 15:07:24,403 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__success
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure TokenERC20_TokenERC20__fail
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,404 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__success
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure burn~uint256_TokenERC20__fail
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__success
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure name_TokenERC20__fail
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__success
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_TokenERC20__fail
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__success
[2020-11-25 15:07:24,405 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_TokenERC20__fail
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__success
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_TokenERC20__fail
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__success
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__success
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext_NoBaseCtor__fail
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext__success
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure ERC20ext_ERC20ext__fail
[2020-11-25 15:07:24,406 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_ERC20ext__fail
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext__success
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure mintToken~address~uint256_ERC20ext__fail
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext__success
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure freezeAccount~address~bool_ERC20ext__fail
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext__success
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure lock~address~uint256~uint256_ERC20ext__fail
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext__success
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure frozenAccount~address_ERC20ext__fail
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext__success
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAccount~address_ERC20ext__fail
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext__success
[2020-11-25 15:07:24,407 INFO  L130     BoogieDeclarations]: Found specification of procedure lockedAmount~address_ERC20ext__fail
[2020-11-25 15:07:24,408 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 15:07:24,408 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 15:07:24,408 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 15:07:24,408 INFO  L130     BoogieDeclarations]: Found specification of procedure onlyOwner_pre__fail
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 15:07:24,408 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned_NoBaseCtor__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure owned_owned__success
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__fail
[2020-11-25 15:07:24,409 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferOwnership~address_owned__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure owner_owned__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient_NoBaseCtor__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure tokenRecipient_tokenRecipient__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20_NoBaseCtor__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure TokenERC20_TokenERC20__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,410 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure approveAndCall~address~uint256~bytes_TokenERC20__success
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure burn~uint256_TokenERC20__success
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure burnFrom~address~uint256_TokenERC20__success
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_TokenERC20__success
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__fail
[2020-11-25 15:07:24,411 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_TokenERC20__success
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__fail
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_TokenERC20__success
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__fail
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_TokenERC20__success
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__fail
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_TokenERC20__success
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__fail
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_TokenERC20__success
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext_NoBaseCtor__fail
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext_NoBaseCtor__success
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext__fail
[2020-11-25 15:07:24,412 INFO  L138     BoogieDeclarations]: Found implementation of procedure ERC20ext_ERC20ext__success
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20ext__fail
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_ERC20ext__success
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext__fail
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure mintToken~address~uint256_ERC20ext__success
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext__fail
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure freezeAccount~address~bool_ERC20ext__success
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext__fail
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure lock~address~uint256~uint256_ERC20ext__success
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext__fail
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure frozenAccount~address_ERC20ext__success
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext__fail
[2020-11-25 15:07:24,413 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAccount~address_ERC20ext__success
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext__fail
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure lockedAmount~address_ERC20ext__success
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__fail
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure onlyOwner_pre__success
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 15:07:24,414 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_owned
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_owned
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_tokenRecipient
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_tokenRecipient
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_TokenERC20
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_TokenERC20
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_ERC20ext
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 15:07:24,415 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 15:07:24,415 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 15:07:24,801 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:07:24,801 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:07:24,802 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:07:24,880 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 15:07:25,118 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 15:07:25,119 INFO  L286             CfgBuilder]: Removed 5 assue(true) statements.
[2020-11-25 15:07:25,121 INFO  L202        PluginConnector]: Adding new model ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:25 BoogieIcfgContainer
[2020-11-25 15:07:25,121 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:24" (2/2) ...
[2020-11-25 15:07:25,121 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 15:07:25,121 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1accfe34 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:25, skipping insertion in model container
[2020-11-25 15:07:25,121 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 15:07:25,122 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 15:07:25,122 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 15:07:25,123 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 15:07:25,123 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/3) ...
[2020-11-25 15:07:25,124 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@11158564 and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:25, skipping insertion in model container
[2020-11-25 15:07:25,124 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:24" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 15:07:25,164 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:25 NWAContainer
[2020-11-25 15:07:25,164 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 15:07:25,165 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 15:07:25,165 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 15:07:25,165 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 15:07:25,166 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:25" (3/4) ...
[2020-11-25 15:07:25,167 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@33e2d224 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:25, skipping insertion in model container
[2020-11-25 15:07:25,167 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:25" (4/4) ...
[2020-11-25 15:07:25,170 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 15:07:25,174 INFO  L110   BuchiProductObserver]: Initial RCFG 1884 locations, 2421 edges
[2020-11-25 15:07:25,174 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 15:07:25,185 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 15:07:26,485 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 15:07:26,490 INFO  L110   BuchiProductObserver]: BuchiProgram size 4510 locations, 7833 edges
[2020-11-25 15:07:26,491 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:26 BoogieIcfgContainer
[2020-11-25 15:07:26,491 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 15:07:26,491 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 15:07:26,491 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 15:07:26,493 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 15:07:26,493 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:26" (1/1) ...
[2020-11-25 15:07:26,592 INFO  L313           BlockEncoder]: Initial Icfg 4510 locations, 7833 edges
[2020-11-25 15:07:26,592 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 15:07:26,592 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 15:07:26,592 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 15:07:26,593 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 15:07:26,605 INFO  L70    emoveInfeasibleEdges]: Removed 75 edges and 13 locations because of local infeasibility
[2020-11-25 15:07:26,614 INFO  L70        RemoveSinkStates]: Removed 20 edges and 13 locations by removing sink states
[2020-11-25 15:07:26,627 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 15:07:26,633 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 15:07:26,636 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 15:07:26,637 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 15:07:26,641 INFO  L313           BlockEncoder]: Encoded RCFG 4460 locations, 7703 edges
[2020-11-25 15:07:26,642 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:07:26 BasicIcfg
[2020-11-25 15:07:26,642 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 15:07:26,642 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 15:07:26,642 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 15:07:26,644 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 15:07:26,644 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:26,644 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 03:07:24" (1/6) ...
[2020-11-25 15:07:26,646 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7952f798 and model type ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:07:26, skipping insertion in model container
[2020-11-25 15:07:26,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:26,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 03:07:24" (2/6) ...
[2020-11-25 15:07:26,646 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7952f798 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:07:26, skipping insertion in model container
[2020-11-25 15:07:26,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:26,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 03:07:25" (3/6) ...
[2020-11-25 15:07:26,646 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7952f798 and model type ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 03:07:26, skipping insertion in model container
[2020-11-25 15:07:26,646 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:26,646 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 03:07:25" (4/6) ...
[2020-11-25 15:07:26,647 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7952f798 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 03:07:26, skipping insertion in model container
[2020-11-25 15:07:26,647 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:26,647 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 03:07:26" (5/6) ...
[2020-11-25 15:07:26,647 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@7952f798 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 03:07:26, skipping insertion in model container
[2020-11-25 15:07:26,647 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 15:07:26,647 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 03:07:26" (6/6) ...
[2020-11-25 15:07:26,648 INFO  L404   chiAutomizerObserver]: Analyzing ICFG ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl_BEv2
[2020-11-25 15:07:26,686 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 15:07:26,687 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 15:07:26,687 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 15:07:26,687 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 15:07:26,687 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 15:07:26,687 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 15:07:26,687 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 15:07:26,687 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 15:07:26,687 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 15:07:26,725 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4460 states.
[2020-11-25 15:07:26,779 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:26,779 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:26,779 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:26,787 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:26,787 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:26,787 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 15:07:26,787 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 4460 states.
[2020-11-25 15:07:26,812 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:26,812 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:26,812 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:26,814 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:26,814 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND TRUE   revert
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND TRUE   choice == 20
[L4951]              gas := gas - 21000;
[L4952]  COND FALSE  !(gas >= 0)
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:26,827 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:26,828 INFO  L82        PathProgramCache]: Analyzing trace with hash -1996313045, now seen corresponding path program 1 times
[2020-11-25 15:07:26,831 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:26,855 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:26,891 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:26,893 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:26,893 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:07:27,152 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:27,161 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:07:27,162 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:07:27,163 INFO  L87              Difference]: Start difference. First operand 4460 states. Second operand 4 states.
[2020-11-25 15:07:28,265 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:28,265 INFO  L93              Difference]: Finished difference Result 4706 states and 7620 transitions.
[2020-11-25 15:07:28,266 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:07:28,267 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4706 states and 7620 transitions.
[2020-11-25 15:07:28,296 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 15:07:28,335 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4706 states to 4508 states and 7279 transitions.
[2020-11-25 15:07:28,336 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 16
[2020-11-25 15:07:28,340 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1357
[2020-11-25 15:07:28,341 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4508 states and 7279 transitions.
[2020-11-25 15:07:28,357 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:28,357 INFO  L728         BuchiCegarLoop]: Abstraction has 4508 states and 7279 transitions.
[2020-11-25 15:07:28,373 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4508 states and 7279 transitions.
[2020-11-25 15:07:28,452 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4508 to 3422.
[2020-11-25 15:07:28,453 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3422 states.
[2020-11-25 15:07:28,460 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3422 states to 3422 states and 5279 transitions.
[2020-11-25 15:07:28,461 INFO  L751         BuchiCegarLoop]: Abstraction has 3422 states and 5279 transitions.
[2020-11-25 15:07:28,461 INFO  L631         BuchiCegarLoop]: Abstraction has 3422 states and 5279 transitions.
[2020-11-25 15:07:28,461 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 15:07:28,461 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3422 states and 5279 transitions.
[2020-11-25 15:07:28,473 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:28,473 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:28,473 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:28,475 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:28,475 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND TRUE   choice == 20
[L4951]              gas := gas - 21000;
[L4952]  COND FALSE  !(gas >= 0)
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:28,479 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:28,479 INFO  L82        PathProgramCache]: Analyzing trace with hash 1612197465, now seen corresponding path program 1 times
[2020-11-25 15:07:28,480 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:28,489 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:28,510 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:28,510 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:28,510 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 15:07:28,511 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:28,512 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 15:07:28,512 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 15:07:28,512 INFO  L87              Difference]: Start difference. First operand 3422 states and 5279 transitions. cyclomatic complexity: 1859 Second operand 4 states.
[2020-11-25 15:07:29,167 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:29,168 INFO  L93              Difference]: Finished difference Result 3244 states and 3517 transitions.
[2020-11-25 15:07:29,168 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 15:07:29,169 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3244 states and 3517 transitions.
[2020-11-25 15:07:29,179 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:29,188 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3244 states to 3244 states and 3517 transitions.
[2020-11-25 15:07:29,188 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 924
[2020-11-25 15:07:29,189 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 924
[2020-11-25 15:07:29,189 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3244 states and 3517 transitions.
[2020-11-25 15:07:29,191 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:29,191 INFO  L728         BuchiCegarLoop]: Abstraction has 3244 states and 3517 transitions.
[2020-11-25 15:07:29,195 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3244 states and 3517 transitions.
[2020-11-25 15:07:29,218 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3244 to 3244.
[2020-11-25 15:07:29,218 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3244 states.
[2020-11-25 15:07:29,222 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3244 states to 3244 states and 3517 transitions.
[2020-11-25 15:07:29,222 INFO  L751         BuchiCegarLoop]: Abstraction has 3244 states and 3517 transitions.
[2020-11-25 15:07:29,222 INFO  L631         BuchiCegarLoop]: Abstraction has 3244 states and 3517 transitions.
[2020-11-25 15:07:29,222 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 15:07:29,223 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3244 states and 3517 transitions.
[2020-11-25 15:07:29,229 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:29,230 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:29,230 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:29,232 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:29,232 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND TRUE   !(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG])
[L2875]              revert := true;
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND TRUE   !(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG])
[L2875]              revert := true;
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:29,237 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:29,237 INFO  L82        PathProgramCache]: Analyzing trace with hash -1872728132, now seen corresponding path program 1 times
[2020-11-25 15:07:29,237 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:29,254 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:29,346 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:29,347 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:29,347 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [6] imperfect sequences [] total 6
[2020-11-25 15:07:29,347 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:29,347 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 6 interpolants.
[2020-11-25 15:07:29,347 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=9, Invalid=21, Unknown=0, NotChecked=0, Total=30
[2020-11-25 15:07:29,348 INFO  L87              Difference]: Start difference. First operand 3244 states and 3517 transitions. cyclomatic complexity: 275 Second operand 6 states.
[2020-11-25 15:07:30,097 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:30,097 INFO  L93              Difference]: Finished difference Result 3466 states and 3756 transitions.
[2020-11-25 15:07:30,098 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 7 states. 
[2020-11-25 15:07:30,098 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3466 states and 3756 transitions.
[2020-11-25 15:07:30,106 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 15:07:30,118 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3466 states to 3466 states and 3756 transitions.
[2020-11-25 15:07:30,118 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1003
[2020-11-25 15:07:30,119 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1003
[2020-11-25 15:07:30,119 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3466 states and 3756 transitions.
[2020-11-25 15:07:30,122 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:30,122 INFO  L728         BuchiCegarLoop]: Abstraction has 3466 states and 3756 transitions.
[2020-11-25 15:07:30,125 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3466 states and 3756 transitions.
[2020-11-25 15:07:30,155 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3466 to 3312.
[2020-11-25 15:07:30,155 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3312 states.
[2020-11-25 15:07:30,159 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3312 states to 3312 states and 3589 transitions.
[2020-11-25 15:07:30,159 INFO  L751         BuchiCegarLoop]: Abstraction has 3312 states and 3589 transitions.
[2020-11-25 15:07:30,159 INFO  L631         BuchiCegarLoop]: Abstraction has 3312 states and 3589 transitions.
[2020-11-25 15:07:30,159 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 15:07:30,159 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3312 states and 3589 transitions.
[2020-11-25 15:07:30,163 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 15:07:30,163 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:30,163 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:30,166 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:30,166 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND FALSE  !(!(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG]))
[L2878]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2498]  COND TRUE   !(b_s51 <= a_s51)
[L2499]              revert := true;
[L2878]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2879]  COND TRUE   revert
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND FALSE  !(!(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG]))
[L2878]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2498]  COND TRUE   !(b_s51 <= a_s51)
[L2499]              revert := true;
[L2878]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2879]  COND TRUE   revert
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:30,169 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:30,169 INFO  L82        PathProgramCache]: Analyzing trace with hash -1238491412, now seen corresponding path program 1 times
[2020-11-25 15:07:30,170 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:30,179 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:30,280 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:30,281 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:30,281 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [14] imperfect sequences [] total 14
[2020-11-25 15:07:30,281 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:30,281 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 15 interpolants.
[2020-11-25 15:07:30,281 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=28, Invalid=182, Unknown=0, NotChecked=0, Total=210
[2020-11-25 15:07:30,281 INFO  L87              Difference]: Start difference. First operand 3312 states and 3589 transitions. cyclomatic complexity: 279 Second operand 15 states.
[2020-11-25 15:07:32,170 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:32,170 INFO  L93              Difference]: Finished difference Result 3486 states and 3806 transitions.
[2020-11-25 15:07:32,170 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 18 states. 
[2020-11-25 15:07:32,170 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 3486 states and 3806 transitions.
[2020-11-25 15:07:32,177 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 15:07:32,186 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 3486 states to 3486 states and 3806 transitions.
[2020-11-25 15:07:32,186 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1012
[2020-11-25 15:07:32,187 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1012
[2020-11-25 15:07:32,187 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 3486 states and 3806 transitions.
[2020-11-25 15:07:32,190 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:32,190 INFO  L728         BuchiCegarLoop]: Abstraction has 3486 states and 3806 transitions.
[2020-11-25 15:07:32,193 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 3486 states and 3806 transitions.
[2020-11-25 15:07:32,216 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 3486 to 3416.
[2020-11-25 15:07:32,217 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3416 states.
[2020-11-25 15:07:32,220 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3416 states to 3416 states and 3706 transitions.
[2020-11-25 15:07:32,221 INFO  L751         BuchiCegarLoop]: Abstraction has 3416 states and 3706 transitions.
[2020-11-25 15:07:32,221 INFO  L631         BuchiCegarLoop]: Abstraction has 3416 states and 3706 transitions.
[2020-11-25 15:07:32,221 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 15:07:32,221 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3416 states and 3706 transitions.
[2020-11-25 15:07:32,225 INFO  L131   ngComponentsAnalysis]: Automaton has 2 accepting balls. 4
[2020-11-25 15:07:32,225 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:32,225 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:32,226 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:32,226 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND FALSE  !(!(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG]))
[L2878]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2498]  COND FALSE  !(!(b_s51 <= a_s51))
[L2502]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              __ret_0_ := c_s51;
[L2878]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2879]  COND FALSE  !(revert)
[L2882]              __tmp__sum_allowance1[_from_s413] := __tmp__sum_allowance1[_from_s413] - __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG];
[L2883]              __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG] := __var_5;
[L2884]              __tmp__sum_allowance1[_from_s413] := __tmp__sum_allowance1[_from_s413] + __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG];
[L2885]  COND TRUE   __tmp__DType[this] == ERC20ext
[L2886]  CALL        call _transfer~address~address~uint256_ERC20ext__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3267]  COND TRUE   !(__tmp__now > __tmp__lockedAccount_ERC20ext[this][_from_s739] || (__tmp__lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < __tmp__balanceOf_TokenERC20[this][_from_s739])
[L3268]              revert := true;
[L2886]  RET         call _transfer~address~address~uint256_ERC20ext__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2887]  COND TRUE   revert
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND TRUE   choice == 20
[L4951]              gas := gas - 21000;
[L4952]  COND FALSE  !(gas >= 0)
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:32,229 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:32,229 INFO  L82        PathProgramCache]: Analyzing trace with hash -343135262, now seen corresponding path program 1 times
[2020-11-25 15:07:32,229 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:32,239 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:07:32,304 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 15:07:32,304 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 15:07:32,304 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [15] imperfect sequences [] total 15
[2020-11-25 15:07:32,305 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 15:07:32,305 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 16 interpolants.
[2020-11-25 15:07:32,305 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=31, Invalid=209, Unknown=0, NotChecked=0, Total=240
[2020-11-25 15:07:32,305 INFO  L87              Difference]: Start difference. First operand 3416 states and 3706 transitions. cyclomatic complexity: 294 Second operand 16 states.
[2020-11-25 15:07:34,802 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 15:07:34,802 INFO  L93              Difference]: Finished difference Result 4181 states and 4697 transitions.
[2020-11-25 15:07:34,802 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 33 states. 
[2020-11-25 15:07:34,802 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 4181 states and 4697 transitions.
[2020-11-25 15:07:34,812 INFO  L131   ngComponentsAnalysis]: Automaton has 5 accepting balls. 30
[2020-11-25 15:07:34,824 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 4181 states to 4181 states and 4697 transitions.
[2020-11-25 15:07:34,824 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 1060
[2020-11-25 15:07:34,825 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 1060
[2020-11-25 15:07:34,825 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 4181 states and 4697 transitions.
[2020-11-25 15:07:34,829 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 15:07:34,829 INFO  L728         BuchiCegarLoop]: Abstraction has 4181 states and 4697 transitions.
[2020-11-25 15:07:34,832 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 4181 states and 4697 transitions.
[2020-11-25 15:07:34,863 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 4181 to 3468.
[2020-11-25 15:07:34,863 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 3468 states.
[2020-11-25 15:07:34,867 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 3468 states to 3468 states and 3790 transitions.
[2020-11-25 15:07:34,867 INFO  L751         BuchiCegarLoop]: Abstraction has 3468 states and 3790 transitions.
[2020-11-25 15:07:34,867 INFO  L631         BuchiCegarLoop]: Abstraction has 3468 states and 3790 transitions.
[2020-11-25 15:07:34,867 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 15:07:34,867 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 3468 states and 3790 transitions.
[2020-11-25 15:07:34,870 INFO  L131   ngComponentsAnalysis]: Automaton has 4 accepting balls. 8
[2020-11-25 15:07:34,871 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 15:07:34,871 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 15:07:34,872 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 15:07:34,872 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L3]                 success_transferFrom_TokenERC200 := false;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]     CALL        call main();
[L3]                 havoc p3;
[L3]                 havoc p2;
[L3]                 havoc p1;
[L5090]              assume null == 0;
[L5091]  CALL        call this := FreshRefGenerator__success();
[L2433]              havoc newRef;
[L2434]              assume Alloc[newRef] == false;
[L2435]              Alloc[newRef] := true;
[L2436]              assume newRef != null;
[L5091]  RET         call this := FreshRefGenerator__success();
[L5092]              assume now >= 0;
[L5093]              assume DType[this] == ERC20ext;
[L5094]              assume msgvalue_MSG == 0;
[L5095]              gas := gas - 53000;
[L5096]  CALL        call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1361]              havoc __exception;
[L1362]              revert := false;
[L1363]  COND FALSE  !(__exception)
[L1392]  CALL        call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3248]  CALL        call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L2625]  CALL        call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2608]              assume msgsender_MSG != null;
[L2609]              Balance[this] := 0;
[L2610]              owner_owned[this] := null;
[L2612]              owner_owned[this] := msgsender_MSG;
[L2625]  RET         call owned_owned_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L2626]  COND FALSE  !(revert)
[L3248]  RET         call owned_owned__success(this, msgsender_MSG, msgvalue_MSG);
[L3249]  COND FALSE  !(revert)
[L3252]  CALL        call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L2753]  CALL        call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2721]              assume msgsender_MSG != null;
[L2722]              Balance[this] := 0;
[L2723]              name_TokenERC20[this] := 1101944712;
[L2724]              symbol_TokenERC20[this] := 1101944712;
[L2725]              decimals_TokenERC20[this] := 18;
[L2726]              totalSupply_TokenERC20[this] := 0;
[L2727]              balanceOf_TokenERC20[this] := zeroRefintArr();
[L2728]              sum_balanceOf0[this] := 0;
[L2729]              allowance_TokenERC20[this] := zeroRefRefintArr();
[L2730]              sum_allowance1[this] := 0;
[L2732]              __var_1 := decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2733]              totalSupply_TokenERC20[this] := nonlinearMul(initialSupply_s258, nonlinearPow(10, decimals_TokenERC20[this] % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2734]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_TokenERC20[this][msgsender_MSG];
[L2735]              balanceOf_TokenERC20[this][msgsender_MSG] := totalSupply_TokenERC20[this];
[L2736]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_TokenERC20[this][msgsender_MSG];
[L2737]              name_TokenERC20[this] := tokenName_s258;
[L2738]              symbol_TokenERC20[this] := tokenSymbol_s258;
[L2753]  RET         call TokenERC20_TokenERC20_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s258, tokenName_s258, tokenSymbol_s258);
[L2754]  COND FALSE  !(revert)
[L3252]  RET         call TokenERC20_TokenERC20__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3253]  COND FALSE  !(revert)
[L3256]  CALL        call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3220]              assume msgsender_MSG != null;
[L3221]              Balance[this] := 0;
[L3222]              frozenAccount_ERC20ext[this] := zeroRefboolArr();
[L3223]              lockedAccount_ERC20ext[this] := zeroRefintArr();
[L3224]              sum_lockedAccount3[this] := 0;
[L3225]              lockedAmount_ERC20ext[this] := zeroRefintArr();
[L3226]              sum_lockedAmount4[this] := 0;
[L3256]  RET         call ERC20ext_ERC20ext_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L3257]  COND FALSE  !(revert)
[L1392]  RET         call ERC20ext_ERC20ext__success(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L1393]              assume !revert && gas >= 0;
[L5096]  RET         call ERC20ext_ERC20ext(this, msgsender_MSG, msgvalue_MSG, initialSupply_s639, tokenName_s639, tokenSymbol_s639);
[L5097]              assume !revert && gas >= 0;
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND FALSE  !(!(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG]))
[L2878]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2498]  COND FALSE  !(!(b_s51 <= a_s51))
[L2502]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              __ret_0_ := c_s51;
[L2878]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2879]  COND FALSE  !(revert)
[L2882]              __tmp__sum_allowance1[_from_s413] := __tmp__sum_allowance1[_from_s413] - __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG];
[L2883]              __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG] := __var_5;
[L2884]              __tmp__sum_allowance1[_from_s413] := __tmp__sum_allowance1[_from_s413] + __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG];
[L2885]  COND TRUE   __tmp__DType[this] == ERC20ext
[L2886]  CALL        call _transfer~address~address~uint256_ERC20ext__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3267]  COND FALSE  !(!(__tmp__now > __tmp__lockedAccount_ERC20ext[this][_from_s739] || (__tmp__lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < __tmp__balanceOf_TokenERC20[this][_from_s739]))
[L3271]              __var_14 := null;
[L3272]  COND TRUE   !(_to_s739 != null)
[L3273]              revert := true;
[L2886]  RET         call _transfer~address~address~uint256_ERC20ext__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2887]  COND TRUE   revert
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

Loop:
[L5100]  CALL        call CorralChoice_ERC20ext(this);
[L4882]              havoc msgsender_MSG;
[L4883]              havoc msgvalue_MSG;
[L4884]              havoc choice;
[L4885]              havoc __ret_0_owner;
[L4886]              havoc newOwner_s166;
[L4887]              havoc __ret_0_name;
[L4888]              havoc __ret_0_symbol;
[L4889]              havoc __ret_0_decimals;
[L4890]              havoc __ret_0_totalSupply;
[L4891]              havoc arg835_s0;
[L4892]              havoc __ret_0_balanceOf;
[L4893]              havoc arg836_s0;
[L4894]              havoc arg837_s0;
[L4895]              havoc __ret_0_allowance;
[L4896]              havoc initialSupply_s258;
[L4897]              havoc tokenName_s258;
[L4898]              havoc tokenSymbol_s258;
[L4899]              havoc _to_s365;
[L4900]              havoc _value_s365;
[L4901]              havoc success_s365;
[L4902]              havoc _from_s413;
[L4903]              havoc _to_s413;
[L4904]              havoc _value_s413;
[L4905]              havoc success_s413;
[L4906]              havoc _spender_s441;
[L4907]              havoc _value_s441;
[L4908]              havoc success_s441;
[L4909]              havoc _spender_s479;
[L4910]              havoc _value_s479;
[L4911]              havoc _extraData_s479;
[L4912]              havoc success_s479;
[L4913]              havoc _value_s527;
[L4914]              havoc success_s527;
[L4915]              havoc _from_s598;
[L4916]              havoc _value_s598;
[L4917]              havoc success_s598;
[L4918]              havoc arg838_s0;
[L4919]              havoc __ret_0_frozenAccount;
[L4920]              havoc arg839_s0;
[L4921]              havoc __ret_0_lockedAccount;
[L4922]              havoc arg840_s0;
[L4923]              havoc __ret_0_lockedAmount;
[L4924]              havoc initialSupply_s639;
[L4925]              havoc tokenName_s639;
[L4926]              havoc tokenSymbol_s639;
[L4927]              havoc target_s779;
[L4928]              havoc mintedAmount_s779;
[L4929]              havoc success_s779;
[L4930]              havoc target_s804;
[L4931]              havoc freeze_s804;
[L4932]              havoc success_s804;
[L4933]              havoc target_s832;
[L4934]              havoc time_s832;
[L4935]              havoc amount_s832;
[L4936]              havoc success_s832;
[L4937]              havoc tmpNow;
[L4938]              havoc gas;
[L4939]              assume gas > 4000000 && gas <= 8000000;
[L4940]              tmpNow := now;
[L4941]              havoc now;
[L4942]              assume now > tmpNow;
[L4943]              assume msgsender_MSG != null;
[L4944]              assume DType[msgsender_MSG] != SafeMath;
[L4945]              assume DType[msgsender_MSG] != owned;
[L4946]              assume DType[msgsender_MSG] != tokenRecipient;
[L4947]              assume DType[msgsender_MSG] != TokenERC20;
[L4948]              assume DType[msgsender_MSG] != ERC20ext;
[L4949]              Alloc[msgsender_MSG] := true;
[L4950]  COND FALSE  !(choice == 20)
[L4956]  COND FALSE  !(choice == 19)
[L4962]  COND FALSE  !(choice == 18)
[L4968]  COND FALSE  !(choice == 17)
[L4974]  COND FALSE  !(choice == 16)
[L4980]  COND FALSE  !(choice == 15)
[L4986]  COND FALSE  !(choice == 14)
[L4992]  COND FALSE  !(choice == 13)
[L4998]  COND FALSE  !(choice == 12)
[L5005]  COND TRUE   choice == 11
[L5006]              gas := gas - 21000;
[L5007]  COND TRUE   gas >= 0
[L5008]              assume _value_s413 >= 0 && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L5009]              assume msgvalue_MSG == 0;
[L5010]  CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3]                 revert_hold := revert;
[L3]                 revert := false;
[L3]                 assume (((((((((((((p1 != _from_s413 && p1 != _to_s413) && (p2 != _from_s413 || p3 != msgsender_MSG)) && _from_s413 != _to_s413) && _value_s413 <= balanceOf_TokenERC20[this][_from_s413]) && _value_s413 <= allowance_TokenERC20[this][_from_s413][msgsender_MSG]) && balanceOf_TokenERC20[this][_to_s413] + _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && _value_s413 >= 0) && _value_s413 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_to_s413] >= 0) && balanceOf_TokenERC20[this][_to_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_TokenERC20[this][_from_s413] >= 0) && balanceOf_TokenERC20[this][_from_s413] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] >= 0) && allowance_TokenERC20[this][_from_s413][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L3]                 call_transferFrom_TokenERC200 := true;
[L3]                 call_transferFrom_TokenERC200 := false;
[L3]                 revert := revert_hold;
[L598]               havoc __exception;
[L599]               revert := false;
[L600]   COND TRUE   __exception
[L601]               __tmp__Balance := Balance;
[L602]               __tmp__DType := DType;
[L603]               __tmp__Alloc := Alloc;
[L604]               __tmp__balance_ADDR := balance_ADDR;
[L605]               __tmp__M_Ref_int := M_Ref_int;
[L606]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L607]               __tmp__alloc_allowance_TokenERC20_lvl0 := alloc_allowance_TokenERC20_lvl0;
[L608]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L609]               __tmp__sum_allowance1 := sum_allowance1;
[L610]               __tmp__M_Ref_bool := M_Ref_bool;
[L611]               __tmp__sum_frozenAccount2 := sum_frozenAccount2;
[L612]               __tmp__sum_lockedAccount3 := sum_lockedAccount3;
[L613]               __tmp__sum_lockedAmount4 := sum_lockedAmount4;
[L614]               __tmp__Length := Length;
[L615]               __tmp__now := now;
[L616]               __tmp__owner_owned := owner_owned;
[L617]               __tmp__name_TokenERC20 := name_TokenERC20;
[L618]               __tmp__symbol_TokenERC20 := symbol_TokenERC20;
[L619]               __tmp__decimals_TokenERC20 := decimals_TokenERC20;
[L620]               __tmp__totalSupply_TokenERC20 := totalSupply_TokenERC20;
[L621]               __tmp__balanceOf_TokenERC20 := balanceOf_TokenERC20;
[L622]               __tmp__allowance_TokenERC20 := allowance_TokenERC20;
[L623]               __tmp__frozenAccount_ERC20ext := frozenAccount_ERC20ext;
[L624]               __tmp__lockedAccount_ERC20ext := lockedAccount_ERC20ext;
[L625]               __tmp__lockedAmount_ERC20ext := lockedAmount_ERC20ext;
[L626]   CALL        call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2874]  COND FALSE  !(!(_value_s413 <= __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG]))
[L2878]  CALL        call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2498]  COND FALSE  !(!(b_s51 <= a_s51))
[L2502]              c_s51 := (a_s51 - b_s51) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2503]              __ret_0_ := c_s51;
[L2878]  RET         call __var_5 := sub~uint256~uint256_SafeMath__fail(this, this, 0, __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG], _value_s413);
[L2879]  COND FALSE  !(revert)
[L2882]              __tmp__sum_allowance1[_from_s413] := __tmp__sum_allowance1[_from_s413] - __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG];
[L2883]              __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG] := __var_5;
[L2884]              __tmp__sum_allowance1[_from_s413] := __tmp__sum_allowance1[_from_s413] + __tmp__allowance_TokenERC20[this][_from_s413][msgsender_MSG];
[L2885]  COND TRUE   __tmp__DType[this] == ERC20ext
[L2886]  CALL        call _transfer~address~address~uint256_ERC20ext__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L3267]  COND FALSE  !(!(__tmp__now > __tmp__lockedAccount_ERC20ext[this][_from_s739] || (__tmp__lockedAmount_ERC20ext[this][_from_s739] + _value_s739) % 115792089237316195423570985008687907853269984665640564039457584007913129639936 < __tmp__balanceOf_TokenERC20[this][_from_s739]))
[L3271]              __var_14 := null;
[L3272]  COND TRUE   !(_to_s739 != null)
[L3273]              revert := true;
[L2886]  RET         call _transfer~address~address~uint256_ERC20ext__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L2887]  COND TRUE   revert
[L626]   RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20__fail(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L627]               assume revert || gas < 0;
[L5010]  RET         call success_s413 := transferFrom~address~address~uint256_TokenERC20(this, msgsender_MSG, msgvalue_MSG, _from_s413, _to_s413, _value_s413);
[L5100]  RET         call CorralChoice_ERC20ext(this);

[2020-11-25 15:07:34,876 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:34,876 INFO  L82        PathProgramCache]: Analyzing trace with hash -989671032, now seen corresponding path program 1 times
[2020-11-25 15:07:34,876 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:34,891 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:07:34,908 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:07:34,970 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:34,970 INFO  L82        PathProgramCache]: Analyzing trace with hash 1071685512, now seen corresponding path program 1 times
[2020-11-25 15:07:34,970 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:34,976 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:07:34,982 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:07:34,997 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 15:07:34,997 INFO  L82        PathProgramCache]: Analyzing trace with hash 1824129167, now seen corresponding path program 1 times
[2020-11-25 15:07:34,997 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 15:07:35,016 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
[2020-11-25 15:07:35,039 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is sat
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 163 to 317
[2020-11-25 15:07:35,412 WARN  L188               SmtUtils]: Spent 241.00 ms on a formula simplification. DAG size of input: 113 DAG size of output: 112
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
[2020-11-25 15:07:35,638 WARN  L188               SmtUtils]: Spent 130.00 ms on a formula simplification. DAG size of input: 96 DAG size of output: 95
[2020-11-25 15:07:35,945 WARN  L188               SmtUtils]: Spent 305.00 ms on a formula simplification. DAG size of input: 218 DAG size of output: 209
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 2179 to 4357
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 7027 to 14051
Garbage collection #9: 14051 nodes / 0 free / 0.004s / 0.007s total
Resizing node table from 14051 to 28099
[2020-11-25 15:07:36,717 WARN  L188               SmtUtils]: Spent 702.00 ms on a formula simplification. DAG size of input: 179 DAG size of output: 160
[2020-11-25 15:07:37,202 WARN  L188               SmtUtils]: Spent 483.00 ms on a formula simplification that was a NOOP. DAG size: 340
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.002s total
Resizing node table from 7933 to 15859
[2020-11-25 15:07:39,858 WARN  L188               SmtUtils]: Spent 2.60 s on a formula simplification. DAG size of input: 297 DAG size of output: 288
[2020-11-25 15:07:43,047 WARN  L188               SmtUtils]: Spent 3.18 s on a formula simplification. DAG size of input: 358 DAG size of output: 327
Garbage collection #1: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #2: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #3: 443 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 443 to 883
Garbage collection #4: 883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 883 to 1759
Garbage collection #5: 1759 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 1759 to 3517
Garbage collection #6: 3517 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 3517 to 7027
Garbage collection #7: 7027 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 7027 to 14051
Garbage collection #8: 14051 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 14051 to 28099
Garbage collection #9: 28099 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 28099 to 56197
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
Garbage collection #9: 19937 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19937 to 39869
[2020-11-25 15:07:45,890 WARN  L188               SmtUtils]: Spent 2.76 s on a formula simplification. DAG size of input: 323 DAG size of output: 211
[2020-11-25 15:07:46,857 WARN  L188               SmtUtils]: Spent 965.00 ms on a formula simplification that was a NOOP. DAG size: 414
Garbage collection #1: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #2: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #3: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #4: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #5: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #6: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #7: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-25 15:07:48,925 WARN  L188               SmtUtils]: Spent 2.04 s on a formula simplification. DAG size of input: 353 DAG size of output: 332
[2020-11-25 15:07:49,952 WARN  L188               SmtUtils]: Spent 1.02 s on a formula simplification that was a NOOP. DAG size: 332
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 15859 to 31699
Garbage collection #1: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #2: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #3: 317 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 317 to 631
Garbage collection #4: 631 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 631 to 1259
Garbage collection #5: 1259 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1259 to 2503
Garbage collection #6: 2503 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2503 to 5003
Garbage collection #7: 5003 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5003 to 9973
Garbage collection #8: 9973 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9973 to 19937
[2020-11-25 15:07:55,205 WARN  L188               SmtUtils]: Spent 5.21 s on a formula simplification. DAG size of input: 332 DAG size of output: 239
[2020-11-25 15:07:55,218 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #1: 7 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7 to 13
Garbage collection #2: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 11 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 11 to 19
Garbage collection #2: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #3: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #1: 13 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13 to 23
Garbage collection #2: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #3: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #1: 19 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 19 to 37
Garbage collection #2: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #3: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #4: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #5: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 29 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 29 to 53
Garbage collection #2: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #3: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #4: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #1: 53 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 53 to 103
Garbage collection #2: 103 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 103 to 199
Garbage collection #3: 199 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 199 to 397
Garbage collection #4: 397 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 397 to 787
Garbage collection #5: 787 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 787 to 1571
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #1: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #2: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #3: 163 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 163 to 317
Garbage collection #4: 317 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 317 to 631
Garbage collection #5: 631 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 631 to 1259
[2020-11-25 15:07:55,708 WARN  L188               SmtUtils]: Spent 114.00 ms on a formula simplification that was a NOOP. DAG size: 300
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #1: 23 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 23 to 43
Garbage collection #2: 43 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 43 to 83
Garbage collection #3: 83 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 83 to 163
Garbage collection #4: 163 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 163 to 317
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #5: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #1: 37 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 37 to 73
Garbage collection #2: 73 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 73 to 139
Garbage collection #3: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #4: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
[2020-11-25 15:07:56,317 WARN  L188               SmtUtils]: Spent 261.00 ms on a formula simplification. DAG size of input: 218 DAG size of output: 209
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #1: 59 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 59 to 113
Garbage collection #2: 113 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 113 to 223
Garbage collection #3: 223 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 223 to 443
Garbage collection #4: 443 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 443 to 883
Garbage collection #5: 883 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 883 to 1759
Garbage collection #6: 1759 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1759 to 3517
Garbage collection #7: 3517 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3517 to 7027
Garbage collection #8: 7027 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 7027 to 14051
Garbage collection #9: 14051 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 14051 to 28099
[2020-11-25 15:07:56,889 WARN  L188               SmtUtils]: Spent 552.00 ms on a formula simplification. DAG size of input: 170 DAG size of output: 160
[2020-11-25 15:07:57,334 WARN  L188               SmtUtils]: Spent 443.00 ms on a formula simplification that was a NOOP. DAG size: 340
Garbage collection #1: 127 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 127 to 251
Garbage collection #2: 251 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 251 to 499
Garbage collection #3: 499 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 499 to 997
Garbage collection #4: 997 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 997 to 1993
Garbage collection #5: 1993 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1993 to 3967
Garbage collection #6: 3967 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3967 to 7933
Garbage collection #7: 7933 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 7933 to 15859
Garbage collection #8: 15859 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 15859 to 31699
[2020-11-25 15:08:00,502 WARN  L188               SmtUtils]: Spent 3.14 s on a formula simplification. DAG size of input: 298 DAG size of output: 287
[2020-11-25 15:08:03,556 WARN  L188               SmtUtils]: Spent 3.05 s on a formula simplification. DAG size of input: 356 DAG size of output: 326
Garbage collection #1: 109 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 109 to 211
Garbage collection #2: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #3: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #4: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #5: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #6: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #7: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #8: 13313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 13313 to 26597
Garbage collection #9: 26597 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 26597 to 53189
Garbage collection #1: 71 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 71 to 139
Garbage collection #2: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #3: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #4: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #5: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #6: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #7: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #8: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #9: 17419 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 17419 to 34819
[2020-11-25 15:08:05,127 WARN  L188               SmtUtils]: Spent 1.53 s on a formula simplification. DAG size of input: 223 DAG size of output: 203
[2020-11-25 15:08:05,985 WARN  L188               SmtUtils]: Spent 857.00 ms on a formula simplification that was a NOOP. DAG size: 406
Garbage collection #1: 157 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 157 to 313
Garbage collection #2: 313 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 313 to 619
Garbage collection #3: 619 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 619 to 1237
Garbage collection #4: 1237 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 1237 to 2473
Garbage collection #5: 2473 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 2473 to 4943
Garbage collection #6: 4943 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4943 to 9883
Garbage collection #7: 9883 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 9883 to 19763
Garbage collection #8: 19763 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 19763 to 39521
[2020-11-25 15:08:08,220 WARN  L188               SmtUtils]: Spent 2.19 s on a formula simplification. DAG size of input: 337 DAG size of output: 333
[2020-11-25 15:08:10,517 WARN  L188               SmtUtils]: Spent 2.29 s on a formula simplification. DAG size of input: 574 DAG size of output: 545
Garbage collection #1: 211 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 211 to 421
Garbage collection #2: 421 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 421 to 839
Garbage collection #3: 839 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 839 to 1669
Garbage collection #4: 1669 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1669 to 3331
Garbage collection #5: 3331 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3331 to 6661
Garbage collection #6: 6661 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6661 to 13313
Garbage collection #7: 13313 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 13313 to 26597
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
[2020-11-25 15:08:11,674 WARN  L188               SmtUtils]: Spent 1.13 s on a formula simplification. DAG size of input: 282 DAG size of output: 268
[2020-11-25 15:08:12,407 WARN  L188               SmtUtils]: Spent 712.00 ms on a formula simplification that was a NOOP. DAG size: 400
Garbage collection #1: 137 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 137 to 271
Garbage collection #2: 271 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 271 to 541
Garbage collection #3: 541 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 541 to 1069
Garbage collection #4: 1069 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1069 to 2137
Garbage collection #5: 2137 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 2137 to 4273
Garbage collection #6: 4273 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 4273 to 8543
Garbage collection #7: 8543 nodes / 0 free / 0.0s / 0.001s total
Resizing node table from 8543 to 17077
Garbage collection #1: 89 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 89 to 173
Garbage collection #2: 173 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 173 to 337
Garbage collection #3: 337 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 337 to 673
Garbage collection #4: 673 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 673 to 1327
Garbage collection #5: 1327 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1327 to 2647
Garbage collection #6: 2647 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2647 to 5281
Garbage collection #7: 5281 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 5281 to 10559
Garbage collection #8: 10559 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 10559 to 21107
Garbage collection #9: 21107 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 21107 to 42209
[2020-11-25 15:08:16,697 WARN  L188               SmtUtils]: Spent 4.24 s on a formula simplification. DAG size of input: 371 DAG size of output: 289
[2020-11-25 15:08:20,140 WARN  L188               SmtUtils]: Spent 3.44 s on a formula simplification. DAG size of input: 423 DAG size of output: 422
Garbage collection #1: 139 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 139 to 277
Garbage collection #2: 277 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 277 to 547
Garbage collection #3: 547 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 547 to 1093
Garbage collection #4: 1093 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1093 to 2179
Garbage collection #5: 2179 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2179 to 4357
Garbage collection #6: 4357 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4357 to 8713
Garbage collection #7: 8713 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 8713 to 17419
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 18353 to 36697
Garbage collection #9: 36697 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 36697 to 73387
Garbage collection #10: 73387 nodes / 0 free / 0.001s / 0.001s total
Resizing node table from 73387 to 123379
Garbage collection #11: 123379 nodes / 0 free / 0.002s / 0.003s total
Resizing node table from 123379 to 173359
Garbage collection #12: 173359 nodes / 0 free / 0.003s / 0.006s total
Resizing node table from 173359 to 223339
Garbage collection #13: 223339 nodes / 0 free / 0.004s / 0.01s total
Resizing node table from 223339 to 273323
[2020-11-25 15:08:30,151 WARN  L188               SmtUtils]: Spent 9.87 s on a formula simplification. DAG size of input: 619 DAG size of output: 403
[2020-11-25 15:08:30,165 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 15:08:30,175 INFO  L216          LassoAnalysis]: Preferences:
[2020-11-25 15:08:30,176 INFO  L124   ssoRankerPreferences]: Compute integeral hull: false
[2020-11-25 15:08:30,176 INFO  L125   ssoRankerPreferences]: Enable LassoPartitioneer: true
[2020-11-25 15:08:30,176 INFO  L126   ssoRankerPreferences]: Term annotations enabled: false
[2020-11-25 15:08:30,176 INFO  L127   ssoRankerPreferences]: Use exernal solver: true
[2020-11-25 15:08:30,176 INFO  L128   ssoRankerPreferences]: SMT solver command: z3 SMTLIB2_COMPLIANT=true -memory:1024 -smt2 -in -t:12000
[2020-11-25 15:08:30,176 INFO  L129   ssoRankerPreferences]: Dump SMT script to file: false
[2020-11-25 15:08:30,176 INFO  L130   ssoRankerPreferences]: Path of dumped script: 
[2020-11-25 15:08:30,176 INFO  L131   ssoRankerPreferences]: Filename of dumped script: ERC20ext_0xceca64909127918c80c7c76b503de7306d63eca7_transferfrom-normal.bpl_BEv2_Iteration6_Lasso
[2020-11-25 15:08:30,176 INFO  L132   ssoRankerPreferences]: MapElimAlgo: Frank
[2020-11-25 15:08:30,176 INFO  L282          LassoAnalysis]: Starting lasso preprocessing...
Garbage collection #1: 149 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 149 to 293
Garbage collection #2: 293 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 293 to 577
Garbage collection #3: 577 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 577 to 1153
Garbage collection #4: 1153 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1153 to 2297
Garbage collection #5: 2297 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 2297 to 4591
Garbage collection #6: 4591 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 4591 to 9181
Garbage collection #7: 9181 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 9181 to 18353
Garbage collection #8: 18353 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 18353 to 36697
Garbage collection #1: 97 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 97 to 193
Garbage collection #2: 193 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 193 to 383
Garbage collection #3: 383 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 383 to 761
Garbage collection #4: 761 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 761 to 1511
Garbage collection #5: 1511 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 1511 to 3019
Garbage collection #6: 3019 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 3019 to 6037
Garbage collection #7: 6037 nodes / 0 free / 0.0s / 0.0s total
Resizing node table from 6037 to 12073
[2020-11-25 15:08:31,867 FATAL L292        ToolchainWalker]: The Plugin de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer has thrown an exception:
java.lang.UnsupportedOperationException: function symbols not yet supported
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.addInOuAuxVar(LassoPartitioneer.java:238)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.constructTransFormulaLR(LassoPartitioneer.java:210)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.doPartition(LassoPartitioneer.java:165)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.<init>(LassoPartitioneer.java:95)
	at de.uni_freiburg.informatik.ultimate.lassoranker.preprocessors.LassoPartitioneerPreprocessor.process(LassoPartitioneerPreprocessor.java:65)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoBuilder.applyPreprocessor(LassoBuilder.java:154)
	at de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoBuilder.preprocess(LassoBuilder.java:262)
	at de.uni_freiburg.informatik.ultimate.lassoranker.LassoAnalysis.preprocess(LassoAnalysis.java:286)
	at de.uni_freiburg.informatik.ultimate.lassoranker.LassoAnalysis.<init>(LassoAnalysis.java:235)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.synthesize(LassoCheck.java:788)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.access$18(LassoCheck.java:715)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.checkLassoTermination(LassoCheck.java:1163)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck$LassoCheckResult.<init>(LassoCheck.java:1062)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.LassoCheck.<init>(LassoCheck.java:276)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiCegarLoop.iterate(BuchiCegarLoop.java:479)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.doTerminationAnalysis(BuchiAutomizerObserver.java:153)
	at de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver.finish(BuchiAutomizerObserver.java:413)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runObserver(PluginConnector.java:168)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.runTool(PluginConnector.java:151)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.PluginConnector.run(PluginConnector.java:128)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.executePluginConnector(ToolchainWalker.java:232)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.processPlugin(ToolchainWalker.java:226)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walkUnprotected(ToolchainWalker.java:142)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainWalker.walk(ToolchainWalker.java:104)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.ToolchainManager$Toolchain.processToolchain(ToolchainManager.java:317)
	at de.uni_freiburg.informatik.ultimate.core.coreplugin.toolchain.DefaultToolchainJob.run(DefaultToolchainJob.java:145)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)
[2020-11-25 15:08:31,868 INFO  L168              Benchmark]: Toolchain (without parser) took 67713.72 ms. Allocated memory was 1.0 GB in the beginning and 3.1 GB in the end (delta: 2.0 GB). Free memory was 935.2 MB in the beginning and 1.1 GB in the end (delta: -175.7 MB). Peak memory consumption was 2.2 GB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,869 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,869 INFO  L168              Benchmark]: Boogie Preprocessor took 100.40 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,869 INFO  L168              Benchmark]: UtopiaSpecLang took 64.73 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,870 INFO  L168              Benchmark]: Boogie Printer took 16.59 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,870 INFO  L168              Benchmark]: RCFGBuilder took 783.06 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 774.1 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,870 INFO  L168              Benchmark]: UtopiaLTL2Aut took 42.93 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,871 INFO  L168              Benchmark]: BÃ¼chi Program Product took 1326.20 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.4 MB). Free memory was 770.5 MB in the beginning and 881.9 MB in the end (delta: -111.4 MB). Peak memory consumption was 160.4 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,871 INFO  L168              Benchmark]: BlockEncodingV2 took 150.86 ms. Allocated memory is still 1.2 GB. Free memory was 881.9 MB in the beginning and 813.7 MB in the end (delta: 68.1 MB). Peak memory consumption was 68.1 MB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,871 INFO  L168              Benchmark]: BuchiAutomizer took 65226.10 ms. Allocated memory was 1.2 GB in the beginning and 3.1 GB in the end (delta: 1.8 GB). Free memory was 813.7 MB in the beginning and 1.1 GB in the end (delta: -297.2 MB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
[2020-11-25 15:08:31,874 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    4510 locations, 7833 edges
  - StatisticsResult: Encoded RCFG
    4460 locations, 7703 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 100.40 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 924.5 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 64.73 ms. Allocated memory is still 1.0 GB. Free memory was 924.5 MB in the beginning and 913.7 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 16.59 ms. Allocated memory is still 1.0 GB. Free memory was 913.7 MB in the beginning and 908.3 MB in the end (delta: 5.5 MB). Peak memory consumption was 5.5 MB. Max. memory is 15.3 GB.
 * RCFGBuilder took 783.06 ms. Allocated memory is still 1.0 GB. Free memory was 908.3 MB in the beginning and 774.1 MB in the end (delta: 134.2 MB). Peak memory consumption was 134.2 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 42.93 ms. Allocated memory is still 1.0 GB. Free memory was 774.1 MB in the beginning and 770.5 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 1326.20 ms. Allocated memory was 1.0 GB in the beginning and 1.2 GB in the end (delta: 203.4 MB). Free memory was 770.5 MB in the beginning and 881.9 MB in the end (delta: -111.4 MB). Peak memory consumption was 160.4 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 150.86 ms. Allocated memory is still 1.2 GB. Free memory was 881.9 MB in the beginning and 813.7 MB in the end (delta: 68.1 MB). Peak memory consumption was 68.1 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 65226.10 ms. Allocated memory was 1.2 GB in the beginning and 3.1 GB in the end (delta: 1.8 GB). Free memory was 813.7 MB in the beginning and 1.1 GB in the end (delta: -297.2 MB). Peak memory consumption was 1.8 GB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1884 locations, 2421 edges
  - StatisticsResult: BuchiProgram size
    4510 locations, 7833 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer:
  - ExceptionOrErrorResult: UnsupportedOperationException: function symbols not yet supported
    de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer: UnsupportedOperationException: function symbols not yet supported: de.uni_freiburg.informatik.ultimate.lassoranker.variables.LassoPartitioneer.addInOuAuxVar(LassoPartitioneer.java:238)
RESULT: Ultimate could not prove your program: Toolchain returned no result.
Received shutdown request...
