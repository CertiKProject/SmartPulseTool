This is Ultimate 0.1.24-f1553f5-m
[2020-11-25 12:57:52,419 INFO  L170        SettingsManager]: Resetting all preferences to default values...
[2020-11-25 12:57:52,420 INFO  L174        SettingsManager]: Resetting UltimateCore preferences to default values
[2020-11-25 12:57:52,430 INFO  L177        SettingsManager]: Ultimate Commandline Interface provides no preferences, ignoring...
[2020-11-25 12:57:52,430 INFO  L174        SettingsManager]: Resetting Boogie Preprocessor preferences to default values
[2020-11-25 12:57:52,431 INFO  L174        SettingsManager]: Resetting Boogie Procedure Inliner preferences to default values
[2020-11-25 12:57:52,432 INFO  L174        SettingsManager]: Resetting Abstract Interpretation preferences to default values
[2020-11-25 12:57:52,433 INFO  L174        SettingsManager]: Resetting LassoRanker preferences to default values
[2020-11-25 12:57:52,435 INFO  L174        SettingsManager]: Resetting Reaching Definitions preferences to default values
[2020-11-25 12:57:52,435 INFO  L174        SettingsManager]: Resetting SyntaxChecker preferences to default values
[2020-11-25 12:57:52,436 INFO  L177        SettingsManager]: BÃ¼chi Program Product provides no preferences, ignoring...
[2020-11-25 12:57:52,436 INFO  L174        SettingsManager]: Resetting LTL2Aut preferences to default values
[2020-11-25 12:57:52,437 INFO  L174        SettingsManager]: Resetting PEA to Boogie preferences to default values
[2020-11-25 12:57:52,438 INFO  L174        SettingsManager]: Resetting BlockEncodingV2 preferences to default values
[2020-11-25 12:57:52,439 INFO  L174        SettingsManager]: Resetting ChcToBoogie preferences to default values
[2020-11-25 12:57:52,439 INFO  L174        SettingsManager]: Resetting AutomataScriptInterpreter preferences to default values
[2020-11-25 12:57:52,440 INFO  L174        SettingsManager]: Resetting BuchiAutomizer preferences to default values
[2020-11-25 12:57:52,441 INFO  L174        SettingsManager]: Resetting CACSL2BoogieTranslator preferences to default values
[2020-11-25 12:57:52,442 INFO  L174        SettingsManager]: Resetting CodeCheck preferences to default values
[2020-11-25 12:57:52,443 INFO  L174        SettingsManager]: Resetting InvariantSynthesis preferences to default values
[2020-11-25 12:57:52,444 INFO  L174        SettingsManager]: Resetting RCFGBuilder preferences to default values
[2020-11-25 12:57:52,444 INFO  L174        SettingsManager]: Resetting TraceAbstraction preferences to default values
[2020-11-25 12:57:52,446 INFO  L177        SettingsManager]: TraceAbstractionConcurrent provides no preferences, ignoring...
[2020-11-25 12:57:52,446 INFO  L177        SettingsManager]: TraceAbstractionWithAFAs provides no preferences, ignoring...
[2020-11-25 12:57:52,446 INFO  L174        SettingsManager]: Resetting TreeAutomizer preferences to default values
[2020-11-25 12:57:52,447 INFO  L174        SettingsManager]: Resetting IcfgToChc preferences to default values
[2020-11-25 12:57:52,447 INFO  L174        SettingsManager]: Resetting IcfgTransformer preferences to default values
[2020-11-25 12:57:52,448 INFO  L177        SettingsManager]: ReqToTest provides no preferences, ignoring...
[2020-11-25 12:57:52,448 INFO  L174        SettingsManager]: Resetting UtopiaLTL2Aut preferences to default values
[2020-11-25 12:57:52,448 INFO  L174        SettingsManager]: Resetting UtopiaSpecLang preferences to default values
[2020-11-25 12:57:52,448 INFO  L174        SettingsManager]: Resetting Boogie Printer preferences to default values
[2020-11-25 12:57:52,449 INFO  L174        SettingsManager]: Resetting ChcSmtPrinter preferences to default values
[2020-11-25 12:57:52,449 INFO  L174        SettingsManager]: Resetting ReqPrinter preferences to default values
[2020-11-25 12:57:52,450 INFO  L174        SettingsManager]: Resetting Witness Printer preferences to default values
[2020-11-25 12:57:52,451 INFO  L177        SettingsManager]: Boogie PL CUP Parser provides no preferences, ignoring...
[2020-11-25 12:57:52,451 INFO  L174        SettingsManager]: Resetting CDTParser preferences to default values
[2020-11-25 12:57:52,451 INFO  L177        SettingsManager]: AutomataScriptParser provides no preferences, ignoring...
[2020-11-25 12:57:52,451 INFO  L177        SettingsManager]: ReqParser provides no preferences, ignoring...
[2020-11-25 12:57:52,452 INFO  L174        SettingsManager]: Resetting SmtParser preferences to default values
[2020-11-25 12:57:52,452 INFO  L174        SettingsManager]: Resetting Witness Parser preferences to default values
[2020-11-25 12:57:52,453 INFO  L181        SettingsManager]: Finished resetting all preferences to default values...
[2020-11-25 12:57:52,453 INFO  L98         SettingsManager]: Beginning loading settings from /mnt/data0/jon/SmartPulseTool/SmartPulse/settings.epf
[2020-11-25 12:57:52,460 INFO  L110        SettingsManager]: Loading preferences was successful
[2020-11-25 12:57:52,461 INFO  L112        SettingsManager]: Preferences different from defaults after loading the file:
[2020-11-25 12:57:52,461 INFO  L131        SettingsManager]: Preferences of LTL2Aut differ from their defaults:
[2020-11-25 12:57:52,461 INFO  L133        SettingsManager]:  * Read property from file=true
[2020-11-25 12:57:52,462 INFO  L133        SettingsManager]:  * Path to LTL*BA executable (LTL2BA, LTL3BA)=/mnt/data0/jon/SmartPulseTool/ltl2ba
[2020-11-25 12:57:52,462 INFO  L131        SettingsManager]: Preferences of BlockEncodingV2 differ from their defaults:
[2020-11-25 12:57:52,462 INFO  L133        SettingsManager]:  * Maximize final states=false
[2020-11-25 12:57:52,462 INFO  L133        SettingsManager]:  * Minimize states even if more edges are added than removed.=true
[2020-11-25 12:57:52,462 INFO  L133        SettingsManager]:  * Minimize states using LBE with the strategy=NONE
[2020-11-25 12:57:52,462 INFO  L131        SettingsManager]: Preferences of BuchiAutomizer differ from their defaults:
[2020-11-25 12:57:52,462 INFO  L133        SettingsManager]:  * Compute Interpolants along a Counterexample=Craig_TreeInterpolation
[2020-11-25 12:57:52,462 INFO  L133        SettingsManager]:  * Use old map elimination=false
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Try twofold refinement=false
[2020-11-25 12:57:52,463 INFO  L131        SettingsManager]: Preferences of CACSL2BoogieTranslator differ from their defaults:
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Check unreachability of error function in SV-COMP mode=false
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Overapproximate operations on floating types=true
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Check division by zero=IGNORE
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Pointer to allocated memory at dereference=ASSUME
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * If two pointers are subtracted or compared they have the same base address=ASSUME
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Check array bounds for arrays that are off heap=ASSUME
[2020-11-25 12:57:52,463 INFO  L133        SettingsManager]:  * Check if freed pointer was valid=false
[2020-11-25 12:57:52,464 INFO  L133        SettingsManager]:  * Use constant arrays=true
[2020-11-25 12:57:52,464 INFO  L133        SettingsManager]:  * Pointer base address is valid at dereference=ASSUME
[2020-11-25 12:57:52,464 INFO  L131        SettingsManager]: Preferences of RCFGBuilder differ from their defaults:
[2020-11-25 12:57:52,464 INFO  L133        SettingsManager]:  * Size of a code block=SingleStatement
[2020-11-25 12:57:52,464 INFO  L133        SettingsManager]:  * SMT solver=Internal_SMTInterpol
[2020-11-25 12:57:52,488 INFO  L81    nceAwareModelManager]: Repository-Root is: /tmp
[2020-11-25 12:57:52,506 INFO  L259   ainManager$Toolchain]: [Toolchain 1]: Applicable parser(s) successfully (re)initialized
[2020-11-25 12:57:52,509 INFO  L215   ainManager$Toolchain]: [Toolchain 1]: Toolchain selected.
[2020-11-25 12:57:52,510 INFO  L271        PluginConnector]: Initializing Boogie PL CUP Parser...
[2020-11-25 12:57:52,510 INFO  L276        PluginConnector]: Boogie PL CUP Parser initialized
[2020-11-25 12:57:52,511 INFO  L430   ainManager$Toolchain]: [Toolchain 1]: Parsing single file: /mnt/data0/jon/SmartPulseTool/CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl
[2020-11-25 12:57:52,511 INFO  L111           BoogieParser]: Parsing: '/mnt/data0/jon/SmartPulseTool/CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl'
[2020-11-25 12:57:52,582 INFO  L297   ainManager$Toolchain]: ####################### [Toolchain 1] #######################
[2020-11-25 12:57:52,583 INFO  L131        ToolchainWalker]: Walking toolchain with 8 elements.
[2020-11-25 12:57:52,584 INFO  L113        PluginConnector]: ------------------------Boogie Preprocessor----------------------------
[2020-11-25 12:57:52,584 INFO  L271        PluginConnector]: Initializing Boogie Preprocessor...
[2020-11-25 12:57:52,584 INFO  L276        PluginConnector]: Boogie Preprocessor initialized
[2020-11-25 12:57:52,600 INFO  L185        PluginConnector]: Executing the observer EnsureBoogieModelObserver from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,602 INFO  L185        PluginConnector]: Executing the observer TypeChecker from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,627 INFO  L185        PluginConnector]: Executing the observer ConstExpander from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,628 INFO  L185        PluginConnector]: Executing the observer StructExpander from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,644 INFO  L185        PluginConnector]: Executing the observer UnstructureCode from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,652 INFO  L185        PluginConnector]: Executing the observer FunctionInliner from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,658 INFO  L185        PluginConnector]: Executing the observer BoogieSymbolTableConstructor from plugin Boogie Preprocessor for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,665 INFO  L132        PluginConnector]: ------------------------ END Boogie Preprocessor----------------------------
[2020-11-25 12:57:52,666 INFO  L113        PluginConnector]: ------------------------UtopiaSpecLang----------------------------
[2020-11-25 12:57:52,666 INFO  L271        PluginConnector]: Initializing UtopiaSpecLang...
[2020-11-25 12:57:52,668 INFO  L276        PluginConnector]: UtopiaSpecLang initialized
[2020-11-25 12:57:52,671 INFO  L185        PluginConnector]: Executing the observer UtopiaSpecLangObserver from plugin UtopiaSpecLang for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/1) ...
[2020-11-25 12:57:52,687 INFO  L1012  opiaSpecLangObserver]: Parsing LTLPlus Formula to AstNode: [](started(BaseToken.transfer(to, value), msg.sender != to && (value > balanceOf_BaseToken[this][msg.sender] || balanceOf_BaseToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][msg.sender] >= 0 &&  balanceOf_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BaseToken.transfer)))
[2020-11-25 12:57:52,692 INFO  L1016  opiaSpecLangObserver]: Successfully lexed: [](started(BaseToken.transfer(to, value), msg.sender != to && (value > balanceOf_BaseToken[this][msg.sender] || balanceOf_BaseToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][msg.sender] >= 0 &&  balanceOf_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BaseToken.transfer)))
[2020-11-25 12:57:52,698 INFO  L1018  opiaSpecLangObserver]: Successfully parsed: [](started(BaseToken.transfer(to, value), msg.sender != to && (value > balanceOf_BaseToken[this][msg.sender] || balanceOf_BaseToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][msg.sender] >= 0 &&  balanceOf_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BaseToken.transfer)))
[2020-11-25 12:57:52,707 INFO  L636   opiaSpecLangObserver]: Parsed ( ( ( ( ( ( ( msg.sender!=to_s284 && ( value_s284>balanceOf_BaseToken[this][msg.sender] || ( balanceOf_BaseToken[this][to_s284] + value_s284 )>=115792089237316195423570985008687907853269984665640564039457584007913129639936 ) ) && value_s284>=0 ) && value_s284<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_BaseToken[this][to_s284]>=0 ) && balanceOf_BaseToken[this][to_s284]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) && balanceOf_BaseToken[this][msg.sender]>=0 ) && balanceOf_BaseToken[this][msg.sender]<115792089237316195423570985008687907853269984665640564039457584007913129639936 ) to BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[LOGICAND,BinaryExpression[COMPNEQ,IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],IdentifierExpression[to_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]],BinaryExpression[LOGICOR,BinaryExpression[COMPGT,IdentifierExpression[value_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]]],BinaryExpression[COMPGEQ,BinaryExpression[ARITHPLUS,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[to_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IdentifierExpression[value_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]],BinaryExpression[COMPGEQ,IdentifierExpression[value_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],IntegerLiteral[0]]],BinaryExpression[COMPLT,IdentifierExpression[value_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[to_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[to_s284,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]],BinaryExpression[COMPGEQ,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[0]]],BinaryExpression[COMPLT,ArrayAccessExpression[ArrayAccessExpression[IdentifierExpression[balanceOf_BaseToken,GLOBAL],[IdentifierExpression[this,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],[IdentifierExpression[msgsender_MSG,<IMPLEMENTATION_INPARAM,transfer~address~uint256_BaseToken>]]],IntegerLiteral[115792089237316195423570985008687907853269984665640564039457584007913129639936]]]
[2020-11-25 12:57:52,712 INFO  L1005  opiaSpecLangObserver]: Compiling: [](started(BaseToken.transfer(to, value), msg.sender != to && (value > balanceOf_BaseToken[this][msg.sender] || balanceOf_BaseToken[this][to] + value >= 0x10000000000000000000000000000000000000000000000000000000000000000) && value >= 0  && value < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][to] >= 0 && balanceOf_BaseToken[this][to] < 0x10000000000000000000000000000000000000000000000000000000000000000 && balanceOf_BaseToken[this][msg.sender] >= 0 &&  balanceOf_BaseToken[this][msg.sender] < 0x10000000000000000000000000000000000000000000000000000000000000000) ==> <>(reverted(BaseToken.transfer)))
[2020-11-25 12:57:52,713 INFO  L1007  opiaSpecLangObserver]: Compiled to ( []( AP(call_transfer_BaseToken0) ==> ( <>AP(fail_transfer_BaseToken0) ) ) )
Executed UtopiaSpecLang
[2020-11-25 12:57:52,719 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:57:52 PropertyContainer
[2020-11-25 12:57:52,719 INFO  L132        PluginConnector]: ------------------------ END UtopiaSpecLang----------------------------
[2020-11-25 12:57:52,720 INFO  L113        PluginConnector]: ------------------------Boogie Printer----------------------------
[2020-11-25 12:57:52,720 INFO  L271        PluginConnector]: Initializing Boogie Printer...
[2020-11-25 12:57:52,720 INFO  L276        PluginConnector]: Boogie Printer initialized
[2020-11-25 12:57:52,721 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/2) ...
[2020-11-25 12:57:52,721 INFO  L116   oogiePrinterObserver]: File already exists and will be overwritten: /tmp/boogiePrinter.bpl
[2020-11-25 12:57:52,721 INFO  L120   oogiePrinterObserver]: Writing to file /tmp/boogiePrinter.bpl
[2020-11-25 12:57:52,732 INFO  L185        PluginConnector]: Executing the observer BoogiePrinterObserver from plugin Boogie Printer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:57:52" (2/2) ...
[2020-11-25 12:57:52,732 INFO  L132        PluginConnector]: ------------------------ END Boogie Printer----------------------------
[2020-11-25 12:57:52,733 INFO  L113        PluginConnector]: ------------------------RCFGBuilder----------------------------
[2020-11-25 12:57:52,733 INFO  L271        PluginConnector]: Initializing RCFGBuilder...
[2020-11-25 12:57:52,733 INFO  L276        PluginConnector]: RCFGBuilder initialized
[2020-11-25 12:57:52,734 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/2) ...
[2020-11-25 12:57:52,783 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath
[2020-11-25 12:57:52,784 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,784 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken_NoBaseCtor__success
[2020-11-25 12:57:52,785 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken
[2020-11-25 12:57:52,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken
[2020-11-25 12:57:52,785 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-25 12:57:52,785 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_BaseToken__success
[2020-11-25 12:57:52,785 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken
[2020-11-25 12:57:52,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken
[2020-11-25 12:57:52,785 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-25 12:57:52,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken
[2020-11-25 12:57:52,785 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken
[2020-11-25 12:57:52,785 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken
[2020-11-25 12:57:52,786 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_BaseToken
[2020-11-25 12:57:52,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_BaseToken
[2020-11-25 12:57:52,786 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_BaseToken
[2020-11-25 12:57:52,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_BaseToken
[2020-11-25 12:57:52,786 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BaseToken
[2020-11-25 12:57:52,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BaseToken
[2020-11-25 12:57:52,786 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BaseToken
[2020-11-25 12:57:52,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BaseToken
[2020-11-25 12:57:52,786 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BaseToken
[2020-11-25 12:57:52,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BaseToken
[2020-11-25 12:57:52,786 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken
[2020-11-25 12:57:52,786 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalLimit_BaseToken
[2020-11-25 12:57:52,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalLimit_BaseToken
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken
[2020-11-25 12:57:52,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken
[2020-11-25 12:57:52,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken_NoBaseCtor__success
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken
[2020-11-25 12:57:52,787 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__success
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__success
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure send__success
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_SafeMath
[2020-11-25 12:57:52,787 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_SafeMath
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_BaseToken
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralEntry_BaseToken
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure CorralChoice_CustomToken
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure main
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure FreshRefGenerator__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__success
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure SafeMath_SafeMath__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,788 INFO  L130     BoogieDeclarations]: Found specification of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken_NoBaseCtor__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken__success
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure BaseToken_BaseToken__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure _mint~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__success
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure transfer~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__success
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure approve~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:57:52,789 INFO  L130     BoogieDeclarations]: Found specification of procedure increaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure decreaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BaseToken__success
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure name_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BaseToken__success
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure symbol_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BaseToken__success
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure decimals_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__success
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure totalSupply_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalLimit_BaseToken__success
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure _totalLimit_BaseToken__fail
[2020-11-25 12:57:52,790 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__success
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure balanceOf~address_BaseToken__fail
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__success
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure allowance~address~address_BaseToken__fail
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken_NoBaseCtor__fail
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken__success
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure CustomToken_CustomToken__fail
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure FallbackDispatch__fail
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure Fallback_UnknownType__fail
[2020-11-25 12:57:52,791 INFO  L130     BoogieDeclarations]: Found specification of procedure send__fail
[2020-11-25 12:57:52,791 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__fail
[2020-11-25 12:57:52,791 INFO  L138     BoogieDeclarations]: Found implementation of procedure FreshRefGenerator__success
[2020-11-25 12:57:52,791 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath_NoBaseCtor__success
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure SafeMath_SafeMath__success
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure mul~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure div~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure sub~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure add~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__fail
[2020-11-25 12:57:52,792 INFO  L138     BoogieDeclarations]: Found implementation of procedure mod~uint256~uint256_SafeMath__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken_NoBaseCtor__fail
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken_NoBaseCtor__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken__fail
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure BaseToken_BaseToken__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure _transfer~address~address~uint256_BaseToken__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure _mint~address~uint256_BaseToken__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure transfer~address~uint256_BaseToken__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure transferFrom~address~address~uint256_BaseToken__success
[2020-11-25 12:57:52,793 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure approve~address~uint256_BaseToken__success
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure increaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_BaseToken__fail
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure decreaseAllowance~address~uint256_BaseToken__success
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BaseToken__fail
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure name_BaseToken__success
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BaseToken__fail
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure symbol_BaseToken__success
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BaseToken__fail
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure decimals_BaseToken__success
[2020-11-25 12:57:52,794 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__fail
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure totalSupply_BaseToken__success
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalLimit_BaseToken__fail
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure _totalLimit_BaseToken__success
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__fail
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure balanceOf~address_BaseToken__success
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__fail
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure allowance~address~address_BaseToken__success
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken_NoBaseCtor__fail
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken_NoBaseCtor__success
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken__fail
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure CustomToken_CustomToken__success
[2020-11-25 12:57:52,795 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__fail
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure FallbackDispatch__success
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__fail
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure Fallback_UnknownType__success
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__fail
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure send__success
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_SafeMath
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_SafeMath
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_BaseToken
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralEntry_BaseToken
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure CorralChoice_CustomToken
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure main
[2020-11-25 12:57:52,796 INFO  L130     BoogieDeclarations]: Found specification of procedure ULTIMATE.start
[2020-11-25 12:57:52,796 INFO  L138     BoogieDeclarations]: Found implementation of procedure ULTIMATE.start
[2020-11-25 12:57:53,084 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:57:53,085 WARN  L745   $ProcedureCfgBuilder]: Label in the middle of a codeblock.
[2020-11-25 12:57:53,320 INFO  L281             CfgBuilder]: Using the 1 location(s) as analysis (start of procedure ULTIMATE.start)
[2020-11-25 12:57:53,320 INFO  L286             CfgBuilder]: Removed 3 assue(true) statements.
[2020-11-25 12:57:53,322 INFO  L202        PluginConnector]: Adding new model CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:57:53 BoogieIcfgContainer
[2020-11-25 12:57:53,322 INFO  L185        PluginConnector]: Executing the observer RCFGBuilderObserver from plugin RCFGBuilder for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:57:52" (2/2) ...
[2020-11-25 12:57:53,322 INFO  L85     RCFGBuilderObserver]: No WrapperNode. Let Ultimate process with next node
[2020-11-25 12:57:53,323 INFO  L205        PluginConnector]: Invalid model from RCFGBuilder for observer de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder.RCFGBuilderObserver@1e07c15 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:57:53, skipping insertion in model container
[2020-11-25 12:57:53,323 INFO  L132        PluginConnector]: ------------------------ END RCFGBuilder----------------------------
[2020-11-25 12:57:53,323 INFO  L113        PluginConnector]: ------------------------UtopiaLTL2Aut----------------------------
[2020-11-25 12:57:53,323 INFO  L271        PluginConnector]: Initializing UtopiaLTL2Aut...
[2020-11-25 12:57:53,324 INFO  L276        PluginConnector]: UtopiaLTL2Aut initialized
[2020-11-25 12:57:53,325 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/3) ...
[2020-11-25 12:57:53,325 INFO  L205        PluginConnector]: Invalid model from UtopiaLTL2Aut for observer edu.utexas.cs.utopia.ltl2aut.UtopiaLTL2AutObserver@5af44fcb and model type Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:57:53, skipping insertion in model container
[2020-11-25 12:57:53,325 INFO  L185        PluginConnector]: Executing the observer UtopiaLTL2AutObserver from plugin UtopiaLTL2Aut for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:57:52" (2/3) ...
No working directory specified, using /mnt/data0/jon/SmartPulseTool/ltl2ba
Starting monitored process 1 with /mnt/data0/jon/SmartPulseTool/ltl2ba -f ! ( ( [] ( a -> ( <>b ) ) ) )  (exit command is null, workingDir is null)
[2020-11-25 12:57:53,361 INFO  L202        PluginConnector]: Adding new model Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:57:53 NWAContainer
[2020-11-25 12:57:53,361 INFO  L132        PluginConnector]: ------------------------ END UtopiaLTL2Aut----------------------------
[2020-11-25 12:57:53,361 INFO  L113        PluginConnector]: ------------------------BÃ¼chi Program Product----------------------------
[2020-11-25 12:57:53,362 INFO  L271        PluginConnector]: Initializing BÃ¼chi Program Product...
[2020-11-25 12:57:53,362 INFO  L276        PluginConnector]: BÃ¼chi Program Product initialized
[2020-11-25 12:57:53,363 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:57:53" (3/4) ...
[2020-11-25 12:57:53,364 INFO  L205        PluginConnector]: Invalid model from BÃ¼chi Program Product for observer de.uni_freiburg.informatik.ultimate.buchiprogramproduct.BuchiProductObserver@773c0593 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:57:53, skipping insertion in model container
[2020-11-25 12:57:53,364 INFO  L185        PluginConnector]: Executing the observer BuchiProductObserver from plugin BÃ¼chi Program Product for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:57:53" (4/4) ...
[2020-11-25 12:57:53,367 INFO  L104   BuchiProductObserver]: Initial property automaton 2 locations, 3 edges
[2020-11-25 12:57:53,370 INFO  L110   BuchiProductObserver]: Initial RCFG 1046 locations, 1372 edges
[2020-11-25 12:57:53,370 INFO  L93    BuchiProductObserver]: Beginning generation of product automaton
[2020-11-25 12:57:53,380 INFO  L136       ProductGenerator]: The program has no step specification, so we assume maximum atomicity
[2020-11-25 12:57:54,357 INFO  L97    BuchiProductObserver]: Finished generation of product automaton successfully
[2020-11-25 12:57:54,361 INFO  L110   BuchiProductObserver]: BuchiProgram size 2544 locations, 4497 edges
[2020-11-25 12:57:54,361 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:57:54 BoogieIcfgContainer
[2020-11-25 12:57:54,361 INFO  L132        PluginConnector]: ------------------------ END BÃ¼chi Program Product----------------------------
[2020-11-25 12:57:54,361 INFO  L113        PluginConnector]: ------------------------BlockEncodingV2----------------------------
[2020-11-25 12:57:54,362 INFO  L271        PluginConnector]: Initializing BlockEncodingV2...
[2020-11-25 12:57:54,363 INFO  L276        PluginConnector]: BlockEncodingV2 initialized
[2020-11-25 12:57:54,363 INFO  L185        PluginConnector]: Executing the observer BlockEncodingObserver from plugin BlockEncodingV2 for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:57:54" (1/1) ...
[2020-11-25 12:57:54,431 INFO  L313           BlockEncoder]: Initial Icfg 2544 locations, 4497 edges
[2020-11-25 12:57:54,431 INFO  L258           BlockEncoder]: Using Remove infeasible edges
[2020-11-25 12:57:54,432 INFO  L270           BlockEncoder]: Using Minimize states even if more edges are added than removed.=true
[2020-11-25 12:57:54,432 INFO  L296           BlockEncoder]: Using Remove sink states
[2020-11-25 12:57:54,432 INFO  L171           BlockEncoder]: Using Apply optimizations until nothing changes=true
[2020-11-25 12:57:54,441 INFO  L70    emoveInfeasibleEdges]: Removed 57 edges and 10 locations because of local infeasibility
[2020-11-25 12:57:54,447 INFO  L70        RemoveSinkStates]: Removed 96 edges and 50 locations by removing sink states
[2020-11-25 12:57:54,454 INFO  L70    emoveInfeasibleEdges]: Removed 0 edges and 0 locations because of local infeasibility
[2020-11-25 12:57:54,457 INFO  L70        RemoveSinkStates]: Removed 0 edges and 0 locations by removing sink states
[2020-11-25 12:57:54,459 INFO  L237           BlockEncoder]: Using Create parallel compositions if possible
[2020-11-25 12:57:54,460 INFO  L66        ParallelComposer]: Creating parallel compositions
[2020-11-25 12:57:54,463 INFO  L313           BlockEncoder]: Encoded RCFG 2466 locations, 4318 edges
[2020-11-25 12:57:54,463 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:57:54 BasicIcfg
[2020-11-25 12:57:54,463 INFO  L132        PluginConnector]: ------------------------ END BlockEncodingV2----------------------------
[2020-11-25 12:57:54,464 INFO  L113        PluginConnector]: ------------------------BuchiAutomizer----------------------------
[2020-11-25 12:57:54,464 INFO  L271        PluginConnector]: Initializing BuchiAutomizer...
[2020-11-25 12:57:54,466 INFO  L276        PluginConnector]: BuchiAutomizer initialized
[2020-11-25 12:57:54,466 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:57:54,466 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.boogie.parser AST 25.11 12:57:52" (1/6) ...
[2020-11-25 12:57:54,467 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@41a1a0b5 and model type CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:57:54, skipping insertion in model container
[2020-11-25 12:57:54,467 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:57:54,468 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.specLang AST 25.11 12:57:52" (2/6) ...
[2020-11-25 12:57:54,468 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@41a1a0b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:57:54, skipping insertion in model container
[2020-11-25 12:57:54,468 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:57:54,468 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.rcfgbuilder CFG 25.11 12:57:53" (3/6) ...
[2020-11-25 12:57:54,468 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@41a1a0b5 and model type CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:57:54, skipping insertion in model container
[2020-11-25 12:57:54,468 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:57:54,468 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "Hardcoded edu.utexas.cs.utopia.ltl2aut AST 25.11 12:57:53" (4/6) ...
[2020-11-25 12:57:54,468 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@41a1a0b5 and model type Hardcoded de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer AST 25.11 12:57:54, skipping insertion in model container
[2020-11-25 12:57:54,468 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:57:54,468 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.buchiprogramproduct OTHER 25.11 12:57:54" (5/6) ...
[2020-11-25 12:57:54,469 INFO  L205        PluginConnector]: Invalid model from BuchiAutomizer for observer de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer.BuchiAutomizerObserver@41a1a0b5 and model type LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer OTHER 25.11 12:57:54, skipping insertion in model container
[2020-11-25 12:57:54,469 INFO  L102         BuchiAutomizer]: Safety of program was proven or not checked, starting termination analysis
[2020-11-25 12:57:54,469 INFO  L185        PluginConnector]: Executing the observer BuchiAutomizerObserver from plugin BuchiAutomizer for "LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.blockencoding CFG 25.11 12:57:54" (6/6) ...
[2020-11-25 12:57:54,470 INFO  L404   chiAutomizerObserver]: Analyzing ICFG CustomToken_0x38AA24Df69672882Aa8d84d0A6687E16B67cdE38_transfer-fail.bpl_BEv2
[2020-11-25 12:57:54,511 INFO  L133   ementStrategyFactory]: Using default assertion order modulation
[2020-11-25 12:57:54,512 INFO  L377         BuchiCegarLoop]: Interprodecural is true
[2020-11-25 12:57:54,512 INFO  L378         BuchiCegarLoop]: Hoare is false
[2020-11-25 12:57:54,512 INFO  L379         BuchiCegarLoop]: Compute interpolants for Craig_TreeInterpolation
[2020-11-25 12:57:54,512 INFO  L380         BuchiCegarLoop]: Backedges is STRAIGHT_LINE
[2020-11-25 12:57:54,512 INFO  L381         BuchiCegarLoop]: Determinization is PREDICATE_ABSTRACTION
[2020-11-25 12:57:54,512 INFO  L382         BuchiCegarLoop]: Difference is false
[2020-11-25 12:57:54,512 INFO  L383         BuchiCegarLoop]: Minimize is MINIMIZE_SEVPA
[2020-11-25 12:57:54,512 INFO  L386         BuchiCegarLoop]: ======== Iteration 0==of CEGAR loop == BuchiCegarLoop========
[2020-11-25 12:57:54,545 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2466 states.
[2020-11-25 12:57:54,624 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:54,625 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:57:54,625 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:57:54,638 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:54,638 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:54,638 INFO  L445         BuchiCegarLoop]: ======== Iteration 1============
[2020-11-25 12:57:54,638 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 2466 states.
[2020-11-25 12:57:54,653 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:54,654 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:57:54,654 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:57:54,656 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:54,656 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L3006]              assume null == 0;
[L3007]  CALL        call this := FreshRefGenerator__success();
[L1275]              havoc newRef;
[L1276]              assume Alloc[newRef] == false;
[L1277]              Alloc[newRef] := true;
[L1278]              assume newRef != null;
[L3007]  RET         call this := FreshRefGenerator__success();
[L3008]              assume now >= 0;
[L3009]              assume DType[this] == CustomToken;
[L3010]              assume msgvalue_MSG == 0;
[L3011]              gas := gas - 53000;
[L3012]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L866]               havoc __exception;
[L867]               revert := false;
[L868]   COND FALSE  !(__exception)
[L890]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1481]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]              assume msgsender_MSG != null;
[L1458]              Balance[this] := 0;
[L1459]              name_BaseToken[this] := 1657376191;
[L1460]              symbol_BaseToken[this] := -853092303;
[L1461]              decimals_BaseToken[this] := 18;
[L1462]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1463]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1464]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1465]              sum_balanceOf0[this] := 0;
[L1466]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1467]              sum_allowance1[this] := 0;
[L1481]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  COND FALSE  !(revert)
[L1929]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  COND TRUE   revert
[L890]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L891]               assume !revert && gas >= 0;
[L3012]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3013]              assume !revert && gas >= 0;

Loop:
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND TRUE   choice == 12
[L2922]              gas := gas - 21000;
[L2923]  COND FALSE  !(gas >= 0)
[L3016]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:57:54,675 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:57:54,675 INFO  L82        PathProgramCache]: Analyzing trace with hash 754282873, now seen corresponding path program 1 times
[2020-11-25 12:57:54,680 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:57:54,705 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:57:54,756 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:57:54,758 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:57:54,758 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:57:54,762 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:57:54,920 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:57:54,921 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=5, Invalid=7, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:57:54,922 INFO  L87              Difference]: Start difference. First operand 2466 states. Second operand 4 states.
[2020-11-25 12:57:55,446 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:57:55,447 INFO  L93              Difference]: Finished difference Result 2262 states and 3547 transitions.
[2020-11-25 12:57:55,447 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:57:55,448 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2262 states and 3547 transitions.
[2020-11-25 12:57:55,461 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 4
[2020-11-25 12:57:55,480 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2262 states to 2162 states and 3390 transitions.
[2020-11-25 12:57:55,481 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 13
[2020-11-25 12:57:55,484 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 876
[2020-11-25 12:57:55,485 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2162 states and 3390 transitions.
[2020-11-25 12:57:55,494 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:57:55,495 INFO  L728         BuchiCegarLoop]: Abstraction has 2162 states and 3390 transitions.
[2020-11-25 12:57:55,513 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2162 states and 3390 transitions.
[2020-11-25 12:57:55,558 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2162 to 1818.
[2020-11-25 12:57:55,559 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1818 states.
[2020-11-25 12:57:55,566 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1818 states to 1818 states and 2770 transitions.
[2020-11-25 12:57:55,567 INFO  L751         BuchiCegarLoop]: Abstraction has 1818 states and 2770 transitions.
[2020-11-25 12:57:55,567 INFO  L631         BuchiCegarLoop]: Abstraction has 1818 states and 2770 transitions.
[2020-11-25 12:57:55,567 INFO  L445         BuchiCegarLoop]: ======== Iteration 2============
[2020-11-25 12:57:55,567 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1818 states and 2770 transitions.
[2020-11-25 12:57:55,575 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:55,575 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:57:55,575 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:57:55,576 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:55,576 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L3006]              assume null == 0;
[L3007]  CALL        call this := FreshRefGenerator__success();
[L1275]              havoc newRef;
[L1276]              assume Alloc[newRef] == false;
[L1277]              Alloc[newRef] := true;
[L1278]              assume newRef != null;
[L3007]  RET         call this := FreshRefGenerator__success();
[L3008]              assume now >= 0;
[L3009]              assume DType[this] == CustomToken;
[L3010]              assume msgvalue_MSG == 0;
[L3011]              gas := gas - 53000;
[L3012]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L866]               havoc __exception;
[L867]               revert := false;
[L868]   COND FALSE  !(__exception)
[L890]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1481]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]              assume msgsender_MSG != null;
[L1458]              Balance[this] := 0;
[L1459]              name_BaseToken[this] := 1657376191;
[L1460]              symbol_BaseToken[this] := -853092303;
[L1461]              decimals_BaseToken[this] := 18;
[L1462]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1463]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1464]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1465]              sum_balanceOf0[this] := 0;
[L1466]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1467]              sum_allowance1[this] := 0;
[L1481]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  COND FALSE  !(revert)
[L1929]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  COND FALSE  !(revert)
[L1933]  CALL        call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1903]              assume msgsender_MSG != null;
[L1904]              Balance[this] := 0;
[L1906]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1907]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1908]              balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := totalSupply_BaseToken[this];
[L1909]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1910]              assert { :EventEmitted "Transfer_CustomToken" } true;
[L1933]  RET         call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1934]  COND FALSE  !(revert)
[L890]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L891]               assume !revert && gas >= 0;
[L3012]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3013]              assume !revert && gas >= 0;

Loop:
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND TRUE   choice == 12
[L2922]              gas := gas - 21000;
[L2923]  COND FALSE  !(gas >= 0)
[L3016]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:57:55,578 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:57:55,578 INFO  L82        PathProgramCache]: Analyzing trace with hash -1860581501, now seen corresponding path program 1 times
[2020-11-25 12:57:55,579 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:57:55,588 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:57:55,602 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:57:55,602 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:57:55,602 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [2] imperfect sequences [] total 2
[2020-11-25 12:57:55,603 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:57:55,603 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 3 interpolants.
[2020-11-25 12:57:55,603 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=3, Invalid=3, Unknown=0, NotChecked=0, Total=6
[2020-11-25 12:57:55,604 INFO  L87              Difference]: Start difference. First operand 1818 states and 2770 transitions. cyclomatic complexity: 954 Second operand 3 states.
[2020-11-25 12:57:55,655 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:57:55,655 INFO  L93              Difference]: Finished difference Result 1594 states and 1716 transitions.
[2020-11-25 12:57:55,655 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 3 states. 
[2020-11-25 12:57:55,656 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1594 states and 1716 transitions.
[2020-11-25 12:57:55,661 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:55,666 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1594 states to 1594 states and 1716 transitions.
[2020-11-25 12:57:55,666 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 550
[2020-11-25 12:57:55,666 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 550
[2020-11-25 12:57:55,667 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1594 states and 1716 transitions.
[2020-11-25 12:57:55,668 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:57:55,668 INFO  L728         BuchiCegarLoop]: Abstraction has 1594 states and 1716 transitions.
[2020-11-25 12:57:55,669 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1594 states and 1716 transitions.
[2020-11-25 12:57:55,680 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1594 to 1584.
[2020-11-25 12:57:55,680 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1584 states.
[2020-11-25 12:57:55,682 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1584 states to 1584 states and 1706 transitions.
[2020-11-25 12:57:55,682 INFO  L751         BuchiCegarLoop]: Abstraction has 1584 states and 1706 transitions.
[2020-11-25 12:57:55,682 INFO  L631         BuchiCegarLoop]: Abstraction has 1584 states and 1706 transitions.
[2020-11-25 12:57:55,682 INFO  L445         BuchiCegarLoop]: ======== Iteration 3============
[2020-11-25 12:57:55,682 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1584 states and 1706 transitions.
[2020-11-25 12:57:55,685 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:55,686 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:57:55,686 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:57:55,687 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:55,687 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L3006]              assume null == 0;
[L3007]  CALL        call this := FreshRefGenerator__success();
[L1275]              havoc newRef;
[L1276]              assume Alloc[newRef] == false;
[L1277]              Alloc[newRef] := true;
[L1278]              assume newRef != null;
[L3007]  RET         call this := FreshRefGenerator__success();
[L3008]              assume now >= 0;
[L3009]              assume DType[this] == CustomToken;
[L3010]              assume msgvalue_MSG == 0;
[L3011]              gas := gas - 53000;
[L3012]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L866]               havoc __exception;
[L867]               revert := false;
[L868]   COND FALSE  !(__exception)
[L890]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1481]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]              assume msgsender_MSG != null;
[L1458]              Balance[this] := 0;
[L1459]              name_BaseToken[this] := 1657376191;
[L1460]              symbol_BaseToken[this] := -853092303;
[L1461]              decimals_BaseToken[this] := 18;
[L1462]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1463]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1464]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1465]              sum_balanceOf0[this] := 0;
[L1466]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1467]              sum_allowance1[this] := 0;
[L1481]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  COND FALSE  !(revert)
[L1929]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  COND FALSE  !(revert)
[L1933]  CALL        call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1903]              assume msgsender_MSG != null;
[L1904]              Balance[this] := 0;
[L1906]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1907]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1908]              balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := totalSupply_BaseToken[this];
[L1909]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1910]              assert { :EventEmitted "Transfer_CustomToken" } true;
[L1933]  RET         call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1934]  COND FALSE  !(revert)
[L890]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L891]               assume !revert && gas >= 0;
[L3012]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3013]              assume !revert && gas >= 0;
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);

Loop:
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:57:55,691 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:57:55,691 INFO  L82        PathProgramCache]: Analyzing trace with hash 1022791695, now seen corresponding path program 1 times
[2020-11-25 12:57:55,691 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:57:55,707 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:57:55,857 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:57:55,857 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:57:55,857 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [16] imperfect sequences [] total 16
[2020-11-25 12:57:55,858 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:57:55,858 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 17 interpolants.
[2020-11-25 12:57:55,858 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=36, Invalid=236, Unknown=0, NotChecked=0, Total=272
[2020-11-25 12:57:55,858 INFO  L87              Difference]: Start difference. First operand 1584 states and 1706 transitions. cyclomatic complexity: 124 Second operand 17 states.
[2020-11-25 12:57:57,231 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:57:57,231 INFO  L93              Difference]: Finished difference Result 1654 states and 1786 transitions.
[2020-11-25 12:57:57,231 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 17 states. 
[2020-11-25 12:57:57,231 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 1654 states and 1786 transitions.
[2020-11-25 12:57:57,237 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:57,242 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 1654 states to 1654 states and 1786 transitions.
[2020-11-25 12:57:57,242 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 560
[2020-11-25 12:57:57,243 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 560
[2020-11-25 12:57:57,243 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 1654 states and 1786 transitions.
[2020-11-25 12:57:57,244 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:57:57,245 INFO  L728         BuchiCegarLoop]: Abstraction has 1654 states and 1786 transitions.
[2020-11-25 12:57:57,246 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 1654 states and 1786 transitions.
[2020-11-25 12:57:57,258 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 1654 to 1622.
[2020-11-25 12:57:57,258 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1622 states.
[2020-11-25 12:57:57,260 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1622 states to 1622 states and 1749 transitions.
[2020-11-25 12:57:57,260 INFO  L751         BuchiCegarLoop]: Abstraction has 1622 states and 1749 transitions.
[2020-11-25 12:57:57,261 INFO  L631         BuchiCegarLoop]: Abstraction has 1622 states and 1749 transitions.
[2020-11-25 12:57:57,261 INFO  L445         BuchiCegarLoop]: ======== Iteration 4============
[2020-11-25 12:57:57,261 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1622 states and 1749 transitions.
[2020-11-25 12:57:57,263 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:57,264 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:57:57,264 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:57:57,266 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:57,266 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L3006]              assume null == 0;
[L3007]  CALL        call this := FreshRefGenerator__success();
[L1275]              havoc newRef;
[L1276]              assume Alloc[newRef] == false;
[L1277]              Alloc[newRef] := true;
[L1278]              assume newRef != null;
[L3007]  RET         call this := FreshRefGenerator__success();
[L3008]              assume now >= 0;
[L3009]              assume DType[this] == CustomToken;
[L3010]              assume msgvalue_MSG == 0;
[L3011]              gas := gas - 53000;
[L3012]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L866]               havoc __exception;
[L867]               revert := false;
[L868]   COND TRUE   __exception
[L869]               __tmp__Balance := Balance;
[L870]               __tmp__DType := DType;
[L871]               __tmp__Alloc := Alloc;
[L872]               __tmp__balance_ADDR := balance_ADDR;
[L873]               __tmp__M_Ref_int := M_Ref_int;
[L874]               __tmp__sum_balanceOf0 := sum_balanceOf0;
[L875]               __tmp__alloc_allowance_BaseToken_lvl0 := alloc_allowance_BaseToken_lvl0;
[L876]               __tmp__M_Ref_Ref := M_Ref_Ref;
[L877]               __tmp__sum_allowance1 := sum_allowance1;
[L878]               __tmp__Length := Length;
[L879]               __tmp__now := now;
[L880]               __tmp__name_BaseToken := name_BaseToken;
[L881]               __tmp__symbol_BaseToken := symbol_BaseToken;
[L882]               __tmp__decimals_BaseToken := decimals_BaseToken;
[L883]               __tmp__totalSupply_BaseToken := totalSupply_BaseToken;
[L884]               __tmp___totalLimit_BaseToken := _totalLimit_BaseToken;
[L885]               __tmp__balanceOf_BaseToken := balanceOf_BaseToken;
[L886]               __tmp__allowance_BaseToken := allowance_BaseToken;
[L887]   CALL        call CustomToken_CustomToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1916]  CALL        call BaseToken_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1473]  CALL        call BaseToken_BaseToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1440]              assume msgsender_MSG != null;
[L1441]              __tmp__Balance[this] := 0;
[L1442]              __tmp__name_BaseToken[this] := 1657376191;
[L1443]              __tmp__symbol_BaseToken[this] := -853092303;
[L1444]              __tmp__decimals_BaseToken[this] := 18;
[L1445]              __tmp__totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1446]              __tmp___totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1447]              __tmp__balanceOf_BaseToken[this] := zeroRefintArr();
[L1448]              __tmp__sum_balanceOf0[this] := 0;
[L1449]              __tmp__allowance_BaseToken[this] := zeroRefRefintArr();
[L1450]              __tmp__sum_allowance1[this] := 0;
[L1473]  RET         call BaseToken_BaseToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1474]  COND FALSE  !(revert)
[L1916]  RET         call BaseToken_BaseToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L1917]  COND FALSE  !(revert)
[L1920]  CALL        call CustomToken_CustomToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1890]              assume msgsender_MSG != null;
[L1891]              __tmp__Balance[this] := 0;
[L1893]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1894]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] - __tmp__balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1895]              __tmp__balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := __tmp__totalSupply_BaseToken[this];
[L1896]              __tmp__sum_balanceOf0[this] := __tmp__sum_balanceOf0[this] + __tmp__balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1920]  RET         call CustomToken_CustomToken_NoBaseCtor__fail(this, msgsender_MSG, msgvalue_MSG);
[L1921]  COND FALSE  !(revert)
[L887]   RET         call CustomToken_CustomToken__fail(this, msgsender_MSG, msgvalue_MSG);
[L888]               assume revert || gas < 0;
[L3012]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3013]              assume !revert && gas >= 0;
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);

Loop:
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:57:57,269 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:57:57,269 INFO  L82        PathProgramCache]: Analyzing trace with hash 207171847, now seen corresponding path program 1 times
[2020-11-25 12:57:57,270 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:57:57,275 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:57:57,295 INFO  L134       CoverageAnalysis]: Checked inductivity of 0 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 0 trivial. 0 not checked.
[2020-11-25 12:57:57,296 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:57:57,296 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [4] imperfect sequences [] total 4
[2020-11-25 12:57:57,296 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:57:57,296 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 4 interpolants.
[2020-11-25 12:57:57,296 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=6, Invalid=6, Unknown=0, NotChecked=0, Total=12
[2020-11-25 12:57:57,296 INFO  L87              Difference]: Start difference. First operand 1622 states and 1749 transitions. cyclomatic complexity: 130 Second operand 4 states.
[2020-11-25 12:57:57,443 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:57:57,443 INFO  L93              Difference]: Finished difference Result 2108 states and 2369 transitions.
[2020-11-25 12:57:57,444 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 4 states. 
[2020-11-25 12:57:57,444 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 2108 states and 2369 transitions.
[2020-11-25 12:57:57,450 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 6
[2020-11-25 12:57:57,457 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 2108 states to 2045 states and 2306 transitions.
[2020-11-25 12:57:57,457 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 690
[2020-11-25 12:57:57,458 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 690
[2020-11-25 12:57:57,458 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 2045 states and 2306 transitions.
[2020-11-25 12:57:57,460 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:57:57,460 INFO  L728         BuchiCegarLoop]: Abstraction has 2045 states and 2306 transitions.
[2020-11-25 12:57:57,461 INFO  L82        GeneralOperation]: Start minimizeSevpa. Operand 2045 states and 2306 transitions.
[2020-11-25 12:57:57,489 INFO  L88        GeneralOperation]: Finished minimizeSevpa. Reduced states from 2045 to 1559.
[2020-11-25 12:57:57,489 INFO  L82        GeneralOperation]: Start removeUnreachable. Operand 1559 states.
[2020-11-25 12:57:57,491 INFO  L88        GeneralOperation]: Finished removeUnreachable. Reduced from 1559 states to 1559 states and 1685 transitions.
[2020-11-25 12:57:57,491 INFO  L751         BuchiCegarLoop]: Abstraction has 1559 states and 1685 transitions.
[2020-11-25 12:57:57,491 INFO  L631         BuchiCegarLoop]: Abstraction has 1559 states and 1685 transitions.
[2020-11-25 12:57:57,491 INFO  L445         BuchiCegarLoop]: ======== Iteration 5============
[2020-11-25 12:57:57,491 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 1559 states and 1685 transitions.
[2020-11-25 12:57:57,496 INFO  L131   ngComponentsAnalysis]: Automaton has 1 accepting balls. 2
[2020-11-25 12:57:57,497 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is false
[2020-11-25 12:57:57,497 INFO  L119           BuchiIsEmpty]: Starting construction of run
[2020-11-25 12:57:57,501 INFO  L889         BuchiCegarLoop]: Counterexample stem histogram [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
[2020-11-25 12:57:57,501 INFO  L890         BuchiCegarLoop]: Counterexample loop histogram [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
Stem:
[L2]                 fail_transfer_BaseToken0 := false;
[L2]                 call_transfer_BaseToken0 := false;
[L2]     CALL        call main();
[L3006]              assume null == 0;
[L3007]  CALL        call this := FreshRefGenerator__success();
[L1275]              havoc newRef;
[L1276]              assume Alloc[newRef] == false;
[L1277]              Alloc[newRef] := true;
[L1278]              assume newRef != null;
[L3007]  RET         call this := FreshRefGenerator__success();
[L3008]              assume now >= 0;
[L3009]              assume DType[this] == CustomToken;
[L3010]              assume msgvalue_MSG == 0;
[L3011]              gas := gas - 53000;
[L3012]  CALL        call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L866]               havoc __exception;
[L867]               revert := false;
[L868]   COND FALSE  !(__exception)
[L890]   CALL        call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1929]  CALL        call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1481]  CALL        call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1457]              assume msgsender_MSG != null;
[L1458]              Balance[this] := 0;
[L1459]              name_BaseToken[this] := 1657376191;
[L1460]              symbol_BaseToken[this] := -853092303;
[L1461]              decimals_BaseToken[this] := 18;
[L1462]              totalSupply_BaseToken[this] := 525600000000000000000000000;
[L1463]              _totalLimit_BaseToken[this] := 100000000000000000000000000000000;
[L1464]              balanceOf_BaseToken[this] := zeroRefintArr();
[L1465]              sum_balanceOf0[this] := 0;
[L1466]              allowance_BaseToken[this] := zeroRefRefintArr();
[L1467]              sum_allowance1[this] := 0;
[L1481]  RET         call BaseToken_BaseToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1482]  COND FALSE  !(revert)
[L1929]  RET         call BaseToken_BaseToken__success(this, msgsender_MSG, msgvalue_MSG);
[L1930]  COND FALSE  !(revert)
[L1933]  CALL        call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1903]              assume msgsender_MSG != null;
[L1904]              Balance[this] := 0;
[L1906]              __var_13 := ConstantToRef(506935249641133462427988555867660131141316463944);
[L1907]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1908]              balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)] := totalSupply_BaseToken[this];
[L1909]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][ConstantToRef(506935249641133462427988555867660131141316463944)];
[L1910]              assert { :EventEmitted "Transfer_CustomToken" } true;
[L1933]  RET         call CustomToken_CustomToken_NoBaseCtor__success(this, msgsender_MSG, msgvalue_MSG);
[L1934]  COND FALSE  !(revert)
[L890]   RET         call CustomToken_CustomToken__success(this, msgsender_MSG, msgvalue_MSG);
[L891]               assume !revert && gas >= 0;
[L3012]  RET         call CustomToken_CustomToken(this, msgsender_MSG, msgvalue_MSG);
[L3013]              assume !revert && gas >= 0;
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume !(((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936);
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);

Loop:
[L3016]  CALL        call CorralChoice_CustomToken(this);
[L2881]              havoc msgsender_MSG;
[L2882]              havoc msgvalue_MSG;
[L2883]              havoc choice;
[L2884]              havoc __ret_0_name;
[L2885]              havoc __ret_0_symbol;
[L2886]              havoc __ret_0_decimals;
[L2887]              havoc __ret_0_totalSupply;
[L2888]              havoc __ret_0__totalLimit;
[L2889]              havoc arg483_s0;
[L2890]              havoc __ret_0_balanceOf;
[L2891]              havoc arg484_s0;
[L2892]              havoc arg485_s0;
[L2893]              havoc __ret_0_allowance;
[L2894]              havoc to_s284;
[L2895]              havoc value_s284;
[L2896]              havoc __ret_0_transfer;
[L2897]              havoc from_s321;
[L2898]              havoc to_s321;
[L2899]              havoc value_s321;
[L2900]              havoc __ret_0_transferFrom;
[L2901]              havoc spender_s357;
[L2902]              havoc value_s357;
[L2903]              havoc __ret_0_approve;
[L2904]              havoc spender_s406;
[L2905]              havoc addedValue_s406;
[L2906]              havoc __ret_0_increaseAllowance;
[L2907]              havoc spender_s455;
[L2908]              havoc subtractedValue_s455;
[L2909]              havoc __ret_0_decreaseAllowance;
[L2910]              havoc tmpNow;
[L2911]              havoc gas;
[L2912]              assume gas > 4000000 && gas <= 8000000;
[L2913]              tmpNow := now;
[L2914]              havoc now;
[L2915]              assume now > tmpNow;
[L2916]              assume msgsender_MSG != null;
[L2917]              assume DType[msgsender_MSG] != SafeMath;
[L2918]              assume DType[msgsender_MSG] != BaseToken;
[L2919]              assume DType[msgsender_MSG] != CustomToken;
[L2920]              Alloc[msgsender_MSG] := true;
[L2921]  COND FALSE  !(choice == 12)
[L2927]  COND FALSE  !(choice == 11)
[L2933]  COND FALSE  !(choice == 10)
[L2939]  COND FALSE  !(choice == 9)
[L2945]  COND FALSE  !(choice == 8)
[L2951]  COND FALSE  !(choice == 7)
[L2957]  COND FALSE  !(choice == 6)
[L2963]  COND TRUE   choice == 5
[L2964]              gas := gas - 21000;
[L2965]  COND TRUE   gas >= 0
[L2966]              assume value_s284 >= 0 && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2967]              assume msgvalue_MSG == 0;
[L2968]  CALL        call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L2]                 revert_hold := revert;
[L2]                 revert := false;
[L2]                 assume ((((((msgsender_MSG != to_s284 && (value_s284 > balanceOf_BaseToken[this][msgsender_MSG] || balanceOf_BaseToken[this][to_s284] + value_s284 >= 115792089237316195423570985008687907853269984665640564039457584007913129639936)) && value_s284 >= 0) && value_s284 < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][to_s284] >= 0) && balanceOf_BaseToken[this][to_s284] < 115792089237316195423570985008687907853269984665640564039457584007913129639936) && balanceOf_BaseToken[this][msgsender_MSG] >= 0) && balanceOf_BaseToken[this][msgsender_MSG] < 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L2]                 call_transfer_BaseToken0 := true;
[L2]                 call_transfer_BaseToken0 := false;
[L2]                 revert := revert_hold;
[L218]               havoc __exception;
[L219]               revert := false;
[L220]   COND FALSE  !(__exception)
[L242]   CALL        call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L1618]  COND TRUE   DType[this] == CustomToken
[L1619]  CALL        call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1518]              __var_1 := null;
[L1519]  COND FALSE  !(!(to_s217 != null))
[L1523]  CALL        call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1384]  COND FALSE  !(!(b_s82 <= a_s82))
[L1388]              c_s82 := (a_s82 - b_s82) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1389]              __ret_0_ := c_s82;
[L1523]  RET         call __var_2 := sub~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][from_s217], value_s217);
[L1524]  COND FALSE  !(revert)
[L1527]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][from_s217];
[L1528]              balanceOf_BaseToken[this][from_s217] := __var_2;
[L1529]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][from_s217];
[L1530]  CALL        call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1408]              c_s106 := (a_s106 + b_s106) % 115792089237316195423570985008687907853269984665640564039457584007913129639936;
[L1409]  COND FALSE  !(!(c_s106 >= a_s106))
[L1413]              __ret_0_ := c_s106;
[L1530]  RET         call __var_3 := add~uint256~uint256_SafeMath__success(this, this, 0, balanceOf_BaseToken[this][to_s217], value_s217);
[L1531]  COND FALSE  !(revert)
[L1534]              sum_balanceOf0[this] := sum_balanceOf0[this] - balanceOf_BaseToken[this][to_s217];
[L1535]              balanceOf_BaseToken[this][to_s217] := __var_3;
[L1536]              sum_balanceOf0[this] := sum_balanceOf0[this] + balanceOf_BaseToken[this][to_s217];
[L1537]              assert { :EventEmitted "Transfer_BaseToken" } true;
[L1619]  RET         call _transfer~address~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, msgsender_MSG, to_s284, value_s284);
[L1620]  COND FALSE  !(revert)
[L1631]              __ret_0_ := true;
[L242]   RET         call __ret_0_ := transfer~address~uint256_BaseToken__success(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L243]               assume !revert && gas >= 0;
[L2968]  RET         call __ret_0_transfer := transfer~address~uint256_BaseToken(this, msgsender_MSG, msgvalue_MSG, to_s284, value_s284);
[L3016]  RET         call CorralChoice_CustomToken(this);

[2020-11-25 12:57:57,509 INFO  L144       PredicateUnifier]: Initialized classic predicate unifier
[2020-11-25 12:57:57,509 INFO  L82        PathProgramCache]: Analyzing trace with hash 571505019, now seen corresponding path program 1 times
[2020-11-25 12:57:57,510 INFO  L69    tionRefinementEngine]: Using refinement strategy FixedRefinementStrategy
[2020-11-25 12:57:57,537 INFO  L140    AnnotateAndAsserter]: Conjunction of SSA is unsat
[2020-11-25 12:57:57,636 INFO  L134       CoverageAnalysis]: Checked inductivity of 59 backedges. 0 proven. 0 refuted. 0 times theorem prover too weak. 59 trivial. 0 not checked.
[2020-11-25 12:57:57,636 INFO  L312   seRefinementStrategy]: Constructing automaton from 1 perfect and 0 imperfect interpolant sequences.
[2020-11-25 12:57:57,636 INFO  L327   seRefinementStrategy]: Number of different interpolants: perfect sequences [12] imperfect sequences [] total 12
[2020-11-25 12:57:57,636 INFO  L996   eck$LassoCheckResult]: stem already infeasible
[2020-11-25 12:57:57,636 INFO  L142   InterpolantAutomaton]: Constructing interpolant automaton starting with 12 interpolants.
[2020-11-25 12:57:57,636 INFO  L144   InterpolantAutomaton]: CoverageRelationStatistics Valid=25, Invalid=107, Unknown=0, NotChecked=0, Total=132
[2020-11-25 12:57:57,637 INFO  L87              Difference]: Start difference. First operand 1559 states and 1685 transitions. cyclomatic complexity: 129 Second operand 12 states.
[2020-11-25 12:57:58,188 INFO  L144             Difference]: Subtrahend was deterministic. Have not used determinization.
[2020-11-25 12:57:58,188 INFO  L93              Difference]: Finished difference Result 955 states and 1031 transitions.
[2020-11-25 12:57:58,189 INFO  L142   InterpolantAutomaton]: Switched to read-only mode: deterministic interpolant automaton has 12 states. 
[2020-11-25 12:57:58,189 INFO  L82        GeneralOperation]: Start removeNonLiveStates. Operand 955 states and 1031 transitions.
[2020-11-25 12:57:58,191 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:57:58,191 INFO  L88        GeneralOperation]: Finished removeNonLiveStates. Reduced from 955 states to 0 states and 0 transitions.
[2020-11-25 12:57:58,191 INFO  L87         BuchiClosureNwa]: Accepting states before buchiClosure: 0
[2020-11-25 12:57:58,191 INFO  L106        BuchiClosureNwa]: Accepting states after buchiClosure: 0
[2020-11-25 12:57:58,191 INFO  L73         IsDeterministic]: Start isDeterministic. Operand 0 states and 0 transitions.
[2020-11-25 12:57:58,191 INFO  L80         IsDeterministic]: Finished isDeterministic. Operand is deterministic.
[2020-11-25 12:57:58,191 INFO  L728         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:57:58,191 INFO  L751         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:57:58,191 INFO  L631         BuchiCegarLoop]: Abstraction has 0 states and 0 transitions.
[2020-11-25 12:57:58,191 INFO  L445         BuchiCegarLoop]: ======== Iteration 6============
[2020-11-25 12:57:58,191 INFO  L72            BuchiIsEmpty]: Start buchiIsEmpty. Operand 0 states and 0 transitions.
[2020-11-25 12:57:58,192 INFO  L131   ngComponentsAnalysis]: Automaton has 0 accepting balls. 0
[2020-11-25 12:57:58,192 INFO  L87            BuchiIsEmpty]: Finished buchiIsEmpty Result is true
[2020-11-25 12:57:58,195 INFO  L202        PluginConnector]: Adding new model LTL+Program Product de.uni_freiburg.informatik.ultimate.plugins.generator.buchiautomizer CFG 25.11 12:57:58 BasicIcfg
[2020-11-25 12:57:58,195 INFO  L132        PluginConnector]: ------------------------ END BuchiAutomizer----------------------------
[2020-11-25 12:57:58,195 INFO  L168              Benchmark]: Toolchain (without parser) took 5612.40 ms. Allocated memory was 1.0 GB in the beginning and 1.6 GB in the end (delta: 527.4 MB). Free memory was 945.9 MB in the beginning and 974.5 MB in the end (delta: -28.5 MB). Peak memory consumption was 498.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,196 INFO  L168              Benchmark]: Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,196 INFO  L168              Benchmark]: Boogie Preprocessor took 81.86 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,196 INFO  L168              Benchmark]: UtopiaSpecLang took 53.64 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,196 INFO  L168              Benchmark]: Boogie Printer took 12.87 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,197 INFO  L168              Benchmark]: RCFGBuilder took 589.90 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 843.9 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,197 INFO  L168              Benchmark]: UtopiaLTL2Aut took 38.44 ms. Allocated memory is still 1.0 GB. Free memory was 843.9 MB in the beginning and 840.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,198 INFO  L168              Benchmark]: BÃ¼chi Program Product took 999.78 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 840.4 MB in the beginning and 753.3 MB in the end (delta: 87.0 MB). Peak memory consumption was 141.5 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,198 INFO  L168              Benchmark]: BlockEncodingV2 took 101.93 ms. Allocated memory is still 1.1 GB. Free memory was 753.3 MB in the beginning and 716.6 MB in the end (delta: 36.7 MB). Peak memory consumption was 36.7 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,198 INFO  L168              Benchmark]: BuchiAutomizer took 3731.00 ms. Allocated memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: 472.9 MB). Free memory was 710.6 MB in the beginning and 974.5 MB in the end (delta: -263.9 MB). Peak memory consumption was 209.0 MB. Max. memory is 15.3 GB.
[2020-11-25 12:57:58,201 INFO  L337   ainManager$Toolchain]: #######################  End [Toolchain 1] #######################
 --- Results ---
 * Results from de.uni_freiburg.informatik.ultimate.plugins.blockencoding:
  - StatisticsResult: Initial Icfg
    2544 locations, 4497 edges
  - StatisticsResult: Encoded RCFG
    2466 locations, 4318 edges
 * Results from de.uni_freiburg.informatik.ultimate.core:
  - StatisticsResult: Toolchain Benchmarks
    Benchmark results are:
 * Boogie PL CUP Parser took 0.15 ms. Allocated memory is still 1.0 GB. Free memory is still 951.3 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * Boogie Preprocessor took 81.86 ms. Allocated memory is still 1.0 GB. Free memory was 945.9 MB in the beginning and 935.2 MB in the end (delta: 10.7 MB). Peak memory consumption was 10.7 MB. Max. memory is 15.3 GB.
 * UtopiaSpecLang took 53.64 ms. Allocated memory is still 1.0 GB. Free memory was 935.2 MB in the beginning and 929.8 MB in the end (delta: 5.4 MB). Peak memory consumption was 5.4 MB. Max. memory is 15.3 GB.
 * Boogie Printer took 12.87 ms. Allocated memory is still 1.0 GB. Free memory is still 929.8 MB. There was no memory consumed. Max. memory is 15.3 GB.
 * RCFGBuilder took 589.90 ms. Allocated memory is still 1.0 GB. Free memory was 929.8 MB in the beginning and 843.9 MB in the end (delta: 85.9 MB). Peak memory consumption was 85.9 MB. Max. memory is 15.3 GB.
 * UtopiaLTL2Aut took 38.44 ms. Allocated memory is still 1.0 GB. Free memory was 843.9 MB in the beginning and 840.4 MB in the end (delta: 3.6 MB). Peak memory consumption was 3.6 MB. Max. memory is 15.3 GB.
 * BÃ¼chi Program Product took 999.78 ms. Allocated memory was 1.0 GB in the beginning and 1.1 GB in the end (delta: 54.5 MB). Free memory was 840.4 MB in the beginning and 753.3 MB in the end (delta: 87.0 MB). Peak memory consumption was 141.5 MB. Max. memory is 15.3 GB.
 * BlockEncodingV2 took 101.93 ms. Allocated memory is still 1.1 GB. Free memory was 753.3 MB in the beginning and 716.6 MB in the end (delta: 36.7 MB). Peak memory consumption was 36.7 MB. Max. memory is 15.3 GB.
 * BuchiAutomizer took 3731.00 ms. Allocated memory was 1.1 GB in the beginning and 1.6 GB in the end (delta: 472.9 MB). Free memory was 710.6 MB in the beginning and 974.5 MB in the end (delta: -263.9 MB). Peak memory consumption was 209.0 MB. Max. memory is 15.3 GB.
 * Results from de.uni_freiburg.informatik.ultimate.buchiprogramproduct:
  - StatisticsResult: Initial property automaton
    2 locations, 3 edges
  - StatisticsResult: Initial RCFG
    1046 locations, 1372 edges
  - StatisticsResult: BuchiProgram size
    2544 locations, 4497 edges
 * Results from de.uni_freiburg.informatik.ultimate.plugins.generator.traceabstraction:
  - StatisticsResult: Constructed decomposition of program
    Your program was decomposed into 5 terminating modules (5 trivial, 0 deterministic, 0 nondeterministic). 5 modules have a trivial ranking function, the largest among these consists of 17 locations.
  - StatisticsResult: Timing statistics
    BÃ¼chiAutomizer plugin needed 3.7s and 6 iterations.  TraceHistogramMax:2. Analysis of lassos took 0.4s. Construction of modules took 1.9s. BÃ¼chi inclusion checks took 0.8s. Highest rank in rank-based complementation 0. Minimization of det autom 5. Minimization of nondet autom 0. Automata minimization 0.1s AutomataMinimizationTime, 4 MinimizatonAttempts, 872 StatesRemovedByMinimization, 4 NontrivialMinimizations. Non-live state removal took 0.0s Buchi closure took 0.0s. Biggest automaton had 1818 states and ocurred in iteration 1.	Nontrivial modules had stage [0, 0, 0, 0, 0].	InterpolantCoveringCapabilityFinite: 0/0	InterpolantCoveringCapabilityBuchi: 0/0	HoareTripleCheckerStatistics: 9241 SDtfs, 8920 SDslu, 14315 SDs, 0 SdLazy, 22077 SolverSat, 1303 SolverUnsat, 0 SolverUnknown, 0 SolverNotchecked, 1.9s Time	LassoAnalysisResults: nont0 unkn0 SFLI0 SFLT0 conc0 concLT0 SILN0 SILU5 SILI0 SILT0 lasso0 LassoPreprocessingBenchmarks: LassoTerminationAnalysisBenchmarks: not availableLassoTerminationAnalysisBenchmarks: LassoNonterminationAnalysisSatFixpoint: 0	LassoNonterminationAnalysisSatUnbounded: 0	LassoNonterminationAnalysisUnsat: 0	LassoNonterminationAnalysisUnknown: 0	LassoNonterminationAnalysisTime: 0.0s	
  - AllSpecificationsHoldResult: All specifications hold
    Buchi Automizer proved that the LTL property ! ( ( []( (call_transfer_(fail_transfer_BaseToken0)aseToken0) ==> ( <>(fail_transfer_BaseToken0) ) ) )) holds
RESULT: Ultimate proved your program to be correct!
Received shutdown request...
